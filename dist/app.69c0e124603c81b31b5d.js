webpackJsonp([0],[
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

	__webpack_require__(1);
	module.exports = __webpack_require__(635);


/***/ }),
/* 1 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var _setImmediate2 = __webpack_require__(2);
	
	var _setImmediate3 = _interopRequireDefault(_setImmediate2);
	
	var _react = __webpack_require__(25);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactDom = __webpack_require__(63);
	
	var _reactDom2 = _interopRequireDefault(_reactDom);
	
	var _createStore = __webpack_require__(210);
	
	var _createStore2 = _interopRequireDefault(_createStore);
	
	var _AppContainer = __webpack_require__(381);
	
	var _AppContainer2 = _interopRequireDefault(_AppContainer);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	// ========================================================
	// Store Instantiation
	// ========================================================
	var initialState = window.___INITIAL_STATE__;
	var store = (0, _createStore2.default)(initialState);
	
	// ========================================================
	// Render Setup
	// ========================================================
	var MOUNT_NODE = document.getElementById('root');
	
	var render = function render() {
	  var routes = __webpack_require__(422).default(store);
	
	  _reactDom2.default.render(_react2.default.createElement(_AppContainer2.default, { store: store, routes: routes }), MOUNT_NODE);
	};
	
	// ========================================================
	// Developer Tools Setup
	// ========================================================
	if (true) {
	  if (window.devToolsExtension) {
	    window.devToolsExtension.open();
	  }
	}
	
	// This code is excluded from production bundle
	if (true) {
	  if (true) {
	    // Development render functions
	    var renderApp = render;
	    var renderError = function renderError(error) {
	      var RedBox = __webpack_require__(629).default;
	
	      _reactDom2.default.render(_react2.default.createElement(RedBox, { error: error }), MOUNT_NODE);
	    };
	
	    // Wrap render in try/catch
	    render = function render() {
	      try {
	        renderApp();
	      } catch (error) {
	        renderError(error);
	      }
	    };
	
	    // Setup hot module replacement
	    module.hot.accept(422, function () {
	      return (0, _setImmediate3.default)(function () {
	        _reactDom2.default.unmountComponentAtNode(MOUNT_NODE);
	        render();
	      });
	    });
	  }
	}
	
	// ========================================================
	// Go!
	// ========================================================
	render();

/***/ }),
/* 2 */
/***/ (function(module, exports, __webpack_require__) {

	module.exports = { "default": __webpack_require__(3), __esModule: true };

/***/ }),
/* 3 */
/***/ (function(module, exports, __webpack_require__) {

	__webpack_require__(4);
	module.exports = __webpack_require__(7).setImmediate;


/***/ }),
/* 4 */
/***/ (function(module, exports, __webpack_require__) {

	var $export = __webpack_require__(5);
	var $task = __webpack_require__(21);
	$export($export.G + $export.B, {
	  setImmediate: $task.set,
	  clearImmediate: $task.clear
	});


/***/ }),
/* 5 */
/***/ (function(module, exports, __webpack_require__) {

	var global = __webpack_require__(6);
	var core = __webpack_require__(7);
	var ctx = __webpack_require__(8);
	var hide = __webpack_require__(10);
	var has = __webpack_require__(20);
	var PROTOTYPE = 'prototype';
	
	var $export = function (type, name, source) {
	  var IS_FORCED = type & $export.F;
	  var IS_GLOBAL = type & $export.G;
	  var IS_STATIC = type & $export.S;
	  var IS_PROTO = type & $export.P;
	  var IS_BIND = type & $export.B;
	  var IS_WRAP = type & $export.W;
	  var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});
	  var expProto = exports[PROTOTYPE];
	  var target = IS_GLOBAL ? global : IS_STATIC ? global[name] : (global[name] || {})[PROTOTYPE];
	  var key, own, out;
	  if (IS_GLOBAL) source = name;
	  for (key in source) {
	    // contains in native
	    own = !IS_FORCED && target && target[key] !== undefined;
	    if (own && has(exports, key)) continue;
	    // export native or passed
	    out = own ? target[key] : source[key];
	    // prevent global pollution for namespaces
	    exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key]
	    // bind timers to global for call from export context
	    : IS_BIND && own ? ctx(out, global)
	    // wrap global constructors for prevent change them in library
	    : IS_WRAP && target[key] == out ? (function (C) {
	      var F = function (a, b, c) {
	        if (this instanceof C) {
	          switch (arguments.length) {
	            case 0: return new C();
	            case 1: return new C(a);
	            case 2: return new C(a, b);
	          } return new C(a, b, c);
	        } return C.apply(this, arguments);
	      };
	      F[PROTOTYPE] = C[PROTOTYPE];
	      return F;
	    // make static versions for prototype methods
	    })(out) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;
	    // export proto methods to core.%CONSTRUCTOR%.methods.%NAME%
	    if (IS_PROTO) {
	      (exports.virtual || (exports.virtual = {}))[key] = out;
	      // export proto methods to core.%CONSTRUCTOR%.prototype.%NAME%
	      if (type & $export.R && expProto && !expProto[key]) hide(expProto, key, out);
	    }
	  }
	};
	// type bitmap
	$export.F = 1;   // forced
	$export.G = 2;   // global
	$export.S = 4;   // static
	$export.P = 8;   // proto
	$export.B = 16;  // bind
	$export.W = 32;  // wrap
	$export.U = 64;  // safe
	$export.R = 128; // real proto method for `library`
	module.exports = $export;


/***/ }),
/* 6 */
/***/ (function(module, exports) {

	// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
	var global = module.exports = typeof window != 'undefined' && window.Math == Math
	  ? window : typeof self != 'undefined' && self.Math == Math ? self
	  // eslint-disable-next-line no-new-func
	  : Function('return this')();
	if (typeof __g == 'number') __g = global; // eslint-disable-line no-undef


/***/ }),
/* 7 */
/***/ (function(module, exports) {

	var core = module.exports = { version: '2.6.11' };
	if (typeof __e == 'number') __e = core; // eslint-disable-line no-undef


/***/ }),
/* 8 */
/***/ (function(module, exports, __webpack_require__) {

	// optional / simple context binding
	var aFunction = __webpack_require__(9);
	module.exports = function (fn, that, length) {
	  aFunction(fn);
	  if (that === undefined) return fn;
	  switch (length) {
	    case 1: return function (a) {
	      return fn.call(that, a);
	    };
	    case 2: return function (a, b) {
	      return fn.call(that, a, b);
	    };
	    case 3: return function (a, b, c) {
	      return fn.call(that, a, b, c);
	    };
	  }
	  return function (/* ...args */) {
	    return fn.apply(that, arguments);
	  };
	};


/***/ }),
/* 9 */
/***/ (function(module, exports) {

	module.exports = function (it) {
	  if (typeof it != 'function') throw TypeError(it + ' is not a function!');
	  return it;
	};


/***/ }),
/* 10 */
/***/ (function(module, exports, __webpack_require__) {

	var dP = __webpack_require__(11);
	var createDesc = __webpack_require__(19);
	module.exports = __webpack_require__(15) ? function (object, key, value) {
	  return dP.f(object, key, createDesc(1, value));
	} : function (object, key, value) {
	  object[key] = value;
	  return object;
	};


/***/ }),
/* 11 */
/***/ (function(module, exports, __webpack_require__) {

	var anObject = __webpack_require__(12);
	var IE8_DOM_DEFINE = __webpack_require__(14);
	var toPrimitive = __webpack_require__(18);
	var dP = Object.defineProperty;
	
	exports.f = __webpack_require__(15) ? Object.defineProperty : function defineProperty(O, P, Attributes) {
	  anObject(O);
	  P = toPrimitive(P, true);
	  anObject(Attributes);
	  if (IE8_DOM_DEFINE) try {
	    return dP(O, P, Attributes);
	  } catch (e) { /* empty */ }
	  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');
	  if ('value' in Attributes) O[P] = Attributes.value;
	  return O;
	};


/***/ }),
/* 12 */
/***/ (function(module, exports, __webpack_require__) {

	var isObject = __webpack_require__(13);
	module.exports = function (it) {
	  if (!isObject(it)) throw TypeError(it + ' is not an object!');
	  return it;
	};


/***/ }),
/* 13 */
/***/ (function(module, exports) {

	module.exports = function (it) {
	  return typeof it === 'object' ? it !== null : typeof it === 'function';
	};


/***/ }),
/* 14 */
/***/ (function(module, exports, __webpack_require__) {

	module.exports = !__webpack_require__(15) && !__webpack_require__(16)(function () {
	  return Object.defineProperty(__webpack_require__(17)('div'), 'a', { get: function () { return 7; } }).a != 7;
	});


/***/ }),
/* 15 */
/***/ (function(module, exports, __webpack_require__) {

	// Thank's IE8 for his funny defineProperty
	module.exports = !__webpack_require__(16)(function () {
	  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;
	});


/***/ }),
/* 16 */
/***/ (function(module, exports) {

	module.exports = function (exec) {
	  try {
	    return !!exec();
	  } catch (e) {
	    return true;
	  }
	};


/***/ }),
/* 17 */
/***/ (function(module, exports, __webpack_require__) {

	var isObject = __webpack_require__(13);
	var document = __webpack_require__(6).document;
	// typeof document.createElement is 'object' in old IE
	var is = isObject(document) && isObject(document.createElement);
	module.exports = function (it) {
	  return is ? document.createElement(it) : {};
	};


/***/ }),
/* 18 */
/***/ (function(module, exports, __webpack_require__) {

	// 7.1.1 ToPrimitive(input [, PreferredType])
	var isObject = __webpack_require__(13);
	// instead of the ES6 spec version, we didn't implement @@toPrimitive case
	// and the second argument - flag - preferred type is a string
	module.exports = function (it, S) {
	  if (!isObject(it)) return it;
	  var fn, val;
	  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;
	  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;
	  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;
	  throw TypeError("Can't convert object to primitive value");
	};


/***/ }),
/* 19 */
/***/ (function(module, exports) {

	module.exports = function (bitmap, value) {
	  return {
	    enumerable: !(bitmap & 1),
	    configurable: !(bitmap & 2),
	    writable: !(bitmap & 4),
	    value: value
	  };
	};


/***/ }),
/* 20 */
/***/ (function(module, exports) {

	var hasOwnProperty = {}.hasOwnProperty;
	module.exports = function (it, key) {
	  return hasOwnProperty.call(it, key);
	};


/***/ }),
/* 21 */
/***/ (function(module, exports, __webpack_require__) {

	var ctx = __webpack_require__(8);
	var invoke = __webpack_require__(22);
	var html = __webpack_require__(23);
	var cel = __webpack_require__(17);
	var global = __webpack_require__(6);
	var process = global.process;
	var setTask = global.setImmediate;
	var clearTask = global.clearImmediate;
	var MessageChannel = global.MessageChannel;
	var Dispatch = global.Dispatch;
	var counter = 0;
	var queue = {};
	var ONREADYSTATECHANGE = 'onreadystatechange';
	var defer, channel, port;
	var run = function () {
	  var id = +this;
	  // eslint-disable-next-line no-prototype-builtins
	  if (queue.hasOwnProperty(id)) {
	    var fn = queue[id];
	    delete queue[id];
	    fn();
	  }
	};
	var listener = function (event) {
	  run.call(event.data);
	};
	// Node.js 0.9+ & IE10+ has setImmediate, otherwise:
	if (!setTask || !clearTask) {
	  setTask = function setImmediate(fn) {
	    var args = [];
	    var i = 1;
	    while (arguments.length > i) args.push(arguments[i++]);
	    queue[++counter] = function () {
	      // eslint-disable-next-line no-new-func
	      invoke(typeof fn == 'function' ? fn : Function(fn), args);
	    };
	    defer(counter);
	    return counter;
	  };
	  clearTask = function clearImmediate(id) {
	    delete queue[id];
	  };
	  // Node.js 0.8-
	  if (__webpack_require__(24)(process) == 'process') {
	    defer = function (id) {
	      process.nextTick(ctx(run, id, 1));
	    };
	  // Sphere (JS game engine) Dispatch API
	  } else if (Dispatch && Dispatch.now) {
	    defer = function (id) {
	      Dispatch.now(ctx(run, id, 1));
	    };
	  // Browsers with MessageChannel, includes WebWorkers
	  } else if (MessageChannel) {
	    channel = new MessageChannel();
	    port = channel.port2;
	    channel.port1.onmessage = listener;
	    defer = ctx(port.postMessage, port, 1);
	  // Browsers with postMessage, skip WebWorkers
	  // IE8 has postMessage, but it's sync & typeof its postMessage is 'object'
	  } else if (global.addEventListener && typeof postMessage == 'function' && !global.importScripts) {
	    defer = function (id) {
	      global.postMessage(id + '', '*');
	    };
	    global.addEventListener('message', listener, false);
	  // IE8-
	  } else if (ONREADYSTATECHANGE in cel('script')) {
	    defer = function (id) {
	      html.appendChild(cel('script'))[ONREADYSTATECHANGE] = function () {
	        html.removeChild(this);
	        run.call(id);
	      };
	    };
	  // Rest old browsers
	  } else {
	    defer = function (id) {
	      setTimeout(ctx(run, id, 1), 0);
	    };
	  }
	}
	module.exports = {
	  set: setTask,
	  clear: clearTask
	};


/***/ }),
/* 22 */
/***/ (function(module, exports) {

	// fast apply, http://jsperf.lnkit.com/fast-apply/5
	module.exports = function (fn, args, that) {
	  var un = that === undefined;
	  switch (args.length) {
	    case 0: return un ? fn()
	                      : fn.call(that);
	    case 1: return un ? fn(args[0])
	                      : fn.call(that, args[0]);
	    case 2: return un ? fn(args[0], args[1])
	                      : fn.call(that, args[0], args[1]);
	    case 3: return un ? fn(args[0], args[1], args[2])
	                      : fn.call(that, args[0], args[1], args[2]);
	    case 4: return un ? fn(args[0], args[1], args[2], args[3])
	                      : fn.call(that, args[0], args[1], args[2], args[3]);
	  } return fn.apply(that, args);
	};


/***/ }),
/* 23 */
/***/ (function(module, exports, __webpack_require__) {

	var document = __webpack_require__(6).document;
	module.exports = document && document.documentElement;


/***/ }),
/* 24 */
/***/ (function(module, exports) {

	var toString = {}.toString;
	
	module.exports = function (it) {
	  return toString.call(it).slice(8, -1);
	};


/***/ }),
/* 25 */,
/* 26 */,
/* 27 */,
/* 28 */,
/* 29 */,
/* 30 */,
/* 31 */,
/* 32 */,
/* 33 */,
/* 34 */,
/* 35 */,
/* 36 */,
/* 37 */,
/* 38 */,
/* 39 */,
/* 40 */,
/* 41 */,
/* 42 */,
/* 43 */,
/* 44 */,
/* 45 */,
/* 46 */,
/* 47 */,
/* 48 */,
/* 49 */,
/* 50 */,
/* 51 */,
/* 52 */,
/* 53 */,
/* 54 */,
/* 55 */,
/* 56 */,
/* 57 */,
/* 58 */,
/* 59 */,
/* 60 */,
/* 61 */,
/* 62 */,
/* 63 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	module.exports = __webpack_require__(64);


/***/ }),
/* 64 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */
	
	/* globals __REACT_DEVTOOLS_GLOBAL_HOOK__*/
	
	'use strict';
	
	var ReactDOMComponentTree = __webpack_require__(65);
	var ReactDefaultInjection = __webpack_require__(69);
	var ReactMount = __webpack_require__(198);
	var ReactReconciler = __webpack_require__(90);
	var ReactUpdates = __webpack_require__(87);
	var ReactVersion = __webpack_require__(203);
	
	var findDOMNode = __webpack_require__(204);
	var getHostComponentFromComposite = __webpack_require__(205);
	var renderSubtreeIntoContainer = __webpack_require__(206);
	var warning = __webpack_require__(31);
	
	ReactDefaultInjection.inject();
	
	var ReactDOM = {
	  findDOMNode: findDOMNode,
	  render: ReactMount.render,
	  unmountComponentAtNode: ReactMount.unmountComponentAtNode,
	  version: ReactVersion,
	
	  /* eslint-disable camelcase */
	  unstable_batchedUpdates: ReactUpdates.batchedUpdates,
	  unstable_renderSubtreeIntoContainer: renderSubtreeIntoContainer
	  /* eslint-enable camelcase */
	};
	
	// Inject the runtime into a devtools global hook regardless of browser.
	// Allows for debugging when the hook is injected on the page.
	if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.inject === 'function') {
	  __REACT_DEVTOOLS_GLOBAL_HOOK__.inject({
	    ComponentTree: {
	      getClosestInstanceFromNode: ReactDOMComponentTree.getClosestInstanceFromNode,
	      getNodeFromInstance: function (inst) {
	        // inst is an internal instance (but could be a composite)
	        if (inst._renderedComponent) {
	          inst = getHostComponentFromComposite(inst);
	        }
	        if (inst) {
	          return ReactDOMComponentTree.getNodeFromInstance(inst);
	        } else {
	          return null;
	        }
	      }
	    },
	    Mount: ReactMount,
	    Reconciler: ReactReconciler
	  });
	}
	
	if (true) {
	  var ExecutionEnvironment = __webpack_require__(79);
	  if (ExecutionEnvironment.canUseDOM && window.top === window.self) {
	    // First check if devtools is not installed
	    if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined') {
	      // If we're in Chrome or Firefox, provide a download link if not installed.
	      if (navigator.userAgent.indexOf('Chrome') > -1 && navigator.userAgent.indexOf('Edge') === -1 || navigator.userAgent.indexOf('Firefox') > -1) {
	        // Firefox does not have the issue with devtools loaded over file://
	        var showFileUrlMessage = window.location.protocol.indexOf('http') === -1 && navigator.userAgent.indexOf('Firefox') === -1;
	        console.debug('Download the React DevTools ' + (showFileUrlMessage ? 'and use an HTTP server (instead of a file: URL) ' : '') + 'for a better development experience: ' + 'https://fb.me/react-devtools');
	      }
	    }
	
	    var testFunc = function testFn() {};
	     true ? warning((testFunc.name || testFunc.toString()).indexOf('testFn') !== -1, "It looks like you're using a minified copy of the development build " + 'of React. When deploying React apps to production, make sure to use ' + 'the production build which skips development warnings and is faster. ' + 'See https://fb.me/react-minification for more details.') : void 0;
	
	    // If we're in IE8, check to see if we are in compatibility mode and provide
	    // information on preventing compatibility mode
	    var ieCompatibilityMode = document.documentMode && document.documentMode < 8;
	
	     true ? warning(!ieCompatibilityMode, 'Internet Explorer is running in compatibility mode; please add the ' + 'following tag to your HTML to prevent this from happening: ' + '<meta http-equiv="X-UA-Compatible" content="IE=edge" />') : void 0;
	
	    var expectedFeatures = [
	    // shims
	    Array.isArray, Array.prototype.every, Array.prototype.forEach, Array.prototype.indexOf, Array.prototype.map, Date.now, Function.prototype.bind, Object.keys, String.prototype.trim];
	
	    for (var i = 0; i < expectedFeatures.length; i++) {
	      if (!expectedFeatures[i]) {
	         true ? warning(false, 'One or more ES5 shims expected by React are not available: ' + 'https://fb.me/react-warning-polyfills') : void 0;
	        break;
	      }
	    }
	  }
	}
	
	if (true) {
	  var ReactInstrumentation = __webpack_require__(93);
	  var ReactDOMUnknownPropertyHook = __webpack_require__(207);
	  var ReactDOMNullInputValuePropHook = __webpack_require__(208);
	  var ReactDOMInvalidARIAHook = __webpack_require__(209);
	
	  ReactInstrumentation.debugTool.addHook(ReactDOMUnknownPropertyHook);
	  ReactInstrumentation.debugTool.addHook(ReactDOMNullInputValuePropHook);
	  ReactInstrumentation.debugTool.addHook(ReactDOMInvalidARIAHook);
	}
	
	module.exports = ReactDOM;

/***/ }),
/* 65 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(66);
	
	var DOMProperty = __webpack_require__(67);
	var ReactDOMComponentFlags = __webpack_require__(68);
	
	var invariant = __webpack_require__(35);
	
	var ATTR_NAME = DOMProperty.ID_ATTRIBUTE_NAME;
	var Flags = ReactDOMComponentFlags;
	
	var internalInstanceKey = '__reactInternalInstance$' + Math.random().toString(36).slice(2);
	
	/**
	 * Check if a given node should be cached.
	 */
	function shouldPrecacheNode(node, nodeID) {
	  return node.nodeType === 1 && node.getAttribute(ATTR_NAME) === String(nodeID) || node.nodeType === 8 && node.nodeValue === ' react-text: ' + nodeID + ' ' || node.nodeType === 8 && node.nodeValue === ' react-empty: ' + nodeID + ' ';
	}
	
	/**
	 * Drill down (through composites and empty components) until we get a host or
	 * host text component.
	 *
	 * This is pretty polymorphic but unavoidable with the current structure we have
	 * for `_renderedChildren`.
	 */
	function getRenderedHostOrTextFromComponent(component) {
	  var rendered;
	  while (rendered = component._renderedComponent) {
	    component = rendered;
	  }
	  return component;
	}
	
	/**
	 * Populate `_hostNode` on the rendered host/text component with the given
	 * DOM node. The passed `inst` can be a composite.
	 */
	function precacheNode(inst, node) {
	  var hostInst = getRenderedHostOrTextFromComponent(inst);
	  hostInst._hostNode = node;
	  node[internalInstanceKey] = hostInst;
	}
	
	function uncacheNode(inst) {
	  var node = inst._hostNode;
	  if (node) {
	    delete node[internalInstanceKey];
	    inst._hostNode = null;
	  }
	}
	
	/**
	 * Populate `_hostNode` on each child of `inst`, assuming that the children
	 * match up with the DOM (element) children of `node`.
	 *
	 * We cache entire levels at once to avoid an n^2 problem where we access the
	 * children of a node sequentially and have to walk from the start to our target
	 * node every time.
	 *
	 * Since we update `_renderedChildren` and the actual DOM at (slightly)
	 * different times, we could race here and see a newer `_renderedChildren` than
	 * the DOM nodes we see. To avoid this, ReactMultiChild calls
	 * `prepareToManageChildren` before we change `_renderedChildren`, at which
	 * time the container's child nodes are always cached (until it unmounts).
	 */
	function precacheChildNodes(inst, node) {
	  if (inst._flags & Flags.hasCachedChildNodes) {
	    return;
	  }
	  var children = inst._renderedChildren;
	  var childNode = node.firstChild;
	  outer: for (var name in children) {
	    if (!children.hasOwnProperty(name)) {
	      continue;
	    }
	    var childInst = children[name];
	    var childID = getRenderedHostOrTextFromComponent(childInst)._domID;
	    if (childID === 0) {
	      // We're currently unmounting this child in ReactMultiChild; skip it.
	      continue;
	    }
	    // We assume the child nodes are in the same order as the child instances.
	    for (; childNode !== null; childNode = childNode.nextSibling) {
	      if (shouldPrecacheNode(childNode, childID)) {
	        precacheNode(childInst, childNode);
	        continue outer;
	      }
	    }
	    // We reached the end of the DOM children without finding an ID match.
	     true ?  true ? invariant(false, 'Unable to find element with ID %s.', childID) : _prodInvariant('32', childID) : void 0;
	  }
	  inst._flags |= Flags.hasCachedChildNodes;
	}
	
	/**
	 * Given a DOM node, return the closest ReactDOMComponent or
	 * ReactDOMTextComponent instance ancestor.
	 */
	function getClosestInstanceFromNode(node) {
	  if (node[internalInstanceKey]) {
	    return node[internalInstanceKey];
	  }
	
	  // Walk up the tree until we find an ancestor whose instance we have cached.
	  var parents = [];
	  while (!node[internalInstanceKey]) {
	    parents.push(node);
	    if (node.parentNode) {
	      node = node.parentNode;
	    } else {
	      // Top of the tree. This node must not be part of a React tree (or is
	      // unmounted, potentially).
	      return null;
	    }
	  }
	
	  var closest;
	  var inst;
	  for (; node && (inst = node[internalInstanceKey]); node = parents.pop()) {
	    closest = inst;
	    if (parents.length) {
	      precacheChildNodes(inst, node);
	    }
	  }
	
	  return closest;
	}
	
	/**
	 * Given a DOM node, return the ReactDOMComponent or ReactDOMTextComponent
	 * instance, or null if the node was not rendered by this React.
	 */
	function getInstanceFromNode(node) {
	  var inst = getClosestInstanceFromNode(node);
	  if (inst != null && inst._hostNode === node) {
	    return inst;
	  } else {
	    return null;
	  }
	}
	
	/**
	 * Given a ReactDOMComponent or ReactDOMTextComponent, return the corresponding
	 * DOM node.
	 */
	function getNodeFromInstance(inst) {
	  // Without this first invariant, passing a non-DOM-component triggers the next
	  // invariant for a missing parent, which is super confusing.
	  !(inst._hostNode !== undefined) ?  true ? invariant(false, 'getNodeFromInstance: Invalid argument.') : _prodInvariant('33') : void 0;
	
	  if (inst._hostNode) {
	    return inst._hostNode;
	  }
	
	  // Walk up the tree until we find an ancestor whose DOM node we have cached.
	  var parents = [];
	  while (!inst._hostNode) {
	    parents.push(inst);
	    !inst._hostParent ?  true ? invariant(false, 'React DOM tree root should always have a node reference.') : _prodInvariant('34') : void 0;
	    inst = inst._hostParent;
	  }
	
	  // Now parents contains each ancestor that does *not* have a cached native
	  // node, and `inst` is the deepest ancestor that does.
	  for (; parents.length; inst = parents.pop()) {
	    precacheChildNodes(inst, inst._hostNode);
	  }
	
	  return inst._hostNode;
	}
	
	var ReactDOMComponentTree = {
	  getClosestInstanceFromNode: getClosestInstanceFromNode,
	  getInstanceFromNode: getInstanceFromNode,
	  getNodeFromInstance: getNodeFromInstance,
	  precacheChildNodes: precacheChildNodes,
	  precacheNode: precacheNode,
	  uncacheNode: uncacheNode
	};
	
	module.exports = ReactDOMComponentTree;

/***/ }),
/* 66 */
/***/ (function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * 
	 */
	'use strict';
	
	/**
	 * WARNING: DO NOT manually require this module.
	 * This is a replacement for `invariant(...)` used by the error code system
	 * and will _only_ be required by the corresponding babel pass.
	 * It always throws.
	 */
	
	function reactProdInvariant(code) {
	  var argCount = arguments.length - 1;
	
	  var message = 'Minified React error #' + code + '; visit ' + 'http://facebook.github.io/react/docs/error-decoder.html?invariant=' + code;
	
	  for (var argIdx = 0; argIdx < argCount; argIdx++) {
	    message += '&args[]=' + encodeURIComponent(arguments[argIdx + 1]);
	  }
	
	  message += ' for the full message or use the non-minified dev environment' + ' for full errors and additional helpful warnings.';
	
	  var error = new Error(message);
	  error.name = 'Invariant Violation';
	  error.framesToPop = 1; // we don't care about reactProdInvariant's own frame
	
	  throw error;
	}
	
	module.exports = reactProdInvariant;

/***/ }),
/* 67 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(66);
	
	var invariant = __webpack_require__(35);
	
	function checkMask(value, bitmask) {
	  return (value & bitmask) === bitmask;
	}
	
	var DOMPropertyInjection = {
	  /**
	   * Mapping from normalized, camelcased property names to a configuration that
	   * specifies how the associated DOM property should be accessed or rendered.
	   */
	  MUST_USE_PROPERTY: 0x1,
	  HAS_BOOLEAN_VALUE: 0x4,
	  HAS_NUMERIC_VALUE: 0x8,
	  HAS_POSITIVE_NUMERIC_VALUE: 0x10 | 0x8,
	  HAS_OVERLOADED_BOOLEAN_VALUE: 0x20,
	
	  /**
	   * Inject some specialized knowledge about the DOM. This takes a config object
	   * with the following properties:
	   *
	   * isCustomAttribute: function that given an attribute name will return true
	   * if it can be inserted into the DOM verbatim. Useful for data-* or aria-*
	   * attributes where it's impossible to enumerate all of the possible
	   * attribute names,
	   *
	   * Properties: object mapping DOM property name to one of the
	   * DOMPropertyInjection constants or null. If your attribute isn't in here,
	   * it won't get written to the DOM.
	   *
	   * DOMAttributeNames: object mapping React attribute name to the DOM
	   * attribute name. Attribute names not specified use the **lowercase**
	   * normalized name.
	   *
	   * DOMAttributeNamespaces: object mapping React attribute name to the DOM
	   * attribute namespace URL. (Attribute names not specified use no namespace.)
	   *
	   * DOMPropertyNames: similar to DOMAttributeNames but for DOM properties.
	   * Property names not specified use the normalized name.
	   *
	   * DOMMutationMethods: Properties that require special mutation methods. If
	   * `value` is undefined, the mutation method should unset the property.
	   *
	   * @param {object} domPropertyConfig the config as described above.
	   */
	  injectDOMPropertyConfig: function (domPropertyConfig) {
	    var Injection = DOMPropertyInjection;
	    var Properties = domPropertyConfig.Properties || {};
	    var DOMAttributeNamespaces = domPropertyConfig.DOMAttributeNamespaces || {};
	    var DOMAttributeNames = domPropertyConfig.DOMAttributeNames || {};
	    var DOMPropertyNames = domPropertyConfig.DOMPropertyNames || {};
	    var DOMMutationMethods = domPropertyConfig.DOMMutationMethods || {};
	
	    if (domPropertyConfig.isCustomAttribute) {
	      DOMProperty._isCustomAttributeFunctions.push(domPropertyConfig.isCustomAttribute);
	    }
	
	    for (var propName in Properties) {
	      !!DOMProperty.properties.hasOwnProperty(propName) ?  true ? invariant(false, 'injectDOMPropertyConfig(...): You\'re trying to inject DOM property \'%s\' which has already been injected. You may be accidentally injecting the same DOM property config twice, or you may be injecting two configs that have conflicting property names.', propName) : _prodInvariant('48', propName) : void 0;
	
	      var lowerCased = propName.toLowerCase();
	      var propConfig = Properties[propName];
	
	      var propertyInfo = {
	        attributeName: lowerCased,
	        attributeNamespace: null,
	        propertyName: propName,
	        mutationMethod: null,
	
	        mustUseProperty: checkMask(propConfig, Injection.MUST_USE_PROPERTY),
	        hasBooleanValue: checkMask(propConfig, Injection.HAS_BOOLEAN_VALUE),
	        hasNumericValue: checkMask(propConfig, Injection.HAS_NUMERIC_VALUE),
	        hasPositiveNumericValue: checkMask(propConfig, Injection.HAS_POSITIVE_NUMERIC_VALUE),
	        hasOverloadedBooleanValue: checkMask(propConfig, Injection.HAS_OVERLOADED_BOOLEAN_VALUE)
	      };
	      !(propertyInfo.hasBooleanValue + propertyInfo.hasNumericValue + propertyInfo.hasOverloadedBooleanValue <= 1) ?  true ? invariant(false, 'DOMProperty: Value can be one of boolean, overloaded boolean, or numeric value, but not a combination: %s', propName) : _prodInvariant('50', propName) : void 0;
	
	      if (true) {
	        DOMProperty.getPossibleStandardName[lowerCased] = propName;
	      }
	
	      if (DOMAttributeNames.hasOwnProperty(propName)) {
	        var attributeName = DOMAttributeNames[propName];
	        propertyInfo.attributeName = attributeName;
	        if (true) {
	          DOMProperty.getPossibleStandardName[attributeName] = propName;
	        }
	      }
	
	      if (DOMAttributeNamespaces.hasOwnProperty(propName)) {
	        propertyInfo.attributeNamespace = DOMAttributeNamespaces[propName];
	      }
	
	      if (DOMPropertyNames.hasOwnProperty(propName)) {
	        propertyInfo.propertyName = DOMPropertyNames[propName];
	      }
	
	      if (DOMMutationMethods.hasOwnProperty(propName)) {
	        propertyInfo.mutationMethod = DOMMutationMethods[propName];
	      }
	
	      DOMProperty.properties[propName] = propertyInfo;
	    }
	  }
	};
	
	/* eslint-disable max-len */
	var ATTRIBUTE_NAME_START_CHAR = ':A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD';
	/* eslint-enable max-len */
	
	/**
	 * DOMProperty exports lookup objects that can be used like functions:
	 *
	 *   > DOMProperty.isValid['id']
	 *   true
	 *   > DOMProperty.isValid['foobar']
	 *   undefined
	 *
	 * Although this may be confusing, it performs better in general.
	 *
	 * @see http://jsperf.com/key-exists
	 * @see http://jsperf.com/key-missing
	 */
	var DOMProperty = {
	  ID_ATTRIBUTE_NAME: 'data-reactid',
	  ROOT_ATTRIBUTE_NAME: 'data-reactroot',
	
	  ATTRIBUTE_NAME_START_CHAR: ATTRIBUTE_NAME_START_CHAR,
	  ATTRIBUTE_NAME_CHAR: ATTRIBUTE_NAME_START_CHAR + '\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040',
	
	  /**
	   * Map from property "standard name" to an object with info about how to set
	   * the property in the DOM. Each object contains:
	   *
	   * attributeName:
	   *   Used when rendering markup or with `*Attribute()`.
	   * attributeNamespace
	   * propertyName:
	   *   Used on DOM node instances. (This includes properties that mutate due to
	   *   external factors.)
	   * mutationMethod:
	   *   If non-null, used instead of the property or `setAttribute()` after
	   *   initial render.
	   * mustUseProperty:
	   *   Whether the property must be accessed and mutated as an object property.
	   * hasBooleanValue:
	   *   Whether the property should be removed when set to a falsey value.
	   * hasNumericValue:
	   *   Whether the property must be numeric or parse as a numeric and should be
	   *   removed when set to a falsey value.
	   * hasPositiveNumericValue:
	   *   Whether the property must be positive numeric or parse as a positive
	   *   numeric and should be removed when set to a falsey value.
	   * hasOverloadedBooleanValue:
	   *   Whether the property can be used as a flag as well as with a value.
	   *   Removed when strictly equal to false; present without a value when
	   *   strictly equal to true; present with a value otherwise.
	   */
	  properties: {},
	
	  /**
	   * Mapping from lowercase property names to the properly cased version, used
	   * to warn in the case of missing properties. Available only in __DEV__.
	   *
	   * autofocus is predefined, because adding it to the property whitelist
	   * causes unintended side effects.
	   *
	   * @type {Object}
	   */
	  getPossibleStandardName:  true ? { autofocus: 'autoFocus' } : null,
	
	  /**
	   * All of the isCustomAttribute() functions that have been injected.
	   */
	  _isCustomAttributeFunctions: [],
	
	  /**
	   * Checks whether a property name is a custom attribute.
	   * @method
	   */
	  isCustomAttribute: function (attributeName) {
	    for (var i = 0; i < DOMProperty._isCustomAttributeFunctions.length; i++) {
	      var isCustomAttributeFn = DOMProperty._isCustomAttributeFunctions[i];
	      if (isCustomAttributeFn(attributeName)) {
	        return true;
	      }
	    }
	    return false;
	  },
	
	  injection: DOMPropertyInjection
	};
	
	module.exports = DOMProperty;

/***/ }),
/* 68 */
/***/ (function(module, exports) {

	/**
	 * Copyright (c) 2015-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */
	
	'use strict';
	
	var ReactDOMComponentFlags = {
	  hasCachedChildNodes: 1 << 0
	};
	
	module.exports = ReactDOMComponentFlags;

/***/ }),
/* 69 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */
	
	'use strict';
	
	var ARIADOMPropertyConfig = __webpack_require__(70);
	var BeforeInputEventPlugin = __webpack_require__(71);
	var ChangeEventPlugin = __webpack_require__(86);
	var DefaultEventPluginOrder = __webpack_require__(104);
	var EnterLeaveEventPlugin = __webpack_require__(105);
	var HTMLDOMPropertyConfig = __webpack_require__(110);
	var ReactComponentBrowserEnvironment = __webpack_require__(111);
	var ReactDOMComponent = __webpack_require__(124);
	var ReactDOMComponentTree = __webpack_require__(65);
	var ReactDOMEmptyComponent = __webpack_require__(169);
	var ReactDOMTreeTraversal = __webpack_require__(170);
	var ReactDOMTextComponent = __webpack_require__(171);
	var ReactDefaultBatchingStrategy = __webpack_require__(172);
	var ReactEventListener = __webpack_require__(173);
	var ReactInjection = __webpack_require__(176);
	var ReactReconcileTransaction = __webpack_require__(177);
	var SVGDOMPropertyConfig = __webpack_require__(185);
	var SelectEventPlugin = __webpack_require__(186);
	var SimpleEventPlugin = __webpack_require__(187);
	
	var alreadyInjected = false;
	
	function inject() {
	  if (alreadyInjected) {
	    // TODO: This is currently true because these injections are shared between
	    // the client and the server package. They should be built independently
	    // and not share any injection state. Then this problem will be solved.
	    return;
	  }
	  alreadyInjected = true;
	
	  ReactInjection.EventEmitter.injectReactEventListener(ReactEventListener);
	
	  /**
	   * Inject modules for resolving DOM hierarchy and plugin ordering.
	   */
	  ReactInjection.EventPluginHub.injectEventPluginOrder(DefaultEventPluginOrder);
	  ReactInjection.EventPluginUtils.injectComponentTree(ReactDOMComponentTree);
	  ReactInjection.EventPluginUtils.injectTreeTraversal(ReactDOMTreeTraversal);
	
	  /**
	   * Some important event plugins included by default (without having to require
	   * them).
	   */
	  ReactInjection.EventPluginHub.injectEventPluginsByName({
	    SimpleEventPlugin: SimpleEventPlugin,
	    EnterLeaveEventPlugin: EnterLeaveEventPlugin,
	    ChangeEventPlugin: ChangeEventPlugin,
	    SelectEventPlugin: SelectEventPlugin,
	    BeforeInputEventPlugin: BeforeInputEventPlugin
	  });
	
	  ReactInjection.HostComponent.injectGenericComponentClass(ReactDOMComponent);
	
	  ReactInjection.HostComponent.injectTextComponentClass(ReactDOMTextComponent);
	
	  ReactInjection.DOMProperty.injectDOMPropertyConfig(ARIADOMPropertyConfig);
	  ReactInjection.DOMProperty.injectDOMPropertyConfig(HTMLDOMPropertyConfig);
	  ReactInjection.DOMProperty.injectDOMPropertyConfig(SVGDOMPropertyConfig);
	
	  ReactInjection.EmptyComponent.injectEmptyComponentFactory(function (instantiate) {
	    return new ReactDOMEmptyComponent(instantiate);
	  });
	
	  ReactInjection.Updates.injectReconcileTransaction(ReactReconcileTransaction);
	  ReactInjection.Updates.injectBatchingStrategy(ReactDefaultBatchingStrategy);
	
	  ReactInjection.Component.injectEnvironment(ReactComponentBrowserEnvironment);
	}
	
	module.exports = {
	  inject: inject
	};

/***/ }),
/* 70 */
/***/ (function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */
	
	'use strict';
	
	var ARIADOMPropertyConfig = {
	  Properties: {
	    // Global States and Properties
	    'aria-current': 0, // state
	    'aria-details': 0,
	    'aria-disabled': 0, // state
	    'aria-hidden': 0, // state
	    'aria-invalid': 0, // state
	    'aria-keyshortcuts': 0,
	    'aria-label': 0,
	    'aria-roledescription': 0,
	    // Widget Attributes
	    'aria-autocomplete': 0,
	    'aria-checked': 0,
	    'aria-expanded': 0,
	    'aria-haspopup': 0,
	    'aria-level': 0,
	    'aria-modal': 0,
	    'aria-multiline': 0,
	    'aria-multiselectable': 0,
	    'aria-orientation': 0,
	    'aria-placeholder': 0,
	    'aria-pressed': 0,
	    'aria-readonly': 0,
	    'aria-required': 0,
	    'aria-selected': 0,
	    'aria-sort': 0,
	    'aria-valuemax': 0,
	    'aria-valuemin': 0,
	    'aria-valuenow': 0,
	    'aria-valuetext': 0,
	    // Live Region Attributes
	    'aria-atomic': 0,
	    'aria-busy': 0,
	    'aria-live': 0,
	    'aria-relevant': 0,
	    // Drag-and-Drop Attributes
	    'aria-dropeffect': 0,
	    'aria-grabbed': 0,
	    // Relationship Attributes
	    'aria-activedescendant': 0,
	    'aria-colcount': 0,
	    'aria-colindex': 0,
	    'aria-colspan': 0,
	    'aria-controls': 0,
	    'aria-describedby': 0,
	    'aria-errormessage': 0,
	    'aria-flowto': 0,
	    'aria-labelledby': 0,
	    'aria-owns': 0,
	    'aria-posinset': 0,
	    'aria-rowcount': 0,
	    'aria-rowindex': 0,
	    'aria-rowspan': 0,
	    'aria-setsize': 0
	  },
	  DOMAttributeNames: {},
	  DOMPropertyNames: {}
	};
	
	module.exports = ARIADOMPropertyConfig;

/***/ }),
/* 71 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */
	
	'use strict';
	
	var EventPropagators = __webpack_require__(72);
	var ExecutionEnvironment = __webpack_require__(79);
	var FallbackCompositionState = __webpack_require__(80);
	var SyntheticCompositionEvent = __webpack_require__(83);
	var SyntheticInputEvent = __webpack_require__(85);
	
	var END_KEYCODES = [9, 13, 27, 32]; // Tab, Return, Esc, Space
	var START_KEYCODE = 229;
	
	var canUseCompositionEvent = ExecutionEnvironment.canUseDOM && 'CompositionEvent' in window;
	
	var documentMode = null;
	if (ExecutionEnvironment.canUseDOM && 'documentMode' in document) {
	  documentMode = document.documentMode;
	}
	
	// Webkit offers a very useful `textInput` event that can be used to
	// directly represent `beforeInput`. The IE `textinput` event is not as
	// useful, so we don't use it.
	var canUseTextInputEvent = ExecutionEnvironment.canUseDOM && 'TextEvent' in window && !documentMode && !isPresto();
	
	// In IE9+, we have access to composition events, but the data supplied
	// by the native compositionend event may be incorrect. Japanese ideographic
	// spaces, for instance (\u3000) are not recorded correctly.
	var useFallbackCompositionData = ExecutionEnvironment.canUseDOM && (!canUseCompositionEvent || documentMode && documentMode > 8 && documentMode <= 11);
	
	/**
	 * Opera <= 12 includes TextEvent in window, but does not fire
	 * text input events. Rely on keypress instead.
	 */
	function isPresto() {
	  var opera = window.opera;
	  return typeof opera === 'object' && typeof opera.version === 'function' && parseInt(opera.version(), 10) <= 12;
	}
	
	var SPACEBAR_CODE = 32;
	var SPACEBAR_CHAR = String.fromCharCode(SPACEBAR_CODE);
	
	// Events and their corresponding property names.
	var eventTypes = {
	  beforeInput: {
	    phasedRegistrationNames: {
	      bubbled: 'onBeforeInput',
	      captured: 'onBeforeInputCapture'
	    },
	    dependencies: ['topCompositionEnd', 'topKeyPress', 'topTextInput', 'topPaste']
	  },
	  compositionEnd: {
	    phasedRegistrationNames: {
	      bubbled: 'onCompositionEnd',
	      captured: 'onCompositionEndCapture'
	    },
	    dependencies: ['topBlur', 'topCompositionEnd', 'topKeyDown', 'topKeyPress', 'topKeyUp', 'topMouseDown']
	  },
	  compositionStart: {
	    phasedRegistrationNames: {
	      bubbled: 'onCompositionStart',
	      captured: 'onCompositionStartCapture'
	    },
	    dependencies: ['topBlur', 'topCompositionStart', 'topKeyDown', 'topKeyPress', 'topKeyUp', 'topMouseDown']
	  },
	  compositionUpdate: {
	    phasedRegistrationNames: {
	      bubbled: 'onCompositionUpdate',
	      captured: 'onCompositionUpdateCapture'
	    },
	    dependencies: ['topBlur', 'topCompositionUpdate', 'topKeyDown', 'topKeyPress', 'topKeyUp', 'topMouseDown']
	  }
	};
	
	// Track whether we've ever handled a keypress on the space key.
	var hasSpaceKeypress = false;
	
	/**
	 * Return whether a native keypress event is assumed to be a command.
	 * This is required because Firefox fires `keypress` events for key commands
	 * (cut, copy, select-all, etc.) even though no character is inserted.
	 */
	function isKeypressCommand(nativeEvent) {
	  return (nativeEvent.ctrlKey || nativeEvent.altKey || nativeEvent.metaKey) &&
	  // ctrlKey && altKey is equivalent to AltGr, and is not a command.
	  !(nativeEvent.ctrlKey && nativeEvent.altKey);
	}
	
	/**
	 * Translate native top level events into event types.
	 *
	 * @param {string} topLevelType
	 * @return {object}
	 */
	function getCompositionEventType(topLevelType) {
	  switch (topLevelType) {
	    case 'topCompositionStart':
	      return eventTypes.compositionStart;
	    case 'topCompositionEnd':
	      return eventTypes.compositionEnd;
	    case 'topCompositionUpdate':
	      return eventTypes.compositionUpdate;
	  }
	}
	
	/**
	 * Does our fallback best-guess model think this event signifies that
	 * composition has begun?
	 *
	 * @param {string} topLevelType
	 * @param {object} nativeEvent
	 * @return {boolean}
	 */
	function isFallbackCompositionStart(topLevelType, nativeEvent) {
	  return topLevelType === 'topKeyDown' && nativeEvent.keyCode === START_KEYCODE;
	}
	
	/**
	 * Does our fallback mode think that this event is the end of composition?
	 *
	 * @param {string} topLevelType
	 * @param {object} nativeEvent
	 * @return {boolean}
	 */
	function isFallbackCompositionEnd(topLevelType, nativeEvent) {
	  switch (topLevelType) {
	    case 'topKeyUp':
	      // Command keys insert or clear IME input.
	      return END_KEYCODES.indexOf(nativeEvent.keyCode) !== -1;
	    case 'topKeyDown':
	      // Expect IME keyCode on each keydown. If we get any other
	      // code we must have exited earlier.
	      return nativeEvent.keyCode !== START_KEYCODE;
	    case 'topKeyPress':
	    case 'topMouseDown':
	    case 'topBlur':
	      // Events are not possible without cancelling IME.
	      return true;
	    default:
	      return false;
	  }
	}
	
	/**
	 * Google Input Tools provides composition data via a CustomEvent,
	 * with the `data` property populated in the `detail` object. If this
	 * is available on the event object, use it. If not, this is a plain
	 * composition event and we have nothing special to extract.
	 *
	 * @param {object} nativeEvent
	 * @return {?string}
	 */
	function getDataFromCustomEvent(nativeEvent) {
	  var detail = nativeEvent.detail;
	  if (typeof detail === 'object' && 'data' in detail) {
	    return detail.data;
	  }
	  return null;
	}
	
	// Track the current IME composition fallback object, if any.
	var currentComposition = null;
	
	/**
	 * @return {?object} A SyntheticCompositionEvent.
	 */
	function extractCompositionEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	  var eventType;
	  var fallbackData;
	
	  if (canUseCompositionEvent) {
	    eventType = getCompositionEventType(topLevelType);
	  } else if (!currentComposition) {
	    if (isFallbackCompositionStart(topLevelType, nativeEvent)) {
	      eventType = eventTypes.compositionStart;
	    }
	  } else if (isFallbackCompositionEnd(topLevelType, nativeEvent)) {
	    eventType = eventTypes.compositionEnd;
	  }
	
	  if (!eventType) {
	    return null;
	  }
	
	  if (useFallbackCompositionData) {
	    // The current composition is stored statically and must not be
	    // overwritten while composition continues.
	    if (!currentComposition && eventType === eventTypes.compositionStart) {
	      currentComposition = FallbackCompositionState.getPooled(nativeEventTarget);
	    } else if (eventType === eventTypes.compositionEnd) {
	      if (currentComposition) {
	        fallbackData = currentComposition.getData();
	      }
	    }
	  }
	
	  var event = SyntheticCompositionEvent.getPooled(eventType, targetInst, nativeEvent, nativeEventTarget);
	
	  if (fallbackData) {
	    // Inject data generated from fallback path into the synthetic event.
	    // This matches the property of native CompositionEventInterface.
	    event.data = fallbackData;
	  } else {
	    var customData = getDataFromCustomEvent(nativeEvent);
	    if (customData !== null) {
	      event.data = customData;
	    }
	  }
	
	  EventPropagators.accumulateTwoPhaseDispatches(event);
	  return event;
	}
	
	/**
	 * @param {string} topLevelType Record from `EventConstants`.
	 * @param {object} nativeEvent Native browser event.
	 * @return {?string} The string corresponding to this `beforeInput` event.
	 */
	function getNativeBeforeInputChars(topLevelType, nativeEvent) {
	  switch (topLevelType) {
	    case 'topCompositionEnd':
	      return getDataFromCustomEvent(nativeEvent);
	    case 'topKeyPress':
	      /**
	       * If native `textInput` events are available, our goal is to make
	       * use of them. However, there is a special case: the spacebar key.
	       * In Webkit, preventing default on a spacebar `textInput` event
	       * cancels character insertion, but it *also* causes the browser
	       * to fall back to its default spacebar behavior of scrolling the
	       * page.
	       *
	       * Tracking at:
	       * https://code.google.com/p/chromium/issues/detail?id=355103
	       *
	       * To avoid this issue, use the keypress event as if no `textInput`
	       * event is available.
	       */
	      var which = nativeEvent.which;
	      if (which !== SPACEBAR_CODE) {
	        return null;
	      }
	
	      hasSpaceKeypress = true;
	      return SPACEBAR_CHAR;
	
	    case 'topTextInput':
	      // Record the characters to be added to the DOM.
	      var chars = nativeEvent.data;
	
	      // If it's a spacebar character, assume that we have already handled
	      // it at the keypress level and bail immediately. Android Chrome
	      // doesn't give us keycodes, so we need to blacklist it.
	      if (chars === SPACEBAR_CHAR && hasSpaceKeypress) {
	        return null;
	      }
	
	      return chars;
	
	    default:
	      // For other native event types, do nothing.
	      return null;
	  }
	}
	
	/**
	 * For browsers that do not provide the `textInput` event, extract the
	 * appropriate string to use for SyntheticInputEvent.
	 *
	 * @param {string} topLevelType Record from `EventConstants`.
	 * @param {object} nativeEvent Native browser event.
	 * @return {?string} The fallback string for this `beforeInput` event.
	 */
	function getFallbackBeforeInputChars(topLevelType, nativeEvent) {
	  // If we are currently composing (IME) and using a fallback to do so,
	  // try to extract the composed characters from the fallback object.
	  // If composition event is available, we extract a string only at
	  // compositionevent, otherwise extract it at fallback events.
	  if (currentComposition) {
	    if (topLevelType === 'topCompositionEnd' || !canUseCompositionEvent && isFallbackCompositionEnd(topLevelType, nativeEvent)) {
	      var chars = currentComposition.getData();
	      FallbackCompositionState.release(currentComposition);
	      currentComposition = null;
	      return chars;
	    }
	    return null;
	  }
	
	  switch (topLevelType) {
	    case 'topPaste':
	      // If a paste event occurs after a keypress, throw out the input
	      // chars. Paste events should not lead to BeforeInput events.
	      return null;
	    case 'topKeyPress':
	      /**
	       * As of v27, Firefox may fire keypress events even when no character
	       * will be inserted. A few possibilities:
	       *
	       * - `which` is `0`. Arrow keys, Esc key, etc.
	       *
	       * - `which` is the pressed key code, but no char is available.
	       *   Ex: 'AltGr + d` in Polish. There is no modified character for
	       *   this key combination and no character is inserted into the
	       *   document, but FF fires the keypress for char code `100` anyway.
	       *   No `input` event will occur.
	       *
	       * - `which` is the pressed key code, but a command combination is
	       *   being used. Ex: `Cmd+C`. No character is inserted, and no
	       *   `input` event will occur.
	       */
	      if (nativeEvent.which && !isKeypressCommand(nativeEvent)) {
	        return String.fromCharCode(nativeEvent.which);
	      }
	      return null;
	    case 'topCompositionEnd':
	      return useFallbackCompositionData ? null : nativeEvent.data;
	    default:
	      return null;
	  }
	}
	
	/**
	 * Extract a SyntheticInputEvent for `beforeInput`, based on either native
	 * `textInput` or fallback behavior.
	 *
	 * @return {?object} A SyntheticInputEvent.
	 */
	function extractBeforeInputEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	  var chars;
	
	  if (canUseTextInputEvent) {
	    chars = getNativeBeforeInputChars(topLevelType, nativeEvent);
	  } else {
	    chars = getFallbackBeforeInputChars(topLevelType, nativeEvent);
	  }
	
	  // If no characters are being inserted, no BeforeInput event should
	  // be fired.
	  if (!chars) {
	    return null;
	  }
	
	  var event = SyntheticInputEvent.getPooled(eventTypes.beforeInput, targetInst, nativeEvent, nativeEventTarget);
	
	  event.data = chars;
	  EventPropagators.accumulateTwoPhaseDispatches(event);
	  return event;
	}
	
	/**
	 * Create an `onBeforeInput` event to match
	 * http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105/#events-inputevents.
	 *
	 * This event plugin is based on the native `textInput` event
	 * available in Chrome, Safari, Opera, and IE. This event fires after
	 * `onKeyPress` and `onCompositionEnd`, but before `onInput`.
	 *
	 * `beforeInput` is spec'd but not implemented in any browsers, and
	 * the `input` event does not provide any useful information about what has
	 * actually been added, contrary to the spec. Thus, `textInput` is the best
	 * available event to identify the characters that have actually been inserted
	 * into the target node.
	 *
	 * This plugin is also responsible for emitting `composition` events, thus
	 * allowing us to share composition fallback code for both `beforeInput` and
	 * `composition` event types.
	 */
	var BeforeInputEventPlugin = {
	  eventTypes: eventTypes,
	
	  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	    return [extractCompositionEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget), extractBeforeInputEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget)];
	  }
	};
	
	module.exports = BeforeInputEventPlugin;

/***/ }),
/* 72 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */
	
	'use strict';
	
	var EventPluginHub = __webpack_require__(73);
	var EventPluginUtils = __webpack_require__(75);
	
	var accumulateInto = __webpack_require__(77);
	var forEachAccumulated = __webpack_require__(78);
	var warning = __webpack_require__(31);
	
	var getListener = EventPluginHub.getListener;
	
	/**
	 * Some event types have a notion of different registration names for different
	 * "phases" of propagation. This finds listeners by a given phase.
	 */
	function listenerAtPhase(inst, event, propagationPhase) {
	  var registrationName = event.dispatchConfig.phasedRegistrationNames[propagationPhase];
	  return getListener(inst, registrationName);
	}
	
	/**
	 * Tags a `SyntheticEvent` with dispatched listeners. Creating this function
	 * here, allows us to not have to bind or create functions for each event.
	 * Mutating the event's members allows us to not have to create a wrapping
	 * "dispatch" object that pairs the event with the listener.
	 */
	function accumulateDirectionalDispatches(inst, phase, event) {
	  if (true) {
	     true ? warning(inst, 'Dispatching inst must not be null') : void 0;
	  }
	  var listener = listenerAtPhase(inst, event, phase);
	  if (listener) {
	    event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);
	    event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);
	  }
	}
	
	/**
	 * Collect dispatches (must be entirely collected before dispatching - see unit
	 * tests). Lazily allocate the array to conserve memory.  We must loop through
	 * each event and perform the traversal for each one. We cannot perform a
	 * single traversal for the entire collection of events because each event may
	 * have a different target.
	 */
	function accumulateTwoPhaseDispatchesSingle(event) {
	  if (event && event.dispatchConfig.phasedRegistrationNames) {
	    EventPluginUtils.traverseTwoPhase(event._targetInst, accumulateDirectionalDispatches, event);
	  }
	}
	
	/**
	 * Same as `accumulateTwoPhaseDispatchesSingle`, but skips over the targetID.
	 */
	function accumulateTwoPhaseDispatchesSingleSkipTarget(event) {
	  if (event && event.dispatchConfig.phasedRegistrationNames) {
	    var targetInst = event._targetInst;
	    var parentInst = targetInst ? EventPluginUtils.getParentInstance(targetInst) : null;
	    EventPluginUtils.traverseTwoPhase(parentInst, accumulateDirectionalDispatches, event);
	  }
	}
	
	/**
	 * Accumulates without regard to direction, does not look for phased
	 * registration names. Same as `accumulateDirectDispatchesSingle` but without
	 * requiring that the `dispatchMarker` be the same as the dispatched ID.
	 */
	function accumulateDispatches(inst, ignoredDirection, event) {
	  if (event && event.dispatchConfig.registrationName) {
	    var registrationName = event.dispatchConfig.registrationName;
	    var listener = getListener(inst, registrationName);
	    if (listener) {
	      event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);
	      event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);
	    }
	  }
	}
	
	/**
	 * Accumulates dispatches on an `SyntheticEvent`, but only for the
	 * `dispatchMarker`.
	 * @param {SyntheticEvent} event
	 */
	function accumulateDirectDispatchesSingle(event) {
	  if (event && event.dispatchConfig.registrationName) {
	    accumulateDispatches(event._targetInst, null, event);
	  }
	}
	
	function accumulateTwoPhaseDispatches(events) {
	  forEachAccumulated(events, accumulateTwoPhaseDispatchesSingle);
	}
	
	function accumulateTwoPhaseDispatchesSkipTarget(events) {
	  forEachAccumulated(events, accumulateTwoPhaseDispatchesSingleSkipTarget);
	}
	
	function accumulateEnterLeaveDispatches(leave, enter, from, to) {
	  EventPluginUtils.traverseEnterLeave(from, to, accumulateDispatches, leave, enter);
	}
	
	function accumulateDirectDispatches(events) {
	  forEachAccumulated(events, accumulateDirectDispatchesSingle);
	}
	
	/**
	 * A small set of propagation patterns, each of which will accept a small amount
	 * of information, and generate a set of "dispatch ready event objects" - which
	 * are sets of events that have already been annotated with a set of dispatched
	 * listener functions/ids. The API is designed this way to discourage these
	 * propagation strategies from actually executing the dispatches, since we
	 * always want to collect the entire set of dispatches before executing event a
	 * single one.
	 *
	 * @constructor EventPropagators
	 */
	var EventPropagators = {
	  accumulateTwoPhaseDispatches: accumulateTwoPhaseDispatches,
	  accumulateTwoPhaseDispatchesSkipTarget: accumulateTwoPhaseDispatchesSkipTarget,
	  accumulateDirectDispatches: accumulateDirectDispatches,
	  accumulateEnterLeaveDispatches: accumulateEnterLeaveDispatches
	};
	
	module.exports = EventPropagators;

/***/ }),
/* 73 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(66);
	
	var EventPluginRegistry = __webpack_require__(74);
	var EventPluginUtils = __webpack_require__(75);
	var ReactErrorUtils = __webpack_require__(76);
	
	var accumulateInto = __webpack_require__(77);
	var forEachAccumulated = __webpack_require__(78);
	var invariant = __webpack_require__(35);
	
	/**
	 * Internal store for event listeners
	 */
	var listenerBank = {};
	
	/**
	 * Internal queue of events that have accumulated their dispatches and are
	 * waiting to have their dispatches executed.
	 */
	var eventQueue = null;
	
	/**
	 * Dispatches an event and releases it back into the pool, unless persistent.
	 *
	 * @param {?object} event Synthetic event to be dispatched.
	 * @param {boolean} simulated If the event is simulated (changes exn behavior)
	 * @private
	 */
	var executeDispatchesAndRelease = function (event, simulated) {
	  if (event) {
	    EventPluginUtils.executeDispatchesInOrder(event, simulated);
	
	    if (!event.isPersistent()) {
	      event.constructor.release(event);
	    }
	  }
	};
	var executeDispatchesAndReleaseSimulated = function (e) {
	  return executeDispatchesAndRelease(e, true);
	};
	var executeDispatchesAndReleaseTopLevel = function (e) {
	  return executeDispatchesAndRelease(e, false);
	};
	
	var getDictionaryKey = function (inst) {
	  // Prevents V8 performance issue:
	  // https://github.com/facebook/react/pull/7232
	  return '.' + inst._rootNodeID;
	};
	
	function isInteractive(tag) {
	  return tag === 'button' || tag === 'input' || tag === 'select' || tag === 'textarea';
	}
	
	function shouldPreventMouseEvent(name, type, props) {
	  switch (name) {
	    case 'onClick':
	    case 'onClickCapture':
	    case 'onDoubleClick':
	    case 'onDoubleClickCapture':
	    case 'onMouseDown':
	    case 'onMouseDownCapture':
	    case 'onMouseMove':
	    case 'onMouseMoveCapture':
	    case 'onMouseUp':
	    case 'onMouseUpCapture':
	      return !!(props.disabled && isInteractive(type));
	    default:
	      return false;
	  }
	}
	
	/**
	 * This is a unified interface for event plugins to be installed and configured.
	 *
	 * Event plugins can implement the following properties:
	 *
	 *   `extractEvents` {function(string, DOMEventTarget, string, object): *}
	 *     Required. When a top-level event is fired, this method is expected to
	 *     extract synthetic events that will in turn be queued and dispatched.
	 *
	 *   `eventTypes` {object}
	 *     Optional, plugins that fire events must publish a mapping of registration
	 *     names that are used to register listeners. Values of this mapping must
	 *     be objects that contain `registrationName` or `phasedRegistrationNames`.
	 *
	 *   `executeDispatch` {function(object, function, string)}
	 *     Optional, allows plugins to override how an event gets dispatched. By
	 *     default, the listener is simply invoked.
	 *
	 * Each plugin that is injected into `EventsPluginHub` is immediately operable.
	 *
	 * @public
	 */
	var EventPluginHub = {
	  /**
	   * Methods for injecting dependencies.
	   */
	  injection: {
	    /**
	     * @param {array} InjectedEventPluginOrder
	     * @public
	     */
	    injectEventPluginOrder: EventPluginRegistry.injectEventPluginOrder,
	
	    /**
	     * @param {object} injectedNamesToPlugins Map from names to plugin modules.
	     */
	    injectEventPluginsByName: EventPluginRegistry.injectEventPluginsByName
	  },
	
	  /**
	   * Stores `listener` at `listenerBank[registrationName][key]`. Is idempotent.
	   *
	   * @param {object} inst The instance, which is the source of events.
	   * @param {string} registrationName Name of listener (e.g. `onClick`).
	   * @param {function} listener The callback to store.
	   */
	  putListener: function (inst, registrationName, listener) {
	    !(typeof listener === 'function') ?  true ? invariant(false, 'Expected %s listener to be a function, instead got type %s', registrationName, typeof listener) : _prodInvariant('94', registrationName, typeof listener) : void 0;
	
	    var key = getDictionaryKey(inst);
	    var bankForRegistrationName = listenerBank[registrationName] || (listenerBank[registrationName] = {});
	    bankForRegistrationName[key] = listener;
	
	    var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];
	    if (PluginModule && PluginModule.didPutListener) {
	      PluginModule.didPutListener(inst, registrationName, listener);
	    }
	  },
	
	  /**
	   * @param {object} inst The instance, which is the source of events.
	   * @param {string} registrationName Name of listener (e.g. `onClick`).
	   * @return {?function} The stored callback.
	   */
	  getListener: function (inst, registrationName) {
	    // TODO: shouldPreventMouseEvent is DOM-specific and definitely should not
	    // live here; needs to be moved to a better place soon
	    var bankForRegistrationName = listenerBank[registrationName];
	    if (shouldPreventMouseEvent(registrationName, inst._currentElement.type, inst._currentElement.props)) {
	      return null;
	    }
	    var key = getDictionaryKey(inst);
	    return bankForRegistrationName && bankForRegistrationName[key];
	  },
	
	  /**
	   * Deletes a listener from the registration bank.
	   *
	   * @param {object} inst The instance, which is the source of events.
	   * @param {string} registrationName Name of listener (e.g. `onClick`).
	   */
	  deleteListener: function (inst, registrationName) {
	    var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];
	    if (PluginModule && PluginModule.willDeleteListener) {
	      PluginModule.willDeleteListener(inst, registrationName);
	    }
	
	    var bankForRegistrationName = listenerBank[registrationName];
	    // TODO: This should never be null -- when is it?
	    if (bankForRegistrationName) {
	      var key = getDictionaryKey(inst);
	      delete bankForRegistrationName[key];
	    }
	  },
	
	  /**
	   * Deletes all listeners for the DOM element with the supplied ID.
	   *
	   * @param {object} inst The instance, which is the source of events.
	   */
	  deleteAllListeners: function (inst) {
	    var key = getDictionaryKey(inst);
	    for (var registrationName in listenerBank) {
	      if (!listenerBank.hasOwnProperty(registrationName)) {
	        continue;
	      }
	
	      if (!listenerBank[registrationName][key]) {
	        continue;
	      }
	
	      var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];
	      if (PluginModule && PluginModule.willDeleteListener) {
	        PluginModule.willDeleteListener(inst, registrationName);
	      }
	
	      delete listenerBank[registrationName][key];
	    }
	  },
	
	  /**
	   * Allows registered plugins an opportunity to extract events from top-level
	   * native browser events.
	   *
	   * @return {*} An accumulation of synthetic events.
	   * @internal
	   */
	  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	    var events;
	    var plugins = EventPluginRegistry.plugins;
	    for (var i = 0; i < plugins.length; i++) {
	      // Not every plugin in the ordering may be loaded at runtime.
	      var possiblePlugin = plugins[i];
	      if (possiblePlugin) {
	        var extractedEvents = possiblePlugin.extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget);
	        if (extractedEvents) {
	          events = accumulateInto(events, extractedEvents);
	        }
	      }
	    }
	    return events;
	  },
	
	  /**
	   * Enqueues a synthetic event that should be dispatched when
	   * `processEventQueue` is invoked.
	   *
	   * @param {*} events An accumulation of synthetic events.
	   * @internal
	   */
	  enqueueEvents: function (events) {
	    if (events) {
	      eventQueue = accumulateInto(eventQueue, events);
	    }
	  },
	
	  /**
	   * Dispatches all synthetic events on the event queue.
	   *
	   * @internal
	   */
	  processEventQueue: function (simulated) {
	    // Set `eventQueue` to null before processing it so that we can tell if more
	    // events get enqueued while processing.
	    var processingEventQueue = eventQueue;
	    eventQueue = null;
	    if (simulated) {
	      forEachAccumulated(processingEventQueue, executeDispatchesAndReleaseSimulated);
	    } else {
	      forEachAccumulated(processingEventQueue, executeDispatchesAndReleaseTopLevel);
	    }
	    !!eventQueue ?  true ? invariant(false, 'processEventQueue(): Additional events were enqueued while processing an event queue. Support for this has not yet been implemented.') : _prodInvariant('95') : void 0;
	    // This would be a good time to rethrow if any of the event handlers threw.
	    ReactErrorUtils.rethrowCaughtError();
	  },
	
	  /**
	   * These are needed for tests only. Do not use!
	   */
	  __purge: function () {
	    listenerBank = {};
	  },
	
	  __getListenerBank: function () {
	    return listenerBank;
	  }
	};
	
	module.exports = EventPluginHub;

/***/ }),
/* 74 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * 
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(66);
	
	var invariant = __webpack_require__(35);
	
	/**
	 * Injectable ordering of event plugins.
	 */
	var eventPluginOrder = null;
	
	/**
	 * Injectable mapping from names to event plugin modules.
	 */
	var namesToPlugins = {};
	
	/**
	 * Recomputes the plugin list using the injected plugins and plugin ordering.
	 *
	 * @private
	 */
	function recomputePluginOrdering() {
	  if (!eventPluginOrder) {
	    // Wait until an `eventPluginOrder` is injected.
	    return;
	  }
	  for (var pluginName in namesToPlugins) {
	    var pluginModule = namesToPlugins[pluginName];
	    var pluginIndex = eventPluginOrder.indexOf(pluginName);
	    !(pluginIndex > -1) ?  true ? invariant(false, 'EventPluginRegistry: Cannot inject event plugins that do not exist in the plugin ordering, `%s`.', pluginName) : _prodInvariant('96', pluginName) : void 0;
	    if (EventPluginRegistry.plugins[pluginIndex]) {
	      continue;
	    }
	    !pluginModule.extractEvents ?  true ? invariant(false, 'EventPluginRegistry: Event plugins must implement an `extractEvents` method, but `%s` does not.', pluginName) : _prodInvariant('97', pluginName) : void 0;
	    EventPluginRegistry.plugins[pluginIndex] = pluginModule;
	    var publishedEvents = pluginModule.eventTypes;
	    for (var eventName in publishedEvents) {
	      !publishEventForPlugin(publishedEvents[eventName], pluginModule, eventName) ?  true ? invariant(false, 'EventPluginRegistry: Failed to publish event `%s` for plugin `%s`.', eventName, pluginName) : _prodInvariant('98', eventName, pluginName) : void 0;
	    }
	  }
	}
	
	/**
	 * Publishes an event so that it can be dispatched by the supplied plugin.
	 *
	 * @param {object} dispatchConfig Dispatch configuration for the event.
	 * @param {object} PluginModule Plugin publishing the event.
	 * @return {boolean} True if the event was successfully published.
	 * @private
	 */
	function publishEventForPlugin(dispatchConfig, pluginModule, eventName) {
	  !!EventPluginRegistry.eventNameDispatchConfigs.hasOwnProperty(eventName) ?  true ? invariant(false, 'EventPluginHub: More than one plugin attempted to publish the same event name, `%s`.', eventName) : _prodInvariant('99', eventName) : void 0;
	  EventPluginRegistry.eventNameDispatchConfigs[eventName] = dispatchConfig;
	
	  var phasedRegistrationNames = dispatchConfig.phasedRegistrationNames;
	  if (phasedRegistrationNames) {
	    for (var phaseName in phasedRegistrationNames) {
	      if (phasedRegistrationNames.hasOwnProperty(phaseName)) {
	        var phasedRegistrationName = phasedRegistrationNames[phaseName];
	        publishRegistrationName(phasedRegistrationName, pluginModule, eventName);
	      }
	    }
	    return true;
	  } else if (dispatchConfig.registrationName) {
	    publishRegistrationName(dispatchConfig.registrationName, pluginModule, eventName);
	    return true;
	  }
	  return false;
	}
	
	/**
	 * Publishes a registration name that is used to identify dispatched events and
	 * can be used with `EventPluginHub.putListener` to register listeners.
	 *
	 * @param {string} registrationName Registration name to add.
	 * @param {object} PluginModule Plugin publishing the event.
	 * @private
	 */
	function publishRegistrationName(registrationName, pluginModule, eventName) {
	  !!EventPluginRegistry.registrationNameModules[registrationName] ?  true ? invariant(false, 'EventPluginHub: More than one plugin attempted to publish the same registration name, `%s`.', registrationName) : _prodInvariant('100', registrationName) : void 0;
	  EventPluginRegistry.registrationNameModules[registrationName] = pluginModule;
	  EventPluginRegistry.registrationNameDependencies[registrationName] = pluginModule.eventTypes[eventName].dependencies;
	
	  if (true) {
	    var lowerCasedName = registrationName.toLowerCase();
	    EventPluginRegistry.possibleRegistrationNames[lowerCasedName] = registrationName;
	
	    if (registrationName === 'onDoubleClick') {
	      EventPluginRegistry.possibleRegistrationNames.ondblclick = registrationName;
	    }
	  }
	}
	
	/**
	 * Registers plugins so that they can extract and dispatch events.
	 *
	 * @see {EventPluginHub}
	 */
	var EventPluginRegistry = {
	  /**
	   * Ordered list of injected plugins.
	   */
	  plugins: [],
	
	  /**
	   * Mapping from event name to dispatch config
	   */
	  eventNameDispatchConfigs: {},
	
	  /**
	   * Mapping from registration name to plugin module
	   */
	  registrationNameModules: {},
	
	  /**
	   * Mapping from registration name to event name
	   */
	  registrationNameDependencies: {},
	
	  /**
	   * Mapping from lowercase registration names to the properly cased version,
	   * used to warn in the case of missing event handlers. Available
	   * only in __DEV__.
	   * @type {Object}
	   */
	  possibleRegistrationNames:  true ? {} : null,
	  // Trust the developer to only use possibleRegistrationNames in __DEV__
	
	  /**
	   * Injects an ordering of plugins (by plugin name). This allows the ordering
	   * to be decoupled from injection of the actual plugins so that ordering is
	   * always deterministic regardless of packaging, on-the-fly injection, etc.
	   *
	   * @param {array} InjectedEventPluginOrder
	   * @internal
	   * @see {EventPluginHub.injection.injectEventPluginOrder}
	   */
	  injectEventPluginOrder: function (injectedEventPluginOrder) {
	    !!eventPluginOrder ?  true ? invariant(false, 'EventPluginRegistry: Cannot inject event plugin ordering more than once. You are likely trying to load more than one copy of React.') : _prodInvariant('101') : void 0;
	    // Clone the ordering so it cannot be dynamically mutated.
	    eventPluginOrder = Array.prototype.slice.call(injectedEventPluginOrder);
	    recomputePluginOrdering();
	  },
	
	  /**
	   * Injects plugins to be used by `EventPluginHub`. The plugin names must be
	   * in the ordering injected by `injectEventPluginOrder`.
	   *
	   * Plugins can be injected as part of page initialization or on-the-fly.
	   *
	   * @param {object} injectedNamesToPlugins Map from names to plugin modules.
	   * @internal
	   * @see {EventPluginHub.injection.injectEventPluginsByName}
	   */
	  injectEventPluginsByName: function (injectedNamesToPlugins) {
	    var isOrderingDirty = false;
	    for (var pluginName in injectedNamesToPlugins) {
	      if (!injectedNamesToPlugins.hasOwnProperty(pluginName)) {
	        continue;
	      }
	      var pluginModule = injectedNamesToPlugins[pluginName];
	      if (!namesToPlugins.hasOwnProperty(pluginName) || namesToPlugins[pluginName] !== pluginModule) {
	        !!namesToPlugins[pluginName] ?  true ? invariant(false, 'EventPluginRegistry: Cannot inject two different event plugins using the same name, `%s`.', pluginName) : _prodInvariant('102', pluginName) : void 0;
	        namesToPlugins[pluginName] = pluginModule;
	        isOrderingDirty = true;
	      }
	    }
	    if (isOrderingDirty) {
	      recomputePluginOrdering();
	    }
	  },
	
	  /**
	   * Looks up the plugin for the supplied event.
	   *
	   * @param {object} event A synthetic event.
	   * @return {?object} The plugin that created the supplied event.
	   * @internal
	   */
	  getPluginModuleForEvent: function (event) {
	    var dispatchConfig = event.dispatchConfig;
	    if (dispatchConfig.registrationName) {
	      return EventPluginRegistry.registrationNameModules[dispatchConfig.registrationName] || null;
	    }
	    if (dispatchConfig.phasedRegistrationNames !== undefined) {
	      // pulling phasedRegistrationNames out of dispatchConfig helps Flow see
	      // that it is not undefined.
	      var phasedRegistrationNames = dispatchConfig.phasedRegistrationNames;
	
	      for (var phase in phasedRegistrationNames) {
	        if (!phasedRegistrationNames.hasOwnProperty(phase)) {
	          continue;
	        }
	        var pluginModule = EventPluginRegistry.registrationNameModules[phasedRegistrationNames[phase]];
	        if (pluginModule) {
	          return pluginModule;
	        }
	      }
	    }
	    return null;
	  },
	
	  /**
	   * Exposed for unit testing.
	   * @private
	   */
	  _resetEventPlugins: function () {
	    eventPluginOrder = null;
	    for (var pluginName in namesToPlugins) {
	      if (namesToPlugins.hasOwnProperty(pluginName)) {
	        delete namesToPlugins[pluginName];
	      }
	    }
	    EventPluginRegistry.plugins.length = 0;
	
	    var eventNameDispatchConfigs = EventPluginRegistry.eventNameDispatchConfigs;
	    for (var eventName in eventNameDispatchConfigs) {
	      if (eventNameDispatchConfigs.hasOwnProperty(eventName)) {
	        delete eventNameDispatchConfigs[eventName];
	      }
	    }
	
	    var registrationNameModules = EventPluginRegistry.registrationNameModules;
	    for (var registrationName in registrationNameModules) {
	      if (registrationNameModules.hasOwnProperty(registrationName)) {
	        delete registrationNameModules[registrationName];
	      }
	    }
	
	    if (true) {
	      var possibleRegistrationNames = EventPluginRegistry.possibleRegistrationNames;
	      for (var lowerCasedName in possibleRegistrationNames) {
	        if (possibleRegistrationNames.hasOwnProperty(lowerCasedName)) {
	          delete possibleRegistrationNames[lowerCasedName];
	        }
	      }
	    }
	  }
	};
	
	module.exports = EventPluginRegistry;

/***/ }),
/* 75 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(66);
	
	var ReactErrorUtils = __webpack_require__(76);
	
	var invariant = __webpack_require__(35);
	var warning = __webpack_require__(31);
	
	/**
	 * Injected dependencies:
	 */
	
	/**
	 * - `ComponentTree`: [required] Module that can convert between React instances
	 *   and actual node references.
	 */
	var ComponentTree;
	var TreeTraversal;
	var injection = {
	  injectComponentTree: function (Injected) {
	    ComponentTree = Injected;
	    if (true) {
	       true ? warning(Injected && Injected.getNodeFromInstance && Injected.getInstanceFromNode, 'EventPluginUtils.injection.injectComponentTree(...): Injected ' + 'module is missing getNodeFromInstance or getInstanceFromNode.') : void 0;
	    }
	  },
	  injectTreeTraversal: function (Injected) {
	    TreeTraversal = Injected;
	    if (true) {
	       true ? warning(Injected && Injected.isAncestor && Injected.getLowestCommonAncestor, 'EventPluginUtils.injection.injectTreeTraversal(...): Injected ' + 'module is missing isAncestor or getLowestCommonAncestor.') : void 0;
	    }
	  }
	};
	
	function isEndish(topLevelType) {
	  return topLevelType === 'topMouseUp' || topLevelType === 'topTouchEnd' || topLevelType === 'topTouchCancel';
	}
	
	function isMoveish(topLevelType) {
	  return topLevelType === 'topMouseMove' || topLevelType === 'topTouchMove';
	}
	function isStartish(topLevelType) {
	  return topLevelType === 'topMouseDown' || topLevelType === 'topTouchStart';
	}
	
	var validateEventDispatches;
	if (true) {
	  validateEventDispatches = function (event) {
	    var dispatchListeners = event._dispatchListeners;
	    var dispatchInstances = event._dispatchInstances;
	
	    var listenersIsArr = Array.isArray(dispatchListeners);
	    var listenersLen = listenersIsArr ? dispatchListeners.length : dispatchListeners ? 1 : 0;
	
	    var instancesIsArr = Array.isArray(dispatchInstances);
	    var instancesLen = instancesIsArr ? dispatchInstances.length : dispatchInstances ? 1 : 0;
	
	     true ? warning(instancesIsArr === listenersIsArr && instancesLen === listenersLen, 'EventPluginUtils: Invalid `event`.') : void 0;
	  };
	}
	
	/**
	 * Dispatch the event to the listener.
	 * @param {SyntheticEvent} event SyntheticEvent to handle
	 * @param {boolean} simulated If the event is simulated (changes exn behavior)
	 * @param {function} listener Application-level callback
	 * @param {*} inst Internal component instance
	 */
	function executeDispatch(event, simulated, listener, inst) {
	  var type = event.type || 'unknown-event';
	  event.currentTarget = EventPluginUtils.getNodeFromInstance(inst);
	  if (simulated) {
	    ReactErrorUtils.invokeGuardedCallbackWithCatch(type, listener, event);
	  } else {
	    ReactErrorUtils.invokeGuardedCallback(type, listener, event);
	  }
	  event.currentTarget = null;
	}
	
	/**
	 * Standard/simple iteration through an event's collected dispatches.
	 */
	function executeDispatchesInOrder(event, simulated) {
	  var dispatchListeners = event._dispatchListeners;
	  var dispatchInstances = event._dispatchInstances;
	  if (true) {
	    validateEventDispatches(event);
	  }
	  if (Array.isArray(dispatchListeners)) {
	    for (var i = 0; i < dispatchListeners.length; i++) {
	      if (event.isPropagationStopped()) {
	        break;
	      }
	      // Listeners and Instances are two parallel arrays that are always in sync.
	      executeDispatch(event, simulated, dispatchListeners[i], dispatchInstances[i]);
	    }
	  } else if (dispatchListeners) {
	    executeDispatch(event, simulated, dispatchListeners, dispatchInstances);
	  }
	  event._dispatchListeners = null;
	  event._dispatchInstances = null;
	}
	
	/**
	 * Standard/simple iteration through an event's collected dispatches, but stops
	 * at the first dispatch execution returning true, and returns that id.
	 *
	 * @return {?string} id of the first dispatch execution who's listener returns
	 * true, or null if no listener returned true.
	 */
	function executeDispatchesInOrderStopAtTrueImpl(event) {
	  var dispatchListeners = event._dispatchListeners;
	  var dispatchInstances = event._dispatchInstances;
	  if (true) {
	    validateEventDispatches(event);
	  }
	  if (Array.isArray(dispatchListeners)) {
	    for (var i = 0; i < dispatchListeners.length; i++) {
	      if (event.isPropagationStopped()) {
	        break;
	      }
	      // Listeners and Instances are two parallel arrays that are always in sync.
	      if (dispatchListeners[i](event, dispatchInstances[i])) {
	        return dispatchInstances[i];
	      }
	    }
	  } else if (dispatchListeners) {
	    if (dispatchListeners(event, dispatchInstances)) {
	      return dispatchInstances;
	    }
	  }
	  return null;
	}
	
	/**
	 * @see executeDispatchesInOrderStopAtTrueImpl
	 */
	function executeDispatchesInOrderStopAtTrue(event) {
	  var ret = executeDispatchesInOrderStopAtTrueImpl(event);
	  event._dispatchInstances = null;
	  event._dispatchListeners = null;
	  return ret;
	}
	
	/**
	 * Execution of a "direct" dispatch - there must be at most one dispatch
	 * accumulated on the event or it is considered an error. It doesn't really make
	 * sense for an event with multiple dispatches (bubbled) to keep track of the
	 * return values at each dispatch execution, but it does tend to make sense when
	 * dealing with "direct" dispatches.
	 *
	 * @return {*} The return value of executing the single dispatch.
	 */
	function executeDirectDispatch(event) {
	  if (true) {
	    validateEventDispatches(event);
	  }
	  var dispatchListener = event._dispatchListeners;
	  var dispatchInstance = event._dispatchInstances;
	  !!Array.isArray(dispatchListener) ?  true ? invariant(false, 'executeDirectDispatch(...): Invalid `event`.') : _prodInvariant('103') : void 0;
	  event.currentTarget = dispatchListener ? EventPluginUtils.getNodeFromInstance(dispatchInstance) : null;
	  var res = dispatchListener ? dispatchListener(event) : null;
	  event.currentTarget = null;
	  event._dispatchListeners = null;
	  event._dispatchInstances = null;
	  return res;
	}
	
	/**
	 * @param {SyntheticEvent} event
	 * @return {boolean} True iff number of dispatches accumulated is greater than 0.
	 */
	function hasDispatches(event) {
	  return !!event._dispatchListeners;
	}
	
	/**
	 * General utilities that are useful in creating custom Event Plugins.
	 */
	var EventPluginUtils = {
	  isEndish: isEndish,
	  isMoveish: isMoveish,
	  isStartish: isStartish,
	
	  executeDirectDispatch: executeDirectDispatch,
	  executeDispatchesInOrder: executeDispatchesInOrder,
	  executeDispatchesInOrderStopAtTrue: executeDispatchesInOrderStopAtTrue,
	  hasDispatches: hasDispatches,
	
	  getInstanceFromNode: function (node) {
	    return ComponentTree.getInstanceFromNode(node);
	  },
	  getNodeFromInstance: function (node) {
	    return ComponentTree.getNodeFromInstance(node);
	  },
	  isAncestor: function (a, b) {
	    return TreeTraversal.isAncestor(a, b);
	  },
	  getLowestCommonAncestor: function (a, b) {
	    return TreeTraversal.getLowestCommonAncestor(a, b);
	  },
	  getParentInstance: function (inst) {
	    return TreeTraversal.getParentInstance(inst);
	  },
	  traverseTwoPhase: function (target, fn, arg) {
	    return TreeTraversal.traverseTwoPhase(target, fn, arg);
	  },
	  traverseEnterLeave: function (from, to, fn, argFrom, argTo) {
	    return TreeTraversal.traverseEnterLeave(from, to, fn, argFrom, argTo);
	  },
	
	  injection: injection
	};
	
	module.exports = EventPluginUtils;

/***/ }),
/* 76 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * 
	 */
	
	'use strict';
	
	var caughtError = null;
	
	/**
	 * Call a function while guarding against errors that happens within it.
	 *
	 * @param {String} name of the guard to use for logging or debugging
	 * @param {Function} func The function to invoke
	 * @param {*} a First argument
	 * @param {*} b Second argument
	 */
	function invokeGuardedCallback(name, func, a) {
	  try {
	    func(a);
	  } catch (x) {
	    if (caughtError === null) {
	      caughtError = x;
	    }
	  }
	}
	
	var ReactErrorUtils = {
	  invokeGuardedCallback: invokeGuardedCallback,
	
	  /**
	   * Invoked by ReactTestUtils.Simulate so that any errors thrown by the event
	   * handler are sure to be rethrown by rethrowCaughtError.
	   */
	  invokeGuardedCallbackWithCatch: invokeGuardedCallback,
	
	  /**
	   * During execution of guarded functions we will capture the first error which
	   * we will rethrow to be handled by the top level error handler.
	   */
	  rethrowCaughtError: function () {
	    if (caughtError) {
	      var error = caughtError;
	      caughtError = null;
	      throw error;
	    }
	  }
	};
	
	if (true) {
	  /**
	   * To help development we can get better devtools integration by simulating a
	   * real browser event.
	   */
	  if (typeof window !== 'undefined' && typeof window.dispatchEvent === 'function' && typeof document !== 'undefined' && typeof document.createEvent === 'function') {
	    var fakeNode = document.createElement('react');
	    ReactErrorUtils.invokeGuardedCallback = function (name, func, a) {
	      var boundFunc = function () {
	        func(a);
	      };
	      var evtType = 'react-' + name;
	      fakeNode.addEventListener(evtType, boundFunc, false);
	      var evt = document.createEvent('Event');
	      evt.initEvent(evtType, false, false);
	      fakeNode.dispatchEvent(evt);
	      fakeNode.removeEventListener(evtType, boundFunc, false);
	    };
	  }
	}
	
	module.exports = ReactErrorUtils;

/***/ }),
/* 77 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2014-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * 
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(66);
	
	var invariant = __webpack_require__(35);
	
	/**
	 * Accumulates items that must not be null or undefined into the first one. This
	 * is used to conserve memory by avoiding array allocations, and thus sacrifices
	 * API cleanness. Since `current` can be null before being passed in and not
	 * null after this function, make sure to assign it back to `current`:
	 *
	 * `a = accumulateInto(a, b);`
	 *
	 * This API should be sparingly used. Try `accumulate` for something cleaner.
	 *
	 * @return {*|array<*>} An accumulation of items.
	 */
	
	function accumulateInto(current, next) {
	  !(next != null) ?  true ? invariant(false, 'accumulateInto(...): Accumulated items must not be null or undefined.') : _prodInvariant('30') : void 0;
	
	  if (current == null) {
	    return next;
	  }
	
	  // Both are not empty. Warning: Never call x.concat(y) when you are not
	  // certain that x is an Array (x could be a string with concat method).
	  if (Array.isArray(current)) {
	    if (Array.isArray(next)) {
	      current.push.apply(current, next);
	      return current;
	    }
	    current.push(next);
	    return current;
	  }
	
	  if (Array.isArray(next)) {
	    // A bit too dangerous to mutate `next`.
	    return [current].concat(next);
	  }
	
	  return [current, next];
	}
	
	module.exports = accumulateInto;

/***/ }),
/* 78 */
/***/ (function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * 
	 */
	
	'use strict';
	
	/**
	 * @param {array} arr an "accumulation" of items which is either an Array or
	 * a single item. Useful when paired with the `accumulate` module. This is a
	 * simple utility that allows us to reason about a collection of items, but
	 * handling the case when there is exactly one item (and we do not need to
	 * allocate an array).
	 */
	
	function forEachAccumulated(arr, cb, scope) {
	  if (Array.isArray(arr)) {
	    arr.forEach(cb, scope);
	  } else if (arr) {
	    cb.call(scope, arr);
	  }
	}
	
	module.exports = forEachAccumulated;

/***/ }),
/* 79 */
/***/ (function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */
	
	'use strict';
	
	var canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);
	
	/**
	 * Simple, lightweight module assisting with the detection and context of
	 * Worker. Helps avoid circular dependencies and allows code to reason about
	 * whether or not they are in a Worker, even if they never include the main
	 * `ReactWorker` dependency.
	 */
	var ExecutionEnvironment = {
	
	  canUseDOM: canUseDOM,
	
	  canUseWorkers: typeof Worker !== 'undefined',
	
	  canUseEventListeners: canUseDOM && !!(window.addEventListener || window.attachEvent),
	
	  canUseViewport: canUseDOM && !!window.screen,
	
	  isInWorker: !canUseDOM // For now, this is true - might change in the future.
	
	};
	
	module.exports = ExecutionEnvironment;

/***/ }),
/* 80 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */
	
	'use strict';
	
	var _assign = __webpack_require__(27);
	
	var PooledClass = __webpack_require__(81);
	
	var getTextContentAccessor = __webpack_require__(82);
	
	/**
	 * This helper class stores information about text content of a target node,
	 * allowing comparison of content before and after a given event.
	 *
	 * Identify the node where selection currently begins, then observe
	 * both its text content and its current position in the DOM. Since the
	 * browser may natively replace the target node during composition, we can
	 * use its position to find its replacement.
	 *
	 * @param {DOMEventTarget} root
	 */
	function FallbackCompositionState(root) {
	  this._root = root;
	  this._startText = this.getText();
	  this._fallbackText = null;
	}
	
	_assign(FallbackCompositionState.prototype, {
	  destructor: function () {
	    this._root = null;
	    this._startText = null;
	    this._fallbackText = null;
	  },
	
	  /**
	   * Get current text of input.
	   *
	   * @return {string}
	   */
	  getText: function () {
	    if ('value' in this._root) {
	      return this._root.value;
	    }
	    return this._root[getTextContentAccessor()];
	  },
	
	  /**
	   * Determine the differing substring between the initially stored
	   * text content and the current content.
	   *
	   * @return {string}
	   */
	  getData: function () {
	    if (this._fallbackText) {
	      return this._fallbackText;
	    }
	
	    var start;
	    var startValue = this._startText;
	    var startLength = startValue.length;
	    var end;
	    var endValue = this.getText();
	    var endLength = endValue.length;
	
	    for (start = 0; start < startLength; start++) {
	      if (startValue[start] !== endValue[start]) {
	        break;
	      }
	    }
	
	    var minEnd = startLength - start;
	    for (end = 1; end <= minEnd; end++) {
	      if (startValue[startLength - end] !== endValue[endLength - end]) {
	        break;
	      }
	    }
	
	    var sliceTail = end > 1 ? 1 - end : undefined;
	    this._fallbackText = endValue.slice(start, sliceTail);
	    return this._fallbackText;
	  }
	});
	
	PooledClass.addPoolingTo(FallbackCompositionState);
	
	module.exports = FallbackCompositionState;

/***/ }),
/* 81 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * 
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(66);
	
	var invariant = __webpack_require__(35);
	
	/**
	 * Static poolers. Several custom versions for each potential number of
	 * arguments. A completely generic pooler is easy to implement, but would
	 * require accessing the `arguments` object. In each of these, `this` refers to
	 * the Class itself, not an instance. If any others are needed, simply add them
	 * here, or in their own files.
	 */
	var oneArgumentPooler = function (copyFieldsFrom) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, copyFieldsFrom);
	    return instance;
	  } else {
	    return new Klass(copyFieldsFrom);
	  }
	};
	
	var twoArgumentPooler = function (a1, a2) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, a1, a2);
	    return instance;
	  } else {
	    return new Klass(a1, a2);
	  }
	};
	
	var threeArgumentPooler = function (a1, a2, a3) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, a1, a2, a3);
	    return instance;
	  } else {
	    return new Klass(a1, a2, a3);
	  }
	};
	
	var fourArgumentPooler = function (a1, a2, a3, a4) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, a1, a2, a3, a4);
	    return instance;
	  } else {
	    return new Klass(a1, a2, a3, a4);
	  }
	};
	
	var standardReleaser = function (instance) {
	  var Klass = this;
	  !(instance instanceof Klass) ?  true ? invariant(false, 'Trying to release an instance into a pool of a different type.') : _prodInvariant('25') : void 0;
	  instance.destructor();
	  if (Klass.instancePool.length < Klass.poolSize) {
	    Klass.instancePool.push(instance);
	  }
	};
	
	var DEFAULT_POOL_SIZE = 10;
	var DEFAULT_POOLER = oneArgumentPooler;
	
	/**
	 * Augments `CopyConstructor` to be a poolable class, augmenting only the class
	 * itself (statically) not adding any prototypical fields. Any CopyConstructor
	 * you give this may have a `poolSize` property, and will look for a
	 * prototypical `destructor` on instances.
	 *
	 * @param {Function} CopyConstructor Constructor that can be used to reset.
	 * @param {Function} pooler Customizable pooler.
	 */
	var addPoolingTo = function (CopyConstructor, pooler) {
	  // Casting as any so that flow ignores the actual implementation and trusts
	  // it to match the type we declared
	  var NewKlass = CopyConstructor;
	  NewKlass.instancePool = [];
	  NewKlass.getPooled = pooler || DEFAULT_POOLER;
	  if (!NewKlass.poolSize) {
	    NewKlass.poolSize = DEFAULT_POOL_SIZE;
	  }
	  NewKlass.release = standardReleaser;
	  return NewKlass;
	};
	
	var PooledClass = {
	  addPoolingTo: addPoolingTo,
	  oneArgumentPooler: oneArgumentPooler,
	  twoArgumentPooler: twoArgumentPooler,
	  threeArgumentPooler: threeArgumentPooler,
	  fourArgumentPooler: fourArgumentPooler
	};
	
	module.exports = PooledClass;

/***/ }),
/* 82 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */
	
	'use strict';
	
	var ExecutionEnvironment = __webpack_require__(79);
	
	var contentKey = null;
	
	/**
	 * Gets the key used to access text content on a DOM node.
	 *
	 * @return {?string} Key used to access text content.
	 * @internal
	 */
	function getTextContentAccessor() {
	  if (!contentKey && ExecutionEnvironment.canUseDOM) {
	    // Prefer textContent to innerText because many browsers support both but
	    // SVG <text> elements don't support innerText even when <div> does.
	    contentKey = 'textContent' in document.documentElement ? 'textContent' : 'innerText';
	  }
	  return contentKey;
	}
	
	module.exports = getTextContentAccessor;

/***/ }),
/* 83 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */
	
	'use strict';
	
	var SyntheticEvent = __webpack_require__(84);
	
	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/#events-compositionevents
	 */
	var CompositionEventInterface = {
	  data: null
	};
	
	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticCompositionEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}
	
	SyntheticEvent.augmentClass(SyntheticCompositionEvent, CompositionEventInterface);
	
	module.exports = SyntheticCompositionEvent;

/***/ }),
/* 84 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */
	
	'use strict';
	
	var _assign = __webpack_require__(27);
	
	var PooledClass = __webpack_require__(81);
	
	var emptyFunction = __webpack_require__(32);
	var warning = __webpack_require__(31);
	
	var didWarnForAddedNewProperty = false;
	var isProxySupported = typeof Proxy === 'function';
	
	var shouldBeReleasedProperties = ['dispatchConfig', '_targetInst', 'nativeEvent', 'isDefaultPrevented', 'isPropagationStopped', '_dispatchListeners', '_dispatchInstances'];
	
	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var EventInterface = {
	  type: null,
	  target: null,
	  // currentTarget is set when dispatching; no use in copying it here
	  currentTarget: emptyFunction.thatReturnsNull,
	  eventPhase: null,
	  bubbles: null,
	  cancelable: null,
	  timeStamp: function (event) {
	    return event.timeStamp || Date.now();
	  },
	  defaultPrevented: null,
	  isTrusted: null
	};
	
	/**
	 * Synthetic events are dispatched by event plugins, typically in response to a
	 * top-level event delegation handler.
	 *
	 * These systems should generally use pooling to reduce the frequency of garbage
	 * collection. The system should check `isPersistent` to determine whether the
	 * event should be released into the pool after being dispatched. Users that
	 * need a persisted event should invoke `persist`.
	 *
	 * Synthetic events (and subclasses) implement the DOM Level 3 Events API by
	 * normalizing browser quirks. Subclasses do not necessarily have to implement a
	 * DOM interface; custom application-specific events can also subclass this.
	 *
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {*} targetInst Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @param {DOMEventTarget} nativeEventTarget Target node.
	 */
	function SyntheticEvent(dispatchConfig, targetInst, nativeEvent, nativeEventTarget) {
	  if (true) {
	    // these have a getter/setter for warnings
	    delete this.nativeEvent;
	    delete this.preventDefault;
	    delete this.stopPropagation;
	  }
	
	  this.dispatchConfig = dispatchConfig;
	  this._targetInst = targetInst;
	  this.nativeEvent = nativeEvent;
	
	  var Interface = this.constructor.Interface;
	  for (var propName in Interface) {
	    if (!Interface.hasOwnProperty(propName)) {
	      continue;
	    }
	    if (true) {
	      delete this[propName]; // this has a getter/setter for warnings
	    }
	    var normalize = Interface[propName];
	    if (normalize) {
	      this[propName] = normalize(nativeEvent);
	    } else {
	      if (propName === 'target') {
	        this.target = nativeEventTarget;
	      } else {
	        this[propName] = nativeEvent[propName];
	      }
	    }
	  }
	
	  var defaultPrevented = nativeEvent.defaultPrevented != null ? nativeEvent.defaultPrevented : nativeEvent.returnValue === false;
	  if (defaultPrevented) {
	    this.isDefaultPrevented = emptyFunction.thatReturnsTrue;
	  } else {
	    this.isDefaultPrevented = emptyFunction.thatReturnsFalse;
	  }
	  this.isPropagationStopped = emptyFunction.thatReturnsFalse;
	  return this;
	}
	
	_assign(SyntheticEvent.prototype, {
	  preventDefault: function () {
	    this.defaultPrevented = true;
	    var event = this.nativeEvent;
	    if (!event) {
	      return;
	    }
	
	    if (event.preventDefault) {
	      event.preventDefault();
	      // eslint-disable-next-line valid-typeof
	    } else if (typeof event.returnValue !== 'unknown') {
	      event.returnValue = false;
	    }
	    this.isDefaultPrevented = emptyFunction.thatReturnsTrue;
	  },
	
	  stopPropagation: function () {
	    var event = this.nativeEvent;
	    if (!event) {
	      return;
	    }
	
	    if (event.stopPropagation) {
	      event.stopPropagation();
	      // eslint-disable-next-line valid-typeof
	    } else if (typeof event.cancelBubble !== 'unknown') {
	      // The ChangeEventPlugin registers a "propertychange" event for
	      // IE. This event does not support bubbling or cancelling, and
	      // any references to cancelBubble throw "Member not found".  A
	      // typeof check of "unknown" circumvents this issue (and is also
	      // IE specific).
	      event.cancelBubble = true;
	    }
	
	    this.isPropagationStopped = emptyFunction.thatReturnsTrue;
	  },
	
	  /**
	   * We release all dispatched `SyntheticEvent`s after each event loop, adding
	   * them back into the pool. This allows a way to hold onto a reference that
	   * won't be added back into the pool.
	   */
	  persist: function () {
	    this.isPersistent = emptyFunction.thatReturnsTrue;
	  },
	
	  /**
	   * Checks if this event should be released back into the pool.
	   *
	   * @return {boolean} True if this should not be released, false otherwise.
	   */
	  isPersistent: emptyFunction.thatReturnsFalse,
	
	  /**
	   * `PooledClass` looks for `destructor` on each instance it releases.
	   */
	  destructor: function () {
	    var Interface = this.constructor.Interface;
	    for (var propName in Interface) {
	      if (true) {
	        Object.defineProperty(this, propName, getPooledWarningPropertyDefinition(propName, Interface[propName]));
	      } else {
	        this[propName] = null;
	      }
	    }
	    for (var i = 0; i < shouldBeReleasedProperties.length; i++) {
	      this[shouldBeReleasedProperties[i]] = null;
	    }
	    if (true) {
	      Object.defineProperty(this, 'nativeEvent', getPooledWarningPropertyDefinition('nativeEvent', null));
	      Object.defineProperty(this, 'preventDefault', getPooledWarningPropertyDefinition('preventDefault', emptyFunction));
	      Object.defineProperty(this, 'stopPropagation', getPooledWarningPropertyDefinition('stopPropagation', emptyFunction));
	    }
	  }
	});
	
	SyntheticEvent.Interface = EventInterface;
	
	/**
	 * Helper to reduce boilerplate when creating subclasses.
	 *
	 * @param {function} Class
	 * @param {?object} Interface
	 */
	SyntheticEvent.augmentClass = function (Class, Interface) {
	  var Super = this;
	
	  var E = function () {};
	  E.prototype = Super.prototype;
	  var prototype = new E();
	
	  _assign(prototype, Class.prototype);
	  Class.prototype = prototype;
	  Class.prototype.constructor = Class;
	
	  Class.Interface = _assign({}, Super.Interface, Interface);
	  Class.augmentClass = Super.augmentClass;
	
	  PooledClass.addPoolingTo(Class, PooledClass.fourArgumentPooler);
	};
	
	/** Proxying after everything set on SyntheticEvent
	  * to resolve Proxy issue on some WebKit browsers
	  * in which some Event properties are set to undefined (GH#10010)
	  */
	if (true) {
	  if (isProxySupported) {
	    /*eslint-disable no-func-assign */
	    SyntheticEvent = new Proxy(SyntheticEvent, {
	      construct: function (target, args) {
	        return this.apply(target, Object.create(target.prototype), args);
	      },
	      apply: function (constructor, that, args) {
	        return new Proxy(constructor.apply(that, args), {
	          set: function (target, prop, value) {
	            if (prop !== 'isPersistent' && !target.constructor.Interface.hasOwnProperty(prop) && shouldBeReleasedProperties.indexOf(prop) === -1) {
	               true ? warning(didWarnForAddedNewProperty || target.isPersistent(), "This synthetic event is reused for performance reasons. If you're " + "seeing this, you're adding a new property in the synthetic event object. " + 'The property is never released. See ' + 'https://fb.me/react-event-pooling for more information.') : void 0;
	              didWarnForAddedNewProperty = true;
	            }
	            target[prop] = value;
	            return true;
	          }
	        });
	      }
	    });
	    /*eslint-enable no-func-assign */
	  }
	}
	
	PooledClass.addPoolingTo(SyntheticEvent, PooledClass.fourArgumentPooler);
	
	module.exports = SyntheticEvent;
	
	/**
	  * Helper to nullify syntheticEvent instance properties when destructing
	  *
	  * @param {object} SyntheticEvent
	  * @param {String} propName
	  * @return {object} defineProperty object
	  */
	function getPooledWarningPropertyDefinition(propName, getVal) {
	  var isFunction = typeof getVal === 'function';
	  return {
	    configurable: true,
	    set: set,
	    get: get
	  };
	
	  function set(val) {
	    var action = isFunction ? 'setting the method' : 'setting the property';
	    warn(action, 'This is effectively a no-op');
	    return val;
	  }
	
	  function get() {
	    var action = isFunction ? 'accessing the method' : 'accessing the property';
	    var result = isFunction ? 'This is a no-op function' : 'This is set to null';
	    warn(action, result);
	    return getVal;
	  }
	
	  function warn(action, result) {
	    var warningCondition = false;
	     true ? warning(warningCondition, "This synthetic event is reused for performance reasons. If you're seeing this, " + "you're %s `%s` on a released/nullified synthetic event. %s. " + 'If you must keep the original synthetic event around, use event.persist(). ' + 'See https://fb.me/react-event-pooling for more information.', action, propName, result) : void 0;
	  }
	}

/***/ }),
/* 85 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */
	
	'use strict';
	
	var SyntheticEvent = __webpack_require__(84);
	
	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105
	 *      /#events-inputevents
	 */
	var InputEventInterface = {
	  data: null
	};
	
	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticInputEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}
	
	SyntheticEvent.augmentClass(SyntheticInputEvent, InputEventInterface);
	
	module.exports = SyntheticInputEvent;

/***/ }),
/* 86 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */
	
	'use strict';
	
	var EventPluginHub = __webpack_require__(73);
	var EventPropagators = __webpack_require__(72);
	var ExecutionEnvironment = __webpack_require__(79);
	var ReactDOMComponentTree = __webpack_require__(65);
	var ReactUpdates = __webpack_require__(87);
	var SyntheticEvent = __webpack_require__(84);
	
	var inputValueTracking = __webpack_require__(100);
	var getEventTarget = __webpack_require__(101);
	var isEventSupported = __webpack_require__(102);
	var isTextInputElement = __webpack_require__(103);
	
	var eventTypes = {
	  change: {
	    phasedRegistrationNames: {
	      bubbled: 'onChange',
	      captured: 'onChangeCapture'
	    },
	    dependencies: ['topBlur', 'topChange', 'topClick', 'topFocus', 'topInput', 'topKeyDown', 'topKeyUp', 'topSelectionChange']
	  }
	};
	
	function createAndAccumulateChangeEvent(inst, nativeEvent, target) {
	  var event = SyntheticEvent.getPooled(eventTypes.change, inst, nativeEvent, target);
	  event.type = 'change';
	  EventPropagators.accumulateTwoPhaseDispatches(event);
	  return event;
	}
	/**
	 * For IE shims
	 */
	var activeElement = null;
	var activeElementInst = null;
	
	/**
	 * SECTION: handle `change` event
	 */
	function shouldUseChangeEvent(elem) {
	  var nodeName = elem.nodeName && elem.nodeName.toLowerCase();
	  return nodeName === 'select' || nodeName === 'input' && elem.type === 'file';
	}
	
	var doesChangeEventBubble = false;
	if (ExecutionEnvironment.canUseDOM) {
	  // See `handleChange` comment below
	  doesChangeEventBubble = isEventSupported('change') && (!document.documentMode || document.documentMode > 8);
	}
	
	function manualDispatchChangeEvent(nativeEvent) {
	  var event = createAndAccumulateChangeEvent(activeElementInst, nativeEvent, getEventTarget(nativeEvent));
	
	  // If change and propertychange bubbled, we'd just bind to it like all the
	  // other events and have it go through ReactBrowserEventEmitter. Since it
	  // doesn't, we manually listen for the events and so we have to enqueue and
	  // process the abstract event manually.
	  //
	  // Batching is necessary here in order to ensure that all event handlers run
	  // before the next rerender (including event handlers attached to ancestor
	  // elements instead of directly on the input). Without this, controlled
	  // components don't work properly in conjunction with event bubbling because
	  // the component is rerendered and the value reverted before all the event
	  // handlers can run. See https://github.com/facebook/react/issues/708.
	  ReactUpdates.batchedUpdates(runEventInBatch, event);
	}
	
	function runEventInBatch(event) {
	  EventPluginHub.enqueueEvents(event);
	  EventPluginHub.processEventQueue(false);
	}
	
	function startWatchingForChangeEventIE8(target, targetInst) {
	  activeElement = target;
	  activeElementInst = targetInst;
	  activeElement.attachEvent('onchange', manualDispatchChangeEvent);
	}
	
	function stopWatchingForChangeEventIE8() {
	  if (!activeElement) {
	    return;
	  }
	  activeElement.detachEvent('onchange', manualDispatchChangeEvent);
	  activeElement = null;
	  activeElementInst = null;
	}
	
	function getInstIfValueChanged(targetInst, nativeEvent) {
	  var updated = inputValueTracking.updateValueIfChanged(targetInst);
	  var simulated = nativeEvent.simulated === true && ChangeEventPlugin._allowSimulatedPassThrough;
	
	  if (updated || simulated) {
	    return targetInst;
	  }
	}
	
	function getTargetInstForChangeEvent(topLevelType, targetInst) {
	  if (topLevelType === 'topChange') {
	    return targetInst;
	  }
	}
	
	function handleEventsForChangeEventIE8(topLevelType, target, targetInst) {
	  if (topLevelType === 'topFocus') {
	    // stopWatching() should be a noop here but we call it just in case we
	    // missed a blur event somehow.
	    stopWatchingForChangeEventIE8();
	    startWatchingForChangeEventIE8(target, targetInst);
	  } else if (topLevelType === 'topBlur') {
	    stopWatchingForChangeEventIE8();
	  }
	}
	
	/**
	 * SECTION: handle `input` event
	 */
	var isInputEventSupported = false;
	if (ExecutionEnvironment.canUseDOM) {
	  // IE9 claims to support the input event but fails to trigger it when
	  // deleting text, so we ignore its input events.
	
	  isInputEventSupported = isEventSupported('input') && (!document.documentMode || document.documentMode > 9);
	}
	
	/**
	 * (For IE <=9) Starts tracking propertychange events on the passed-in element
	 * and override the value property so that we can distinguish user events from
	 * value changes in JS.
	 */
	function startWatchingForValueChange(target, targetInst) {
	  activeElement = target;
	  activeElementInst = targetInst;
	  activeElement.attachEvent('onpropertychange', handlePropertyChange);
	}
	
	/**
	 * (For IE <=9) Removes the event listeners from the currently-tracked element,
	 * if any exists.
	 */
	function stopWatchingForValueChange() {
	  if (!activeElement) {
	    return;
	  }
	  activeElement.detachEvent('onpropertychange', handlePropertyChange);
	
	  activeElement = null;
	  activeElementInst = null;
	}
	
	/**
	 * (For IE <=9) Handles a propertychange event, sending a `change` event if
	 * the value of the active element has changed.
	 */
	function handlePropertyChange(nativeEvent) {
	  if (nativeEvent.propertyName !== 'value') {
	    return;
	  }
	  if (getInstIfValueChanged(activeElementInst, nativeEvent)) {
	    manualDispatchChangeEvent(nativeEvent);
	  }
	}
	
	function handleEventsForInputEventPolyfill(topLevelType, target, targetInst) {
	  if (topLevelType === 'topFocus') {
	    // In IE8, we can capture almost all .value changes by adding a
	    // propertychange handler and looking for events with propertyName
	    // equal to 'value'
	    // In IE9, propertychange fires for most input events but is buggy and
	    // doesn't fire when text is deleted, but conveniently, selectionchange
	    // appears to fire in all of the remaining cases so we catch those and
	    // forward the event if the value has changed
	    // In either case, we don't want to call the event handler if the value
	    // is changed from JS so we redefine a setter for `.value` that updates
	    // our activeElementValue variable, allowing us to ignore those changes
	    //
	    // stopWatching() should be a noop here but we call it just in case we
	    // missed a blur event somehow.
	    stopWatchingForValueChange();
	    startWatchingForValueChange(target, targetInst);
	  } else if (topLevelType === 'topBlur') {
	    stopWatchingForValueChange();
	  }
	}
	
	// For IE8 and IE9.
	function getTargetInstForInputEventPolyfill(topLevelType, targetInst, nativeEvent) {
	  if (topLevelType === 'topSelectionChange' || topLevelType === 'topKeyUp' || topLevelType === 'topKeyDown') {
	    // On the selectionchange event, the target is just document which isn't
	    // helpful for us so just check activeElement instead.
	    //
	    // 99% of the time, keydown and keyup aren't necessary. IE8 fails to fire
	    // propertychange on the first input event after setting `value` from a
	    // script and fires only keydown, keypress, keyup. Catching keyup usually
	    // gets it and catching keydown lets us fire an event for the first
	    // keystroke if user does a key repeat (it'll be a little delayed: right
	    // before the second keystroke). Other input methods (e.g., paste) seem to
	    // fire selectionchange normally.
	    return getInstIfValueChanged(activeElementInst, nativeEvent);
	  }
	}
	
	/**
	 * SECTION: handle `click` event
	 */
	function shouldUseClickEvent(elem) {
	  // Use the `click` event to detect changes to checkbox and radio inputs.
	  // This approach works across all browsers, whereas `change` does not fire
	  // until `blur` in IE8.
	  var nodeName = elem.nodeName;
	  return nodeName && nodeName.toLowerCase() === 'input' && (elem.type === 'checkbox' || elem.type === 'radio');
	}
	
	function getTargetInstForClickEvent(topLevelType, targetInst, nativeEvent) {
	  if (topLevelType === 'topClick') {
	    return getInstIfValueChanged(targetInst, nativeEvent);
	  }
	}
	
	function getTargetInstForInputOrChangeEvent(topLevelType, targetInst, nativeEvent) {
	  if (topLevelType === 'topInput' || topLevelType === 'topChange') {
	    return getInstIfValueChanged(targetInst, nativeEvent);
	  }
	}
	
	function handleControlledInputBlur(inst, node) {
	  // TODO: In IE, inst is occasionally null. Why?
	  if (inst == null) {
	    return;
	  }
	
	  // Fiber and ReactDOM keep wrapper state in separate places
	  var state = inst._wrapperState || node._wrapperState;
	
	  if (!state || !state.controlled || node.type !== 'number') {
	    return;
	  }
	
	  // If controlled, assign the value attribute to the current value on blur
	  var value = '' + node.value;
	  if (node.getAttribute('value') !== value) {
	    node.setAttribute('value', value);
	  }
	}
	
	/**
	 * This plugin creates an `onChange` event that normalizes change events
	 * across form elements. This event fires at a time when it's possible to
	 * change the element's value without seeing a flicker.
	 *
	 * Supported elements are:
	 * - input (see `isTextInputElement`)
	 * - textarea
	 * - select
	 */
	var ChangeEventPlugin = {
	  eventTypes: eventTypes,
	
	  _allowSimulatedPassThrough: true,
	  _isInputEventSupported: isInputEventSupported,
	
	  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	    var targetNode = targetInst ? ReactDOMComponentTree.getNodeFromInstance(targetInst) : window;
	
	    var getTargetInstFunc, handleEventFunc;
	    if (shouldUseChangeEvent(targetNode)) {
	      if (doesChangeEventBubble) {
	        getTargetInstFunc = getTargetInstForChangeEvent;
	      } else {
	        handleEventFunc = handleEventsForChangeEventIE8;
	      }
	    } else if (isTextInputElement(targetNode)) {
	      if (isInputEventSupported) {
	        getTargetInstFunc = getTargetInstForInputOrChangeEvent;
	      } else {
	        getTargetInstFunc = getTargetInstForInputEventPolyfill;
	        handleEventFunc = handleEventsForInputEventPolyfill;
	      }
	    } else if (shouldUseClickEvent(targetNode)) {
	      getTargetInstFunc = getTargetInstForClickEvent;
	    }
	
	    if (getTargetInstFunc) {
	      var inst = getTargetInstFunc(topLevelType, targetInst, nativeEvent);
	      if (inst) {
	        var event = createAndAccumulateChangeEvent(inst, nativeEvent, nativeEventTarget);
	        return event;
	      }
	    }
	
	    if (handleEventFunc) {
	      handleEventFunc(topLevelType, targetNode, targetInst);
	    }
	
	    // When blurring, set the value attribute for number inputs
	    if (topLevelType === 'topBlur') {
	      handleControlledInputBlur(targetInst, targetNode);
	    }
	  }
	};
	
	module.exports = ChangeEventPlugin;

/***/ }),
/* 87 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(66),
	    _assign = __webpack_require__(27);
	
	var CallbackQueue = __webpack_require__(88);
	var PooledClass = __webpack_require__(81);
	var ReactFeatureFlags = __webpack_require__(89);
	var ReactReconciler = __webpack_require__(90);
	var Transaction = __webpack_require__(99);
	
	var invariant = __webpack_require__(35);
	
	var dirtyComponents = [];
	var updateBatchNumber = 0;
	var asapCallbackQueue = CallbackQueue.getPooled();
	var asapEnqueued = false;
	
	var batchingStrategy = null;
	
	function ensureInjected() {
	  !(ReactUpdates.ReactReconcileTransaction && batchingStrategy) ?  true ? invariant(false, 'ReactUpdates: must inject a reconcile transaction class and batching strategy') : _prodInvariant('123') : void 0;
	}
	
	var NESTED_UPDATES = {
	  initialize: function () {
	    this.dirtyComponentsLength = dirtyComponents.length;
	  },
	  close: function () {
	    if (this.dirtyComponentsLength !== dirtyComponents.length) {
	      // Additional updates were enqueued by componentDidUpdate handlers or
	      // similar; before our own UPDATE_QUEUEING wrapper closes, we want to run
	      // these new updates so that if A's componentDidUpdate calls setState on
	      // B, B will update before the callback A's updater provided when calling
	      // setState.
	      dirtyComponents.splice(0, this.dirtyComponentsLength);
	      flushBatchedUpdates();
	    } else {
	      dirtyComponents.length = 0;
	    }
	  }
	};
	
	var UPDATE_QUEUEING = {
	  initialize: function () {
	    this.callbackQueue.reset();
	  },
	  close: function () {
	    this.callbackQueue.notifyAll();
	  }
	};
	
	var TRANSACTION_WRAPPERS = [NESTED_UPDATES, UPDATE_QUEUEING];
	
	function ReactUpdatesFlushTransaction() {
	  this.reinitializeTransaction();
	  this.dirtyComponentsLength = null;
	  this.callbackQueue = CallbackQueue.getPooled();
	  this.reconcileTransaction = ReactUpdates.ReactReconcileTransaction.getPooled(
	  /* useCreateElement */true);
	}
	
	_assign(ReactUpdatesFlushTransaction.prototype, Transaction, {
	  getTransactionWrappers: function () {
	    return TRANSACTION_WRAPPERS;
	  },
	
	  destructor: function () {
	    this.dirtyComponentsLength = null;
	    CallbackQueue.release(this.callbackQueue);
	    this.callbackQueue = null;
	    ReactUpdates.ReactReconcileTransaction.release(this.reconcileTransaction);
	    this.reconcileTransaction = null;
	  },
	
	  perform: function (method, scope, a) {
	    // Essentially calls `this.reconcileTransaction.perform(method, scope, a)`
	    // with this transaction's wrappers around it.
	    return Transaction.perform.call(this, this.reconcileTransaction.perform, this.reconcileTransaction, method, scope, a);
	  }
	});
	
	PooledClass.addPoolingTo(ReactUpdatesFlushTransaction);
	
	function batchedUpdates(callback, a, b, c, d, e) {
	  ensureInjected();
	  return batchingStrategy.batchedUpdates(callback, a, b, c, d, e);
	}
	
	/**
	 * Array comparator for ReactComponents by mount ordering.
	 *
	 * @param {ReactComponent} c1 first component you're comparing
	 * @param {ReactComponent} c2 second component you're comparing
	 * @return {number} Return value usable by Array.prototype.sort().
	 */
	function mountOrderComparator(c1, c2) {
	  return c1._mountOrder - c2._mountOrder;
	}
	
	function runBatchedUpdates(transaction) {
	  var len = transaction.dirtyComponentsLength;
	  !(len === dirtyComponents.length) ?  true ? invariant(false, 'Expected flush transaction\'s stored dirty-components length (%s) to match dirty-components array length (%s).', len, dirtyComponents.length) : _prodInvariant('124', len, dirtyComponents.length) : void 0;
	
	  // Since reconciling a component higher in the owner hierarchy usually (not
	  // always -- see shouldComponentUpdate()) will reconcile children, reconcile
	  // them before their children by sorting the array.
	  dirtyComponents.sort(mountOrderComparator);
	
	  // Any updates enqueued while reconciling must be performed after this entire
	  // batch. Otherwise, if dirtyComponents is [A, B] where A has children B and
	  // C, B could update twice in a single batch if C's render enqueues an update
	  // to B (since B would have already updated, we should skip it, and the only
	  // way we can know to do so is by checking the batch counter).
	  updateBatchNumber++;
	
	  for (var i = 0; i < len; i++) {
	    // If a component is unmounted before pending changes apply, it will still
	    // be here, but we assume that it has cleared its _pendingCallbacks and
	    // that performUpdateIfNecessary is a noop.
	    var component = dirtyComponents[i];
	
	    // If performUpdateIfNecessary happens to enqueue any new updates, we
	    // shouldn't execute the callbacks until the next render happens, so
	    // stash the callbacks first
	    var callbacks = component._pendingCallbacks;
	    component._pendingCallbacks = null;
	
	    var markerName;
	    if (ReactFeatureFlags.logTopLevelRenders) {
	      var namedComponent = component;
	      // Duck type TopLevelWrapper. This is probably always true.
	      if (component._currentElement.type.isReactTopLevelWrapper) {
	        namedComponent = component._renderedComponent;
	      }
	      markerName = 'React update: ' + namedComponent.getName();
	      console.time(markerName);
	    }
	
	    ReactReconciler.performUpdateIfNecessary(component, transaction.reconcileTransaction, updateBatchNumber);
	
	    if (markerName) {
	      console.timeEnd(markerName);
	    }
	
	    if (callbacks) {
	      for (var j = 0; j < callbacks.length; j++) {
	        transaction.callbackQueue.enqueue(callbacks[j], component.getPublicInstance());
	      }
	    }
	  }
	}
	
	var flushBatchedUpdates = function () {
	  // ReactUpdatesFlushTransaction's wrappers will clear the dirtyComponents
	  // array and perform any updates enqueued by mount-ready handlers (i.e.,
	  // componentDidUpdate) but we need to check here too in order to catch
	  // updates enqueued by setState callbacks and asap calls.
	  while (dirtyComponents.length || asapEnqueued) {
	    if (dirtyComponents.length) {
	      var transaction = ReactUpdatesFlushTransaction.getPooled();
	      transaction.perform(runBatchedUpdates, null, transaction);
	      ReactUpdatesFlushTransaction.release(transaction);
	    }
	
	    if (asapEnqueued) {
	      asapEnqueued = false;
	      var queue = asapCallbackQueue;
	      asapCallbackQueue = CallbackQueue.getPooled();
	      queue.notifyAll();
	      CallbackQueue.release(queue);
	    }
	  }
	};
	
	/**
	 * Mark a component as needing a rerender, adding an optional callback to a
	 * list of functions which will be executed once the rerender occurs.
	 */
	function enqueueUpdate(component) {
	  ensureInjected();
	
	  // Various parts of our code (such as ReactCompositeComponent's
	  // _renderValidatedComponent) assume that calls to render aren't nested;
	  // verify that that's the case. (This is called by each top-level update
	  // function, like setState, forceUpdate, etc.; creation and
	  // destruction of top-level components is guarded in ReactMount.)
	
	  if (!batchingStrategy.isBatchingUpdates) {
	    batchingStrategy.batchedUpdates(enqueueUpdate, component);
	    return;
	  }
	
	  dirtyComponents.push(component);
	  if (component._updateBatchNumber == null) {
	    component._updateBatchNumber = updateBatchNumber + 1;
	  }
	}
	
	/**
	 * Enqueue a callback to be run at the end of the current batching cycle. Throws
	 * if no updates are currently being performed.
	 */
	function asap(callback, context) {
	  invariant(batchingStrategy.isBatchingUpdates, "ReactUpdates.asap: Can't enqueue an asap callback in a context where" + 'updates are not being batched.');
	  asapCallbackQueue.enqueue(callback, context);
	  asapEnqueued = true;
	}
	
	var ReactUpdatesInjection = {
	  injectReconcileTransaction: function (ReconcileTransaction) {
	    !ReconcileTransaction ?  true ? invariant(false, 'ReactUpdates: must provide a reconcile transaction class') : _prodInvariant('126') : void 0;
	    ReactUpdates.ReactReconcileTransaction = ReconcileTransaction;
	  },
	
	  injectBatchingStrategy: function (_batchingStrategy) {
	    !_batchingStrategy ?  true ? invariant(false, 'ReactUpdates: must provide a batching strategy') : _prodInvariant('127') : void 0;
	    !(typeof _batchingStrategy.batchedUpdates === 'function') ?  true ? invariant(false, 'ReactUpdates: must provide a batchedUpdates() function') : _prodInvariant('128') : void 0;
	    !(typeof _batchingStrategy.isBatchingUpdates === 'boolean') ?  true ? invariant(false, 'ReactUpdates: must provide an isBatchingUpdates boolean attribute') : _prodInvariant('129') : void 0;
	    batchingStrategy = _batchingStrategy;
	  }
	};
	
	var ReactUpdates = {
	  /**
	   * React references `ReactReconcileTransaction` using this property in order
	   * to allow dependency injection.
	   *
	   * @internal
	   */
	  ReactReconcileTransaction: null,
	
	  batchedUpdates: batchedUpdates,
	  enqueueUpdate: enqueueUpdate,
	  flushBatchedUpdates: flushBatchedUpdates,
	  injection: ReactUpdatesInjection,
	  asap: asap
	};
	
	module.exports = ReactUpdates;

/***/ }),
/* 88 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * 
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(66);
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	var PooledClass = __webpack_require__(81);
	
	var invariant = __webpack_require__(35);
	
	/**
	 * A specialized pseudo-event module to help keep track of components waiting to
	 * be notified when their DOM representations are available for use.
	 *
	 * This implements `PooledClass`, so you should never need to instantiate this.
	 * Instead, use `CallbackQueue.getPooled()`.
	 *
	 * @class ReactMountReady
	 * @implements PooledClass
	 * @internal
	 */
	
	var CallbackQueue = function () {
	  function CallbackQueue(arg) {
	    _classCallCheck(this, CallbackQueue);
	
	    this._callbacks = null;
	    this._contexts = null;
	    this._arg = arg;
	  }
	
	  /**
	   * Enqueues a callback to be invoked when `notifyAll` is invoked.
	   *
	   * @param {function} callback Invoked when `notifyAll` is invoked.
	   * @param {?object} context Context to call `callback` with.
	   * @internal
	   */
	
	
	  CallbackQueue.prototype.enqueue = function enqueue(callback, context) {
	    this._callbacks = this._callbacks || [];
	    this._callbacks.push(callback);
	    this._contexts = this._contexts || [];
	    this._contexts.push(context);
	  };
	
	  /**
	   * Invokes all enqueued callbacks and clears the queue. This is invoked after
	   * the DOM representation of a component has been created or updated.
	   *
	   * @internal
	   */
	
	
	  CallbackQueue.prototype.notifyAll = function notifyAll() {
	    var callbacks = this._callbacks;
	    var contexts = this._contexts;
	    var arg = this._arg;
	    if (callbacks && contexts) {
	      !(callbacks.length === contexts.length) ?  true ? invariant(false, 'Mismatched list of contexts in callback queue') : _prodInvariant('24') : void 0;
	      this._callbacks = null;
	      this._contexts = null;
	      for (var i = 0; i < callbacks.length; i++) {
	        callbacks[i].call(contexts[i], arg);
	      }
	      callbacks.length = 0;
	      contexts.length = 0;
	    }
	  };
	
	  CallbackQueue.prototype.checkpoint = function checkpoint() {
	    return this._callbacks ? this._callbacks.length : 0;
	  };
	
	  CallbackQueue.prototype.rollback = function rollback(len) {
	    if (this._callbacks && this._contexts) {
	      this._callbacks.length = len;
	      this._contexts.length = len;
	    }
	  };
	
	  /**
	   * Resets the internal queue.
	   *
	   * @internal
	   */
	
	
	  CallbackQueue.prototype.reset = function reset() {
	    this._callbacks = null;
	    this._contexts = null;
	  };
	
	  /**
	   * `PooledClass` looks for this.
	   */
	
	
	  CallbackQueue.prototype.destructor = function destructor() {
	    this.reset();
	  };
	
	  return CallbackQueue;
	}();
	
	module.exports = PooledClass.addPoolingTo(CallbackQueue);

/***/ }),
/* 89 */
/***/ (function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * 
	 */
	
	'use strict';
	
	var ReactFeatureFlags = {
	  // When true, call console.time() before and .timeEnd() after each top-level
	  // render (both initial renders and updates). Useful when looking at prod-mode
	  // timeline profiles in Chrome, for example.
	  logTopLevelRenders: false
	};
	
	module.exports = ReactFeatureFlags;

/***/ }),
/* 90 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */
	
	'use strict';
	
	var ReactRef = __webpack_require__(91);
	var ReactInstrumentation = __webpack_require__(93);
	
	var warning = __webpack_require__(31);
	
	/**
	 * Helper to call ReactRef.attachRefs with this composite component, split out
	 * to avoid allocations in the transaction mount-ready queue.
	 */
	function attachRefs() {
	  ReactRef.attachRefs(this, this._currentElement);
	}
	
	var ReactReconciler = {
	  /**
	   * Initializes the component, renders markup, and registers event listeners.
	   *
	   * @param {ReactComponent} internalInstance
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @param {?object} the containing host component instance
	   * @param {?object} info about the host container
	   * @return {?string} Rendered markup to be inserted into the DOM.
	   * @final
	   * @internal
	   */
	  mountComponent: function (internalInstance, transaction, hostParent, hostContainerInfo, context, parentDebugID) // 0 in production and for roots
	  {
	    if (true) {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onBeforeMountComponent(internalInstance._debugID, internalInstance._currentElement, parentDebugID);
	      }
	    }
	    var markup = internalInstance.mountComponent(transaction, hostParent, hostContainerInfo, context, parentDebugID);
	    if (internalInstance._currentElement && internalInstance._currentElement.ref != null) {
	      transaction.getReactMountReady().enqueue(attachRefs, internalInstance);
	    }
	    if (true) {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onMountComponent(internalInstance._debugID);
	      }
	    }
	    return markup;
	  },
	
	  /**
	   * Returns a value that can be passed to
	   * ReactComponentEnvironment.replaceNodeWithMarkup.
	   */
	  getHostNode: function (internalInstance) {
	    return internalInstance.getHostNode();
	  },
	
	  /**
	   * Releases any resources allocated by `mountComponent`.
	   *
	   * @final
	   * @internal
	   */
	  unmountComponent: function (internalInstance, safely) {
	    if (true) {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onBeforeUnmountComponent(internalInstance._debugID);
	      }
	    }
	    ReactRef.detachRefs(internalInstance, internalInstance._currentElement);
	    internalInstance.unmountComponent(safely);
	    if (true) {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onUnmountComponent(internalInstance._debugID);
	      }
	    }
	  },
	
	  /**
	   * Update a component using a new element.
	   *
	   * @param {ReactComponent} internalInstance
	   * @param {ReactElement} nextElement
	   * @param {ReactReconcileTransaction} transaction
	   * @param {object} context
	   * @internal
	   */
	  receiveComponent: function (internalInstance, nextElement, transaction, context) {
	    var prevElement = internalInstance._currentElement;
	
	    if (nextElement === prevElement && context === internalInstance._context) {
	      // Since elements are immutable after the owner is rendered,
	      // we can do a cheap identity compare here to determine if this is a
	      // superfluous reconcile. It's possible for state to be mutable but such
	      // change should trigger an update of the owner which would recreate
	      // the element. We explicitly check for the existence of an owner since
	      // it's possible for an element created outside a composite to be
	      // deeply mutated and reused.
	
	      // TODO: Bailing out early is just a perf optimization right?
	      // TODO: Removing the return statement should affect correctness?
	      return;
	    }
	
	    if (true) {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onBeforeUpdateComponent(internalInstance._debugID, nextElement);
	      }
	    }
	
	    var refsChanged = ReactRef.shouldUpdateRefs(prevElement, nextElement);
	
	    if (refsChanged) {
	      ReactRef.detachRefs(internalInstance, prevElement);
	    }
	
	    internalInstance.receiveComponent(nextElement, transaction, context);
	
	    if (refsChanged && internalInstance._currentElement && internalInstance._currentElement.ref != null) {
	      transaction.getReactMountReady().enqueue(attachRefs, internalInstance);
	    }
	
	    if (true) {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onUpdateComponent(internalInstance._debugID);
	      }
	    }
	  },
	
	  /**
	   * Flush any dirty changes in a component.
	   *
	   * @param {ReactComponent} internalInstance
	   * @param {ReactReconcileTransaction} transaction
	   * @internal
	   */
	  performUpdateIfNecessary: function (internalInstance, transaction, updateBatchNumber) {
	    if (internalInstance._updateBatchNumber !== updateBatchNumber) {
	      // The component's enqueued batch number should always be the current
	      // batch or the following one.
	       true ? warning(internalInstance._updateBatchNumber == null || internalInstance._updateBatchNumber === updateBatchNumber + 1, 'performUpdateIfNecessary: Unexpected batch number (current %s, ' + 'pending %s)', updateBatchNumber, internalInstance._updateBatchNumber) : void 0;
	      return;
	    }
	    if (true) {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onBeforeUpdateComponent(internalInstance._debugID, internalInstance._currentElement);
	      }
	    }
	    internalInstance.performUpdateIfNecessary(transaction);
	    if (true) {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onUpdateComponent(internalInstance._debugID);
	      }
	    }
	  }
	};
	
	module.exports = ReactReconciler;

/***/ }),
/* 91 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * 
	 */
	
	'use strict';
	
	var ReactOwner = __webpack_require__(92);
	
	var ReactRef = {};
	
	function attachRef(ref, component, owner) {
	  if (typeof ref === 'function') {
	    ref(component.getPublicInstance());
	  } else {
	    // Legacy ref
	    ReactOwner.addComponentAsRefTo(component, ref, owner);
	  }
	}
	
	function detachRef(ref, component, owner) {
	  if (typeof ref === 'function') {
	    ref(null);
	  } else {
	    // Legacy ref
	    ReactOwner.removeComponentAsRefFrom(component, ref, owner);
	  }
	}
	
	ReactRef.attachRefs = function (instance, element) {
	  if (element === null || typeof element !== 'object') {
	    return;
	  }
	  var ref = element.ref;
	  if (ref != null) {
	    attachRef(ref, instance, element._owner);
	  }
	};
	
	ReactRef.shouldUpdateRefs = function (prevElement, nextElement) {
	  // If either the owner or a `ref` has changed, make sure the newest owner
	  // has stored a reference to `this`, and the previous owner (if different)
	  // has forgotten the reference to `this`. We use the element instead
	  // of the public this.props because the post processing cannot determine
	  // a ref. The ref conceptually lives on the element.
	
	  // TODO: Should this even be possible? The owner cannot change because
	  // it's forbidden by shouldUpdateReactComponent. The ref can change
	  // if you swap the keys of but not the refs. Reconsider where this check
	  // is made. It probably belongs where the key checking and
	  // instantiateReactComponent is done.
	
	  var prevRef = null;
	  var prevOwner = null;
	  if (prevElement !== null && typeof prevElement === 'object') {
	    prevRef = prevElement.ref;
	    prevOwner = prevElement._owner;
	  }
	
	  var nextRef = null;
	  var nextOwner = null;
	  if (nextElement !== null && typeof nextElement === 'object') {
	    nextRef = nextElement.ref;
	    nextOwner = nextElement._owner;
	  }
	
	  return prevRef !== nextRef ||
	  // If owner changes but we have an unchanged function ref, don't update refs
	  typeof nextRef === 'string' && nextOwner !== prevOwner;
	};
	
	ReactRef.detachRefs = function (instance, element) {
	  if (element === null || typeof element !== 'object') {
	    return;
	  }
	  var ref = element.ref;
	  if (ref != null) {
	    detachRef(ref, instance, element._owner);
	  }
	};
	
	module.exports = ReactRef;

/***/ }),
/* 92 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * 
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(66);
	
	var invariant = __webpack_require__(35);
	
	/**
	 * @param {?object} object
	 * @return {boolean} True if `object` is a valid owner.
	 * @final
	 */
	function isValidOwner(object) {
	  return !!(object && typeof object.attachRef === 'function' && typeof object.detachRef === 'function');
	}
	
	/**
	 * ReactOwners are capable of storing references to owned components.
	 *
	 * All components are capable of //being// referenced by owner components, but
	 * only ReactOwner components are capable of //referencing// owned components.
	 * The named reference is known as a "ref".
	 *
	 * Refs are available when mounted and updated during reconciliation.
	 *
	 *   var MyComponent = React.createClass({
	 *     render: function() {
	 *       return (
	 *         <div onClick={this.handleClick}>
	 *           <CustomComponent ref="custom" />
	 *         </div>
	 *       );
	 *     },
	 *     handleClick: function() {
	 *       this.refs.custom.handleClick();
	 *     },
	 *     componentDidMount: function() {
	 *       this.refs.custom.initialize();
	 *     }
	 *   });
	 *
	 * Refs should rarely be used. When refs are used, they should only be done to
	 * control data that is not handled by React's data flow.
	 *
	 * @class ReactOwner
	 */
	var ReactOwner = {
	  /**
	   * Adds a component by ref to an owner component.
	   *
	   * @param {ReactComponent} component Component to reference.
	   * @param {string} ref Name by which to refer to the component.
	   * @param {ReactOwner} owner Component on which to record the ref.
	   * @final
	   * @internal
	   */
	  addComponentAsRefTo: function (component, ref, owner) {
	    !isValidOwner(owner) ?  true ? invariant(false, 'addComponentAsRefTo(...): Only a ReactOwner can have refs. You might be adding a ref to a component that was not created inside a component\'s `render` method, or you have multiple copies of React loaded (details: https://fb.me/react-refs-must-have-owner).') : _prodInvariant('119') : void 0;
	    owner.attachRef(ref, component);
	  },
	
	  /**
	   * Removes a component by ref from an owner component.
	   *
	   * @param {ReactComponent} component Component to dereference.
	   * @param {string} ref Name of the ref to remove.
	   * @param {ReactOwner} owner Component on which the ref is recorded.
	   * @final
	   * @internal
	   */
	  removeComponentAsRefFrom: function (component, ref, owner) {
	    !isValidOwner(owner) ?  true ? invariant(false, 'removeComponentAsRefFrom(...): Only a ReactOwner can have refs. You might be removing a ref to a component that was not created inside a component\'s `render` method, or you have multiple copies of React loaded (details: https://fb.me/react-refs-must-have-owner).') : _prodInvariant('120') : void 0;
	    var ownerPublicInstance = owner.getPublicInstance();
	    // Check that `component`'s owner is still alive and that `component` is still the current ref
	    // because we do not want to detach the ref if another component stole it.
	    if (ownerPublicInstance && ownerPublicInstance.refs[ref] === component.getPublicInstance()) {
	      owner.detachRef(ref);
	    }
	  }
	};
	
	module.exports = ReactOwner;

/***/ }),
/* 93 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2016-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * 
	 */
	
	'use strict';
	
	// Trust the developer to only use ReactInstrumentation with a __DEV__ check
	
	var debugTool = null;
	
	if (true) {
	  var ReactDebugTool = __webpack_require__(94);
	  debugTool = ReactDebugTool;
	}
	
	module.exports = { debugTool: debugTool };

/***/ }),
/* 94 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2016-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * 
	 */
	
	'use strict';
	
	var ReactInvalidSetStateWarningHook = __webpack_require__(95);
	var ReactHostOperationHistoryHook = __webpack_require__(96);
	var ReactComponentTreeHook = __webpack_require__(47);
	var ExecutionEnvironment = __webpack_require__(79);
	
	var performanceNow = __webpack_require__(97);
	var warning = __webpack_require__(31);
	
	var hooks = [];
	var didHookThrowForEvent = {};
	
	function callHook(event, fn, context, arg1, arg2, arg3, arg4, arg5) {
	  try {
	    fn.call(context, arg1, arg2, arg3, arg4, arg5);
	  } catch (e) {
	     true ? warning(didHookThrowForEvent[event], 'Exception thrown by hook while handling %s: %s', event, e + '\n' + e.stack) : void 0;
	    didHookThrowForEvent[event] = true;
	  }
	}
	
	function emitEvent(event, arg1, arg2, arg3, arg4, arg5) {
	  for (var i = 0; i < hooks.length; i++) {
	    var hook = hooks[i];
	    var fn = hook[event];
	    if (fn) {
	      callHook(event, fn, hook, arg1, arg2, arg3, arg4, arg5);
	    }
	  }
	}
	
	var isProfiling = false;
	var flushHistory = [];
	var lifeCycleTimerStack = [];
	var currentFlushNesting = 0;
	var currentFlushMeasurements = [];
	var currentFlushStartTime = 0;
	var currentTimerDebugID = null;
	var currentTimerStartTime = 0;
	var currentTimerNestedFlushDuration = 0;
	var currentTimerType = null;
	
	var lifeCycleTimerHasWarned = false;
	
	function clearHistory() {
	  ReactComponentTreeHook.purgeUnmountedComponents();
	  ReactHostOperationHistoryHook.clearHistory();
	}
	
	function getTreeSnapshot(registeredIDs) {
	  return registeredIDs.reduce(function (tree, id) {
	    var ownerID = ReactComponentTreeHook.getOwnerID(id);
	    var parentID = ReactComponentTreeHook.getParentID(id);
	    tree[id] = {
	      displayName: ReactComponentTreeHook.getDisplayName(id),
	      text: ReactComponentTreeHook.getText(id),
	      updateCount: ReactComponentTreeHook.getUpdateCount(id),
	      childIDs: ReactComponentTreeHook.getChildIDs(id),
	      // Text nodes don't have owners but this is close enough.
	      ownerID: ownerID || parentID && ReactComponentTreeHook.getOwnerID(parentID) || 0,
	      parentID: parentID
	    };
	    return tree;
	  }, {});
	}
	
	function resetMeasurements() {
	  var previousStartTime = currentFlushStartTime;
	  var previousMeasurements = currentFlushMeasurements;
	  var previousOperations = ReactHostOperationHistoryHook.getHistory();
	
	  if (currentFlushNesting === 0) {
	    currentFlushStartTime = 0;
	    currentFlushMeasurements = [];
	    clearHistory();
	    return;
	  }
	
	  if (previousMeasurements.length || previousOperations.length) {
	    var registeredIDs = ReactComponentTreeHook.getRegisteredIDs();
	    flushHistory.push({
	      duration: performanceNow() - previousStartTime,
	      measurements: previousMeasurements || [],
	      operations: previousOperations || [],
	      treeSnapshot: getTreeSnapshot(registeredIDs)
	    });
	  }
	
	  clearHistory();
	  currentFlushStartTime = performanceNow();
	  currentFlushMeasurements = [];
	}
	
	function checkDebugID(debugID) {
	  var allowRoot = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
	
	  if (allowRoot && debugID === 0) {
	    return;
	  }
	  if (!debugID) {
	     true ? warning(false, 'ReactDebugTool: debugID may not be empty.') : void 0;
	  }
	}
	
	function beginLifeCycleTimer(debugID, timerType) {
	  if (currentFlushNesting === 0) {
	    return;
	  }
	  if (currentTimerType && !lifeCycleTimerHasWarned) {
	     true ? warning(false, 'There is an internal error in the React performance measurement code. ' + 'Did not expect %s timer to start while %s timer is still in ' + 'progress for %s instance.', timerType, currentTimerType || 'no', debugID === currentTimerDebugID ? 'the same' : 'another') : void 0;
	    lifeCycleTimerHasWarned = true;
	  }
	  currentTimerStartTime = performanceNow();
	  currentTimerNestedFlushDuration = 0;
	  currentTimerDebugID = debugID;
	  currentTimerType = timerType;
	}
	
	function endLifeCycleTimer(debugID, timerType) {
	  if (currentFlushNesting === 0) {
	    return;
	  }
	  if (currentTimerType !== timerType && !lifeCycleTimerHasWarned) {
	     true ? warning(false, 'There is an internal error in the React performance measurement code. ' + 'We did not expect %s timer to stop while %s timer is still in ' + 'progress for %s instance. Please report this as a bug in React.', timerType, currentTimerType || 'no', debugID === currentTimerDebugID ? 'the same' : 'another') : void 0;
	    lifeCycleTimerHasWarned = true;
	  }
	  if (isProfiling) {
	    currentFlushMeasurements.push({
	      timerType: timerType,
	      instanceID: debugID,
	      duration: performanceNow() - currentTimerStartTime - currentTimerNestedFlushDuration
	    });
	  }
	  currentTimerStartTime = 0;
	  currentTimerNestedFlushDuration = 0;
	  currentTimerDebugID = null;
	  currentTimerType = null;
	}
	
	function pauseCurrentLifeCycleTimer() {
	  var currentTimer = {
	    startTime: currentTimerStartTime,
	    nestedFlushStartTime: performanceNow(),
	    debugID: currentTimerDebugID,
	    timerType: currentTimerType
	  };
	  lifeCycleTimerStack.push(currentTimer);
	  currentTimerStartTime = 0;
	  currentTimerNestedFlushDuration = 0;
	  currentTimerDebugID = null;
	  currentTimerType = null;
	}
	
	function resumeCurrentLifeCycleTimer() {
	  var _lifeCycleTimerStack$ = lifeCycleTimerStack.pop(),
	      startTime = _lifeCycleTimerStack$.startTime,
	      nestedFlushStartTime = _lifeCycleTimerStack$.nestedFlushStartTime,
	      debugID = _lifeCycleTimerStack$.debugID,
	      timerType = _lifeCycleTimerStack$.timerType;
	
	  var nestedFlushDuration = performanceNow() - nestedFlushStartTime;
	  currentTimerStartTime = startTime;
	  currentTimerNestedFlushDuration += nestedFlushDuration;
	  currentTimerDebugID = debugID;
	  currentTimerType = timerType;
	}
	
	var lastMarkTimeStamp = 0;
	var canUsePerformanceMeasure = typeof performance !== 'undefined' && typeof performance.mark === 'function' && typeof performance.clearMarks === 'function' && typeof performance.measure === 'function' && typeof performance.clearMeasures === 'function';
	
	function shouldMark(debugID) {
	  if (!isProfiling || !canUsePerformanceMeasure) {
	    return false;
	  }
	  var element = ReactComponentTreeHook.getElement(debugID);
	  if (element == null || typeof element !== 'object') {
	    return false;
	  }
	  var isHostElement = typeof element.type === 'string';
	  if (isHostElement) {
	    return false;
	  }
	  return true;
	}
	
	function markBegin(debugID, markType) {
	  if (!shouldMark(debugID)) {
	    return;
	  }
	
	  var markName = debugID + '::' + markType;
	  lastMarkTimeStamp = performanceNow();
	  performance.mark(markName);
	}
	
	function markEnd(debugID, markType) {
	  if (!shouldMark(debugID)) {
	    return;
	  }
	
	  var markName = debugID + '::' + markType;
	  var displayName = ReactComponentTreeHook.getDisplayName(debugID) || 'Unknown';
	
	  // Chrome has an issue of dropping markers recorded too fast:
	  // https://bugs.chromium.org/p/chromium/issues/detail?id=640652
	  // To work around this, we will not report very small measurements.
	  // I determined the magic number by tweaking it back and forth.
	  // 0.05ms was enough to prevent the issue, but I set it to 0.1ms to be safe.
	  // When the bug is fixed, we can `measure()` unconditionally if we want to.
	  var timeStamp = performanceNow();
	  if (timeStamp - lastMarkTimeStamp > 0.1) {
	    var measurementName = displayName + ' [' + markType + ']';
	    performance.measure(measurementName, markName);
	  }
	
	  performance.clearMarks(markName);
	  if (measurementName) {
	    performance.clearMeasures(measurementName);
	  }
	}
	
	var ReactDebugTool = {
	  addHook: function (hook) {
	    hooks.push(hook);
	  },
	  removeHook: function (hook) {
	    for (var i = 0; i < hooks.length; i++) {
	      if (hooks[i] === hook) {
	        hooks.splice(i, 1);
	        i--;
	      }
	    }
	  },
	  isProfiling: function () {
	    return isProfiling;
	  },
	  beginProfiling: function () {
	    if (isProfiling) {
	      return;
	    }
	
	    isProfiling = true;
	    flushHistory.length = 0;
	    resetMeasurements();
	    ReactDebugTool.addHook(ReactHostOperationHistoryHook);
	  },
	  endProfiling: function () {
	    if (!isProfiling) {
	      return;
	    }
	
	    isProfiling = false;
	    resetMeasurements();
	    ReactDebugTool.removeHook(ReactHostOperationHistoryHook);
	  },
	  getFlushHistory: function () {
	    return flushHistory;
	  },
	  onBeginFlush: function () {
	    currentFlushNesting++;
	    resetMeasurements();
	    pauseCurrentLifeCycleTimer();
	    emitEvent('onBeginFlush');
	  },
	  onEndFlush: function () {
	    resetMeasurements();
	    currentFlushNesting--;
	    resumeCurrentLifeCycleTimer();
	    emitEvent('onEndFlush');
	  },
	  onBeginLifeCycleTimer: function (debugID, timerType) {
	    checkDebugID(debugID);
	    emitEvent('onBeginLifeCycleTimer', debugID, timerType);
	    markBegin(debugID, timerType);
	    beginLifeCycleTimer(debugID, timerType);
	  },
	  onEndLifeCycleTimer: function (debugID, timerType) {
	    checkDebugID(debugID);
	    endLifeCycleTimer(debugID, timerType);
	    markEnd(debugID, timerType);
	    emitEvent('onEndLifeCycleTimer', debugID, timerType);
	  },
	  onBeginProcessingChildContext: function () {
	    emitEvent('onBeginProcessingChildContext');
	  },
	  onEndProcessingChildContext: function () {
	    emitEvent('onEndProcessingChildContext');
	  },
	  onHostOperation: function (operation) {
	    checkDebugID(operation.instanceID);
	    emitEvent('onHostOperation', operation);
	  },
	  onSetState: function () {
	    emitEvent('onSetState');
	  },
	  onSetChildren: function (debugID, childDebugIDs) {
	    checkDebugID(debugID);
	    childDebugIDs.forEach(checkDebugID);
	    emitEvent('onSetChildren', debugID, childDebugIDs);
	  },
	  onBeforeMountComponent: function (debugID, element, parentDebugID) {
	    checkDebugID(debugID);
	    checkDebugID(parentDebugID, true);
	    emitEvent('onBeforeMountComponent', debugID, element, parentDebugID);
	    markBegin(debugID, 'mount');
	  },
	  onMountComponent: function (debugID) {
	    checkDebugID(debugID);
	    markEnd(debugID, 'mount');
	    emitEvent('onMountComponent', debugID);
	  },
	  onBeforeUpdateComponent: function (debugID, element) {
	    checkDebugID(debugID);
	    emitEvent('onBeforeUpdateComponent', debugID, element);
	    markBegin(debugID, 'update');
	  },
	  onUpdateComponent: function (debugID) {
	    checkDebugID(debugID);
	    markEnd(debugID, 'update');
	    emitEvent('onUpdateComponent', debugID);
	  },
	  onBeforeUnmountComponent: function (debugID) {
	    checkDebugID(debugID);
	    emitEvent('onBeforeUnmountComponent', debugID);
	    markBegin(debugID, 'unmount');
	  },
	  onUnmountComponent: function (debugID) {
	    checkDebugID(debugID);
	    markEnd(debugID, 'unmount');
	    emitEvent('onUnmountComponent', debugID);
	  },
	  onTestEvent: function () {
	    emitEvent('onTestEvent');
	  }
	};
	
	// TODO remove these when RN/www gets updated
	ReactDebugTool.addDevtool = ReactDebugTool.addHook;
	ReactDebugTool.removeDevtool = ReactDebugTool.removeHook;
	
	ReactDebugTool.addHook(ReactInvalidSetStateWarningHook);
	ReactDebugTool.addHook(ReactComponentTreeHook);
	var url = ExecutionEnvironment.canUseDOM && window.location.href || '';
	if (/[?&]react_perf\b/.test(url)) {
	  ReactDebugTool.beginProfiling();
	}
	
	module.exports = ReactDebugTool;

/***/ }),
/* 95 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2016-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * 
	 */
	
	'use strict';
	
	var warning = __webpack_require__(31);
	
	if (true) {
	  var processingChildContext = false;
	
	  var warnInvalidSetState = function () {
	     true ? warning(!processingChildContext, 'setState(...): Cannot call setState() inside getChildContext()') : void 0;
	  };
	}
	
	var ReactInvalidSetStateWarningHook = {
	  onBeginProcessingChildContext: function () {
	    processingChildContext = true;
	  },
	  onEndProcessingChildContext: function () {
	    processingChildContext = false;
	  },
	  onSetState: function () {
	    warnInvalidSetState();
	  }
	};
	
	module.exports = ReactInvalidSetStateWarningHook;

/***/ }),
/* 96 */
/***/ (function(module, exports) {

	/**
	 * Copyright (c) 2016-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * 
	 */
	
	'use strict';
	
	var history = [];
	
	var ReactHostOperationHistoryHook = {
	  onHostOperation: function (operation) {
	    history.push(operation);
	  },
	  clearHistory: function () {
	    if (ReactHostOperationHistoryHook._preventClearing) {
	      // Should only be used for tests.
	      return;
	    }
	
	    history = [];
	  },
	  getHistory: function () {
	    return history;
	  }
	};
	
	module.exports = ReactHostOperationHistoryHook;

/***/ }),
/* 97 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * @typechecks
	 */
	
	var performance = __webpack_require__(98);
	
	var performanceNow;
	
	/**
	 * Detect if we can use `window.performance.now()` and gracefully fallback to
	 * `Date.now()` if it doesn't exist. We need to support Firefox < 15 for now
	 * because of Facebook's testing infrastructure.
	 */
	if (performance.now) {
	  performanceNow = function performanceNow() {
	    return performance.now();
	  };
	} else {
	  performanceNow = function performanceNow() {
	    return Date.now();
	  };
	}
	
	module.exports = performanceNow;

/***/ }),
/* 98 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * @typechecks
	 */
	
	'use strict';
	
	var ExecutionEnvironment = __webpack_require__(79);
	
	var performance;
	
	if (ExecutionEnvironment.canUseDOM) {
	  performance = window.performance || window.msPerformance || window.webkitPerformance;
	}
	
	module.exports = performance || {};

/***/ }),
/* 99 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * 
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(66);
	
	var invariant = __webpack_require__(35);
	
	var OBSERVED_ERROR = {};
	
	/**
	 * `Transaction` creates a black box that is able to wrap any method such that
	 * certain invariants are maintained before and after the method is invoked
	 * (Even if an exception is thrown while invoking the wrapped method). Whoever
	 * instantiates a transaction can provide enforcers of the invariants at
	 * creation time. The `Transaction` class itself will supply one additional
	 * automatic invariant for you - the invariant that any transaction instance
	 * should not be run while it is already being run. You would typically create a
	 * single instance of a `Transaction` for reuse multiple times, that potentially
	 * is used to wrap several different methods. Wrappers are extremely simple -
	 * they only require implementing two methods.
	 *
	 * <pre>
	 *                       wrappers (injected at creation time)
	 *                                      +        +
	 *                                      |        |
	 *                    +-----------------|--------|--------------+
	 *                    |                 v        |              |
	 *                    |      +---------------+   |              |
	 *                    |   +--|    wrapper1   |---|----+         |
	 *                    |   |  +---------------+   v    |         |
	 *                    |   |          +-------------+  |         |
	 *                    |   |     +----|   wrapper2  |--------+   |
	 *                    |   |     |    +-------------+  |     |   |
	 *                    |   |     |                     |     |   |
	 *                    |   v     v                     v     v   | wrapper
	 *                    | +---+ +---+   +---------+   +---+ +---+ | invariants
	 * perform(anyMethod) | |   | |   |   |         |   |   | |   | | maintained
	 * +----------------->|-|---|-|---|-->|anyMethod|---|---|-|---|-|-------->
	 *                    | |   | |   |   |         |   |   | |   | |
	 *                    | |   | |   |   |         |   |   | |   | |
	 *                    | |   | |   |   |         |   |   | |   | |
	 *                    | +---+ +---+   +---------+   +---+ +---+ |
	 *                    |  initialize                    close    |
	 *                    +-----------------------------------------+
	 * </pre>
	 *
	 * Use cases:
	 * - Preserving the input selection ranges before/after reconciliation.
	 *   Restoring selection even in the event of an unexpected error.
	 * - Deactivating events while rearranging the DOM, preventing blurs/focuses,
	 *   while guaranteeing that afterwards, the event system is reactivated.
	 * - Flushing a queue of collected DOM mutations to the main UI thread after a
	 *   reconciliation takes place in a worker thread.
	 * - Invoking any collected `componentDidUpdate` callbacks after rendering new
	 *   content.
	 * - (Future use case): Wrapping particular flushes of the `ReactWorker` queue
	 *   to preserve the `scrollTop` (an automatic scroll aware DOM).
	 * - (Future use case): Layout calculations before and after DOM updates.
	 *
	 * Transactional plugin API:
	 * - A module that has an `initialize` method that returns any precomputation.
	 * - and a `close` method that accepts the precomputation. `close` is invoked
	 *   when the wrapped process is completed, or has failed.
	 *
	 * @param {Array<TransactionalWrapper>} transactionWrapper Wrapper modules
	 * that implement `initialize` and `close`.
	 * @return {Transaction} Single transaction for reuse in thread.
	 *
	 * @class Transaction
	 */
	var TransactionImpl = {
	  /**
	   * Sets up this instance so that it is prepared for collecting metrics. Does
	   * so such that this setup method may be used on an instance that is already
	   * initialized, in a way that does not consume additional memory upon reuse.
	   * That can be useful if you decide to make your subclass of this mixin a
	   * "PooledClass".
	   */
	  reinitializeTransaction: function () {
	    this.transactionWrappers = this.getTransactionWrappers();
	    if (this.wrapperInitData) {
	      this.wrapperInitData.length = 0;
	    } else {
	      this.wrapperInitData = [];
	    }
	    this._isInTransaction = false;
	  },
	
	  _isInTransaction: false,
	
	  /**
	   * @abstract
	   * @return {Array<TransactionWrapper>} Array of transaction wrappers.
	   */
	  getTransactionWrappers: null,
	
	  isInTransaction: function () {
	    return !!this._isInTransaction;
	  },
	
	  /* eslint-disable space-before-function-paren */
	
	  /**
	   * Executes the function within a safety window. Use this for the top level
	   * methods that result in large amounts of computation/mutations that would
	   * need to be safety checked. The optional arguments helps prevent the need
	   * to bind in many cases.
	   *
	   * @param {function} method Member of scope to call.
	   * @param {Object} scope Scope to invoke from.
	   * @param {Object?=} a Argument to pass to the method.
	   * @param {Object?=} b Argument to pass to the method.
	   * @param {Object?=} c Argument to pass to the method.
	   * @param {Object?=} d Argument to pass to the method.
	   * @param {Object?=} e Argument to pass to the method.
	   * @param {Object?=} f Argument to pass to the method.
	   *
	   * @return {*} Return value from `method`.
	   */
	  perform: function (method, scope, a, b, c, d, e, f) {
	    /* eslint-enable space-before-function-paren */
	    !!this.isInTransaction() ?  true ? invariant(false, 'Transaction.perform(...): Cannot initialize a transaction when there is already an outstanding transaction.') : _prodInvariant('27') : void 0;
	    var errorThrown;
	    var ret;
	    try {
	      this._isInTransaction = true;
	      // Catching errors makes debugging more difficult, so we start with
	      // errorThrown set to true before setting it to false after calling
	      // close -- if it's still set to true in the finally block, it means
	      // one of these calls threw.
	      errorThrown = true;
	      this.initializeAll(0);
	      ret = method.call(scope, a, b, c, d, e, f);
	      errorThrown = false;
	    } finally {
	      try {
	        if (errorThrown) {
	          // If `method` throws, prefer to show that stack trace over any thrown
	          // by invoking `closeAll`.
	          try {
	            this.closeAll(0);
	          } catch (err) {}
	        } else {
	          // Since `method` didn't throw, we don't want to silence the exception
	          // here.
	          this.closeAll(0);
	        }
	      } finally {
	        this._isInTransaction = false;
	      }
	    }
	    return ret;
	  },
	
	  initializeAll: function (startIndex) {
	    var transactionWrappers = this.transactionWrappers;
	    for (var i = startIndex; i < transactionWrappers.length; i++) {
	      var wrapper = transactionWrappers[i];
	      try {
	        // Catching errors makes debugging more difficult, so we start with the
	        // OBSERVED_ERROR state before overwriting it with the real return value
	        // of initialize -- if it's still set to OBSERVED_ERROR in the finally
	        // block, it means wrapper.initialize threw.
	        this.wrapperInitData[i] = OBSERVED_ERROR;
	        this.wrapperInitData[i] = wrapper.initialize ? wrapper.initialize.call(this) : null;
	      } finally {
	        if (this.wrapperInitData[i] === OBSERVED_ERROR) {
	          // The initializer for wrapper i threw an error; initialize the
	          // remaining wrappers but silence any exceptions from them to ensure
	          // that the first error is the one to bubble up.
	          try {
	            this.initializeAll(i + 1);
	          } catch (err) {}
	        }
	      }
	    }
	  },
	
	  /**
	   * Invokes each of `this.transactionWrappers.close[i]` functions, passing into
	   * them the respective return values of `this.transactionWrappers.init[i]`
	   * (`close`rs that correspond to initializers that failed will not be
	   * invoked).
	   */
	  closeAll: function (startIndex) {
	    !this.isInTransaction() ?  true ? invariant(false, 'Transaction.closeAll(): Cannot close transaction when none are open.') : _prodInvariant('28') : void 0;
	    var transactionWrappers = this.transactionWrappers;
	    for (var i = startIndex; i < transactionWrappers.length; i++) {
	      var wrapper = transactionWrappers[i];
	      var initData = this.wrapperInitData[i];
	      var errorThrown;
	      try {
	        // Catching errors makes debugging more difficult, so we start with
	        // errorThrown set to true before setting it to false after calling
	        // close -- if it's still set to true in the finally block, it means
	        // wrapper.close threw.
	        errorThrown = true;
	        if (initData !== OBSERVED_ERROR && wrapper.close) {
	          wrapper.close.call(this, initData);
	        }
	        errorThrown = false;
	      } finally {
	        if (errorThrown) {
	          // The closer for wrapper i threw an error; close the remaining
	          // wrappers but silence any exceptions from them to ensure that the
	          // first error is the one to bubble up.
	          try {
	            this.closeAll(i + 1);
	          } catch (e) {}
	        }
	      }
	    }
	    this.wrapperInitData.length = 0;
	  }
	};
	
	module.exports = TransactionImpl;

/***/ }),
/* 100 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */
	
	'use strict';
	
	var ReactDOMComponentTree = __webpack_require__(65);
	
	function isCheckable(elem) {
	  var type = elem.type;
	  var nodeName = elem.nodeName;
	  return nodeName && nodeName.toLowerCase() === 'input' && (type === 'checkbox' || type === 'radio');
	}
	
	function getTracker(inst) {
	  return inst._wrapperState.valueTracker;
	}
	
	function attachTracker(inst, tracker) {
	  inst._wrapperState.valueTracker = tracker;
	}
	
	function detachTracker(inst) {
	  inst._wrapperState.valueTracker = null;
	}
	
	function getValueFromNode(node) {
	  var value;
	  if (node) {
	    value = isCheckable(node) ? '' + node.checked : node.value;
	  }
	  return value;
	}
	
	var inputValueTracking = {
	  // exposed for testing
	  _getTrackerFromNode: function (node) {
	    return getTracker(ReactDOMComponentTree.getInstanceFromNode(node));
	  },
	
	
	  track: function (inst) {
	    if (getTracker(inst)) {
	      return;
	    }
	
	    var node = ReactDOMComponentTree.getNodeFromInstance(inst);
	    var valueField = isCheckable(node) ? 'checked' : 'value';
	    var descriptor = Object.getOwnPropertyDescriptor(node.constructor.prototype, valueField);
	
	    var currentValue = '' + node[valueField];
	
	    // if someone has already defined a value or Safari, then bail
	    // and don't track value will cause over reporting of changes,
	    // but it's better then a hard failure
	    // (needed for certain tests that spyOn input values and Safari)
	    if (node.hasOwnProperty(valueField) || typeof descriptor.get !== 'function' || typeof descriptor.set !== 'function') {
	      return;
	    }
	
	    Object.defineProperty(node, valueField, {
	      enumerable: descriptor.enumerable,
	      configurable: true,
	      get: function () {
	        return descriptor.get.call(this);
	      },
	      set: function (value) {
	        currentValue = '' + value;
	        descriptor.set.call(this, value);
	      }
	    });
	
	    attachTracker(inst, {
	      getValue: function () {
	        return currentValue;
	      },
	      setValue: function (value) {
	        currentValue = '' + value;
	      },
	      stopTracking: function () {
	        detachTracker(inst);
	        delete node[valueField];
	      }
	    });
	  },
	
	  updateValueIfChanged: function (inst) {
	    if (!inst) {
	      return false;
	    }
	    var tracker = getTracker(inst);
	
	    if (!tracker) {
	      inputValueTracking.track(inst);
	      return true;
	    }
	
	    var lastValue = tracker.getValue();
	    var nextValue = getValueFromNode(ReactDOMComponentTree.getNodeFromInstance(inst));
	
	    if (nextValue !== lastValue) {
	      tracker.setValue(nextValue);
	      return true;
	    }
	
	    return false;
	  },
	  stopTracking: function (inst) {
	    var tracker = getTracker(inst);
	    if (tracker) {
	      tracker.stopTracking();
	    }
	  }
	};
	
	module.exports = inputValueTracking;

/***/ }),
/* 101 */
/***/ (function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */
	
	'use strict';
	
	/**
	 * Gets the target node from a native browser event by accounting for
	 * inconsistencies in browser DOM APIs.
	 *
	 * @param {object} nativeEvent Native browser event.
	 * @return {DOMEventTarget} Target node.
	 */
	
	function getEventTarget(nativeEvent) {
	  var target = nativeEvent.target || nativeEvent.srcElement || window;
	
	  // Normalize SVG <use> element events #4963
	  if (target.correspondingUseElement) {
	    target = target.correspondingUseElement;
	  }
	
	  // Safari may fire events on text nodes (Node.TEXT_NODE is 3).
	  // @see http://www.quirksmode.org/js/events_properties.html
	  return target.nodeType === 3 ? target.parentNode : target;
	}
	
	module.exports = getEventTarget;

/***/ }),
/* 102 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */
	
	'use strict';
	
	var ExecutionEnvironment = __webpack_require__(79);
	
	var useHasFeature;
	if (ExecutionEnvironment.canUseDOM) {
	  useHasFeature = document.implementation && document.implementation.hasFeature &&
	  // always returns true in newer browsers as per the standard.
	  // @see http://dom.spec.whatwg.org/#dom-domimplementation-hasfeature
	  document.implementation.hasFeature('', '') !== true;
	}
	
	/**
	 * Checks if an event is supported in the current execution environment.
	 *
	 * NOTE: This will not work correctly for non-generic events such as `change`,
	 * `reset`, `load`, `error`, and `select`.
	 *
	 * Borrows from Modernizr.
	 *
	 * @param {string} eventNameSuffix Event name, e.g. "click".
	 * @param {?boolean} capture Check if the capture phase is supported.
	 * @return {boolean} True if the event is supported.
	 * @internal
	 * @license Modernizr 3.0.0pre (Custom Build) | MIT
	 */
	function isEventSupported(eventNameSuffix, capture) {
	  if (!ExecutionEnvironment.canUseDOM || capture && !('addEventListener' in document)) {
	    return false;
	  }
	
	  var eventName = 'on' + eventNameSuffix;
	  var isSupported = eventName in document;
	
	  if (!isSupported) {
	    var element = document.createElement('div');
	    element.setAttribute(eventName, 'return;');
	    isSupported = typeof element[eventName] === 'function';
	  }
	
	  if (!isSupported && useHasFeature && eventNameSuffix === 'wheel') {
	    // This is the only way to test support for the `wheel` event in IE9+.
	    isSupported = document.implementation.hasFeature('Events.wheel', '3.0');
	  }
	
	  return isSupported;
	}
	
	module.exports = isEventSupported;

/***/ }),
/* 103 */
/***/ (function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * 
	 */
	
	'use strict';
	
	/**
	 * @see http://www.whatwg.org/specs/web-apps/current-work/multipage/the-input-element.html#input-type-attr-summary
	 */
	
	var supportedInputTypes = {
	  color: true,
	  date: true,
	  datetime: true,
	  'datetime-local': true,
	  email: true,
	  month: true,
	  number: true,
	  password: true,
	  range: true,
	  search: true,
	  tel: true,
	  text: true,
	  time: true,
	  url: true,
	  week: true
	};
	
	function isTextInputElement(elem) {
	  var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();
	
	  if (nodeName === 'input') {
	    return !!supportedInputTypes[elem.type];
	  }
	
	  if (nodeName === 'textarea') {
	    return true;
	  }
	
	  return false;
	}
	
	module.exports = isTextInputElement;

/***/ }),
/* 104 */
/***/ (function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */
	
	'use strict';
	
	/**
	 * Module that is injectable into `EventPluginHub`, that specifies a
	 * deterministic ordering of `EventPlugin`s. A convenient way to reason about
	 * plugins, without having to package every one of them. This is better than
	 * having plugins be ordered in the same order that they are injected because
	 * that ordering would be influenced by the packaging order.
	 * `ResponderEventPlugin` must occur before `SimpleEventPlugin` so that
	 * preventing default on events is convenient in `SimpleEventPlugin` handlers.
	 */
	
	var DefaultEventPluginOrder = ['ResponderEventPlugin', 'SimpleEventPlugin', 'TapEventPlugin', 'EnterLeaveEventPlugin', 'ChangeEventPlugin', 'SelectEventPlugin', 'BeforeInputEventPlugin'];
	
	module.exports = DefaultEventPluginOrder;

/***/ }),
/* 105 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */
	
	'use strict';
	
	var EventPropagators = __webpack_require__(72);
	var ReactDOMComponentTree = __webpack_require__(65);
	var SyntheticMouseEvent = __webpack_require__(106);
	
	var eventTypes = {
	  mouseEnter: {
	    registrationName: 'onMouseEnter',
	    dependencies: ['topMouseOut', 'topMouseOver']
	  },
	  mouseLeave: {
	    registrationName: 'onMouseLeave',
	    dependencies: ['topMouseOut', 'topMouseOver']
	  }
	};
	
	var EnterLeaveEventPlugin = {
	  eventTypes: eventTypes,
	
	  /**
	   * For almost every interaction we care about, there will be both a top-level
	   * `mouseover` and `mouseout` event that occurs. Only use `mouseout` so that
	   * we do not extract duplicate events. However, moving the mouse into the
	   * browser from outside will not fire a `mouseout` event. In this case, we use
	   * the `mouseover` top-level event.
	   */
	  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	    if (topLevelType === 'topMouseOver' && (nativeEvent.relatedTarget || nativeEvent.fromElement)) {
	      return null;
	    }
	    if (topLevelType !== 'topMouseOut' && topLevelType !== 'topMouseOver') {
	      // Must not be a mouse in or mouse out - ignoring.
	      return null;
	    }
	
	    var win;
	    if (nativeEventTarget.window === nativeEventTarget) {
	      // `nativeEventTarget` is probably a window object.
	      win = nativeEventTarget;
	    } else {
	      // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.
	      var doc = nativeEventTarget.ownerDocument;
	      if (doc) {
	        win = doc.defaultView || doc.parentWindow;
	      } else {
	        win = window;
	      }
	    }
	
	    var from;
	    var to;
	    if (topLevelType === 'topMouseOut') {
	      from = targetInst;
	      var related = nativeEvent.relatedTarget || nativeEvent.toElement;
	      to = related ? ReactDOMComponentTree.getClosestInstanceFromNode(related) : null;
	    } else {
	      // Moving to a node from outside the window.
	      from = null;
	      to = targetInst;
	    }
	
	    if (from === to) {
	      // Nothing pertains to our managed components.
	      return null;
	    }
	
	    var fromNode = from == null ? win : ReactDOMComponentTree.getNodeFromInstance(from);
	    var toNode = to == null ? win : ReactDOMComponentTree.getNodeFromInstance(to);
	
	    var leave = SyntheticMouseEvent.getPooled(eventTypes.mouseLeave, from, nativeEvent, nativeEventTarget);
	    leave.type = 'mouseleave';
	    leave.target = fromNode;
	    leave.relatedTarget = toNode;
	
	    var enter = SyntheticMouseEvent.getPooled(eventTypes.mouseEnter, to, nativeEvent, nativeEventTarget);
	    enter.type = 'mouseenter';
	    enter.target = toNode;
	    enter.relatedTarget = fromNode;
	
	    EventPropagators.accumulateEnterLeaveDispatches(leave, enter, from, to);
	
	    return [leave, enter];
	  }
	};
	
	module.exports = EnterLeaveEventPlugin;

/***/ }),
/* 106 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */
	
	'use strict';
	
	var SyntheticUIEvent = __webpack_require__(107);
	var ViewportMetrics = __webpack_require__(108);
	
	var getEventModifierState = __webpack_require__(109);
	
	/**
	 * @interface MouseEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var MouseEventInterface = {
	  screenX: null,
	  screenY: null,
	  clientX: null,
	  clientY: null,
	  ctrlKey: null,
	  shiftKey: null,
	  altKey: null,
	  metaKey: null,
	  getModifierState: getEventModifierState,
	  button: function (event) {
	    // Webkit, Firefox, IE9+
	    // which:  1 2 3
	    // button: 0 1 2 (standard)
	    var button = event.button;
	    if ('which' in event) {
	      return button;
	    }
	    // IE<9
	    // which:  undefined
	    // button: 0 0 0
	    // button: 1 4 2 (onmouseup)
	    return button === 2 ? 2 : button === 4 ? 1 : 0;
	  },
	  buttons: null,
	  relatedTarget: function (event) {
	    return event.relatedTarget || (event.fromElement === event.srcElement ? event.toElement : event.fromElement);
	  },
	  // "Proprietary" Interface.
	  pageX: function (event) {
	    return 'pageX' in event ? event.pageX : event.clientX + ViewportMetrics.currentScrollLeft;
	  },
	  pageY: function (event) {
	    return 'pageY' in event ? event.pageY : event.clientY + ViewportMetrics.currentScrollTop;
	  }
	};
	
	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticMouseEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}
	
	SyntheticUIEvent.augmentClass(SyntheticMouseEvent, MouseEventInterface);
	
	module.exports = SyntheticMouseEvent;

/***/ }),
/* 107 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */
	
	'use strict';
	
	var SyntheticEvent = __webpack_require__(84);
	
	var getEventTarget = __webpack_require__(101);
	
	/**
	 * @interface UIEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var UIEventInterface = {
	  view: function (event) {
	    if (event.view) {
	      return event.view;
	    }
	
	    var target = getEventTarget(event);
	    if (target.window === target) {
	      // target is a window object
	      return target;
	    }
	
	    var doc = target.ownerDocument;
	    // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.
	    if (doc) {
	      return doc.defaultView || doc.parentWindow;
	    } else {
	      return window;
	    }
	  },
	  detail: function (event) {
	    return event.detail || 0;
	  }
	};
	
	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticEvent}
	 */
	function SyntheticUIEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}
	
	SyntheticEvent.augmentClass(SyntheticUIEvent, UIEventInterface);
	
	module.exports = SyntheticUIEvent;

/***/ }),
/* 108 */
/***/ (function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */
	
	'use strict';
	
	var ViewportMetrics = {
	  currentScrollLeft: 0,
	
	  currentScrollTop: 0,
	
	  refreshScrollValues: function (scrollPosition) {
	    ViewportMetrics.currentScrollLeft = scrollPosition.x;
	    ViewportMetrics.currentScrollTop = scrollPosition.y;
	  }
	};
	
	module.exports = ViewportMetrics;

/***/ }),
/* 109 */
/***/ (function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */
	
	'use strict';
	
	/**
	 * Translation from modifier key to the associated property in the event.
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/#keys-Modifiers
	 */
	
	var modifierKeyToProp = {
	  Alt: 'altKey',
	  Control: 'ctrlKey',
	  Meta: 'metaKey',
	  Shift: 'shiftKey'
	};
	
	// IE8 does not implement getModifierState so we simply map it to the only
	// modifier keys exposed by the event itself, does not support Lock-keys.
	// Currently, all major browsers except Chrome seems to support Lock-keys.
	function modifierStateGetter(keyArg) {
	  var syntheticEvent = this;
	  var nativeEvent = syntheticEvent.nativeEvent;
	  if (nativeEvent.getModifierState) {
	    return nativeEvent.getModifierState(keyArg);
	  }
	  var keyProp = modifierKeyToProp[keyArg];
	  return keyProp ? !!nativeEvent[keyProp] : false;
	}
	
	function getEventModifierState(nativeEvent) {
	  return modifierStateGetter;
	}
	
	module.exports = getEventModifierState;

/***/ }),
/* 110 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */
	
	'use strict';
	
	var DOMProperty = __webpack_require__(67);
	
	var MUST_USE_PROPERTY = DOMProperty.injection.MUST_USE_PROPERTY;
	var HAS_BOOLEAN_VALUE = DOMProperty.injection.HAS_BOOLEAN_VALUE;
	var HAS_NUMERIC_VALUE = DOMProperty.injection.HAS_NUMERIC_VALUE;
	var HAS_POSITIVE_NUMERIC_VALUE = DOMProperty.injection.HAS_POSITIVE_NUMERIC_VALUE;
	var HAS_OVERLOADED_BOOLEAN_VALUE = DOMProperty.injection.HAS_OVERLOADED_BOOLEAN_VALUE;
	
	var HTMLDOMPropertyConfig = {
	  isCustomAttribute: RegExp.prototype.test.bind(new RegExp('^(data|aria)-[' + DOMProperty.ATTRIBUTE_NAME_CHAR + ']*$')),
	  Properties: {
	    /**
	     * Standard Properties
	     */
	    accept: 0,
	    acceptCharset: 0,
	    accessKey: 0,
	    action: 0,
	    allowFullScreen: HAS_BOOLEAN_VALUE,
	    allowTransparency: 0,
	    alt: 0,
	    // specifies target context for links with `preload` type
	    as: 0,
	    async: HAS_BOOLEAN_VALUE,
	    autoComplete: 0,
	    // autoFocus is polyfilled/normalized by AutoFocusUtils
	    // autoFocus: HAS_BOOLEAN_VALUE,
	    autoPlay: HAS_BOOLEAN_VALUE,
	    capture: HAS_BOOLEAN_VALUE,
	    cellPadding: 0,
	    cellSpacing: 0,
	    charSet: 0,
	    challenge: 0,
	    checked: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
	    cite: 0,
	    classID: 0,
	    className: 0,
	    cols: HAS_POSITIVE_NUMERIC_VALUE,
	    colSpan: 0,
	    content: 0,
	    contentEditable: 0,
	    contextMenu: 0,
	    controls: HAS_BOOLEAN_VALUE,
	    controlsList: 0,
	    coords: 0,
	    crossOrigin: 0,
	    data: 0, // For `<object />` acts as `src`.
	    dateTime: 0,
	    'default': HAS_BOOLEAN_VALUE,
	    defer: HAS_BOOLEAN_VALUE,
	    dir: 0,
	    disabled: HAS_BOOLEAN_VALUE,
	    download: HAS_OVERLOADED_BOOLEAN_VALUE,
	    draggable: 0,
	    encType: 0,
	    form: 0,
	    formAction: 0,
	    formEncType: 0,
	    formMethod: 0,
	    formNoValidate: HAS_BOOLEAN_VALUE,
	    formTarget: 0,
	    frameBorder: 0,
	    headers: 0,
	    height: 0,
	    hidden: HAS_BOOLEAN_VALUE,
	    high: 0,
	    href: 0,
	    hrefLang: 0,
	    htmlFor: 0,
	    httpEquiv: 0,
	    icon: 0,
	    id: 0,
	    inputMode: 0,
	    integrity: 0,
	    is: 0,
	    keyParams: 0,
	    keyType: 0,
	    kind: 0,
	    label: 0,
	    lang: 0,
	    list: 0,
	    loop: HAS_BOOLEAN_VALUE,
	    low: 0,
	    manifest: 0,
	    marginHeight: 0,
	    marginWidth: 0,
	    max: 0,
	    maxLength: 0,
	    media: 0,
	    mediaGroup: 0,
	    method: 0,
	    min: 0,
	    minLength: 0,
	    // Caution; `option.selected` is not updated if `select.multiple` is
	    // disabled with `removeAttribute`.
	    multiple: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
	    muted: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
	    name: 0,
	    nonce: 0,
	    noValidate: HAS_BOOLEAN_VALUE,
	    open: HAS_BOOLEAN_VALUE,
	    optimum: 0,
	    pattern: 0,
	    placeholder: 0,
	    playsInline: HAS_BOOLEAN_VALUE,
	    poster: 0,
	    preload: 0,
	    profile: 0,
	    radioGroup: 0,
	    readOnly: HAS_BOOLEAN_VALUE,
	    referrerPolicy: 0,
	    rel: 0,
	    required: HAS_BOOLEAN_VALUE,
	    reversed: HAS_BOOLEAN_VALUE,
	    role: 0,
	    rows: HAS_POSITIVE_NUMERIC_VALUE,
	    rowSpan: HAS_NUMERIC_VALUE,
	    sandbox: 0,
	    scope: 0,
	    scoped: HAS_BOOLEAN_VALUE,
	    scrolling: 0,
	    seamless: HAS_BOOLEAN_VALUE,
	    selected: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
	    shape: 0,
	    size: HAS_POSITIVE_NUMERIC_VALUE,
	    sizes: 0,
	    span: HAS_POSITIVE_NUMERIC_VALUE,
	    spellCheck: 0,
	    src: 0,
	    srcDoc: 0,
	    srcLang: 0,
	    srcSet: 0,
	    start: HAS_NUMERIC_VALUE,
	    step: 0,
	    style: 0,
	    summary: 0,
	    tabIndex: 0,
	    target: 0,
	    title: 0,
	    // Setting .type throws on non-<input> tags
	    type: 0,
	    useMap: 0,
	    value: 0,
	    width: 0,
	    wmode: 0,
	    wrap: 0,
	
	    /**
	     * RDFa Properties
	     */
	    about: 0,
	    datatype: 0,
	    inlist: 0,
	    prefix: 0,
	    // property is also supported for OpenGraph in meta tags.
	    property: 0,
	    resource: 0,
	    'typeof': 0,
	    vocab: 0,
	
	    /**
	     * Non-standard Properties
	     */
	    // autoCapitalize and autoCorrect are supported in Mobile Safari for
	    // keyboard hints.
	    autoCapitalize: 0,
	    autoCorrect: 0,
	    // autoSave allows WebKit/Blink to persist values of input fields on page reloads
	    autoSave: 0,
	    // color is for Safari mask-icon link
	    color: 0,
	    // itemProp, itemScope, itemType are for
	    // Microdata support. See http://schema.org/docs/gs.html
	    itemProp: 0,
	    itemScope: HAS_BOOLEAN_VALUE,
	    itemType: 0,
	    // itemID and itemRef are for Microdata support as well but
	    // only specified in the WHATWG spec document. See
	    // https://html.spec.whatwg.org/multipage/microdata.html#microdata-dom-api
	    itemID: 0,
	    itemRef: 0,
	    // results show looking glass icon and recent searches on input
	    // search fields in WebKit/Blink
	    results: 0,
	    // IE-only attribute that specifies security restrictions on an iframe
	    // as an alternative to the sandbox attribute on IE<10
	    security: 0,
	    // IE-only attribute that controls focus behavior
	    unselectable: 0
	  },
	  DOMAttributeNames: {
	    acceptCharset: 'accept-charset',
	    className: 'class',
	    htmlFor: 'for',
	    httpEquiv: 'http-equiv'
	  },
	  DOMPropertyNames: {},
	  DOMMutationMethods: {
	    value: function (node, value) {
	      if (value == null) {
	        return node.removeAttribute('value');
	      }
	
	      // Number inputs get special treatment due to some edge cases in
	      // Chrome. Let everything else assign the value attribute as normal.
	      // https://github.com/facebook/react/issues/7253#issuecomment-236074326
	      if (node.type !== 'number' || node.hasAttribute('value') === false) {
	        node.setAttribute('value', '' + value);
	      } else if (node.validity && !node.validity.badInput && node.ownerDocument.activeElement !== node) {
	        // Don't assign an attribute if validation reports bad
	        // input. Chrome will clear the value. Additionally, don't
	        // operate on inputs that have focus, otherwise Chrome might
	        // strip off trailing decimal places and cause the user's
	        // cursor position to jump to the beginning of the input.
	        //
	        // In ReactDOMInput, we have an onBlur event that will trigger
	        // this function again when focus is lost.
	        node.setAttribute('value', '' + value);
	      }
	    }
	  }
	};
	
	module.exports = HTMLDOMPropertyConfig;

/***/ }),
/* 111 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */
	
	'use strict';
	
	var DOMChildrenOperations = __webpack_require__(112);
	var ReactDOMIDOperations = __webpack_require__(123);
	
	/**
	 * Abstracts away all functionality of the reconciler that requires knowledge of
	 * the browser context. TODO: These callers should be refactored to avoid the
	 * need for this injection.
	 */
	var ReactComponentBrowserEnvironment = {
	  processChildrenUpdates: ReactDOMIDOperations.dangerouslyProcessChildrenUpdates,
	
	  replaceNodeWithMarkup: DOMChildrenOperations.dangerouslyReplaceNodeWithMarkup
	};
	
	module.exports = ReactComponentBrowserEnvironment;

/***/ }),
/* 112 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */
	
	'use strict';
	
	var DOMLazyTree = __webpack_require__(113);
	var Danger = __webpack_require__(119);
	var ReactDOMComponentTree = __webpack_require__(65);
	var ReactInstrumentation = __webpack_require__(93);
	
	var createMicrosoftUnsafeLocalFunction = __webpack_require__(116);
	var setInnerHTML = __webpack_require__(115);
	var setTextContent = __webpack_require__(117);
	
	function getNodeAfter(parentNode, node) {
	  // Special case for text components, which return [open, close] comments
	  // from getHostNode.
	  if (Array.isArray(node)) {
	    node = node[1];
	  }
	  return node ? node.nextSibling : parentNode.firstChild;
	}
	
	/**
	 * Inserts `childNode` as a child of `parentNode` at the `index`.
	 *
	 * @param {DOMElement} parentNode Parent node in which to insert.
	 * @param {DOMElement} childNode Child node to insert.
	 * @param {number} index Index at which to insert the child.
	 * @internal
	 */
	var insertChildAt = createMicrosoftUnsafeLocalFunction(function (parentNode, childNode, referenceNode) {
	  // We rely exclusively on `insertBefore(node, null)` instead of also using
	  // `appendChild(node)`. (Using `undefined` is not allowed by all browsers so
	  // we are careful to use `null`.)
	  parentNode.insertBefore(childNode, referenceNode);
	});
	
	function insertLazyTreeChildAt(parentNode, childTree, referenceNode) {
	  DOMLazyTree.insertTreeBefore(parentNode, childTree, referenceNode);
	}
	
	function moveChild(parentNode, childNode, referenceNode) {
	  if (Array.isArray(childNode)) {
	    moveDelimitedText(parentNode, childNode[0], childNode[1], referenceNode);
	  } else {
	    insertChildAt(parentNode, childNode, referenceNode);
	  }
	}
	
	function removeChild(parentNode, childNode) {
	  if (Array.isArray(childNode)) {
	    var closingComment = childNode[1];
	    childNode = childNode[0];
	    removeDelimitedText(parentNode, childNode, closingComment);
	    parentNode.removeChild(closingComment);
	  }
	  parentNode.removeChild(childNode);
	}
	
	function moveDelimitedText(parentNode, openingComment, closingComment, referenceNode) {
	  var node = openingComment;
	  while (true) {
	    var nextNode = node.nextSibling;
	    insertChildAt(parentNode, node, referenceNode);
	    if (node === closingComment) {
	      break;
	    }
	    node = nextNode;
	  }
	}
	
	function removeDelimitedText(parentNode, startNode, closingComment) {
	  while (true) {
	    var node = startNode.nextSibling;
	    if (node === closingComment) {
	      // The closing comment is removed by ReactMultiChild.
	      break;
	    } else {
	      parentNode.removeChild(node);
	    }
	  }
	}
	
	function replaceDelimitedText(openingComment, closingComment, stringText) {
	  var parentNode = openingComment.parentNode;
	  var nodeAfterComment = openingComment.nextSibling;
	  if (nodeAfterComment === closingComment) {
	    // There are no text nodes between the opening and closing comments; insert
	    // a new one if stringText isn't empty.
	    if (stringText) {
	      insertChildAt(parentNode, document.createTextNode(stringText), nodeAfterComment);
	    }
	  } else {
	    if (stringText) {
	      // Set the text content of the first node after the opening comment, and
	      // remove all following nodes up until the closing comment.
	      setTextContent(nodeAfterComment, stringText);
	      removeDelimitedText(parentNode, nodeAfterComment, closingComment);
	    } else {
	      removeDelimitedText(parentNode, openingComment, closingComment);
	    }
	  }
	
	  if (true) {
	    ReactInstrumentation.debugTool.onHostOperation({
	      instanceID: ReactDOMComponentTree.getInstanceFromNode(openingComment)._debugID,
	      type: 'replace text',
	      payload: stringText
	    });
	  }
	}
	
	var dangerouslyReplaceNodeWithMarkup = Danger.dangerouslyReplaceNodeWithMarkup;
	if (true) {
	  dangerouslyReplaceNodeWithMarkup = function (oldChild, markup, prevInstance) {
	    Danger.dangerouslyReplaceNodeWithMarkup(oldChild, markup);
	    if (prevInstance._debugID !== 0) {
	      ReactInstrumentation.debugTool.onHostOperation({
	        instanceID: prevInstance._debugID,
	        type: 'replace with',
	        payload: markup.toString()
	      });
	    } else {
	      var nextInstance = ReactDOMComponentTree.getInstanceFromNode(markup.node);
	      if (nextInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onHostOperation({
	          instanceID: nextInstance._debugID,
	          type: 'mount',
	          payload: markup.toString()
	        });
	      }
	    }
	  };
	}
	
	/**
	 * Operations for updating with DOM children.
	 */
	var DOMChildrenOperations = {
	  dangerouslyReplaceNodeWithMarkup: dangerouslyReplaceNodeWithMarkup,
	
	  replaceDelimitedText: replaceDelimitedText,
	
	  /**
	   * Updates a component's children by processing a series of updates. The
	   * update configurations are each expected to have a `parentNode` property.
	   *
	   * @param {array<object>} updates List of update configurations.
	   * @internal
	   */
	  processUpdates: function (parentNode, updates) {
	    if (true) {
	      var parentNodeDebugID = ReactDOMComponentTree.getInstanceFromNode(parentNode)._debugID;
	    }
	
	    for (var k = 0; k < updates.length; k++) {
	      var update = updates[k];
	      switch (update.type) {
	        case 'INSERT_MARKUP':
	          insertLazyTreeChildAt(parentNode, update.content, getNodeAfter(parentNode, update.afterNode));
	          if (true) {
	            ReactInstrumentation.debugTool.onHostOperation({
	              instanceID: parentNodeDebugID,
	              type: 'insert child',
	              payload: {
	                toIndex: update.toIndex,
	                content: update.content.toString()
	              }
	            });
	          }
	          break;
	        case 'MOVE_EXISTING':
	          moveChild(parentNode, update.fromNode, getNodeAfter(parentNode, update.afterNode));
	          if (true) {
	            ReactInstrumentation.debugTool.onHostOperation({
	              instanceID: parentNodeDebugID,
	              type: 'move child',
	              payload: { fromIndex: update.fromIndex, toIndex: update.toIndex }
	            });
	          }
	          break;
	        case 'SET_MARKUP':
	          setInnerHTML(parentNode, update.content);
	          if (true) {
	            ReactInstrumentation.debugTool.onHostOperation({
	              instanceID: parentNodeDebugID,
	              type: 'replace children',
	              payload: update.content.toString()
	            });
	          }
	          break;
	        case 'TEXT_CONTENT':
	          setTextContent(parentNode, update.content);
	          if (true) {
	            ReactInstrumentation.debugTool.onHostOperation({
	              instanceID: parentNodeDebugID,
	              type: 'replace text',
	              payload: update.content.toString()
	            });
	          }
	          break;
	        case 'REMOVE_NODE':
	          removeChild(parentNode, update.fromNode);
	          if (true) {
	            ReactInstrumentation.debugTool.onHostOperation({
	              instanceID: parentNodeDebugID,
	              type: 'remove child',
	              payload: { fromIndex: update.fromIndex }
	            });
	          }
	          break;
	      }
	    }
	  }
	};
	
	module.exports = DOMChildrenOperations;

/***/ }),
/* 113 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2015-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */
	
	'use strict';
	
	var DOMNamespaces = __webpack_require__(114);
	var setInnerHTML = __webpack_require__(115);
	
	var createMicrosoftUnsafeLocalFunction = __webpack_require__(116);
	var setTextContent = __webpack_require__(117);
	
	var ELEMENT_NODE_TYPE = 1;
	var DOCUMENT_FRAGMENT_NODE_TYPE = 11;
	
	/**
	 * In IE (8-11) and Edge, appending nodes with no children is dramatically
	 * faster than appending a full subtree, so we essentially queue up the
	 * .appendChild calls here and apply them so each node is added to its parent
	 * before any children are added.
	 *
	 * In other browsers, doing so is slower or neutral compared to the other order
	 * (in Firefox, twice as slow) so we only do this inversion in IE.
	 *
	 * See https://github.com/spicyj/innerhtml-vs-createelement-vs-clonenode.
	 */
	var enableLazy = typeof document !== 'undefined' && typeof document.documentMode === 'number' || typeof navigator !== 'undefined' && typeof navigator.userAgent === 'string' && /\bEdge\/\d/.test(navigator.userAgent);
	
	function insertTreeChildren(tree) {
	  if (!enableLazy) {
	    return;
	  }
	  var node = tree.node;
	  var children = tree.children;
	  if (children.length) {
	    for (var i = 0; i < children.length; i++) {
	      insertTreeBefore(node, children[i], null);
	    }
	  } else if (tree.html != null) {
	    setInnerHTML(node, tree.html);
	  } else if (tree.text != null) {
	    setTextContent(node, tree.text);
	  }
	}
	
	var insertTreeBefore = createMicrosoftUnsafeLocalFunction(function (parentNode, tree, referenceNode) {
	  // DocumentFragments aren't actually part of the DOM after insertion so
	  // appending children won't update the DOM. We need to ensure the fragment
	  // is properly populated first, breaking out of our lazy approach for just
	  // this level. Also, some <object> plugins (like Flash Player) will read
	  // <param> nodes immediately upon insertion into the DOM, so <object>
	  // must also be populated prior to insertion into the DOM.
	  if (tree.node.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE || tree.node.nodeType === ELEMENT_NODE_TYPE && tree.node.nodeName.toLowerCase() === 'object' && (tree.node.namespaceURI == null || tree.node.namespaceURI === DOMNamespaces.html)) {
	    insertTreeChildren(tree);
	    parentNode.insertBefore(tree.node, referenceNode);
	  } else {
	    parentNode.insertBefore(tree.node, referenceNode);
	    insertTreeChildren(tree);
	  }
	});
	
	function replaceChildWithTree(oldNode, newTree) {
	  oldNode.parentNode.replaceChild(newTree.node, oldNode);
	  insertTreeChildren(newTree);
	}
	
	function queueChild(parentTree, childTree) {
	  if (enableLazy) {
	    parentTree.children.push(childTree);
	  } else {
	    parentTree.node.appendChild(childTree.node);
	  }
	}
	
	function queueHTML(tree, html) {
	  if (enableLazy) {
	    tree.html = html;
	  } else {
	    setInnerHTML(tree.node, html);
	  }
	}
	
	function queueText(tree, text) {
	  if (enableLazy) {
	    tree.text = text;
	  } else {
	    setTextContent(tree.node, text);
	  }
	}
	
	function toString() {
	  return this.node.nodeName;
	}
	
	function DOMLazyTree(node) {
	  return {
	    node: node,
	    children: [],
	    html: null,
	    text: null,
	    toString: toString
	  };
	}
	
	DOMLazyTree.insertTreeBefore = insertTreeBefore;
	DOMLazyTree.replaceChildWithTree = replaceChildWithTree;
	DOMLazyTree.queueChild = queueChild;
	DOMLazyTree.queueHTML = queueHTML;
	DOMLazyTree.queueText = queueText;
	
	module.exports = DOMLazyTree;

/***/ }),
/* 114 */
/***/ (function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */
	
	'use strict';
	
	var DOMNamespaces = {
	  html: 'http://www.w3.org/1999/xhtml',
	  mathml: 'http://www.w3.org/1998/Math/MathML',
	  svg: 'http://www.w3.org/2000/svg'
	};
	
	module.exports = DOMNamespaces;

/***/ }),
/* 115 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */
	
	'use strict';
	
	var ExecutionEnvironment = __webpack_require__(79);
	var DOMNamespaces = __webpack_require__(114);
	
	var WHITESPACE_TEST = /^[ \r\n\t\f]/;
	var NONVISIBLE_TEST = /<(!--|link|noscript|meta|script|style)[ \r\n\t\f\/>]/;
	
	var createMicrosoftUnsafeLocalFunction = __webpack_require__(116);
	
	// SVG temp container for IE lacking innerHTML
	var reusableSVGContainer;
	
	/**
	 * Set the innerHTML property of a node, ensuring that whitespace is preserved
	 * even in IE8.
	 *
	 * @param {DOMElement} node
	 * @param {string} html
	 * @internal
	 */
	var setInnerHTML = createMicrosoftUnsafeLocalFunction(function (node, html) {
	  // IE does not have innerHTML for SVG nodes, so instead we inject the
	  // new markup in a temp node and then move the child nodes across into
	  // the target node
	  if (node.namespaceURI === DOMNamespaces.svg && !('innerHTML' in node)) {
	    reusableSVGContainer = reusableSVGContainer || document.createElement('div');
	    reusableSVGContainer.innerHTML = '<svg>' + html + '</svg>';
	    var svgNode = reusableSVGContainer.firstChild;
	    while (svgNode.firstChild) {
	      node.appendChild(svgNode.firstChild);
	    }
	  } else {
	    node.innerHTML = html;
	  }
	});
	
	if (ExecutionEnvironment.canUseDOM) {
	  // IE8: When updating a just created node with innerHTML only leading
	  // whitespace is removed. When updating an existing node with innerHTML
	  // whitespace in root TextNodes is also collapsed.
	  // @see quirksmode.org/bugreports/archives/2004/11/innerhtml_and_t.html
	
	  // Feature detection; only IE8 is known to behave improperly like this.
	  var testElement = document.createElement('div');
	  testElement.innerHTML = ' ';
	  if (testElement.innerHTML === '') {
	    setInnerHTML = function (node, html) {
	      // Magic theory: IE8 supposedly differentiates between added and updated
	      // nodes when processing innerHTML, innerHTML on updated nodes suffers
	      // from worse whitespace behavior. Re-adding a node like this triggers
	      // the initial and more favorable whitespace behavior.
	      // TODO: What to do on a detached node?
	      if (node.parentNode) {
	        node.parentNode.replaceChild(node, node);
	      }
	
	      // We also implement a workaround for non-visible tags disappearing into
	      // thin air on IE8, this only happens if there is no visible text
	      // in-front of the non-visible tags. Piggyback on the whitespace fix
	      // and simply check if any non-visible tags appear in the source.
	      if (WHITESPACE_TEST.test(html) || html[0] === '<' && NONVISIBLE_TEST.test(html)) {
	        // Recover leading whitespace by temporarily prepending any character.
	        // \uFEFF has the potential advantage of being zero-width/invisible.
	        // UglifyJS drops U+FEFF chars when parsing, so use String.fromCharCode
	        // in hopes that this is preserved even if "\uFEFF" is transformed to
	        // the actual Unicode character (by Babel, for example).
	        // https://github.com/mishoo/UglifyJS2/blob/v2.4.20/lib/parse.js#L216
	        node.innerHTML = String.fromCharCode(0xfeff) + html;
	
	        // deleteData leaves an empty `TextNode` which offsets the index of all
	        // children. Definitely want to avoid this.
	        var textNode = node.firstChild;
	        if (textNode.data.length === 1) {
	          node.removeChild(textNode);
	        } else {
	          textNode.deleteData(0, 1);
	        }
	      } else {
	        node.innerHTML = html;
	      }
	    };
	  }
	  testElement = null;
	}
	
	module.exports = setInnerHTML;

/***/ }),
/* 116 */
/***/ (function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */
	
	/* globals MSApp */
	
	'use strict';
	
	/**
	 * Create a function which has 'unsafe' privileges (required by windows8 apps)
	 */
	
	var createMicrosoftUnsafeLocalFunction = function (func) {
	  if (typeof MSApp !== 'undefined' && MSApp.execUnsafeLocalFunction) {
	    return function (arg0, arg1, arg2, arg3) {
	      MSApp.execUnsafeLocalFunction(function () {
	        return func(arg0, arg1, arg2, arg3);
	      });
	    };
	  } else {
	    return func;
	  }
	};
	
	module.exports = createMicrosoftUnsafeLocalFunction;

/***/ }),
/* 117 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */
	
	'use strict';
	
	var ExecutionEnvironment = __webpack_require__(79);
	var escapeTextContentForBrowser = __webpack_require__(118);
	var setInnerHTML = __webpack_require__(115);
	
	/**
	 * Set the textContent property of a node, ensuring that whitespace is preserved
	 * even in IE8. innerText is a poor substitute for textContent and, among many
	 * issues, inserts <br> instead of the literal newline chars. innerHTML behaves
	 * as it should.
	 *
	 * @param {DOMElement} node
	 * @param {string} text
	 * @internal
	 */
	var setTextContent = function (node, text) {
	  if (text) {
	    var firstChild = node.firstChild;
	
	    if (firstChild && firstChild === node.lastChild && firstChild.nodeType === 3) {
	      firstChild.nodeValue = text;
	      return;
	    }
	  }
	  node.textContent = text;
	};
	
	if (ExecutionEnvironment.canUseDOM) {
	  if (!('textContent' in document.documentElement)) {
	    setTextContent = function (node, text) {
	      if (node.nodeType === 3) {
	        node.nodeValue = text;
	        return;
	      }
	      setInnerHTML(node, escapeTextContentForBrowser(text));
	    };
	  }
	}
	
	module.exports = setTextContent;

/***/ }),
/* 118 */
/***/ (function(module, exports) {

	/**
	 * Copyright (c) 2016-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * Based on the escape-html library, which is used under the MIT License below:
	 *
	 * Copyright (c) 2012-2013 TJ Holowaychuk
	 * Copyright (c) 2015 Andreas Lubbe
	 * Copyright (c) 2015 Tiancheng "Timothy" Gu
	 *
	 * Permission is hereby granted, free of charge, to any person obtaining
	 * a copy of this software and associated documentation files (the
	 * 'Software'), to deal in the Software without restriction, including
	 * without limitation the rights to use, copy, modify, merge, publish,
	 * distribute, sublicense, and/or sell copies of the Software, and to
	 * permit persons to whom the Software is furnished to do so, subject to
	 * the following conditions:
	 *
	 * The above copyright notice and this permission notice shall be
	 * included in all copies or substantial portions of the Software.
	 *
	 * THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,
	 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
	 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
	 * IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
	 * CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
	 * TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
	 * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
	 *
	 */
	
	'use strict';
	
	// code copied and modified from escape-html
	/**
	 * Module variables.
	 * @private
	 */
	
	var matchHtmlRegExp = /["'&<>]/;
	
	/**
	 * Escape special characters in the given string of html.
	 *
	 * @param  {string} string The string to escape for inserting into HTML
	 * @return {string}
	 * @public
	 */
	
	function escapeHtml(string) {
	  var str = '' + string;
	  var match = matchHtmlRegExp.exec(str);
	
	  if (!match) {
	    return str;
	  }
	
	  var escape;
	  var html = '';
	  var index = 0;
	  var lastIndex = 0;
	
	  for (index = match.index; index < str.length; index++) {
	    switch (str.charCodeAt(index)) {
	      case 34:
	        // "
	        escape = '&quot;';
	        break;
	      case 38:
	        // &
	        escape = '&amp;';
	        break;
	      case 39:
	        // '
	        escape = '&#x27;'; // modified from escape-html; used to be '&#39'
	        break;
	      case 60:
	        // <
	        escape = '&lt;';
	        break;
	      case 62:
	        // >
	        escape = '&gt;';
	        break;
	      default:
	        continue;
	    }
	
	    if (lastIndex !== index) {
	      html += str.substring(lastIndex, index);
	    }
	
	    lastIndex = index + 1;
	    html += escape;
	  }
	
	  return lastIndex !== index ? html + str.substring(lastIndex, index) : html;
	}
	// end code copied and modified from escape-html
	
	/**
	 * Escapes text to prevent scripting attacks.
	 *
	 * @param {*} text Text value to escape.
	 * @return {string} An escaped string.
	 */
	function escapeTextContentForBrowser(text) {
	  if (typeof text === 'boolean' || typeof text === 'number') {
	    // this shortcircuit helps perf for types that we know will never have
	    // special characters, especially given that this function is used often
	    // for numeric dom ids.
	    return '' + text;
	  }
	  return escapeHtml(text);
	}
	
	module.exports = escapeTextContentForBrowser;

/***/ }),
/* 119 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(66);
	
	var DOMLazyTree = __webpack_require__(113);
	var ExecutionEnvironment = __webpack_require__(79);
	
	var createNodesFromMarkup = __webpack_require__(120);
	var emptyFunction = __webpack_require__(32);
	var invariant = __webpack_require__(35);
	
	var Danger = {
	  /**
	   * Replaces a node with a string of markup at its current position within its
	   * parent. The markup must render into a single root node.
	   *
	   * @param {DOMElement} oldChild Child node to replace.
	   * @param {string} markup Markup to render in place of the child node.
	   * @internal
	   */
	  dangerouslyReplaceNodeWithMarkup: function (oldChild, markup) {
	    !ExecutionEnvironment.canUseDOM ?  true ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Cannot render markup in a worker thread. Make sure `window` and `document` are available globally before requiring React when unit testing or use ReactDOMServer.renderToString() for server rendering.') : _prodInvariant('56') : void 0;
	    !markup ?  true ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Missing markup.') : _prodInvariant('57') : void 0;
	    !(oldChild.nodeName !== 'HTML') ?  true ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Cannot replace markup of the <html> node. This is because browser quirks make this unreliable and/or slow. If you want to render to the root you must use server rendering. See ReactDOMServer.renderToString().') : _prodInvariant('58') : void 0;
	
	    if (typeof markup === 'string') {
	      var newChild = createNodesFromMarkup(markup, emptyFunction)[0];
	      oldChild.parentNode.replaceChild(newChild, oldChild);
	    } else {
	      DOMLazyTree.replaceChildWithTree(oldChild, markup);
	    }
	  }
	};
	
	module.exports = Danger;

/***/ }),
/* 120 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * @typechecks
	 */
	
	/*eslint-disable fb-www/unsafe-html*/
	
	var ExecutionEnvironment = __webpack_require__(79);
	
	var createArrayFromMixed = __webpack_require__(121);
	var getMarkupWrap = __webpack_require__(122);
	var invariant = __webpack_require__(35);
	
	/**
	 * Dummy container used to render all markup.
	 */
	var dummyNode = ExecutionEnvironment.canUseDOM ? document.createElement('div') : null;
	
	/**
	 * Pattern used by `getNodeName`.
	 */
	var nodeNamePattern = /^\s*<(\w+)/;
	
	/**
	 * Extracts the `nodeName` of the first element in a string of markup.
	 *
	 * @param {string} markup String of markup.
	 * @return {?string} Node name of the supplied markup.
	 */
	function getNodeName(markup) {
	  var nodeNameMatch = markup.match(nodeNamePattern);
	  return nodeNameMatch && nodeNameMatch[1].toLowerCase();
	}
	
	/**
	 * Creates an array containing the nodes rendered from the supplied markup. The
	 * optionally supplied `handleScript` function will be invoked once for each
	 * <script> element that is rendered. If no `handleScript` function is supplied,
	 * an exception is thrown if any <script> elements are rendered.
	 *
	 * @param {string} markup A string of valid HTML markup.
	 * @param {?function} handleScript Invoked once for each rendered <script>.
	 * @return {array<DOMElement|DOMTextNode>} An array of rendered nodes.
	 */
	function createNodesFromMarkup(markup, handleScript) {
	  var node = dummyNode;
	  !!!dummyNode ?  true ? invariant(false, 'createNodesFromMarkup dummy not initialized') : invariant(false) : void 0;
	  var nodeName = getNodeName(markup);
	
	  var wrap = nodeName && getMarkupWrap(nodeName);
	  if (wrap) {
	    node.innerHTML = wrap[1] + markup + wrap[2];
	
	    var wrapDepth = wrap[0];
	    while (wrapDepth--) {
	      node = node.lastChild;
	    }
	  } else {
	    node.innerHTML = markup;
	  }
	
	  var scripts = node.getElementsByTagName('script');
	  if (scripts.length) {
	    !handleScript ?  true ? invariant(false, 'createNodesFromMarkup(...): Unexpected <script> element rendered.') : invariant(false) : void 0;
	    createArrayFromMixed(scripts).forEach(handleScript);
	  }
	
	  var nodes = Array.from(node.childNodes);
	  while (node.lastChild) {
	    node.removeChild(node.lastChild);
	  }
	  return nodes;
	}
	
	module.exports = createNodesFromMarkup;

/***/ }),
/* 121 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * @typechecks
	 */
	
	var invariant = __webpack_require__(35);
	
	/**
	 * Convert array-like objects to arrays.
	 *
	 * This API assumes the caller knows the contents of the data type. For less
	 * well defined inputs use createArrayFromMixed.
	 *
	 * @param {object|function|filelist} obj
	 * @return {array}
	 */
	function toArray(obj) {
	  var length = obj.length;
	
	  // Some browsers builtin objects can report typeof 'function' (e.g. NodeList
	  // in old versions of Safari).
	  !(!Array.isArray(obj) && (typeof obj === 'object' || typeof obj === 'function')) ?  true ? invariant(false, 'toArray: Array-like object expected') : invariant(false) : void 0;
	
	  !(typeof length === 'number') ?  true ? invariant(false, 'toArray: Object needs a length property') : invariant(false) : void 0;
	
	  !(length === 0 || length - 1 in obj) ?  true ? invariant(false, 'toArray: Object should have keys for indices') : invariant(false) : void 0;
	
	  !(typeof obj.callee !== 'function') ?  true ? invariant(false, 'toArray: Object can\'t be `arguments`. Use rest params ' + '(function(...args) {}) or Array.from() instead.') : invariant(false) : void 0;
	
	  // Old IE doesn't give collections access to hasOwnProperty. Assume inputs
	  // without method will throw during the slice call and skip straight to the
	  // fallback.
	  if (obj.hasOwnProperty) {
	    try {
	      return Array.prototype.slice.call(obj);
	    } catch (e) {
	      // IE < 9 does not support Array#slice on collections objects
	    }
	  }
	
	  // Fall back to copying key by key. This assumes all keys have a value,
	  // so will not preserve sparsely populated inputs.
	  var ret = Array(length);
	  for (var ii = 0; ii < length; ii++) {
	    ret[ii] = obj[ii];
	  }
	  return ret;
	}
	
	/**
	 * Perform a heuristic test to determine if an object is "array-like".
	 *
	 *   A monk asked Joshu, a Zen master, "Has a dog Buddha nature?"
	 *   Joshu replied: "Mu."
	 *
	 * This function determines if its argument has "array nature": it returns
	 * true if the argument is an actual array, an `arguments' object, or an
	 * HTMLCollection (e.g. node.childNodes or node.getElementsByTagName()).
	 *
	 * It will return false for other array-like objects like Filelist.
	 *
	 * @param {*} obj
	 * @return {boolean}
	 */
	function hasArrayNature(obj) {
	  return (
	    // not null/false
	    !!obj && (
	    // arrays are objects, NodeLists are functions in Safari
	    typeof obj == 'object' || typeof obj == 'function') &&
	    // quacks like an array
	    'length' in obj &&
	    // not window
	    !('setInterval' in obj) &&
	    // no DOM node should be considered an array-like
	    // a 'select' element has 'length' and 'item' properties on IE8
	    typeof obj.nodeType != 'number' && (
	    // a real array
	    Array.isArray(obj) ||
	    // arguments
	    'callee' in obj ||
	    // HTMLCollection/NodeList
	    'item' in obj)
	  );
	}
	
	/**
	 * Ensure that the argument is an array by wrapping it in an array if it is not.
	 * Creates a copy of the argument if it is already an array.
	 *
	 * This is mostly useful idiomatically:
	 *
	 *   var createArrayFromMixed = require('createArrayFromMixed');
	 *
	 *   function takesOneOrMoreThings(things) {
	 *     things = createArrayFromMixed(things);
	 *     ...
	 *   }
	 *
	 * This allows you to treat `things' as an array, but accept scalars in the API.
	 *
	 * If you need to convert an array-like object, like `arguments`, into an array
	 * use toArray instead.
	 *
	 * @param {*} obj
	 * @return {array}
	 */
	function createArrayFromMixed(obj) {
	  if (!hasArrayNature(obj)) {
	    return [obj];
	  } else if (Array.isArray(obj)) {
	    return obj.slice();
	  } else {
	    return toArray(obj);
	  }
	}
	
	module.exports = createArrayFromMixed;

/***/ }),
/* 122 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */
	
	/*eslint-disable fb-www/unsafe-html */
	
	var ExecutionEnvironment = __webpack_require__(79);
	
	var invariant = __webpack_require__(35);
	
	/**
	 * Dummy container used to detect which wraps are necessary.
	 */
	var dummyNode = ExecutionEnvironment.canUseDOM ? document.createElement('div') : null;
	
	/**
	 * Some browsers cannot use `innerHTML` to render certain elements standalone,
	 * so we wrap them, render the wrapped nodes, then extract the desired node.
	 *
	 * In IE8, certain elements cannot render alone, so wrap all elements ('*').
	 */
	
	var shouldWrap = {};
	
	var selectWrap = [1, '<select multiple="true">', '</select>'];
	var tableWrap = [1, '<table>', '</table>'];
	var trWrap = [3, '<table><tbody><tr>', '</tr></tbody></table>'];
	
	var svgWrap = [1, '<svg xmlns="http://www.w3.org/2000/svg">', '</svg>'];
	
	var markupWrap = {
	  '*': [1, '?<div>', '</div>'],
	
	  'area': [1, '<map>', '</map>'],
	  'col': [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>'],
	  'legend': [1, '<fieldset>', '</fieldset>'],
	  'param': [1, '<object>', '</object>'],
	  'tr': [2, '<table><tbody>', '</tbody></table>'],
	
	  'optgroup': selectWrap,
	  'option': selectWrap,
	
	  'caption': tableWrap,
	  'colgroup': tableWrap,
	  'tbody': tableWrap,
	  'tfoot': tableWrap,
	  'thead': tableWrap,
	
	  'td': trWrap,
	  'th': trWrap
	};
	
	// Initialize the SVG elements since we know they'll always need to be wrapped
	// consistently. If they are created inside a <div> they will be initialized in
	// the wrong namespace (and will not display).
	var svgElements = ['circle', 'clipPath', 'defs', 'ellipse', 'g', 'image', 'line', 'linearGradient', 'mask', 'path', 'pattern', 'polygon', 'polyline', 'radialGradient', 'rect', 'stop', 'text', 'tspan'];
	svgElements.forEach(function (nodeName) {
	  markupWrap[nodeName] = svgWrap;
	  shouldWrap[nodeName] = true;
	});
	
	/**
	 * Gets the markup wrap configuration for the supplied `nodeName`.
	 *
	 * NOTE: This lazily detects which wraps are necessary for the current browser.
	 *
	 * @param {string} nodeName Lowercase `nodeName`.
	 * @return {?array} Markup wrap configuration, if applicable.
	 */
	function getMarkupWrap(nodeName) {
	  !!!dummyNode ?  true ? invariant(false, 'Markup wrapping node not initialized') : invariant(false) : void 0;
	  if (!markupWrap.hasOwnProperty(nodeName)) {
	    nodeName = '*';
	  }
	  if (!shouldWrap.hasOwnProperty(nodeName)) {
	    if (nodeName === '*') {
	      dummyNode.innerHTML = '<link />';
	    } else {
	      dummyNode.innerHTML = '<' + nodeName + '></' + nodeName + '>';
	    }
	    shouldWrap[nodeName] = !dummyNode.firstChild;
	  }
	  return shouldWrap[nodeName] ? markupWrap[nodeName] : null;
	}
	
	module.exports = getMarkupWrap;

/***/ }),
/* 123 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */
	
	'use strict';
	
	var DOMChildrenOperations = __webpack_require__(112);
	var ReactDOMComponentTree = __webpack_require__(65);
	
	/**
	 * Operations used to process updates to DOM nodes.
	 */
	var ReactDOMIDOperations = {
	  /**
	   * Updates a component's children by processing a series of updates.
	   *
	   * @param {array<object>} updates List of update configurations.
	   * @internal
	   */
	  dangerouslyProcessChildrenUpdates: function (parentInst, updates) {
	    var node = ReactDOMComponentTree.getNodeFromInstance(parentInst);
	    DOMChildrenOperations.processUpdates(node, updates);
	  }
	};
	
	module.exports = ReactDOMIDOperations;

/***/ }),
/* 124 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */
	
	/* global hasOwnProperty:true */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(66),
	    _assign = __webpack_require__(27);
	
	var AutoFocusUtils = __webpack_require__(125);
	var CSSPropertyOperations = __webpack_require__(127);
	var DOMLazyTree = __webpack_require__(113);
	var DOMNamespaces = __webpack_require__(114);
	var DOMProperty = __webpack_require__(67);
	var DOMPropertyOperations = __webpack_require__(135);
	var EventPluginHub = __webpack_require__(73);
	var EventPluginRegistry = __webpack_require__(74);
	var ReactBrowserEventEmitter = __webpack_require__(137);
	var ReactDOMComponentFlags = __webpack_require__(68);
	var ReactDOMComponentTree = __webpack_require__(65);
	var ReactDOMInput = __webpack_require__(140);
	var ReactDOMOption = __webpack_require__(143);
	var ReactDOMSelect = __webpack_require__(144);
	var ReactDOMTextarea = __webpack_require__(145);
	var ReactInstrumentation = __webpack_require__(93);
	var ReactMultiChild = __webpack_require__(146);
	var ReactServerRenderingTransaction = __webpack_require__(165);
	
	var emptyFunction = __webpack_require__(32);
	var escapeTextContentForBrowser = __webpack_require__(118);
	var invariant = __webpack_require__(35);
	var isEventSupported = __webpack_require__(102);
	var shallowEqual = __webpack_require__(155);
	var inputValueTracking = __webpack_require__(100);
	var validateDOMNesting = __webpack_require__(168);
	var warning = __webpack_require__(31);
	
	var Flags = ReactDOMComponentFlags;
	var deleteListener = EventPluginHub.deleteListener;
	var getNode = ReactDOMComponentTree.getNodeFromInstance;
	var listenTo = ReactBrowserEventEmitter.listenTo;
	var registrationNameModules = EventPluginRegistry.registrationNameModules;
	
	// For quickly matching children type, to test if can be treated as content.
	var CONTENT_TYPES = { string: true, number: true };
	
	var STYLE = 'style';
	var HTML = '__html';
	var RESERVED_PROPS = {
	  children: null,
	  dangerouslySetInnerHTML: null,
	  suppressContentEditableWarning: null
	};
	
	// Node type for document fragments (Node.DOCUMENT_FRAGMENT_NODE).
	var DOC_FRAGMENT_TYPE = 11;
	
	function getDeclarationErrorAddendum(internalInstance) {
	  if (internalInstance) {
	    var owner = internalInstance._currentElement._owner || null;
	    if (owner) {
	      var name = owner.getName();
	      if (name) {
	        return ' This DOM node was rendered by `' + name + '`.';
	      }
	    }
	  }
	  return '';
	}
	
	function friendlyStringify(obj) {
	  if (typeof obj === 'object') {
	    if (Array.isArray(obj)) {
	      return '[' + obj.map(friendlyStringify).join(', ') + ']';
	    } else {
	      var pairs = [];
	      for (var key in obj) {
	        if (Object.prototype.hasOwnProperty.call(obj, key)) {
	          var keyEscaped = /^[a-z$_][\w$_]*$/i.test(key) ? key : JSON.stringify(key);
	          pairs.push(keyEscaped + ': ' + friendlyStringify(obj[key]));
	        }
	      }
	      return '{' + pairs.join(', ') + '}';
	    }
	  } else if (typeof obj === 'string') {
	    return JSON.stringify(obj);
	  } else if (typeof obj === 'function') {
	    return '[function object]';
	  }
	  // Differs from JSON.stringify in that undefined because undefined and that
	  // inf and nan don't become null
	  return String(obj);
	}
	
	var styleMutationWarning = {};
	
	function checkAndWarnForMutatedStyle(style1, style2, component) {
	  if (style1 == null || style2 == null) {
	    return;
	  }
	  if (shallowEqual(style1, style2)) {
	    return;
	  }
	
	  var componentName = component._tag;
	  var owner = component._currentElement._owner;
	  var ownerName;
	  if (owner) {
	    ownerName = owner.getName();
	  }
	
	  var hash = ownerName + '|' + componentName;
	
	  if (styleMutationWarning.hasOwnProperty(hash)) {
	    return;
	  }
	
	  styleMutationWarning[hash] = true;
	
	   true ? warning(false, '`%s` was passed a style object that has previously been mutated. ' + 'Mutating `style` is deprecated. Consider cloning it beforehand. Check ' + 'the `render` %s. Previous style: %s. Mutated style: %s.', componentName, owner ? 'of `' + ownerName + '`' : 'using <' + componentName + '>', friendlyStringify(style1), friendlyStringify(style2)) : void 0;
	}
	
	/**
	 * @param {object} component
	 * @param {?object} props
	 */
	function assertValidProps(component, props) {
	  if (!props) {
	    return;
	  }
	  // Note the use of `==` which checks for null or undefined.
	  if (voidElementTags[component._tag]) {
	    !(props.children == null && props.dangerouslySetInnerHTML == null) ?  true ? invariant(false, '%s is a void element tag and must neither have `children` nor use `dangerouslySetInnerHTML`.%s', component._tag, component._currentElement._owner ? ' Check the render method of ' + component._currentElement._owner.getName() + '.' : '') : _prodInvariant('137', component._tag, component._currentElement._owner ? ' Check the render method of ' + component._currentElement._owner.getName() + '.' : '') : void 0;
	  }
	  if (props.dangerouslySetInnerHTML != null) {
	    !(props.children == null) ?  true ? invariant(false, 'Can only set one of `children` or `props.dangerouslySetInnerHTML`.') : _prodInvariant('60') : void 0;
	    !(typeof props.dangerouslySetInnerHTML === 'object' && HTML in props.dangerouslySetInnerHTML) ?  true ? invariant(false, '`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. Please visit https://fb.me/react-invariant-dangerously-set-inner-html for more information.') : _prodInvariant('61') : void 0;
	  }
	  if (true) {
	     true ? warning(props.innerHTML == null, 'Directly setting property `innerHTML` is not permitted. ' + 'For more information, lookup documentation on `dangerouslySetInnerHTML`.') : void 0;
	     true ? warning(props.suppressContentEditableWarning || !props.contentEditable || props.children == null, 'A component is `contentEditable` and contains `children` managed by ' + 'React. It is now your responsibility to guarantee that none of ' + 'those nodes are unexpectedly modified or duplicated. This is ' + 'probably not intentional.') : void 0;
	     true ? warning(props.onFocusIn == null && props.onFocusOut == null, 'React uses onFocus and onBlur instead of onFocusIn and onFocusOut. ' + 'All React events are normalized to bubble, so onFocusIn and onFocusOut ' + 'are not needed/supported by React.') : void 0;
	  }
	  !(props.style == null || typeof props.style === 'object') ?  true ? invariant(false, 'The `style` prop expects a mapping from style properties to values, not a string. For example, style={{marginRight: spacing + \'em\'}} when using JSX.%s', getDeclarationErrorAddendum(component)) : _prodInvariant('62', getDeclarationErrorAddendum(component)) : void 0;
	}
	
	function enqueuePutListener(inst, registrationName, listener, transaction) {
	  if (transaction instanceof ReactServerRenderingTransaction) {
	    return;
	  }
	  if (true) {
	    // IE8 has no API for event capturing and the `onScroll` event doesn't
	    // bubble.
	     true ? warning(registrationName !== 'onScroll' || isEventSupported('scroll', true), "This browser doesn't support the `onScroll` event") : void 0;
	  }
	  var containerInfo = inst._hostContainerInfo;
	  var isDocumentFragment = containerInfo._node && containerInfo._node.nodeType === DOC_FRAGMENT_TYPE;
	  var doc = isDocumentFragment ? containerInfo._node : containerInfo._ownerDocument;
	  listenTo(registrationName, doc);
	  transaction.getReactMountReady().enqueue(putListener, {
	    inst: inst,
	    registrationName: registrationName,
	    listener: listener
	  });
	}
	
	function putListener() {
	  var listenerToPut = this;
	  EventPluginHub.putListener(listenerToPut.inst, listenerToPut.registrationName, listenerToPut.listener);
	}
	
	function inputPostMount() {
	  var inst = this;
	  ReactDOMInput.postMountWrapper(inst);
	}
	
	function textareaPostMount() {
	  var inst = this;
	  ReactDOMTextarea.postMountWrapper(inst);
	}
	
	function optionPostMount() {
	  var inst = this;
	  ReactDOMOption.postMountWrapper(inst);
	}
	
	var setAndValidateContentChildDev = emptyFunction;
	if (true) {
	  setAndValidateContentChildDev = function (content) {
	    var hasExistingContent = this._contentDebugID != null;
	    var debugID = this._debugID;
	    // This ID represents the inlined child that has no backing instance:
	    var contentDebugID = -debugID;
	
	    if (content == null) {
	      if (hasExistingContent) {
	        ReactInstrumentation.debugTool.onUnmountComponent(this._contentDebugID);
	      }
	      this._contentDebugID = null;
	      return;
	    }
	
	    validateDOMNesting(null, String(content), this, this._ancestorInfo);
	    this._contentDebugID = contentDebugID;
	    if (hasExistingContent) {
	      ReactInstrumentation.debugTool.onBeforeUpdateComponent(contentDebugID, content);
	      ReactInstrumentation.debugTool.onUpdateComponent(contentDebugID);
	    } else {
	      ReactInstrumentation.debugTool.onBeforeMountComponent(contentDebugID, content, debugID);
	      ReactInstrumentation.debugTool.onMountComponent(contentDebugID);
	      ReactInstrumentation.debugTool.onSetChildren(debugID, [contentDebugID]);
	    }
	  };
	}
	
	// There are so many media events, it makes sense to just
	// maintain a list rather than create a `trapBubbledEvent` for each
	var mediaEvents = {
	  topAbort: 'abort',
	  topCanPlay: 'canplay',
	  topCanPlayThrough: 'canplaythrough',
	  topDurationChange: 'durationchange',
	  topEmptied: 'emptied',
	  topEncrypted: 'encrypted',
	  topEnded: 'ended',
	  topError: 'error',
	  topLoadedData: 'loadeddata',
	  topLoadedMetadata: 'loadedmetadata',
	  topLoadStart: 'loadstart',
	  topPause: 'pause',
	  topPlay: 'play',
	  topPlaying: 'playing',
	  topProgress: 'progress',
	  topRateChange: 'ratechange',
	  topSeeked: 'seeked',
	  topSeeking: 'seeking',
	  topStalled: 'stalled',
	  topSuspend: 'suspend',
	  topTimeUpdate: 'timeupdate',
	  topVolumeChange: 'volumechange',
	  topWaiting: 'waiting'
	};
	
	function trackInputValue() {
	  inputValueTracking.track(this);
	}
	
	function trapBubbledEventsLocal() {
	  var inst = this;
	  // If a component renders to null or if another component fatals and causes
	  // the state of the tree to be corrupted, `node` here can be null.
	  !inst._rootNodeID ?  true ? invariant(false, 'Must be mounted to trap events') : _prodInvariant('63') : void 0;
	  var node = getNode(inst);
	  !node ?  true ? invariant(false, 'trapBubbledEvent(...): Requires node to be rendered.') : _prodInvariant('64') : void 0;
	
	  switch (inst._tag) {
	    case 'iframe':
	    case 'object':
	      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent('topLoad', 'load', node)];
	      break;
	    case 'video':
	    case 'audio':
	      inst._wrapperState.listeners = [];
	      // Create listener for each media event
	      for (var event in mediaEvents) {
	        if (mediaEvents.hasOwnProperty(event)) {
	          inst._wrapperState.listeners.push(ReactBrowserEventEmitter.trapBubbledEvent(event, mediaEvents[event], node));
	        }
	      }
	      break;
	    case 'source':
	      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent('topError', 'error', node)];
	      break;
	    case 'img':
	      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent('topError', 'error', node), ReactBrowserEventEmitter.trapBubbledEvent('topLoad', 'load', node)];
	      break;
	    case 'form':
	      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent('topReset', 'reset', node), ReactBrowserEventEmitter.trapBubbledEvent('topSubmit', 'submit', node)];
	      break;
	    case 'input':
	    case 'select':
	    case 'textarea':
	      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent('topInvalid', 'invalid', node)];
	      break;
	  }
	}
	
	function postUpdateSelectWrapper() {
	  ReactDOMSelect.postUpdateWrapper(this);
	}
	
	// For HTML, certain tags should omit their close tag. We keep a whitelist for
	// those special-case tags.
	
	var omittedCloseTags = {
	  area: true,
	  base: true,
	  br: true,
	  col: true,
	  embed: true,
	  hr: true,
	  img: true,
	  input: true,
	  keygen: true,
	  link: true,
	  meta: true,
	  param: true,
	  source: true,
	  track: true,
	  wbr: true
	  // NOTE: menuitem's close tag should be omitted, but that causes problems.
	};
	
	var newlineEatingTags = {
	  listing: true,
	  pre: true,
	  textarea: true
	};
	
	// For HTML, certain tags cannot have children. This has the same purpose as
	// `omittedCloseTags` except that `menuitem` should still have its closing tag.
	
	var voidElementTags = _assign({
	  menuitem: true
	}, omittedCloseTags);
	
	// We accept any tag to be rendered but since this gets injected into arbitrary
	// HTML, we want to make sure that it's a safe tag.
	// http://www.w3.org/TR/REC-xml/#NT-Name
	
	var VALID_TAG_REGEX = /^[a-zA-Z][a-zA-Z:_\.\-\d]*$/; // Simplified subset
	var validatedTagCache = {};
	var hasOwnProperty = {}.hasOwnProperty;
	
	function validateDangerousTag(tag) {
	  if (!hasOwnProperty.call(validatedTagCache, tag)) {
	    !VALID_TAG_REGEX.test(tag) ?  true ? invariant(false, 'Invalid tag: %s', tag) : _prodInvariant('65', tag) : void 0;
	    validatedTagCache[tag] = true;
	  }
	}
	
	function isCustomComponent(tagName, props) {
	  return tagName.indexOf('-') >= 0 || props.is != null;
	}
	
	var globalIdCounter = 1;
	
	/**
	 * Creates a new React class that is idempotent and capable of containing other
	 * React components. It accepts event listeners and DOM properties that are
	 * valid according to `DOMProperty`.
	 *
	 *  - Event listeners: `onClick`, `onMouseDown`, etc.
	 *  - DOM properties: `className`, `name`, `title`, etc.
	 *
	 * The `style` property functions differently from the DOM API. It accepts an
	 * object mapping of style properties to values.
	 *
	 * @constructor ReactDOMComponent
	 * @extends ReactMultiChild
	 */
	function ReactDOMComponent(element) {
	  var tag = element.type;
	  validateDangerousTag(tag);
	  this._currentElement = element;
	  this._tag = tag.toLowerCase();
	  this._namespaceURI = null;
	  this._renderedChildren = null;
	  this._previousStyle = null;
	  this._previousStyleCopy = null;
	  this._hostNode = null;
	  this._hostParent = null;
	  this._rootNodeID = 0;
	  this._domID = 0;
	  this._hostContainerInfo = null;
	  this._wrapperState = null;
	  this._topLevelWrapper = null;
	  this._flags = 0;
	  if (true) {
	    this._ancestorInfo = null;
	    setAndValidateContentChildDev.call(this, null);
	  }
	}
	
	ReactDOMComponent.displayName = 'ReactDOMComponent';
	
	ReactDOMComponent.Mixin = {
	  /**
	   * Generates root tag markup then recurses. This method has side effects and
	   * is not idempotent.
	   *
	   * @internal
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @param {?ReactDOMComponent} the parent component instance
	   * @param {?object} info about the host container
	   * @param {object} context
	   * @return {string} The computed markup.
	   */
	  mountComponent: function (transaction, hostParent, hostContainerInfo, context) {
	    this._rootNodeID = globalIdCounter++;
	    this._domID = hostContainerInfo._idCounter++;
	    this._hostParent = hostParent;
	    this._hostContainerInfo = hostContainerInfo;
	
	    var props = this._currentElement.props;
	
	    switch (this._tag) {
	      case 'audio':
	      case 'form':
	      case 'iframe':
	      case 'img':
	      case 'link':
	      case 'object':
	      case 'source':
	      case 'video':
	        this._wrapperState = {
	          listeners: null
	        };
	        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);
	        break;
	      case 'input':
	        ReactDOMInput.mountWrapper(this, props, hostParent);
	        props = ReactDOMInput.getHostProps(this, props);
	        transaction.getReactMountReady().enqueue(trackInputValue, this);
	        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);
	        break;
	      case 'option':
	        ReactDOMOption.mountWrapper(this, props, hostParent);
	        props = ReactDOMOption.getHostProps(this, props);
	        break;
	      case 'select':
	        ReactDOMSelect.mountWrapper(this, props, hostParent);
	        props = ReactDOMSelect.getHostProps(this, props);
	        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);
	        break;
	      case 'textarea':
	        ReactDOMTextarea.mountWrapper(this, props, hostParent);
	        props = ReactDOMTextarea.getHostProps(this, props);
	        transaction.getReactMountReady().enqueue(trackInputValue, this);
	        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);
	        break;
	    }
	
	    assertValidProps(this, props);
	
	    // We create tags in the namespace of their parent container, except HTML
	    // tags get no namespace.
	    var namespaceURI;
	    var parentTag;
	    if (hostParent != null) {
	      namespaceURI = hostParent._namespaceURI;
	      parentTag = hostParent._tag;
	    } else if (hostContainerInfo._tag) {
	      namespaceURI = hostContainerInfo._namespaceURI;
	      parentTag = hostContainerInfo._tag;
	    }
	    if (namespaceURI == null || namespaceURI === DOMNamespaces.svg && parentTag === 'foreignobject') {
	      namespaceURI = DOMNamespaces.html;
	    }
	    if (namespaceURI === DOMNamespaces.html) {
	      if (this._tag === 'svg') {
	        namespaceURI = DOMNamespaces.svg;
	      } else if (this._tag === 'math') {
	        namespaceURI = DOMNamespaces.mathml;
	      }
	    }
	    this._namespaceURI = namespaceURI;
	
	    if (true) {
	      var parentInfo;
	      if (hostParent != null) {
	        parentInfo = hostParent._ancestorInfo;
	      } else if (hostContainerInfo._tag) {
	        parentInfo = hostContainerInfo._ancestorInfo;
	      }
	      if (parentInfo) {
	        // parentInfo should always be present except for the top-level
	        // component when server rendering
	        validateDOMNesting(this._tag, null, this, parentInfo);
	      }
	      this._ancestorInfo = validateDOMNesting.updatedAncestorInfo(parentInfo, this._tag, this);
	    }
	
	    var mountImage;
	    if (transaction.useCreateElement) {
	      var ownerDocument = hostContainerInfo._ownerDocument;
	      var el;
	      if (namespaceURI === DOMNamespaces.html) {
	        if (this._tag === 'script') {
	          // Create the script via .innerHTML so its "parser-inserted" flag is
	          // set to true and it does not execute
	          var div = ownerDocument.createElement('div');
	          var type = this._currentElement.type;
	          div.innerHTML = '<' + type + '></' + type + '>';
	          el = div.removeChild(div.firstChild);
	        } else if (props.is) {
	          el = ownerDocument.createElement(this._currentElement.type, props.is);
	        } else {
	          // Separate else branch instead of using `props.is || undefined` above becuase of a Firefox bug.
	          // See discussion in https://github.com/facebook/react/pull/6896
	          // and discussion in https://bugzilla.mozilla.org/show_bug.cgi?id=1276240
	          el = ownerDocument.createElement(this._currentElement.type);
	        }
	      } else {
	        el = ownerDocument.createElementNS(namespaceURI, this._currentElement.type);
	      }
	      ReactDOMComponentTree.precacheNode(this, el);
	      this._flags |= Flags.hasCachedChildNodes;
	      if (!this._hostParent) {
	        DOMPropertyOperations.setAttributeForRoot(el);
	      }
	      this._updateDOMProperties(null, props, transaction);
	      var lazyTree = DOMLazyTree(el);
	      this._createInitialChildren(transaction, props, context, lazyTree);
	      mountImage = lazyTree;
	    } else {
	      var tagOpen = this._createOpenTagMarkupAndPutListeners(transaction, props);
	      var tagContent = this._createContentMarkup(transaction, props, context);
	      if (!tagContent && omittedCloseTags[this._tag]) {
	        mountImage = tagOpen + '/>';
	      } else {
	        mountImage = tagOpen + '>' + tagContent + '</' + this._currentElement.type + '>';
	      }
	    }
	
	    switch (this._tag) {
	      case 'input':
	        transaction.getReactMountReady().enqueue(inputPostMount, this);
	        if (props.autoFocus) {
	          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);
	        }
	        break;
	      case 'textarea':
	        transaction.getReactMountReady().enqueue(textareaPostMount, this);
	        if (props.autoFocus) {
	          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);
	        }
	        break;
	      case 'select':
	        if (props.autoFocus) {
	          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);
	        }
	        break;
	      case 'button':
	        if (props.autoFocus) {
	          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);
	        }
	        break;
	      case 'option':
	        transaction.getReactMountReady().enqueue(optionPostMount, this);
	        break;
	    }
	
	    return mountImage;
	  },
	
	  /**
	   * Creates markup for the open tag and all attributes.
	   *
	   * This method has side effects because events get registered.
	   *
	   * Iterating over object properties is faster than iterating over arrays.
	   * @see http://jsperf.com/obj-vs-arr-iteration
	   *
	   * @private
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @param {object} props
	   * @return {string} Markup of opening tag.
	   */
	  _createOpenTagMarkupAndPutListeners: function (transaction, props) {
	    var ret = '<' + this._currentElement.type;
	
	    for (var propKey in props) {
	      if (!props.hasOwnProperty(propKey)) {
	        continue;
	      }
	      var propValue = props[propKey];
	      if (propValue == null) {
	        continue;
	      }
	      if (registrationNameModules.hasOwnProperty(propKey)) {
	        if (propValue) {
	          enqueuePutListener(this, propKey, propValue, transaction);
	        }
	      } else {
	        if (propKey === STYLE) {
	          if (propValue) {
	            if (true) {
	              // See `_updateDOMProperties`. style block
	              this._previousStyle = propValue;
	            }
	            propValue = this._previousStyleCopy = _assign({}, props.style);
	          }
	          propValue = CSSPropertyOperations.createMarkupForStyles(propValue, this);
	        }
	        var markup = null;
	        if (this._tag != null && isCustomComponent(this._tag, props)) {
	          if (!RESERVED_PROPS.hasOwnProperty(propKey)) {
	            markup = DOMPropertyOperations.createMarkupForCustomAttribute(propKey, propValue);
	          }
	        } else {
	          markup = DOMPropertyOperations.createMarkupForProperty(propKey, propValue);
	        }
	        if (markup) {
	          ret += ' ' + markup;
	        }
	      }
	    }
	
	    // For static pages, no need to put React ID and checksum. Saves lots of
	    // bytes.
	    if (transaction.renderToStaticMarkup) {
	      return ret;
	    }
	
	    if (!this._hostParent) {
	      ret += ' ' + DOMPropertyOperations.createMarkupForRoot();
	    }
	    ret += ' ' + DOMPropertyOperations.createMarkupForID(this._domID);
	    return ret;
	  },
	
	  /**
	   * Creates markup for the content between the tags.
	   *
	   * @private
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @param {object} props
	   * @param {object} context
	   * @return {string} Content markup.
	   */
	  _createContentMarkup: function (transaction, props, context) {
	    var ret = '';
	
	    // Intentional use of != to avoid catching zero/false.
	    var innerHTML = props.dangerouslySetInnerHTML;
	    if (innerHTML != null) {
	      if (innerHTML.__html != null) {
	        ret = innerHTML.__html;
	      }
	    } else {
	      var contentToUse = CONTENT_TYPES[typeof props.children] ? props.children : null;
	      var childrenToUse = contentToUse != null ? null : props.children;
	      if (contentToUse != null) {
	        // TODO: Validate that text is allowed as a child of this node
	        ret = escapeTextContentForBrowser(contentToUse);
	        if (true) {
	          setAndValidateContentChildDev.call(this, contentToUse);
	        }
	      } else if (childrenToUse != null) {
	        var mountImages = this.mountChildren(childrenToUse, transaction, context);
	        ret = mountImages.join('');
	      }
	    }
	    if (newlineEatingTags[this._tag] && ret.charAt(0) === '\n') {
	      // text/html ignores the first character in these tags if it's a newline
	      // Prefer to break application/xml over text/html (for now) by adding
	      // a newline specifically to get eaten by the parser. (Alternately for
	      // textareas, replacing "^\n" with "\r\n" doesn't get eaten, and the first
	      // \r is normalized out by HTMLTextAreaElement#value.)
	      // See: <http://www.w3.org/TR/html-polyglot/#newlines-in-textarea-and-pre>
	      // See: <http://www.w3.org/TR/html5/syntax.html#element-restrictions>
	      // See: <http://www.w3.org/TR/html5/syntax.html#newlines>
	      // See: Parsing of "textarea" "listing" and "pre" elements
	      //  from <http://www.w3.org/TR/html5/syntax.html#parsing-main-inbody>
	      return '\n' + ret;
	    } else {
	      return ret;
	    }
	  },
	
	  _createInitialChildren: function (transaction, props, context, lazyTree) {
	    // Intentional use of != to avoid catching zero/false.
	    var innerHTML = props.dangerouslySetInnerHTML;
	    if (innerHTML != null) {
	      if (innerHTML.__html != null) {
	        DOMLazyTree.queueHTML(lazyTree, innerHTML.__html);
	      }
	    } else {
	      var contentToUse = CONTENT_TYPES[typeof props.children] ? props.children : null;
	      var childrenToUse = contentToUse != null ? null : props.children;
	      // TODO: Validate that text is allowed as a child of this node
	      if (contentToUse != null) {
	        // Avoid setting textContent when the text is empty. In IE11 setting
	        // textContent on a text area will cause the placeholder to not
	        // show within the textarea until it has been focused and blurred again.
	        // https://github.com/facebook/react/issues/6731#issuecomment-254874553
	        if (contentToUse !== '') {
	          if (true) {
	            setAndValidateContentChildDev.call(this, contentToUse);
	          }
	          DOMLazyTree.queueText(lazyTree, contentToUse);
	        }
	      } else if (childrenToUse != null) {
	        var mountImages = this.mountChildren(childrenToUse, transaction, context);
	        for (var i = 0; i < mountImages.length; i++) {
	          DOMLazyTree.queueChild(lazyTree, mountImages[i]);
	        }
	      }
	    }
	  },
	
	  /**
	   * Receives a next element and updates the component.
	   *
	   * @internal
	   * @param {ReactElement} nextElement
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @param {object} context
	   */
	  receiveComponent: function (nextElement, transaction, context) {
	    var prevElement = this._currentElement;
	    this._currentElement = nextElement;
	    this.updateComponent(transaction, prevElement, nextElement, context);
	  },
	
	  /**
	   * Updates a DOM component after it has already been allocated and
	   * attached to the DOM. Reconciles the root DOM node, then recurses.
	   *
	   * @param {ReactReconcileTransaction} transaction
	   * @param {ReactElement} prevElement
	   * @param {ReactElement} nextElement
	   * @internal
	   * @overridable
	   */
	  updateComponent: function (transaction, prevElement, nextElement, context) {
	    var lastProps = prevElement.props;
	    var nextProps = this._currentElement.props;
	
	    switch (this._tag) {
	      case 'input':
	        lastProps = ReactDOMInput.getHostProps(this, lastProps);
	        nextProps = ReactDOMInput.getHostProps(this, nextProps);
	        break;
	      case 'option':
	        lastProps = ReactDOMOption.getHostProps(this, lastProps);
	        nextProps = ReactDOMOption.getHostProps(this, nextProps);
	        break;
	      case 'select':
	        lastProps = ReactDOMSelect.getHostProps(this, lastProps);
	        nextProps = ReactDOMSelect.getHostProps(this, nextProps);
	        break;
	      case 'textarea':
	        lastProps = ReactDOMTextarea.getHostProps(this, lastProps);
	        nextProps = ReactDOMTextarea.getHostProps(this, nextProps);
	        break;
	    }
	
	    assertValidProps(this, nextProps);
	    this._updateDOMProperties(lastProps, nextProps, transaction);
	    this._updateDOMChildren(lastProps, nextProps, transaction, context);
	
	    switch (this._tag) {
	      case 'input':
	        // Update the wrapper around inputs *after* updating props. This has to
	        // happen after `_updateDOMProperties`. Otherwise HTML5 input validations
	        // raise warnings and prevent the new value from being assigned.
	        ReactDOMInput.updateWrapper(this);
	
	        // We also check that we haven't missed a value update, such as a
	        // Radio group shifting the checked value to another named radio input.
	        inputValueTracking.updateValueIfChanged(this);
	        break;
	      case 'textarea':
	        ReactDOMTextarea.updateWrapper(this);
	        break;
	      case 'select':
	        // <select> value update needs to occur after <option> children
	        // reconciliation
	        transaction.getReactMountReady().enqueue(postUpdateSelectWrapper, this);
	        break;
	    }
	  },
	
	  /**
	   * Reconciles the properties by detecting differences in property values and
	   * updating the DOM as necessary. This function is probably the single most
	   * critical path for performance optimization.
	   *
	   * TODO: Benchmark whether checking for changed values in memory actually
	   *       improves performance (especially statically positioned elements).
	   * TODO: Benchmark the effects of putting this at the top since 99% of props
	   *       do not change for a given reconciliation.
	   * TODO: Benchmark areas that can be improved with caching.
	   *
	   * @private
	   * @param {object} lastProps
	   * @param {object} nextProps
	   * @param {?DOMElement} node
	   */
	  _updateDOMProperties: function (lastProps, nextProps, transaction) {
	    var propKey;
	    var styleName;
	    var styleUpdates;
	    for (propKey in lastProps) {
	      if (nextProps.hasOwnProperty(propKey) || !lastProps.hasOwnProperty(propKey) || lastProps[propKey] == null) {
	        continue;
	      }
	      if (propKey === STYLE) {
	        var lastStyle = this._previousStyleCopy;
	        for (styleName in lastStyle) {
	          if (lastStyle.hasOwnProperty(styleName)) {
	            styleUpdates = styleUpdates || {};
	            styleUpdates[styleName] = '';
	          }
	        }
	        this._previousStyleCopy = null;
	      } else if (registrationNameModules.hasOwnProperty(propKey)) {
	        if (lastProps[propKey]) {
	          // Only call deleteListener if there was a listener previously or
	          // else willDeleteListener gets called when there wasn't actually a
	          // listener (e.g., onClick={null})
	          deleteListener(this, propKey);
	        }
	      } else if (isCustomComponent(this._tag, lastProps)) {
	        if (!RESERVED_PROPS.hasOwnProperty(propKey)) {
	          DOMPropertyOperations.deleteValueForAttribute(getNode(this), propKey);
	        }
	      } else if (DOMProperty.properties[propKey] || DOMProperty.isCustomAttribute(propKey)) {
	        DOMPropertyOperations.deleteValueForProperty(getNode(this), propKey);
	      }
	    }
	    for (propKey in nextProps) {
	      var nextProp = nextProps[propKey];
	      var lastProp = propKey === STYLE ? this._previousStyleCopy : lastProps != null ? lastProps[propKey] : undefined;
	      if (!nextProps.hasOwnProperty(propKey) || nextProp === lastProp || nextProp == null && lastProp == null) {
	        continue;
	      }
	      if (propKey === STYLE) {
	        if (nextProp) {
	          if (true) {
	            checkAndWarnForMutatedStyle(this._previousStyleCopy, this._previousStyle, this);
	            this._previousStyle = nextProp;
	          }
	          nextProp = this._previousStyleCopy = _assign({}, nextProp);
	        } else {
	          this._previousStyleCopy = null;
	        }
	        if (lastProp) {
	          // Unset styles on `lastProp` but not on `nextProp`.
	          for (styleName in lastProp) {
	            if (lastProp.hasOwnProperty(styleName) && (!nextProp || !nextProp.hasOwnProperty(styleName))) {
	              styleUpdates = styleUpdates || {};
	              styleUpdates[styleName] = '';
	            }
	          }
	          // Update styles that changed since `lastProp`.
	          for (styleName in nextProp) {
	            if (nextProp.hasOwnProperty(styleName) && lastProp[styleName] !== nextProp[styleName]) {
	              styleUpdates = styleUpdates || {};
	              styleUpdates[styleName] = nextProp[styleName];
	            }
	          }
	        } else {
	          // Relies on `updateStylesByID` not mutating `styleUpdates`.
	          styleUpdates = nextProp;
	        }
	      } else if (registrationNameModules.hasOwnProperty(propKey)) {
	        if (nextProp) {
	          enqueuePutListener(this, propKey, nextProp, transaction);
	        } else if (lastProp) {
	          deleteListener(this, propKey);
	        }
	      } else if (isCustomComponent(this._tag, nextProps)) {
	        if (!RESERVED_PROPS.hasOwnProperty(propKey)) {
	          DOMPropertyOperations.setValueForAttribute(getNode(this), propKey, nextProp);
	        }
	      } else if (DOMProperty.properties[propKey] || DOMProperty.isCustomAttribute(propKey)) {
	        var node = getNode(this);
	        // If we're updating to null or undefined, we should remove the property
	        // from the DOM node instead of inadvertently setting to a string. This
	        // brings us in line with the same behavior we have on initial render.
	        if (nextProp != null) {
	          DOMPropertyOperations.setValueForProperty(node, propKey, nextProp);
	        } else {
	          DOMPropertyOperations.deleteValueForProperty(node, propKey);
	        }
	      }
	    }
	    if (styleUpdates) {
	      CSSPropertyOperations.setValueForStyles(getNode(this), styleUpdates, this);
	    }
	  },
	
	  /**
	   * Reconciles the children with the various properties that affect the
	   * children content.
	   *
	   * @param {object} lastProps
	   * @param {object} nextProps
	   * @param {ReactReconcileTransaction} transaction
	   * @param {object} context
	   */
	  _updateDOMChildren: function (lastProps, nextProps, transaction, context) {
	    var lastContent = CONTENT_TYPES[typeof lastProps.children] ? lastProps.children : null;
	    var nextContent = CONTENT_TYPES[typeof nextProps.children] ? nextProps.children : null;
	
	    var lastHtml = lastProps.dangerouslySetInnerHTML && lastProps.dangerouslySetInnerHTML.__html;
	    var nextHtml = nextProps.dangerouslySetInnerHTML && nextProps.dangerouslySetInnerHTML.__html;
	
	    // Note the use of `!=` which checks for null or undefined.
	    var lastChildren = lastContent != null ? null : lastProps.children;
	    var nextChildren = nextContent != null ? null : nextProps.children;
	
	    // If we're switching from children to content/html or vice versa, remove
	    // the old content
	    var lastHasContentOrHtml = lastContent != null || lastHtml != null;
	    var nextHasContentOrHtml = nextContent != null || nextHtml != null;
	    if (lastChildren != null && nextChildren == null) {
	      this.updateChildren(null, transaction, context);
	    } else if (lastHasContentOrHtml && !nextHasContentOrHtml) {
	      this.updateTextContent('');
	      if (true) {
	        ReactInstrumentation.debugTool.onSetChildren(this._debugID, []);
	      }
	    }
	
	    if (nextContent != null) {
	      if (lastContent !== nextContent) {
	        this.updateTextContent('' + nextContent);
	        if (true) {
	          setAndValidateContentChildDev.call(this, nextContent);
	        }
	      }
	    } else if (nextHtml != null) {
	      if (lastHtml !== nextHtml) {
	        this.updateMarkup('' + nextHtml);
	      }
	      if (true) {
	        ReactInstrumentation.debugTool.onSetChildren(this._debugID, []);
	      }
	    } else if (nextChildren != null) {
	      if (true) {
	        setAndValidateContentChildDev.call(this, null);
	      }
	
	      this.updateChildren(nextChildren, transaction, context);
	    }
	  },
	
	  getHostNode: function () {
	    return getNode(this);
	  },
	
	  /**
	   * Destroys all event registrations for this instance. Does not remove from
	   * the DOM. That must be done by the parent.
	   *
	   * @internal
	   */
	  unmountComponent: function (safely) {
	    switch (this._tag) {
	      case 'audio':
	      case 'form':
	      case 'iframe':
	      case 'img':
	      case 'link':
	      case 'object':
	      case 'source':
	      case 'video':
	        var listeners = this._wrapperState.listeners;
	        if (listeners) {
	          for (var i = 0; i < listeners.length; i++) {
	            listeners[i].remove();
	          }
	        }
	        break;
	      case 'input':
	      case 'textarea':
	        inputValueTracking.stopTracking(this);
	        break;
	      case 'html':
	      case 'head':
	      case 'body':
	        /**
	         * Components like <html> <head> and <body> can't be removed or added
	         * easily in a cross-browser way, however it's valuable to be able to
	         * take advantage of React's reconciliation for styling and <title>
	         * management. So we just document it and throw in dangerous cases.
	         */
	         true ?  true ? invariant(false, '<%s> tried to unmount. Because of cross-browser quirks it is impossible to unmount some top-level components (eg <html>, <head>, and <body>) reliably and efficiently. To fix this, have a single top-level component that never unmounts render these elements.', this._tag) : _prodInvariant('66', this._tag) : void 0;
	        break;
	    }
	
	    this.unmountChildren(safely);
	    ReactDOMComponentTree.uncacheNode(this);
	    EventPluginHub.deleteAllListeners(this);
	    this._rootNodeID = 0;
	    this._domID = 0;
	    this._wrapperState = null;
	
	    if (true) {
	      setAndValidateContentChildDev.call(this, null);
	    }
	  },
	
	  getPublicInstance: function () {
	    return getNode(this);
	  }
	};
	
	_assign(ReactDOMComponent.prototype, ReactDOMComponent.Mixin, ReactMultiChild.Mixin);
	
	module.exports = ReactDOMComponent;

/***/ }),
/* 125 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */
	
	'use strict';
	
	var ReactDOMComponentTree = __webpack_require__(65);
	
	var focusNode = __webpack_require__(126);
	
	var AutoFocusUtils = {
	  focusDOMComponent: function () {
	    focusNode(ReactDOMComponentTree.getNodeFromInstance(this));
	  }
	};
	
	module.exports = AutoFocusUtils;

/***/ }),
/* 126 */
/***/ (function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */
	
	'use strict';
	
	/**
	 * @param {DOMElement} node input/textarea to focus
	 */
	
	function focusNode(node) {
	  // IE8 can throw "Can't move focus to the control because it is invisible,
	  // not enabled, or of a type that does not accept the focus." for all kinds of
	  // reasons that are too expensive and fragile to test.
	  try {
	    node.focus();
	  } catch (e) {}
	}
	
	module.exports = focusNode;

/***/ }),
/* 127 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */
	
	'use strict';
	
	var CSSProperty = __webpack_require__(128);
	var ExecutionEnvironment = __webpack_require__(79);
	var ReactInstrumentation = __webpack_require__(93);
	
	var camelizeStyleName = __webpack_require__(129);
	var dangerousStyleValue = __webpack_require__(131);
	var hyphenateStyleName = __webpack_require__(132);
	var memoizeStringOnly = __webpack_require__(134);
	var warning = __webpack_require__(31);
	
	var processStyleName = memoizeStringOnly(function (styleName) {
	  return hyphenateStyleName(styleName);
	});
	
	var hasShorthandPropertyBug = false;
	var styleFloatAccessor = 'cssFloat';
	if (ExecutionEnvironment.canUseDOM) {
	  var tempStyle = document.createElement('div').style;
	  try {
	    // IE8 throws "Invalid argument." if resetting shorthand style properties.
	    tempStyle.font = '';
	  } catch (e) {
	    hasShorthandPropertyBug = true;
	  }
	  // IE8 only supports accessing cssFloat (standard) as styleFloat
	  if (document.documentElement.style.cssFloat === undefined) {
	    styleFloatAccessor = 'styleFloat';
	  }
	}
	
	if (true) {
	  // 'msTransform' is correct, but the other prefixes should be capitalized
	  var badVendoredStyleNamePattern = /^(?:webkit|moz|o)[A-Z]/;
	
	  // style values shouldn't contain a semicolon
	  var badStyleValueWithSemicolonPattern = /;\s*$/;
	
	  var warnedStyleNames = {};
	  var warnedStyleValues = {};
	  var warnedForNaNValue = false;
	
	  var warnHyphenatedStyleName = function (name, owner) {
	    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
	      return;
	    }
	
	    warnedStyleNames[name] = true;
	     true ? warning(false, 'Unsupported style property %s. Did you mean %s?%s', name, camelizeStyleName(name), checkRenderMessage(owner)) : void 0;
	  };
	
	  var warnBadVendoredStyleName = function (name, owner) {
	    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
	      return;
	    }
	
	    warnedStyleNames[name] = true;
	     true ? warning(false, 'Unsupported vendor-prefixed style property %s. Did you mean %s?%s', name, name.charAt(0).toUpperCase() + name.slice(1), checkRenderMessage(owner)) : void 0;
	  };
	
	  var warnStyleValueWithSemicolon = function (name, value, owner) {
	    if (warnedStyleValues.hasOwnProperty(value) && warnedStyleValues[value]) {
	      return;
	    }
	
	    warnedStyleValues[value] = true;
	     true ? warning(false, "Style property values shouldn't contain a semicolon.%s " + 'Try "%s: %s" instead.', checkRenderMessage(owner), name, value.replace(badStyleValueWithSemicolonPattern, '')) : void 0;
	  };
	
	  var warnStyleValueIsNaN = function (name, value, owner) {
	    if (warnedForNaNValue) {
	      return;
	    }
	
	    warnedForNaNValue = true;
	     true ? warning(false, '`NaN` is an invalid value for the `%s` css style property.%s', name, checkRenderMessage(owner)) : void 0;
	  };
	
	  var checkRenderMessage = function (owner) {
	    if (owner) {
	      var name = owner.getName();
	      if (name) {
	        return ' Check the render method of `' + name + '`.';
	      }
	    }
	    return '';
	  };
	
	  /**
	   * @param {string} name
	   * @param {*} value
	   * @param {ReactDOMComponent} component
	   */
	  var warnValidStyle = function (name, value, component) {
	    var owner;
	    if (component) {
	      owner = component._currentElement._owner;
	    }
	    if (name.indexOf('-') > -1) {
	      warnHyphenatedStyleName(name, owner);
	    } else if (badVendoredStyleNamePattern.test(name)) {
	      warnBadVendoredStyleName(name, owner);
	    } else if (badStyleValueWithSemicolonPattern.test(value)) {
	      warnStyleValueWithSemicolon(name, value, owner);
	    }
	
	    if (typeof value === 'number' && isNaN(value)) {
	      warnStyleValueIsNaN(name, value, owner);
	    }
	  };
	}
	
	/**
	 * Operations for dealing with CSS properties.
	 */
	var CSSPropertyOperations = {
	  /**
	   * Serializes a mapping of style properties for use as inline styles:
	   *
	   *   > createMarkupForStyles({width: '200px', height: 0})
	   *   "width:200px;height:0;"
	   *
	   * Undefined values are ignored so that declarative programming is easier.
	   * The result should be HTML-escaped before insertion into the DOM.
	   *
	   * @param {object} styles
	   * @param {ReactDOMComponent} component
	   * @return {?string}
	   */
	  createMarkupForStyles: function (styles, component) {
	    var serialized = '';
	    for (var styleName in styles) {
	      if (!styles.hasOwnProperty(styleName)) {
	        continue;
	      }
	      var isCustomProperty = styleName.indexOf('--') === 0;
	      var styleValue = styles[styleName];
	      if (true) {
	        if (!isCustomProperty) {
	          warnValidStyle(styleName, styleValue, component);
	        }
	      }
	      if (styleValue != null) {
	        serialized += processStyleName(styleName) + ':';
	        serialized += dangerousStyleValue(styleName, styleValue, component, isCustomProperty) + ';';
	      }
	    }
	    return serialized || null;
	  },
	
	  /**
	   * Sets the value for multiple styles on a node.  If a value is specified as
	   * '' (empty string), the corresponding style property will be unset.
	   *
	   * @param {DOMElement} node
	   * @param {object} styles
	   * @param {ReactDOMComponent} component
	   */
	  setValueForStyles: function (node, styles, component) {
	    if (true) {
	      ReactInstrumentation.debugTool.onHostOperation({
	        instanceID: component._debugID,
	        type: 'update styles',
	        payload: styles
	      });
	    }
	
	    var style = node.style;
	    for (var styleName in styles) {
	      if (!styles.hasOwnProperty(styleName)) {
	        continue;
	      }
	      var isCustomProperty = styleName.indexOf('--') === 0;
	      if (true) {
	        if (!isCustomProperty) {
	          warnValidStyle(styleName, styles[styleName], component);
	        }
	      }
	      var styleValue = dangerousStyleValue(styleName, styles[styleName], component, isCustomProperty);
	      if (styleName === 'float' || styleName === 'cssFloat') {
	        styleName = styleFloatAccessor;
	      }
	      if (isCustomProperty) {
	        style.setProperty(styleName, styleValue);
	      } else if (styleValue) {
	        style[styleName] = styleValue;
	      } else {
	        var expansion = hasShorthandPropertyBug && CSSProperty.shorthandPropertyExpansions[styleName];
	        if (expansion) {
	          // Shorthand property that IE8 won't like unsetting, so unset each
	          // component to placate it
	          for (var individualStyleName in expansion) {
	            style[individualStyleName] = '';
	          }
	        } else {
	          style[styleName] = '';
	        }
	      }
	    }
	  }
	};
	
	module.exports = CSSPropertyOperations;

/***/ }),
/* 128 */
/***/ (function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */
	
	'use strict';
	
	/**
	 * CSS properties which accept numbers but are not in units of "px".
	 */
	
	var isUnitlessNumber = {
	  animationIterationCount: true,
	  borderImageOutset: true,
	  borderImageSlice: true,
	  borderImageWidth: true,
	  boxFlex: true,
	  boxFlexGroup: true,
	  boxOrdinalGroup: true,
	  columnCount: true,
	  columns: true,
	  flex: true,
	  flexGrow: true,
	  flexPositive: true,
	  flexShrink: true,
	  flexNegative: true,
	  flexOrder: true,
	  gridRow: true,
	  gridRowEnd: true,
	  gridRowSpan: true,
	  gridRowStart: true,
	  gridColumn: true,
	  gridColumnEnd: true,
	  gridColumnSpan: true,
	  gridColumnStart: true,
	  fontWeight: true,
	  lineClamp: true,
	  lineHeight: true,
	  opacity: true,
	  order: true,
	  orphans: true,
	  tabSize: true,
	  widows: true,
	  zIndex: true,
	  zoom: true,
	
	  // SVG-related properties
	  fillOpacity: true,
	  floodOpacity: true,
	  stopOpacity: true,
	  strokeDasharray: true,
	  strokeDashoffset: true,
	  strokeMiterlimit: true,
	  strokeOpacity: true,
	  strokeWidth: true
	};
	
	/**
	 * @param {string} prefix vendor-specific prefix, eg: Webkit
	 * @param {string} key style name, eg: transitionDuration
	 * @return {string} style name prefixed with `prefix`, properly camelCased, eg:
	 * WebkitTransitionDuration
	 */
	function prefixKey(prefix, key) {
	  return prefix + key.charAt(0).toUpperCase() + key.substring(1);
	}
	
	/**
	 * Support style names that may come passed in prefixed by adding permutations
	 * of vendor prefixes.
	 */
	var prefixes = ['Webkit', 'ms', 'Moz', 'O'];
	
	// Using Object.keys here, or else the vanilla for-in loop makes IE8 go into an
	// infinite loop, because it iterates over the newly added props too.
	Object.keys(isUnitlessNumber).forEach(function (prop) {
	  prefixes.forEach(function (prefix) {
	    isUnitlessNumber[prefixKey(prefix, prop)] = isUnitlessNumber[prop];
	  });
	});
	
	/**
	 * Most style properties can be unset by doing .style[prop] = '' but IE8
	 * doesn't like doing that with shorthand properties so for the properties that
	 * IE8 breaks on, which are listed here, we instead unset each of the
	 * individual properties. See http://bugs.jquery.com/ticket/12385.
	 * The 4-value 'clock' properties like margin, padding, border-width seem to
	 * behave without any problems. Curiously, list-style works too without any
	 * special prodding.
	 */
	var shorthandPropertyExpansions = {
	  background: {
	    backgroundAttachment: true,
	    backgroundColor: true,
	    backgroundImage: true,
	    backgroundPositionX: true,
	    backgroundPositionY: true,
	    backgroundRepeat: true
	  },
	  backgroundPosition: {
	    backgroundPositionX: true,
	    backgroundPositionY: true
	  },
	  border: {
	    borderWidth: true,
	    borderStyle: true,
	    borderColor: true
	  },
	  borderBottom: {
	    borderBottomWidth: true,
	    borderBottomStyle: true,
	    borderBottomColor: true
	  },
	  borderLeft: {
	    borderLeftWidth: true,
	    borderLeftStyle: true,
	    borderLeftColor: true
	  },
	  borderRight: {
	    borderRightWidth: true,
	    borderRightStyle: true,
	    borderRightColor: true
	  },
	  borderTop: {
	    borderTopWidth: true,
	    borderTopStyle: true,
	    borderTopColor: true
	  },
	  font: {
	    fontStyle: true,
	    fontVariant: true,
	    fontWeight: true,
	    fontSize: true,
	    lineHeight: true,
	    fontFamily: true
	  },
	  outline: {
	    outlineWidth: true,
	    outlineStyle: true,
	    outlineColor: true
	  }
	};
	
	var CSSProperty = {
	  isUnitlessNumber: isUnitlessNumber,
	  shorthandPropertyExpansions: shorthandPropertyExpansions
	};
	
	module.exports = CSSProperty;

/***/ }),
/* 129 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * @typechecks
	 */
	
	'use strict';
	
	var camelize = __webpack_require__(130);
	
	var msPattern = /^-ms-/;
	
	/**
	 * Camelcases a hyphenated CSS property name, for example:
	 *
	 *   > camelizeStyleName('background-color')
	 *   < "backgroundColor"
	 *   > camelizeStyleName('-moz-transition')
	 *   < "MozTransition"
	 *   > camelizeStyleName('-ms-transition')
	 *   < "msTransition"
	 *
	 * As Andi Smith suggests
	 * (http://www.andismith.com/blog/2012/02/modernizr-prefixed/), an `-ms` prefix
	 * is converted to lowercase `ms`.
	 *
	 * @param {string} string
	 * @return {string}
	 */
	function camelizeStyleName(string) {
	  return camelize(string.replace(msPattern, 'ms-'));
	}
	
	module.exports = camelizeStyleName;

/***/ }),
/* 130 */
/***/ (function(module, exports) {

	"use strict";
	
	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * @typechecks
	 */
	
	var _hyphenPattern = /-(.)/g;
	
	/**
	 * Camelcases a hyphenated string, for example:
	 *
	 *   > camelize('background-color')
	 *   < "backgroundColor"
	 *
	 * @param {string} string
	 * @return {string}
	 */
	function camelize(string) {
	  return string.replace(_hyphenPattern, function (_, character) {
	    return character.toUpperCase();
	  });
	}
	
	module.exports = camelize;

/***/ }),
/* 131 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */
	
	'use strict';
	
	var CSSProperty = __webpack_require__(128);
	var warning = __webpack_require__(31);
	
	var isUnitlessNumber = CSSProperty.isUnitlessNumber;
	var styleWarnings = {};
	
	/**
	 * Convert a value into the proper css writable value. The style name `name`
	 * should be logical (no hyphens), as specified
	 * in `CSSProperty.isUnitlessNumber`.
	 *
	 * @param {string} name CSS property name such as `topMargin`.
	 * @param {*} value CSS property value such as `10px`.
	 * @param {ReactDOMComponent} component
	 * @return {string} Normalized style value with dimensions applied.
	 */
	function dangerousStyleValue(name, value, component, isCustomProperty) {
	  // Note that we've removed escapeTextForBrowser() calls here since the
	  // whole string will be escaped when the attribute is injected into
	  // the markup. If you provide unsafe user data here they can inject
	  // arbitrary CSS which may be problematic (I couldn't repro this):
	  // https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet
	  // http://www.thespanner.co.uk/2007/11/26/ultimate-xss-css-injection/
	  // This is not an XSS hole but instead a potential CSS injection issue
	  // which has lead to a greater discussion about how we're going to
	  // trust URLs moving forward. See #2115901
	
	  var isEmpty = value == null || typeof value === 'boolean' || value === '';
	  if (isEmpty) {
	    return '';
	  }
	
	  var isNonNumeric = isNaN(value);
	  if (isCustomProperty || isNonNumeric || value === 0 || isUnitlessNumber.hasOwnProperty(name) && isUnitlessNumber[name]) {
	    return '' + value; // cast to string
	  }
	
	  if (typeof value === 'string') {
	    if (true) {
	      // Allow '0' to pass through without warning. 0 is already special and
	      // doesn't require units, so we don't need to warn about it.
	      if (component && value !== '0') {
	        var owner = component._currentElement._owner;
	        var ownerName = owner ? owner.getName() : null;
	        if (ownerName && !styleWarnings[ownerName]) {
	          styleWarnings[ownerName] = {};
	        }
	        var warned = false;
	        if (ownerName) {
	          var warnings = styleWarnings[ownerName];
	          warned = warnings[name];
	          if (!warned) {
	            warnings[name] = true;
	          }
	        }
	        if (!warned) {
	           true ? warning(false, 'a `%s` tag (owner: `%s`) was passed a numeric string value ' + 'for CSS property `%s` (value: `%s`) which will be treated ' + 'as a unitless number in a future version of React.', component._currentElement.type, ownerName || 'unknown', name, value) : void 0;
	        }
	      }
	    }
	    value = value.trim();
	  }
	  return value + 'px';
	}
	
	module.exports = dangerousStyleValue;

/***/ }),
/* 132 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * @typechecks
	 */
	
	'use strict';
	
	var hyphenate = __webpack_require__(133);
	
	var msPattern = /^ms-/;
	
	/**
	 * Hyphenates a camelcased CSS property name, for example:
	 *
	 *   > hyphenateStyleName('backgroundColor')
	 *   < "background-color"
	 *   > hyphenateStyleName('MozTransition')
	 *   < "-moz-transition"
	 *   > hyphenateStyleName('msTransition')
	 *   < "-ms-transition"
	 *
	 * As Modernizr suggests (http://modernizr.com/docs/#prefixed), an `ms` prefix
	 * is converted to `-ms-`.
	 *
	 * @param {string} string
	 * @return {string}
	 */
	function hyphenateStyleName(string) {
	  return hyphenate(string).replace(msPattern, '-ms-');
	}
	
	module.exports = hyphenateStyleName;

/***/ }),
/* 133 */
/***/ (function(module, exports) {

	'use strict';
	
	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * @typechecks
	 */
	
	var _uppercasePattern = /([A-Z])/g;
	
	/**
	 * Hyphenates a camelcased string, for example:
	 *
	 *   > hyphenate('backgroundColor')
	 *   < "background-color"
	 *
	 * For CSS style names, use `hyphenateStyleName` instead which works properly
	 * with all vendor prefixes, including `ms`.
	 *
	 * @param {string} string
	 * @return {string}
	 */
	function hyphenate(string) {
	  return string.replace(_uppercasePattern, '-$1').toLowerCase();
	}
	
	module.exports = hyphenate;

/***/ }),
/* 134 */
/***/ (function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * 
	 * @typechecks static-only
	 */
	
	'use strict';
	
	/**
	 * Memoizes the return value of a function that accepts one string argument.
	 */
	
	function memoizeStringOnly(callback) {
	  var cache = {};
	  return function (string) {
	    if (!cache.hasOwnProperty(string)) {
	      cache[string] = callback.call(this, string);
	    }
	    return cache[string];
	  };
	}
	
	module.exports = memoizeStringOnly;

/***/ }),
/* 135 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */
	
	'use strict';
	
	var DOMProperty = __webpack_require__(67);
	var ReactDOMComponentTree = __webpack_require__(65);
	var ReactInstrumentation = __webpack_require__(93);
	
	var quoteAttributeValueForBrowser = __webpack_require__(136);
	var warning = __webpack_require__(31);
	
	var VALID_ATTRIBUTE_NAME_REGEX = new RegExp('^[' + DOMProperty.ATTRIBUTE_NAME_START_CHAR + '][' + DOMProperty.ATTRIBUTE_NAME_CHAR + ']*$');
	var illegalAttributeNameCache = {};
	var validatedAttributeNameCache = {};
	
	function isAttributeNameSafe(attributeName) {
	  if (validatedAttributeNameCache.hasOwnProperty(attributeName)) {
	    return true;
	  }
	  if (illegalAttributeNameCache.hasOwnProperty(attributeName)) {
	    return false;
	  }
	  if (VALID_ATTRIBUTE_NAME_REGEX.test(attributeName)) {
	    validatedAttributeNameCache[attributeName] = true;
	    return true;
	  }
	  illegalAttributeNameCache[attributeName] = true;
	   true ? warning(false, 'Invalid attribute name: `%s`', attributeName) : void 0;
	  return false;
	}
	
	function shouldIgnoreValue(propertyInfo, value) {
	  return value == null || propertyInfo.hasBooleanValue && !value || propertyInfo.hasNumericValue && isNaN(value) || propertyInfo.hasPositiveNumericValue && value < 1 || propertyInfo.hasOverloadedBooleanValue && value === false;
	}
	
	/**
	 * Operations for dealing with DOM properties.
	 */
	var DOMPropertyOperations = {
	  /**
	   * Creates markup for the ID property.
	   *
	   * @param {string} id Unescaped ID.
	   * @return {string} Markup string.
	   */
	  createMarkupForID: function (id) {
	    return DOMProperty.ID_ATTRIBUTE_NAME + '=' + quoteAttributeValueForBrowser(id);
	  },
	
	  setAttributeForID: function (node, id) {
	    node.setAttribute(DOMProperty.ID_ATTRIBUTE_NAME, id);
	  },
	
	  createMarkupForRoot: function () {
	    return DOMProperty.ROOT_ATTRIBUTE_NAME + '=""';
	  },
	
	  setAttributeForRoot: function (node) {
	    node.setAttribute(DOMProperty.ROOT_ATTRIBUTE_NAME, '');
	  },
	
	  /**
	   * Creates markup for a property.
	   *
	   * @param {string} name
	   * @param {*} value
	   * @return {?string} Markup string, or null if the property was invalid.
	   */
	  createMarkupForProperty: function (name, value) {
	    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;
	    if (propertyInfo) {
	      if (shouldIgnoreValue(propertyInfo, value)) {
	        return '';
	      }
	      var attributeName = propertyInfo.attributeName;
	      if (propertyInfo.hasBooleanValue || propertyInfo.hasOverloadedBooleanValue && value === true) {
	        return attributeName + '=""';
	      }
	      return attributeName + '=' + quoteAttributeValueForBrowser(value);
	    } else if (DOMProperty.isCustomAttribute(name)) {
	      if (value == null) {
	        return '';
	      }
	      return name + '=' + quoteAttributeValueForBrowser(value);
	    }
	    return null;
	  },
	
	  /**
	   * Creates markup for a custom property.
	   *
	   * @param {string} name
	   * @param {*} value
	   * @return {string} Markup string, or empty string if the property was invalid.
	   */
	  createMarkupForCustomAttribute: function (name, value) {
	    if (!isAttributeNameSafe(name) || value == null) {
	      return '';
	    }
	    return name + '=' + quoteAttributeValueForBrowser(value);
	  },
	
	  /**
	   * Sets the value for a property on a node.
	   *
	   * @param {DOMElement} node
	   * @param {string} name
	   * @param {*} value
	   */
	  setValueForProperty: function (node, name, value) {
	    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;
	    if (propertyInfo) {
	      var mutationMethod = propertyInfo.mutationMethod;
	      if (mutationMethod) {
	        mutationMethod(node, value);
	      } else if (shouldIgnoreValue(propertyInfo, value)) {
	        this.deleteValueForProperty(node, name);
	        return;
	      } else if (propertyInfo.mustUseProperty) {
	        // Contrary to `setAttribute`, object properties are properly
	        // `toString`ed by IE8/9.
	        node[propertyInfo.propertyName] = value;
	      } else {
	        var attributeName = propertyInfo.attributeName;
	        var namespace = propertyInfo.attributeNamespace;
	        // `setAttribute` with objects becomes only `[object]` in IE8/9,
	        // ('' + value) makes it output the correct toString()-value.
	        if (namespace) {
	          node.setAttributeNS(namespace, attributeName, '' + value);
	        } else if (propertyInfo.hasBooleanValue || propertyInfo.hasOverloadedBooleanValue && value === true) {
	          node.setAttribute(attributeName, '');
	        } else {
	          node.setAttribute(attributeName, '' + value);
	        }
	      }
	    } else if (DOMProperty.isCustomAttribute(name)) {
	      DOMPropertyOperations.setValueForAttribute(node, name, value);
	      return;
	    }
	
	    if (true) {
	      var payload = {};
	      payload[name] = value;
	      ReactInstrumentation.debugTool.onHostOperation({
	        instanceID: ReactDOMComponentTree.getInstanceFromNode(node)._debugID,
	        type: 'update attribute',
	        payload: payload
	      });
	    }
	  },
	
	  setValueForAttribute: function (node, name, value) {
	    if (!isAttributeNameSafe(name)) {
	      return;
	    }
	    if (value == null) {
	      node.removeAttribute(name);
	    } else {
	      node.setAttribute(name, '' + value);
	    }
	
	    if (true) {
	      var payload = {};
	      payload[name] = value;
	      ReactInstrumentation.debugTool.onHostOperation({
	        instanceID: ReactDOMComponentTree.getInstanceFromNode(node)._debugID,
	        type: 'update attribute',
	        payload: payload
	      });
	    }
	  },
	
	  /**
	   * Deletes an attributes from a node.
	   *
	   * @param {DOMElement} node
	   * @param {string} name
	   */
	  deleteValueForAttribute: function (node, name) {
	    node.removeAttribute(name);
	    if (true) {
	      ReactInstrumentation.debugTool.onHostOperation({
	        instanceID: ReactDOMComponentTree.getInstanceFromNode(node)._debugID,
	        type: 'remove attribute',
	        payload: name
	      });
	    }
	  },
	
	  /**
	   * Deletes the value for a property on a node.
	   *
	   * @param {DOMElement} node
	   * @param {string} name
	   */
	  deleteValueForProperty: function (node, name) {
	    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;
	    if (propertyInfo) {
	      var mutationMethod = propertyInfo.mutationMethod;
	      if (mutationMethod) {
	        mutationMethod(node, undefined);
	      } else if (propertyInfo.mustUseProperty) {
	        var propName = propertyInfo.propertyName;
	        if (propertyInfo.hasBooleanValue) {
	          node[propName] = false;
	        } else {
	          node[propName] = '';
	        }
	      } else {
	        node.removeAttribute(propertyInfo.attributeName);
	      }
	    } else if (DOMProperty.isCustomAttribute(name)) {
	      node.removeAttribute(name);
	    }
	
	    if (true) {
	      ReactInstrumentation.debugTool.onHostOperation({
	        instanceID: ReactDOMComponentTree.getInstanceFromNode(node)._debugID,
	        type: 'remove attribute',
	        payload: name
	      });
	    }
	  }
	};
	
	module.exports = DOMPropertyOperations;

/***/ }),
/* 136 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */
	
	'use strict';
	
	var escapeTextContentForBrowser = __webpack_require__(118);
	
	/**
	 * Escapes attribute value to prevent scripting attacks.
	 *
	 * @param {*} value Value to escape.
	 * @return {string} An escaped string.
	 */
	function quoteAttributeValueForBrowser(value) {
	  return '"' + escapeTextContentForBrowser(value) + '"';
	}
	
	module.exports = quoteAttributeValueForBrowser;

/***/ }),
/* 137 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */
	
	'use strict';
	
	var _assign = __webpack_require__(27);
	
	var EventPluginRegistry = __webpack_require__(74);
	var ReactEventEmitterMixin = __webpack_require__(138);
	var ViewportMetrics = __webpack_require__(108);
	
	var getVendorPrefixedEventName = __webpack_require__(139);
	var isEventSupported = __webpack_require__(102);
	
	/**
	 * Summary of `ReactBrowserEventEmitter` event handling:
	 *
	 *  - Top-level delegation is used to trap most native browser events. This
	 *    may only occur in the main thread and is the responsibility of
	 *    ReactEventListener, which is injected and can therefore support pluggable
	 *    event sources. This is the only work that occurs in the main thread.
	 *
	 *  - We normalize and de-duplicate events to account for browser quirks. This
	 *    may be done in the worker thread.
	 *
	 *  - Forward these native events (with the associated top-level type used to
	 *    trap it) to `EventPluginHub`, which in turn will ask plugins if they want
	 *    to extract any synthetic events.
	 *
	 *  - The `EventPluginHub` will then process each event by annotating them with
	 *    "dispatches", a sequence of listeners and IDs that care about that event.
	 *
	 *  - The `EventPluginHub` then dispatches the events.
	 *
	 * Overview of React and the event system:
	 *
	 * +------------+    .
	 * |    DOM     |    .
	 * +------------+    .
	 *       |           .
	 *       v           .
	 * +------------+    .
	 * | ReactEvent |    .
	 * |  Listener  |    .
	 * +------------+    .                         +-----------+
	 *       |           .               +--------+|SimpleEvent|
	 *       |           .               |         |Plugin     |
	 * +-----|------+    .               v         +-----------+
	 * |     |      |    .    +--------------+                    +------------+
	 * |     +-----------.--->|EventPluginHub|                    |    Event   |
	 * |            |    .    |              |     +-----------+  | Propagators|
	 * | ReactEvent |    .    |              |     |TapEvent   |  |------------|
	 * |  Emitter   |    .    |              |<---+|Plugin     |  |other plugin|
	 * |            |    .    |              |     +-----------+  |  utilities |
	 * |     +-----------.--->|              |                    +------------+
	 * |     |      |    .    +--------------+
	 * +-----|------+    .                ^        +-----------+
	 *       |           .                |        |Enter/Leave|
	 *       +           .                +-------+|Plugin     |
	 * +-------------+   .                         +-----------+
	 * | application |   .
	 * |-------------|   .
	 * |             |   .
	 * |             |   .
	 * +-------------+   .
	 *                   .
	 *    React Core     .  General Purpose Event Plugin System
	 */
	
	var hasEventPageXY;
	var alreadyListeningTo = {};
	var isMonitoringScrollValue = false;
	var reactTopListenersCounter = 0;
	
	// For events like 'submit' which don't consistently bubble (which we trap at a
	// lower node than `document`), binding at `document` would cause duplicate
	// events so we don't include them here
	var topEventMapping = {
	  topAbort: 'abort',
	  topAnimationEnd: getVendorPrefixedEventName('animationend') || 'animationend',
	  topAnimationIteration: getVendorPrefixedEventName('animationiteration') || 'animationiteration',
	  topAnimationStart: getVendorPrefixedEventName('animationstart') || 'animationstart',
	  topBlur: 'blur',
	  topCanPlay: 'canplay',
	  topCanPlayThrough: 'canplaythrough',
	  topChange: 'change',
	  topClick: 'click',
	  topCompositionEnd: 'compositionend',
	  topCompositionStart: 'compositionstart',
	  topCompositionUpdate: 'compositionupdate',
	  topContextMenu: 'contextmenu',
	  topCopy: 'copy',
	  topCut: 'cut',
	  topDoubleClick: 'dblclick',
	  topDrag: 'drag',
	  topDragEnd: 'dragend',
	  topDragEnter: 'dragenter',
	  topDragExit: 'dragexit',
	  topDragLeave: 'dragleave',
	  topDragOver: 'dragover',
	  topDragStart: 'dragstart',
	  topDrop: 'drop',
	  topDurationChange: 'durationchange',
	  topEmptied: 'emptied',
	  topEncrypted: 'encrypted',
	  topEnded: 'ended',
	  topError: 'error',
	  topFocus: 'focus',
	  topInput: 'input',
	  topKeyDown: 'keydown',
	  topKeyPress: 'keypress',
	  topKeyUp: 'keyup',
	  topLoadedData: 'loadeddata',
	  topLoadedMetadata: 'loadedmetadata',
	  topLoadStart: 'loadstart',
	  topMouseDown: 'mousedown',
	  topMouseMove: 'mousemove',
	  topMouseOut: 'mouseout',
	  topMouseOver: 'mouseover',
	  topMouseUp: 'mouseup',
	  topPaste: 'paste',
	  topPause: 'pause',
	  topPlay: 'play',
	  topPlaying: 'playing',
	  topProgress: 'progress',
	  topRateChange: 'ratechange',
	  topScroll: 'scroll',
	  topSeeked: 'seeked',
	  topSeeking: 'seeking',
	  topSelectionChange: 'selectionchange',
	  topStalled: 'stalled',
	  topSuspend: 'suspend',
	  topTextInput: 'textInput',
	  topTimeUpdate: 'timeupdate',
	  topTouchCancel: 'touchcancel',
	  topTouchEnd: 'touchend',
	  topTouchMove: 'touchmove',
	  topTouchStart: 'touchstart',
	  topTransitionEnd: getVendorPrefixedEventName('transitionend') || 'transitionend',
	  topVolumeChange: 'volumechange',
	  topWaiting: 'waiting',
	  topWheel: 'wheel'
	};
	
	/**
	 * To ensure no conflicts with other potential React instances on the page
	 */
	var topListenersIDKey = '_reactListenersID' + String(Math.random()).slice(2);
	
	function getListeningForDocument(mountAt) {
	  // In IE8, `mountAt` is a host object and doesn't have `hasOwnProperty`
	  // directly.
	  if (!Object.prototype.hasOwnProperty.call(mountAt, topListenersIDKey)) {
	    mountAt[topListenersIDKey] = reactTopListenersCounter++;
	    alreadyListeningTo[mountAt[topListenersIDKey]] = {};
	  }
	  return alreadyListeningTo[mountAt[topListenersIDKey]];
	}
	
	/**
	 * `ReactBrowserEventEmitter` is used to attach top-level event listeners. For
	 * example:
	 *
	 *   EventPluginHub.putListener('myID', 'onClick', myFunction);
	 *
	 * This would allocate a "registration" of `('onClick', myFunction)` on 'myID'.
	 *
	 * @internal
	 */
	var ReactBrowserEventEmitter = _assign({}, ReactEventEmitterMixin, {
	  /**
	   * Injectable event backend
	   */
	  ReactEventListener: null,
	
	  injection: {
	    /**
	     * @param {object} ReactEventListener
	     */
	    injectReactEventListener: function (ReactEventListener) {
	      ReactEventListener.setHandleTopLevel(ReactBrowserEventEmitter.handleTopLevel);
	      ReactBrowserEventEmitter.ReactEventListener = ReactEventListener;
	    }
	  },
	
	  /**
	   * Sets whether or not any created callbacks should be enabled.
	   *
	   * @param {boolean} enabled True if callbacks should be enabled.
	   */
	  setEnabled: function (enabled) {
	    if (ReactBrowserEventEmitter.ReactEventListener) {
	      ReactBrowserEventEmitter.ReactEventListener.setEnabled(enabled);
	    }
	  },
	
	  /**
	   * @return {boolean} True if callbacks are enabled.
	   */
	  isEnabled: function () {
	    return !!(ReactBrowserEventEmitter.ReactEventListener && ReactBrowserEventEmitter.ReactEventListener.isEnabled());
	  },
	
	  /**
	   * We listen for bubbled touch events on the document object.
	   *
	   * Firefox v8.01 (and possibly others) exhibited strange behavior when
	   * mounting `onmousemove` events at some node that was not the document
	   * element. The symptoms were that if your mouse is not moving over something
	   * contained within that mount point (for example on the background) the
	   * top-level listeners for `onmousemove` won't be called. However, if you
	   * register the `mousemove` on the document object, then it will of course
	   * catch all `mousemove`s. This along with iOS quirks, justifies restricting
	   * top-level listeners to the document object only, at least for these
	   * movement types of events and possibly all events.
	   *
	   * @see http://www.quirksmode.org/blog/archives/2010/09/click_event_del.html
	   *
	   * Also, `keyup`/`keypress`/`keydown` do not bubble to the window on IE, but
	   * they bubble to document.
	   *
	   * @param {string} registrationName Name of listener (e.g. `onClick`).
	   * @param {object} contentDocumentHandle Document which owns the container
	   */
	  listenTo: function (registrationName, contentDocumentHandle) {
	    var mountAt = contentDocumentHandle;
	    var isListening = getListeningForDocument(mountAt);
	    var dependencies = EventPluginRegistry.registrationNameDependencies[registrationName];
	
	    for (var i = 0; i < dependencies.length; i++) {
	      var dependency = dependencies[i];
	      if (!(isListening.hasOwnProperty(dependency) && isListening[dependency])) {
	        if (dependency === 'topWheel') {
	          if (isEventSupported('wheel')) {
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topWheel', 'wheel', mountAt);
	          } else if (isEventSupported('mousewheel')) {
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topWheel', 'mousewheel', mountAt);
	          } else {
	            // Firefox needs to capture a different mouse scroll event.
	            // @see http://www.quirksmode.org/dom/events/tests/scroll.html
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topWheel', 'DOMMouseScroll', mountAt);
	          }
	        } else if (dependency === 'topScroll') {
	          if (isEventSupported('scroll', true)) {
	            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent('topScroll', 'scroll', mountAt);
	          } else {
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topScroll', 'scroll', ReactBrowserEventEmitter.ReactEventListener.WINDOW_HANDLE);
	          }
	        } else if (dependency === 'topFocus' || dependency === 'topBlur') {
	          if (isEventSupported('focus', true)) {
	            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent('topFocus', 'focus', mountAt);
	            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent('topBlur', 'blur', mountAt);
	          } else if (isEventSupported('focusin')) {
	            // IE has `focusin` and `focusout` events which bubble.
	            // @see http://www.quirksmode.org/blog/archives/2008/04/delegating_the.html
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topFocus', 'focusin', mountAt);
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topBlur', 'focusout', mountAt);
	          }
	
	          // to make sure blur and focus event listeners are only attached once
	          isListening.topBlur = true;
	          isListening.topFocus = true;
	        } else if (topEventMapping.hasOwnProperty(dependency)) {
	          ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(dependency, topEventMapping[dependency], mountAt);
	        }
	
	        isListening[dependency] = true;
	      }
	    }
	  },
	
	  trapBubbledEvent: function (topLevelType, handlerBaseName, handle) {
	    return ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelType, handlerBaseName, handle);
	  },
	
	  trapCapturedEvent: function (topLevelType, handlerBaseName, handle) {
	    return ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelType, handlerBaseName, handle);
	  },
	
	  /**
	   * Protect against document.createEvent() returning null
	   * Some popup blocker extensions appear to do this:
	   * https://github.com/facebook/react/issues/6887
	   */
	  supportsEventPageXY: function () {
	    if (!document.createEvent) {
	      return false;
	    }
	    var ev = document.createEvent('MouseEvent');
	    return ev != null && 'pageX' in ev;
	  },
	
	  /**
	   * Listens to window scroll and resize events. We cache scroll values so that
	   * application code can access them without triggering reflows.
	   *
	   * ViewportMetrics is only used by SyntheticMouse/TouchEvent and only when
	   * pageX/pageY isn't supported (legacy browsers).
	   *
	   * NOTE: Scroll events do not bubble.
	   *
	   * @see http://www.quirksmode.org/dom/events/scroll.html
	   */
	  ensureScrollValueMonitoring: function () {
	    if (hasEventPageXY === undefined) {
	      hasEventPageXY = ReactBrowserEventEmitter.supportsEventPageXY();
	    }
	    if (!hasEventPageXY && !isMonitoringScrollValue) {
	      var refresh = ViewportMetrics.refreshScrollValues;
	      ReactBrowserEventEmitter.ReactEventListener.monitorScrollValue(refresh);
	      isMonitoringScrollValue = true;
	    }
	  }
	});
	
	module.exports = ReactBrowserEventEmitter;

/***/ }),
/* 138 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */
	
	'use strict';
	
	var EventPluginHub = __webpack_require__(73);
	
	function runEventQueueInBatch(events) {
	  EventPluginHub.enqueueEvents(events);
	  EventPluginHub.processEventQueue(false);
	}
	
	var ReactEventEmitterMixin = {
	  /**
	   * Streams a fired top-level event to `EventPluginHub` where plugins have the
	   * opportunity to create `ReactEvent`s to be dispatched.
	   */
	  handleTopLevel: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	    var events = EventPluginHub.extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget);
	    runEventQueueInBatch(events);
	  }
	};
	
	module.exports = ReactEventEmitterMixin;

/***/ }),
/* 139 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */
	
	'use strict';
	
	var ExecutionEnvironment = __webpack_require__(79);
	
	/**
	 * Generate a mapping of standard vendor prefixes using the defined style property and event name.
	 *
	 * @param {string} styleProp
	 * @param {string} eventName
	 * @returns {object}
	 */
	function makePrefixMap(styleProp, eventName) {
	  var prefixes = {};
	
	  prefixes[styleProp.toLowerCase()] = eventName.toLowerCase();
	  prefixes['Webkit' + styleProp] = 'webkit' + eventName;
	  prefixes['Moz' + styleProp] = 'moz' + eventName;
	  prefixes['ms' + styleProp] = 'MS' + eventName;
	  prefixes['O' + styleProp] = 'o' + eventName.toLowerCase();
	
	  return prefixes;
	}
	
	/**
	 * A list of event names to a configurable list of vendor prefixes.
	 */
	var vendorPrefixes = {
	  animationend: makePrefixMap('Animation', 'AnimationEnd'),
	  animationiteration: makePrefixMap('Animation', 'AnimationIteration'),
	  animationstart: makePrefixMap('Animation', 'AnimationStart'),
	  transitionend: makePrefixMap('Transition', 'TransitionEnd')
	};
	
	/**
	 * Event names that have already been detected and prefixed (if applicable).
	 */
	var prefixedEventNames = {};
	
	/**
	 * Element to check for prefixes on.
	 */
	var style = {};
	
	/**
	 * Bootstrap if a DOM exists.
	 */
	if (ExecutionEnvironment.canUseDOM) {
	  style = document.createElement('div').style;
	
	  // On some platforms, in particular some releases of Android 4.x,
	  // the un-prefixed "animation" and "transition" properties are defined on the
	  // style object but the events that fire will still be prefixed, so we need
	  // to check if the un-prefixed events are usable, and if not remove them from the map.
	  if (!('AnimationEvent' in window)) {
	    delete vendorPrefixes.animationend.animation;
	    delete vendorPrefixes.animationiteration.animation;
	    delete vendorPrefixes.animationstart.animation;
	  }
	
	  // Same as above
	  if (!('TransitionEvent' in window)) {
	    delete vendorPrefixes.transitionend.transition;
	  }
	}
	
	/**
	 * Attempts to determine the correct vendor prefixed event name.
	 *
	 * @param {string} eventName
	 * @returns {string}
	 */
	function getVendorPrefixedEventName(eventName) {
	  if (prefixedEventNames[eventName]) {
	    return prefixedEventNames[eventName];
	  } else if (!vendorPrefixes[eventName]) {
	    return eventName;
	  }
	
	  var prefixMap = vendorPrefixes[eventName];
	
	  for (var styleProp in prefixMap) {
	    if (prefixMap.hasOwnProperty(styleProp) && styleProp in style) {
	      return prefixedEventNames[eventName] = prefixMap[styleProp];
	    }
	  }
	
	  return '';
	}
	
	module.exports = getVendorPrefixedEventName;

/***/ }),
/* 140 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(66),
	    _assign = __webpack_require__(27);
	
	var DOMPropertyOperations = __webpack_require__(135);
	var LinkedValueUtils = __webpack_require__(141);
	var ReactDOMComponentTree = __webpack_require__(65);
	var ReactUpdates = __webpack_require__(87);
	
	var invariant = __webpack_require__(35);
	var warning = __webpack_require__(31);
	
	var didWarnValueLink = false;
	var didWarnCheckedLink = false;
	var didWarnValueDefaultValue = false;
	var didWarnCheckedDefaultChecked = false;
	var didWarnControlledToUncontrolled = false;
	var didWarnUncontrolledToControlled = false;
	
	function forceUpdateIfMounted() {
	  if (this._rootNodeID) {
	    // DOM component is still mounted; update
	    ReactDOMInput.updateWrapper(this);
	  }
	}
	
	function isControlled(props) {
	  var usesChecked = props.type === 'checkbox' || props.type === 'radio';
	  return usesChecked ? props.checked != null : props.value != null;
	}
	
	/**
	 * Implements an <input> host component that allows setting these optional
	 * props: `checked`, `value`, `defaultChecked`, and `defaultValue`.
	 *
	 * If `checked` or `value` are not supplied (or null/undefined), user actions
	 * that affect the checked state or value will trigger updates to the element.
	 *
	 * If they are supplied (and not null/undefined), the rendered element will not
	 * trigger updates to the element. Instead, the props must change in order for
	 * the rendered element to be updated.
	 *
	 * The rendered element will be initialized as unchecked (or `defaultChecked`)
	 * with an empty value (or `defaultValue`).
	 *
	 * @see http://www.w3.org/TR/2012/WD-html5-20121025/the-input-element.html
	 */
	var ReactDOMInput = {
	  getHostProps: function (inst, props) {
	    var value = LinkedValueUtils.getValue(props);
	    var checked = LinkedValueUtils.getChecked(props);
	
	    var hostProps = _assign({
	      // Make sure we set .type before any other properties (setting .value
	      // before .type means .value is lost in IE11 and below)
	      type: undefined,
	      // Make sure we set .step before .value (setting .value before .step
	      // means .value is rounded on mount, based upon step precision)
	      step: undefined,
	      // Make sure we set .min & .max before .value (to ensure proper order
	      // in corner cases such as min or max deriving from value, e.g. Issue #7170)
	      min: undefined,
	      max: undefined
	    }, props, {
	      defaultChecked: undefined,
	      defaultValue: undefined,
	      value: value != null ? value : inst._wrapperState.initialValue,
	      checked: checked != null ? checked : inst._wrapperState.initialChecked,
	      onChange: inst._wrapperState.onChange
	    });
	
	    return hostProps;
	  },
	
	  mountWrapper: function (inst, props) {
	    if (true) {
	      LinkedValueUtils.checkPropTypes('input', props, inst._currentElement._owner);
	
	      var owner = inst._currentElement._owner;
	
	      if (props.valueLink !== undefined && !didWarnValueLink) {
	         true ? warning(false, '`valueLink` prop on `input` is deprecated; set `value` and `onChange` instead.') : void 0;
	        didWarnValueLink = true;
	      }
	      if (props.checkedLink !== undefined && !didWarnCheckedLink) {
	         true ? warning(false, '`checkedLink` prop on `input` is deprecated; set `value` and `onChange` instead.') : void 0;
	        didWarnCheckedLink = true;
	      }
	      if (props.checked !== undefined && props.defaultChecked !== undefined && !didWarnCheckedDefaultChecked) {
	         true ? warning(false, '%s contains an input of type %s with both checked and defaultChecked props. ' + 'Input elements must be either controlled or uncontrolled ' + '(specify either the checked prop, or the defaultChecked prop, but not ' + 'both). Decide between using a controlled or uncontrolled input ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;
	        didWarnCheckedDefaultChecked = true;
	      }
	      if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValueDefaultValue) {
	         true ? warning(false, '%s contains an input of type %s with both value and defaultValue props. ' + 'Input elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled input ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;
	        didWarnValueDefaultValue = true;
	      }
	    }
	
	    var defaultValue = props.defaultValue;
	    inst._wrapperState = {
	      initialChecked: props.checked != null ? props.checked : props.defaultChecked,
	      initialValue: props.value != null ? props.value : defaultValue,
	      listeners: null,
	      onChange: _handleChange.bind(inst),
	      controlled: isControlled(props)
	    };
	  },
	
	  updateWrapper: function (inst) {
	    var props = inst._currentElement.props;
	
	    if (true) {
	      var controlled = isControlled(props);
	      var owner = inst._currentElement._owner;
	
	      if (!inst._wrapperState.controlled && controlled && !didWarnUncontrolledToControlled) {
	         true ? warning(false, '%s is changing an uncontrolled input of type %s to be controlled. ' + 'Input elements should not switch from uncontrolled to controlled (or vice versa). ' + 'Decide between using a controlled or uncontrolled input ' + 'element for the lifetime of the component. More info: https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;
	        didWarnUncontrolledToControlled = true;
	      }
	      if (inst._wrapperState.controlled && !controlled && !didWarnControlledToUncontrolled) {
	         true ? warning(false, '%s is changing a controlled input of type %s to be uncontrolled. ' + 'Input elements should not switch from controlled to uncontrolled (or vice versa). ' + 'Decide between using a controlled or uncontrolled input ' + 'element for the lifetime of the component. More info: https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;
	        didWarnControlledToUncontrolled = true;
	      }
	    }
	
	    // TODO: Shouldn't this be getChecked(props)?
	    var checked = props.checked;
	    if (checked != null) {
	      DOMPropertyOperations.setValueForProperty(ReactDOMComponentTree.getNodeFromInstance(inst), 'checked', checked || false);
	    }
	
	    var node = ReactDOMComponentTree.getNodeFromInstance(inst);
	    var value = LinkedValueUtils.getValue(props);
	    if (value != null) {
	      if (value === 0 && node.value === '') {
	        node.value = '0';
	        // Note: IE9 reports a number inputs as 'text', so check props instead.
	      } else if (props.type === 'number') {
	        // Simulate `input.valueAsNumber`. IE9 does not support it
	        var valueAsNumber = parseFloat(node.value, 10) || 0;
	
	        if (
	        // eslint-disable-next-line
	        value != valueAsNumber ||
	        // eslint-disable-next-line
	        value == valueAsNumber && node.value != value) {
	          // Cast `value` to a string to ensure the value is set correctly. While
	          // browsers typically do this as necessary, jsdom doesn't.
	          node.value = '' + value;
	        }
	      } else if (node.value !== '' + value) {
	        // Cast `value` to a string to ensure the value is set correctly. While
	        // browsers typically do this as necessary, jsdom doesn't.
	        node.value = '' + value;
	      }
	    } else {
	      if (props.value == null && props.defaultValue != null) {
	        // In Chrome, assigning defaultValue to certain input types triggers input validation.
	        // For number inputs, the display value loses trailing decimal points. For email inputs,
	        // Chrome raises "The specified value <x> is not a valid email address".
	        //
	        // Here we check to see if the defaultValue has actually changed, avoiding these problems
	        // when the user is inputting text
	        //
	        // https://github.com/facebook/react/issues/7253
	        if (node.defaultValue !== '' + props.defaultValue) {
	          node.defaultValue = '' + props.defaultValue;
	        }
	      }
	      if (props.checked == null && props.defaultChecked != null) {
	        node.defaultChecked = !!props.defaultChecked;
	      }
	    }
	  },
	
	  postMountWrapper: function (inst) {
	    var props = inst._currentElement.props;
	
	    // This is in postMount because we need access to the DOM node, which is not
	    // available until after the component has mounted.
	    var node = ReactDOMComponentTree.getNodeFromInstance(inst);
	
	    // Detach value from defaultValue. We won't do anything if we're working on
	    // submit or reset inputs as those values & defaultValues are linked. They
	    // are not resetable nodes so this operation doesn't matter and actually
	    // removes browser-default values (eg "Submit Query") when no value is
	    // provided.
	
	    switch (props.type) {
	      case 'submit':
	      case 'reset':
	        break;
	      case 'color':
	      case 'date':
	      case 'datetime':
	      case 'datetime-local':
	      case 'month':
	      case 'time':
	      case 'week':
	        // This fixes the no-show issue on iOS Safari and Android Chrome:
	        // https://github.com/facebook/react/issues/7233
	        node.value = '';
	        node.value = node.defaultValue;
	        break;
	      default:
	        node.value = node.value;
	        break;
	    }
	
	    // Normally, we'd just do `node.checked = node.checked` upon initial mount, less this bug
	    // this is needed to work around a chrome bug where setting defaultChecked
	    // will sometimes influence the value of checked (even after detachment).
	    // Reference: https://bugs.chromium.org/p/chromium/issues/detail?id=608416
	    // We need to temporarily unset name to avoid disrupting radio button groups.
	    var name = node.name;
	    if (name !== '') {
	      node.name = '';
	    }
	    node.defaultChecked = !node.defaultChecked;
	    node.defaultChecked = !node.defaultChecked;
	    if (name !== '') {
	      node.name = name;
	    }
	  }
	};
	
	function _handleChange(event) {
	  var props = this._currentElement.props;
	
	  var returnValue = LinkedValueUtils.executeOnChange(props, event);
	
	  // Here we use asap to wait until all updates have propagated, which
	  // is important when using controlled components within layers:
	  // https://github.com/facebook/react/issues/1698
	  ReactUpdates.asap(forceUpdateIfMounted, this);
	
	  var name = props.name;
	  if (props.type === 'radio' && name != null) {
	    var rootNode = ReactDOMComponentTree.getNodeFromInstance(this);
	    var queryRoot = rootNode;
	
	    while (queryRoot.parentNode) {
	      queryRoot = queryRoot.parentNode;
	    }
	
	    // If `rootNode.form` was non-null, then we could try `form.elements`,
	    // but that sometimes behaves strangely in IE8. We could also try using
	    // `form.getElementsByName`, but that will only return direct children
	    // and won't include inputs that use the HTML5 `form=` attribute. Since
	    // the input might not even be in a form, let's just use the global
	    // `querySelectorAll` to ensure we don't miss anything.
	    var group = queryRoot.querySelectorAll('input[name=' + JSON.stringify('' + name) + '][type="radio"]');
	
	    for (var i = 0; i < group.length; i++) {
	      var otherNode = group[i];
	      if (otherNode === rootNode || otherNode.form !== rootNode.form) {
	        continue;
	      }
	      // This will throw if radio buttons rendered by different copies of React
	      // and the same name are rendered into the same form (same as #1939).
	      // That's probably okay; we don't support it just as we don't support
	      // mixing React radio buttons with non-React ones.
	      var otherInstance = ReactDOMComponentTree.getInstanceFromNode(otherNode);
	      !otherInstance ?  true ? invariant(false, 'ReactDOMInput: Mixing React and non-React radio inputs with the same `name` is not supported.') : _prodInvariant('90') : void 0;
	      // If this is a controlled radio button group, forcing the input that
	      // was previously checked to update will cause it to be come re-checked
	      // as appropriate.
	      ReactUpdates.asap(forceUpdateIfMounted, otherInstance);
	    }
	  }
	
	  return returnValue;
	}
	
	module.exports = ReactDOMInput;

/***/ }),
/* 141 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(66);
	
	var ReactPropTypesSecret = __webpack_require__(142);
	var propTypesFactory = __webpack_require__(53);
	
	var React = __webpack_require__(26);
	var PropTypes = propTypesFactory(React.isValidElement);
	
	var invariant = __webpack_require__(35);
	var warning = __webpack_require__(31);
	
	var hasReadOnlyValue = {
	  button: true,
	  checkbox: true,
	  image: true,
	  hidden: true,
	  radio: true,
	  reset: true,
	  submit: true
	};
	
	function _assertSingleLink(inputProps) {
	  !(inputProps.checkedLink == null || inputProps.valueLink == null) ?  true ? invariant(false, 'Cannot provide a checkedLink and a valueLink. If you want to use checkedLink, you probably don\'t want to use valueLink and vice versa.') : _prodInvariant('87') : void 0;
	}
	function _assertValueLink(inputProps) {
	  _assertSingleLink(inputProps);
	  !(inputProps.value == null && inputProps.onChange == null) ?  true ? invariant(false, 'Cannot provide a valueLink and a value or onChange event. If you want to use value or onChange, you probably don\'t want to use valueLink.') : _prodInvariant('88') : void 0;
	}
	
	function _assertCheckedLink(inputProps) {
	  _assertSingleLink(inputProps);
	  !(inputProps.checked == null && inputProps.onChange == null) ?  true ? invariant(false, 'Cannot provide a checkedLink and a checked property or onChange event. If you want to use checked or onChange, you probably don\'t want to use checkedLink') : _prodInvariant('89') : void 0;
	}
	
	var propTypes = {
	  value: function (props, propName, componentName) {
	    if (!props[propName] || hasReadOnlyValue[props.type] || props.onChange || props.readOnly || props.disabled) {
	      return null;
	    }
	    return new Error('You provided a `value` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultValue`. Otherwise, ' + 'set either `onChange` or `readOnly`.');
	  },
	  checked: function (props, propName, componentName) {
	    if (!props[propName] || props.onChange || props.readOnly || props.disabled) {
	      return null;
	    }
	    return new Error('You provided a `checked` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultChecked`. Otherwise, ' + 'set either `onChange` or `readOnly`.');
	  },
	  onChange: PropTypes.func
	};
	
	var loggedTypeFailures = {};
	function getDeclarationErrorAddendum(owner) {
	  if (owner) {
	    var name = owner.getName();
	    if (name) {
	      return ' Check the render method of `' + name + '`.';
	    }
	  }
	  return '';
	}
	
	/**
	 * Provide a linked `value` attribute for controlled forms. You should not use
	 * this outside of the ReactDOM controlled form components.
	 */
	var LinkedValueUtils = {
	  checkPropTypes: function (tagName, props, owner) {
	    for (var propName in propTypes) {
	      if (propTypes.hasOwnProperty(propName)) {
	        var error = propTypes[propName](props, propName, tagName, 'prop', null, ReactPropTypesSecret);
	      }
	      if (error instanceof Error && !(error.message in loggedTypeFailures)) {
	        // Only monitor this failure once because there tends to be a lot of the
	        // same error.
	        loggedTypeFailures[error.message] = true;
	
	        var addendum = getDeclarationErrorAddendum(owner);
	         true ? warning(false, 'Failed form propType: %s%s', error.message, addendum) : void 0;
	      }
	    }
	  },
	
	  /**
	   * @param {object} inputProps Props for form component
	   * @return {*} current value of the input either from value prop or link.
	   */
	  getValue: function (inputProps) {
	    if (inputProps.valueLink) {
	      _assertValueLink(inputProps);
	      return inputProps.valueLink.value;
	    }
	    return inputProps.value;
	  },
	
	  /**
	   * @param {object} inputProps Props for form component
	   * @return {*} current checked status of the input either from checked prop
	   *             or link.
	   */
	  getChecked: function (inputProps) {
	    if (inputProps.checkedLink) {
	      _assertCheckedLink(inputProps);
	      return inputProps.checkedLink.value;
	    }
	    return inputProps.checked;
	  },
	
	  /**
	   * @param {object} inputProps Props for form component
	   * @param {SyntheticEvent} event change event to handle
	   */
	  executeOnChange: function (inputProps, event) {
	    if (inputProps.valueLink) {
	      _assertValueLink(inputProps);
	      return inputProps.valueLink.requestChange(event.target.value);
	    } else if (inputProps.checkedLink) {
	      _assertCheckedLink(inputProps);
	      return inputProps.checkedLink.requestChange(event.target.checked);
	    } else if (inputProps.onChange) {
	      return inputProps.onChange.call(undefined, event);
	    }
	  }
	};
	
	module.exports = LinkedValueUtils;

/***/ }),
/* 142 */
/***/ (function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * 
	 */
	
	'use strict';
	
	var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';
	
	module.exports = ReactPropTypesSecret;

/***/ }),
/* 143 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */
	
	'use strict';
	
	var _assign = __webpack_require__(27);
	
	var React = __webpack_require__(26);
	var ReactDOMComponentTree = __webpack_require__(65);
	var ReactDOMSelect = __webpack_require__(144);
	
	var warning = __webpack_require__(31);
	var didWarnInvalidOptionChildren = false;
	
	function flattenChildren(children) {
	  var content = '';
	
	  // Flatten children and warn if they aren't strings or numbers;
	  // invalid types are ignored.
	  React.Children.forEach(children, function (child) {
	    if (child == null) {
	      return;
	    }
	    if (typeof child === 'string' || typeof child === 'number') {
	      content += child;
	    } else if (!didWarnInvalidOptionChildren) {
	      didWarnInvalidOptionChildren = true;
	       true ? warning(false, 'Only strings and numbers are supported as <option> children.') : void 0;
	    }
	  });
	
	  return content;
	}
	
	/**
	 * Implements an <option> host component that warns when `selected` is set.
	 */
	var ReactDOMOption = {
	  mountWrapper: function (inst, props, hostParent) {
	    // TODO (yungsters): Remove support for `selected` in <option>.
	    if (true) {
	       true ? warning(props.selected == null, 'Use the `defaultValue` or `value` props on <select> instead of ' + 'setting `selected` on <option>.') : void 0;
	    }
	
	    // Look up whether this option is 'selected'
	    var selectValue = null;
	    if (hostParent != null) {
	      var selectParent = hostParent;
	
	      if (selectParent._tag === 'optgroup') {
	        selectParent = selectParent._hostParent;
	      }
	
	      if (selectParent != null && selectParent._tag === 'select') {
	        selectValue = ReactDOMSelect.getSelectValueContext(selectParent);
	      }
	    }
	
	    // If the value is null (e.g., no specified value or after initial mount)
	    // or missing (e.g., for <datalist>), we don't change props.selected
	    var selected = null;
	    if (selectValue != null) {
	      var value;
	      if (props.value != null) {
	        value = props.value + '';
	      } else {
	        value = flattenChildren(props.children);
	      }
	      selected = false;
	      if (Array.isArray(selectValue)) {
	        // multiple
	        for (var i = 0; i < selectValue.length; i++) {
	          if ('' + selectValue[i] === value) {
	            selected = true;
	            break;
	          }
	        }
	      } else {
	        selected = '' + selectValue === value;
	      }
	    }
	
	    inst._wrapperState = { selected: selected };
	  },
	
	  postMountWrapper: function (inst) {
	    // value="" should make a value attribute (#6219)
	    var props = inst._currentElement.props;
	    if (props.value != null) {
	      var node = ReactDOMComponentTree.getNodeFromInstance(inst);
	      node.setAttribute('value', props.value);
	    }
	  },
	
	  getHostProps: function (inst, props) {
	    var hostProps = _assign({ selected: undefined, children: undefined }, props);
	
	    // Read state only from initial mount because <select> updates value
	    // manually; we need the initial state only for server rendering
	    if (inst._wrapperState.selected != null) {
	      hostProps.selected = inst._wrapperState.selected;
	    }
	
	    var content = flattenChildren(props.children);
	
	    if (content) {
	      hostProps.children = content;
	    }
	
	    return hostProps;
	  }
	};
	
	module.exports = ReactDOMOption;

/***/ }),
/* 144 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */
	
	'use strict';
	
	var _assign = __webpack_require__(27);
	
	var LinkedValueUtils = __webpack_require__(141);
	var ReactDOMComponentTree = __webpack_require__(65);
	var ReactUpdates = __webpack_require__(87);
	
	var warning = __webpack_require__(31);
	
	var didWarnValueLink = false;
	var didWarnValueDefaultValue = false;
	
	function updateOptionsIfPendingUpdateAndMounted() {
	  if (this._rootNodeID && this._wrapperState.pendingUpdate) {
	    this._wrapperState.pendingUpdate = false;
	
	    var props = this._currentElement.props;
	    var value = LinkedValueUtils.getValue(props);
	
	    if (value != null) {
	      updateOptions(this, Boolean(props.multiple), value);
	    }
	  }
	}
	
	function getDeclarationErrorAddendum(owner) {
	  if (owner) {
	    var name = owner.getName();
	    if (name) {
	      return ' Check the render method of `' + name + '`.';
	    }
	  }
	  return '';
	}
	
	var valuePropNames = ['value', 'defaultValue'];
	
	/**
	 * Validation function for `value` and `defaultValue`.
	 * @private
	 */
	function checkSelectPropTypes(inst, props) {
	  var owner = inst._currentElement._owner;
	  LinkedValueUtils.checkPropTypes('select', props, owner);
	
	  if (props.valueLink !== undefined && !didWarnValueLink) {
	     true ? warning(false, '`valueLink` prop on `select` is deprecated; set `value` and `onChange` instead.') : void 0;
	    didWarnValueLink = true;
	  }
	
	  for (var i = 0; i < valuePropNames.length; i++) {
	    var propName = valuePropNames[i];
	    if (props[propName] == null) {
	      continue;
	    }
	    var isArray = Array.isArray(props[propName]);
	    if (props.multiple && !isArray) {
	       true ? warning(false, 'The `%s` prop supplied to <select> must be an array if ' + '`multiple` is true.%s', propName, getDeclarationErrorAddendum(owner)) : void 0;
	    } else if (!props.multiple && isArray) {
	       true ? warning(false, 'The `%s` prop supplied to <select> must be a scalar ' + 'value if `multiple` is false.%s', propName, getDeclarationErrorAddendum(owner)) : void 0;
	    }
	  }
	}
	
	/**
	 * @param {ReactDOMComponent} inst
	 * @param {boolean} multiple
	 * @param {*} propValue A stringable (with `multiple`, a list of stringables).
	 * @private
	 */
	function updateOptions(inst, multiple, propValue) {
	  var selectedValue, i;
	  var options = ReactDOMComponentTree.getNodeFromInstance(inst).options;
	
	  if (multiple) {
	    selectedValue = {};
	    for (i = 0; i < propValue.length; i++) {
	      selectedValue['' + propValue[i]] = true;
	    }
	    for (i = 0; i < options.length; i++) {
	      var selected = selectedValue.hasOwnProperty(options[i].value);
	      if (options[i].selected !== selected) {
	        options[i].selected = selected;
	      }
	    }
	  } else {
	    // Do not set `select.value` as exact behavior isn't consistent across all
	    // browsers for all cases.
	    selectedValue = '' + propValue;
	    for (i = 0; i < options.length; i++) {
	      if (options[i].value === selectedValue) {
	        options[i].selected = true;
	        return;
	      }
	    }
	    if (options.length) {
	      options[0].selected = true;
	    }
	  }
	}
	
	/**
	 * Implements a <select> host component that allows optionally setting the
	 * props `value` and `defaultValue`. If `multiple` is false, the prop must be a
	 * stringable. If `multiple` is true, the prop must be an array of stringables.
	 *
	 * If `value` is not supplied (or null/undefined), user actions that change the
	 * selected option will trigger updates to the rendered options.
	 *
	 * If it is supplied (and not null/undefined), the rendered options will not
	 * update in response to user actions. Instead, the `value` prop must change in
	 * order for the rendered options to update.
	 *
	 * If `defaultValue` is provided, any options with the supplied values will be
	 * selected.
	 */
	var ReactDOMSelect = {
	  getHostProps: function (inst, props) {
	    return _assign({}, props, {
	      onChange: inst._wrapperState.onChange,
	      value: undefined
	    });
	  },
	
	  mountWrapper: function (inst, props) {
	    if (true) {
	      checkSelectPropTypes(inst, props);
	    }
	
	    var value = LinkedValueUtils.getValue(props);
	    inst._wrapperState = {
	      pendingUpdate: false,
	      initialValue: value != null ? value : props.defaultValue,
	      listeners: null,
	      onChange: _handleChange.bind(inst),
	      wasMultiple: Boolean(props.multiple)
	    };
	
	    if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValueDefaultValue) {
	       true ? warning(false, 'Select elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled select ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components') : void 0;
	      didWarnValueDefaultValue = true;
	    }
	  },
	
	  getSelectValueContext: function (inst) {
	    // ReactDOMOption looks at this initial value so the initial generated
	    // markup has correct `selected` attributes
	    return inst._wrapperState.initialValue;
	  },
	
	  postUpdateWrapper: function (inst) {
	    var props = inst._currentElement.props;
	
	    // After the initial mount, we control selected-ness manually so don't pass
	    // this value down
	    inst._wrapperState.initialValue = undefined;
	
	    var wasMultiple = inst._wrapperState.wasMultiple;
	    inst._wrapperState.wasMultiple = Boolean(props.multiple);
	
	    var value = LinkedValueUtils.getValue(props);
	    if (value != null) {
	      inst._wrapperState.pendingUpdate = false;
	      updateOptions(inst, Boolean(props.multiple), value);
	    } else if (wasMultiple !== Boolean(props.multiple)) {
	      // For simplicity, reapply `defaultValue` if `multiple` is toggled.
	      if (props.defaultValue != null) {
	        updateOptions(inst, Boolean(props.multiple), props.defaultValue);
	      } else {
	        // Revert the select back to its default unselected state.
	        updateOptions(inst, Boolean(props.multiple), props.multiple ? [] : '');
	      }
	    }
	  }
	};
	
	function _handleChange(event) {
	  var props = this._currentElement.props;
	  var returnValue = LinkedValueUtils.executeOnChange(props, event);
	
	  if (this._rootNodeID) {
	    this._wrapperState.pendingUpdate = true;
	  }
	  ReactUpdates.asap(updateOptionsIfPendingUpdateAndMounted, this);
	  return returnValue;
	}
	
	module.exports = ReactDOMSelect;

/***/ }),
/* 145 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(66),
	    _assign = __webpack_require__(27);
	
	var LinkedValueUtils = __webpack_require__(141);
	var ReactDOMComponentTree = __webpack_require__(65);
	var ReactUpdates = __webpack_require__(87);
	
	var invariant = __webpack_require__(35);
	var warning = __webpack_require__(31);
	
	var didWarnValueLink = false;
	var didWarnValDefaultVal = false;
	
	function forceUpdateIfMounted() {
	  if (this._rootNodeID) {
	    // DOM component is still mounted; update
	    ReactDOMTextarea.updateWrapper(this);
	  }
	}
	
	/**
	 * Implements a <textarea> host component that allows setting `value`, and
	 * `defaultValue`. This differs from the traditional DOM API because value is
	 * usually set as PCDATA children.
	 *
	 * If `value` is not supplied (or null/undefined), user actions that affect the
	 * value will trigger updates to the element.
	 *
	 * If `value` is supplied (and not null/undefined), the rendered element will
	 * not trigger updates to the element. Instead, the `value` prop must change in
	 * order for the rendered element to be updated.
	 *
	 * The rendered element will be initialized with an empty value, the prop
	 * `defaultValue` if specified, or the children content (deprecated).
	 */
	var ReactDOMTextarea = {
	  getHostProps: function (inst, props) {
	    !(props.dangerouslySetInnerHTML == null) ?  true ? invariant(false, '`dangerouslySetInnerHTML` does not make sense on <textarea>.') : _prodInvariant('91') : void 0;
	
	    // Always set children to the same thing. In IE9, the selection range will
	    // get reset if `textContent` is mutated.  We could add a check in setTextContent
	    // to only set the value if/when the value differs from the node value (which would
	    // completely solve this IE9 bug), but Sebastian+Ben seemed to like this solution.
	    // The value can be a boolean or object so that's why it's forced to be a string.
	    var hostProps = _assign({}, props, {
	      value: undefined,
	      defaultValue: undefined,
	      children: '' + inst._wrapperState.initialValue,
	      onChange: inst._wrapperState.onChange
	    });
	
	    return hostProps;
	  },
	
	  mountWrapper: function (inst, props) {
	    if (true) {
	      LinkedValueUtils.checkPropTypes('textarea', props, inst._currentElement._owner);
	      if (props.valueLink !== undefined && !didWarnValueLink) {
	         true ? warning(false, '`valueLink` prop on `textarea` is deprecated; set `value` and `onChange` instead.') : void 0;
	        didWarnValueLink = true;
	      }
	      if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValDefaultVal) {
	         true ? warning(false, 'Textarea elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled textarea ' + 'and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components') : void 0;
	        didWarnValDefaultVal = true;
	      }
	    }
	
	    var value = LinkedValueUtils.getValue(props);
	    var initialValue = value;
	
	    // Only bother fetching default value if we're going to use it
	    if (value == null) {
	      var defaultValue = props.defaultValue;
	      // TODO (yungsters): Remove support for children content in <textarea>.
	      var children = props.children;
	      if (children != null) {
	        if (true) {
	           true ? warning(false, 'Use the `defaultValue` or `value` props instead of setting ' + 'children on <textarea>.') : void 0;
	        }
	        !(defaultValue == null) ?  true ? invariant(false, 'If you supply `defaultValue` on a <textarea>, do not pass children.') : _prodInvariant('92') : void 0;
	        if (Array.isArray(children)) {
	          !(children.length <= 1) ?  true ? invariant(false, '<textarea> can only have at most one child.') : _prodInvariant('93') : void 0;
	          children = children[0];
	        }
	
	        defaultValue = '' + children;
	      }
	      if (defaultValue == null) {
	        defaultValue = '';
	      }
	      initialValue = defaultValue;
	    }
	
	    inst._wrapperState = {
	      initialValue: '' + initialValue,
	      listeners: null,
	      onChange: _handleChange.bind(inst)
	    };
	  },
	
	  updateWrapper: function (inst) {
	    var props = inst._currentElement.props;
	
	    var node = ReactDOMComponentTree.getNodeFromInstance(inst);
	    var value = LinkedValueUtils.getValue(props);
	    if (value != null) {
	      // Cast `value` to a string to ensure the value is set correctly. While
	      // browsers typically do this as necessary, jsdom doesn't.
	      var newValue = '' + value;
	
	      // To avoid side effects (such as losing text selection), only set value if changed
	      if (newValue !== node.value) {
	        node.value = newValue;
	      }
	      if (props.defaultValue == null) {
	        node.defaultValue = newValue;
	      }
	    }
	    if (props.defaultValue != null) {
	      node.defaultValue = props.defaultValue;
	    }
	  },
	
	  postMountWrapper: function (inst) {
	    // This is in postMount because we need access to the DOM node, which is not
	    // available until after the component has mounted.
	    var node = ReactDOMComponentTree.getNodeFromInstance(inst);
	    var textContent = node.textContent;
	
	    // Only set node.value if textContent is equal to the expected
	    // initial value. In IE10/IE11 there is a bug where the placeholder attribute
	    // will populate textContent as well.
	    // https://developer.microsoft.com/microsoft-edge/platform/issues/101525/
	    if (textContent === inst._wrapperState.initialValue) {
	      node.value = textContent;
	    }
	  }
	};
	
	function _handleChange(event) {
	  var props = this._currentElement.props;
	  var returnValue = LinkedValueUtils.executeOnChange(props, event);
	  ReactUpdates.asap(forceUpdateIfMounted, this);
	  return returnValue;
	}
	
	module.exports = ReactDOMTextarea;

/***/ }),
/* 146 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(66);
	
	var ReactComponentEnvironment = __webpack_require__(147);
	var ReactInstanceMap = __webpack_require__(148);
	var ReactInstrumentation = __webpack_require__(93);
	
	var ReactCurrentOwner = __webpack_require__(40);
	var ReactReconciler = __webpack_require__(90);
	var ReactChildReconciler = __webpack_require__(149);
	
	var emptyFunction = __webpack_require__(32);
	var flattenChildren = __webpack_require__(164);
	var invariant = __webpack_require__(35);
	
	/**
	 * Make an update for markup to be rendered and inserted at a supplied index.
	 *
	 * @param {string} markup Markup that renders into an element.
	 * @param {number} toIndex Destination index.
	 * @private
	 */
	function makeInsertMarkup(markup, afterNode, toIndex) {
	  // NOTE: Null values reduce hidden classes.
	  return {
	    type: 'INSERT_MARKUP',
	    content: markup,
	    fromIndex: null,
	    fromNode: null,
	    toIndex: toIndex,
	    afterNode: afterNode
	  };
	}
	
	/**
	 * Make an update for moving an existing element to another index.
	 *
	 * @param {number} fromIndex Source index of the existing element.
	 * @param {number} toIndex Destination index of the element.
	 * @private
	 */
	function makeMove(child, afterNode, toIndex) {
	  // NOTE: Null values reduce hidden classes.
	  return {
	    type: 'MOVE_EXISTING',
	    content: null,
	    fromIndex: child._mountIndex,
	    fromNode: ReactReconciler.getHostNode(child),
	    toIndex: toIndex,
	    afterNode: afterNode
	  };
	}
	
	/**
	 * Make an update for removing an element at an index.
	 *
	 * @param {number} fromIndex Index of the element to remove.
	 * @private
	 */
	function makeRemove(child, node) {
	  // NOTE: Null values reduce hidden classes.
	  return {
	    type: 'REMOVE_NODE',
	    content: null,
	    fromIndex: child._mountIndex,
	    fromNode: node,
	    toIndex: null,
	    afterNode: null
	  };
	}
	
	/**
	 * Make an update for setting the markup of a node.
	 *
	 * @param {string} markup Markup that renders into an element.
	 * @private
	 */
	function makeSetMarkup(markup) {
	  // NOTE: Null values reduce hidden classes.
	  return {
	    type: 'SET_MARKUP',
	    content: markup,
	    fromIndex: null,
	    fromNode: null,
	    toIndex: null,
	    afterNode: null
	  };
	}
	
	/**
	 * Make an update for setting the text content.
	 *
	 * @param {string} textContent Text content to set.
	 * @private
	 */
	function makeTextContent(textContent) {
	  // NOTE: Null values reduce hidden classes.
	  return {
	    type: 'TEXT_CONTENT',
	    content: textContent,
	    fromIndex: null,
	    fromNode: null,
	    toIndex: null,
	    afterNode: null
	  };
	}
	
	/**
	 * Push an update, if any, onto the queue. Creates a new queue if none is
	 * passed and always returns the queue. Mutative.
	 */
	function enqueue(queue, update) {
	  if (update) {
	    queue = queue || [];
	    queue.push(update);
	  }
	  return queue;
	}
	
	/**
	 * Processes any enqueued updates.
	 *
	 * @private
	 */
	function processQueue(inst, updateQueue) {
	  ReactComponentEnvironment.processChildrenUpdates(inst, updateQueue);
	}
	
	var setChildrenForInstrumentation = emptyFunction;
	if (true) {
	  var getDebugID = function (inst) {
	    if (!inst._debugID) {
	      // Check for ART-like instances. TODO: This is silly/gross.
	      var internal;
	      if (internal = ReactInstanceMap.get(inst)) {
	        inst = internal;
	      }
	    }
	    return inst._debugID;
	  };
	  setChildrenForInstrumentation = function (children) {
	    var debugID = getDebugID(this);
	    // TODO: React Native empty components are also multichild.
	    // This means they still get into this method but don't have _debugID.
	    if (debugID !== 0) {
	      ReactInstrumentation.debugTool.onSetChildren(debugID, children ? Object.keys(children).map(function (key) {
	        return children[key]._debugID;
	      }) : []);
	    }
	  };
	}
	
	/**
	 * ReactMultiChild are capable of reconciling multiple children.
	 *
	 * @class ReactMultiChild
	 * @internal
	 */
	var ReactMultiChild = {
	  /**
	   * Provides common functionality for components that must reconcile multiple
	   * children. This is used by `ReactDOMComponent` to mount, update, and
	   * unmount child components.
	   *
	   * @lends {ReactMultiChild.prototype}
	   */
	  Mixin: {
	    _reconcilerInstantiateChildren: function (nestedChildren, transaction, context) {
	      if (true) {
	        var selfDebugID = getDebugID(this);
	        if (this._currentElement) {
	          try {
	            ReactCurrentOwner.current = this._currentElement._owner;
	            return ReactChildReconciler.instantiateChildren(nestedChildren, transaction, context, selfDebugID);
	          } finally {
	            ReactCurrentOwner.current = null;
	          }
	        }
	      }
	      return ReactChildReconciler.instantiateChildren(nestedChildren, transaction, context);
	    },
	
	    _reconcilerUpdateChildren: function (prevChildren, nextNestedChildrenElements, mountImages, removedNodes, transaction, context) {
	      var nextChildren;
	      var selfDebugID = 0;
	      if (true) {
	        selfDebugID = getDebugID(this);
	        if (this._currentElement) {
	          try {
	            ReactCurrentOwner.current = this._currentElement._owner;
	            nextChildren = flattenChildren(nextNestedChildrenElements, selfDebugID);
	          } finally {
	            ReactCurrentOwner.current = null;
	          }
	          ReactChildReconciler.updateChildren(prevChildren, nextChildren, mountImages, removedNodes, transaction, this, this._hostContainerInfo, context, selfDebugID);
	          return nextChildren;
	        }
	      }
	      nextChildren = flattenChildren(nextNestedChildrenElements, selfDebugID);
	      ReactChildReconciler.updateChildren(prevChildren, nextChildren, mountImages, removedNodes, transaction, this, this._hostContainerInfo, context, selfDebugID);
	      return nextChildren;
	    },
	
	    /**
	     * Generates a "mount image" for each of the supplied children. In the case
	     * of `ReactDOMComponent`, a mount image is a string of markup.
	     *
	     * @param {?object} nestedChildren Nested child maps.
	     * @return {array} An array of mounted representations.
	     * @internal
	     */
	    mountChildren: function (nestedChildren, transaction, context) {
	      var children = this._reconcilerInstantiateChildren(nestedChildren, transaction, context);
	      this._renderedChildren = children;
	
	      var mountImages = [];
	      var index = 0;
	      for (var name in children) {
	        if (children.hasOwnProperty(name)) {
	          var child = children[name];
	          var selfDebugID = 0;
	          if (true) {
	            selfDebugID = getDebugID(this);
	          }
	          var mountImage = ReactReconciler.mountComponent(child, transaction, this, this._hostContainerInfo, context, selfDebugID);
	          child._mountIndex = index++;
	          mountImages.push(mountImage);
	        }
	      }
	
	      if (true) {
	        setChildrenForInstrumentation.call(this, children);
	      }
	
	      return mountImages;
	    },
	
	    /**
	     * Replaces any rendered children with a text content string.
	     *
	     * @param {string} nextContent String of content.
	     * @internal
	     */
	    updateTextContent: function (nextContent) {
	      var prevChildren = this._renderedChildren;
	      // Remove any rendered children.
	      ReactChildReconciler.unmountChildren(prevChildren, false);
	      for (var name in prevChildren) {
	        if (prevChildren.hasOwnProperty(name)) {
	           true ?  true ? invariant(false, 'updateTextContent called on non-empty component.') : _prodInvariant('118') : void 0;
	        }
	      }
	      // Set new text content.
	      var updates = [makeTextContent(nextContent)];
	      processQueue(this, updates);
	    },
	
	    /**
	     * Replaces any rendered children with a markup string.
	     *
	     * @param {string} nextMarkup String of markup.
	     * @internal
	     */
	    updateMarkup: function (nextMarkup) {
	      var prevChildren = this._renderedChildren;
	      // Remove any rendered children.
	      ReactChildReconciler.unmountChildren(prevChildren, false);
	      for (var name in prevChildren) {
	        if (prevChildren.hasOwnProperty(name)) {
	           true ?  true ? invariant(false, 'updateTextContent called on non-empty component.') : _prodInvariant('118') : void 0;
	        }
	      }
	      var updates = [makeSetMarkup(nextMarkup)];
	      processQueue(this, updates);
	    },
	
	    /**
	     * Updates the rendered children with new children.
	     *
	     * @param {?object} nextNestedChildrenElements Nested child element maps.
	     * @param {ReactReconcileTransaction} transaction
	     * @internal
	     */
	    updateChildren: function (nextNestedChildrenElements, transaction, context) {
	      // Hook used by React ART
	      this._updateChildren(nextNestedChildrenElements, transaction, context);
	    },
	
	    /**
	     * @param {?object} nextNestedChildrenElements Nested child element maps.
	     * @param {ReactReconcileTransaction} transaction
	     * @final
	     * @protected
	     */
	    _updateChildren: function (nextNestedChildrenElements, transaction, context) {
	      var prevChildren = this._renderedChildren;
	      var removedNodes = {};
	      var mountImages = [];
	      var nextChildren = this._reconcilerUpdateChildren(prevChildren, nextNestedChildrenElements, mountImages, removedNodes, transaction, context);
	      if (!nextChildren && !prevChildren) {
	        return;
	      }
	      var updates = null;
	      var name;
	      // `nextIndex` will increment for each child in `nextChildren`, but
	      // `lastIndex` will be the last index visited in `prevChildren`.
	      var nextIndex = 0;
	      var lastIndex = 0;
	      // `nextMountIndex` will increment for each newly mounted child.
	      var nextMountIndex = 0;
	      var lastPlacedNode = null;
	      for (name in nextChildren) {
	        if (!nextChildren.hasOwnProperty(name)) {
	          continue;
	        }
	        var prevChild = prevChildren && prevChildren[name];
	        var nextChild = nextChildren[name];
	        if (prevChild === nextChild) {
	          updates = enqueue(updates, this.moveChild(prevChild, lastPlacedNode, nextIndex, lastIndex));
	          lastIndex = Math.max(prevChild._mountIndex, lastIndex);
	          prevChild._mountIndex = nextIndex;
	        } else {
	          if (prevChild) {
	            // Update `lastIndex` before `_mountIndex` gets unset by unmounting.
	            lastIndex = Math.max(prevChild._mountIndex, lastIndex);
	            // The `removedNodes` loop below will actually remove the child.
	          }
	          // The child must be instantiated before it's mounted.
	          updates = enqueue(updates, this._mountChildAtIndex(nextChild, mountImages[nextMountIndex], lastPlacedNode, nextIndex, transaction, context));
	          nextMountIndex++;
	        }
	        nextIndex++;
	        lastPlacedNode = ReactReconciler.getHostNode(nextChild);
	      }
	      // Remove children that are no longer present.
	      for (name in removedNodes) {
	        if (removedNodes.hasOwnProperty(name)) {
	          updates = enqueue(updates, this._unmountChild(prevChildren[name], removedNodes[name]));
	        }
	      }
	      if (updates) {
	        processQueue(this, updates);
	      }
	      this._renderedChildren = nextChildren;
	
	      if (true) {
	        setChildrenForInstrumentation.call(this, nextChildren);
	      }
	    },
	
	    /**
	     * Unmounts all rendered children. This should be used to clean up children
	     * when this component is unmounted. It does not actually perform any
	     * backend operations.
	     *
	     * @internal
	     */
	    unmountChildren: function (safely) {
	      var renderedChildren = this._renderedChildren;
	      ReactChildReconciler.unmountChildren(renderedChildren, safely);
	      this._renderedChildren = null;
	    },
	
	    /**
	     * Moves a child component to the supplied index.
	     *
	     * @param {ReactComponent} child Component to move.
	     * @param {number} toIndex Destination index of the element.
	     * @param {number} lastIndex Last index visited of the siblings of `child`.
	     * @protected
	     */
	    moveChild: function (child, afterNode, toIndex, lastIndex) {
	      // If the index of `child` is less than `lastIndex`, then it needs to
	      // be moved. Otherwise, we do not need to move it because a child will be
	      // inserted or moved before `child`.
	      if (child._mountIndex < lastIndex) {
	        return makeMove(child, afterNode, toIndex);
	      }
	    },
	
	    /**
	     * Creates a child component.
	     *
	     * @param {ReactComponent} child Component to create.
	     * @param {string} mountImage Markup to insert.
	     * @protected
	     */
	    createChild: function (child, afterNode, mountImage) {
	      return makeInsertMarkup(mountImage, afterNode, child._mountIndex);
	    },
	
	    /**
	     * Removes a child component.
	     *
	     * @param {ReactComponent} child Child to remove.
	     * @protected
	     */
	    removeChild: function (child, node) {
	      return makeRemove(child, node);
	    },
	
	    /**
	     * Mounts a child with the supplied name.
	     *
	     * NOTE: This is part of `updateChildren` and is here for readability.
	     *
	     * @param {ReactComponent} child Component to mount.
	     * @param {string} name Name of the child.
	     * @param {number} index Index at which to insert the child.
	     * @param {ReactReconcileTransaction} transaction
	     * @private
	     */
	    _mountChildAtIndex: function (child, mountImage, afterNode, index, transaction, context) {
	      child._mountIndex = index;
	      return this.createChild(child, afterNode, mountImage);
	    },
	
	    /**
	     * Unmounts a rendered child.
	     *
	     * NOTE: This is part of `updateChildren` and is here for readability.
	     *
	     * @param {ReactComponent} child Component to unmount.
	     * @private
	     */
	    _unmountChild: function (child, node) {
	      var update = this.removeChild(child, node);
	      child._mountIndex = null;
	      return update;
	    }
	  }
	};
	
	module.exports = ReactMultiChild;

/***/ }),
/* 147 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2014-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * 
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(66);
	
	var invariant = __webpack_require__(35);
	
	var injected = false;
	
	var ReactComponentEnvironment = {
	  /**
	   * Optionally injectable hook for swapping out mount images in the middle of
	   * the tree.
	   */
	  replaceNodeWithMarkup: null,
	
	  /**
	   * Optionally injectable hook for processing a queue of child updates. Will
	   * later move into MultiChildComponents.
	   */
	  processChildrenUpdates: null,
	
	  injection: {
	    injectEnvironment: function (environment) {
	      !!injected ?  true ? invariant(false, 'ReactCompositeComponent: injectEnvironment() can only be called once.') : _prodInvariant('104') : void 0;
	      ReactComponentEnvironment.replaceNodeWithMarkup = environment.replaceNodeWithMarkup;
	      ReactComponentEnvironment.processChildrenUpdates = environment.processChildrenUpdates;
	      injected = true;
	    }
	  }
	};
	
	module.exports = ReactComponentEnvironment;

/***/ }),
/* 148 */
/***/ (function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */
	
	'use strict';
	
	/**
	 * `ReactInstanceMap` maintains a mapping from a public facing stateful
	 * instance (key) and the internal representation (value). This allows public
	 * methods to accept the user facing instance as an argument and map them back
	 * to internal methods.
	 */
	
	// TODO: Replace this with ES6: var ReactInstanceMap = new Map();
	
	var ReactInstanceMap = {
	  /**
	   * This API should be called `delete` but we'd have to make sure to always
	   * transform these to strings for IE support. When this transform is fully
	   * supported we can rename it.
	   */
	  remove: function (key) {
	    key._reactInternalInstance = undefined;
	  },
	
	  get: function (key) {
	    return key._reactInternalInstance;
	  },
	
	  has: function (key) {
	    return key._reactInternalInstance !== undefined;
	  },
	
	  set: function (key, value) {
	    key._reactInternalInstance = value;
	  }
	};
	
	module.exports = ReactInstanceMap;

/***/ }),
/* 149 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright (c) 2014-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */
	
	'use strict';
	
	var ReactReconciler = __webpack_require__(90);
	
	var instantiateReactComponent = __webpack_require__(150);
	var KeyEscapeUtils = __webpack_require__(160);
	var shouldUpdateReactComponent = __webpack_require__(156);
	var traverseAllChildren = __webpack_require__(161);
	var warning = __webpack_require__(31);
	
	var ReactComponentTreeHook;
	
	if (typeof process !== 'undefined' && ({"NODE_ENV":"development"}) && ("development") === 'test') {
	  // Temporary hack.
	  // Inline requires don't work well with Jest:
	  // https://github.com/facebook/react/issues/7240
	  // Remove the inline requires when we don't need them anymore:
	  // https://github.com/facebook/react/pull/7178
	  ReactComponentTreeHook = __webpack_require__(47);
	}
	
	function instantiateChild(childInstances, child, name, selfDebugID) {
	  // We found a component instance.
	  var keyUnique = childInstances[name] === undefined;
	  if (true) {
	    if (!ReactComponentTreeHook) {
	      ReactComponentTreeHook = __webpack_require__(47);
	    }
	    if (!keyUnique) {
	       true ? warning(false, 'flattenChildren(...): Encountered two children with the same key, ' + '`%s`. Child keys must be unique; when two children share a key, only ' + 'the first child will be used.%s', KeyEscapeUtils.unescape(name), ReactComponentTreeHook.getStackAddendumByID(selfDebugID)) : void 0;
	    }
	  }
	  if (child != null && keyUnique) {
	    childInstances[name] = instantiateReactComponent(child, true);
	  }
	}
	
	/**
	 * ReactChildReconciler provides helpers for initializing or updating a set of
	 * children. Its output is suitable for passing it onto ReactMultiChild which
	 * does diffed reordering and insertion.
	 */
	var ReactChildReconciler = {
	  /**
	   * Generates a "mount image" for each of the supplied children. In the case
	   * of `ReactDOMComponent`, a mount image is a string of markup.
	   *
	   * @param {?object} nestedChildNodes Nested child maps.
	   * @return {?object} A set of child instances.
	   * @internal
	   */
	  instantiateChildren: function (nestedChildNodes, transaction, context, selfDebugID) // 0 in production and for roots
	  {
	    if (nestedChildNodes == null) {
	      return null;
	    }
	    var childInstances = {};
	
	    if (true) {
	      traverseAllChildren(nestedChildNodes, function (childInsts, child, name) {
	        return instantiateChild(childInsts, child, name, selfDebugID);
	      }, childInstances);
	    } else {
	      traverseAllChildren(nestedChildNodes, instantiateChild, childInstances);
	    }
	    return childInstances;
	  },
	
	  /**
	   * Updates the rendered children and returns a new set of children.
	   *
	   * @param {?object} prevChildren Previously initialized set of children.
	   * @param {?object} nextChildren Flat child element maps.
	   * @param {ReactReconcileTransaction} transaction
	   * @param {object} context
	   * @return {?object} A new set of child instances.
	   * @internal
	   */
	  updateChildren: function (prevChildren, nextChildren, mountImages, removedNodes, transaction, hostParent, hostContainerInfo, context, selfDebugID) // 0 in production and for roots
	  {
	    // We currently don't have a way to track moves here but if we use iterators
	    // instead of for..in we can zip the iterators and check if an item has
	    // moved.
	    // TODO: If nothing has changed, return the prevChildren object so that we
	    // can quickly bailout if nothing has changed.
	    if (!nextChildren && !prevChildren) {
	      return;
	    }
	    var name;
	    var prevChild;
	    for (name in nextChildren) {
	      if (!nextChildren.hasOwnProperty(name)) {
	        continue;
	      }
	      prevChild = prevChildren && prevChildren[name];
	      var prevElement = prevChild && prevChild._currentElement;
	      var nextElement = nextChildren[name];
	      if (prevChild != null && shouldUpdateReactComponent(prevElement, nextElement)) {
	        ReactReconciler.receiveComponent(prevChild, nextElement, transaction, context);
	        nextChildren[name] = prevChild;
	      } else {
	        if (prevChild) {
	          removedNodes[name] = ReactReconciler.getHostNode(prevChild);
	          ReactReconciler.unmountComponent(prevChild, false);
	        }
	        // The child must be instantiated before it's mounted.
	        var nextChildInstance = instantiateReactComponent(nextElement, true);
	        nextChildren[name] = nextChildInstance;
	        // Creating mount image now ensures refs are resolved in right order
	        // (see https://github.com/facebook/react/pull/7101 for explanation).
	        var nextChildMountImage = ReactReconciler.mountComponent(nextChildInstance, transaction, hostParent, hostContainerInfo, context, selfDebugID);
	        mountImages.push(nextChildMountImage);
	      }
	    }
	    // Unmount children that are no longer present.
	    for (name in prevChildren) {
	      if (prevChildren.hasOwnProperty(name) && !(nextChildren && nextChildren.hasOwnProperty(name))) {
	        prevChild = prevChildren[name];
	        removedNodes[name] = ReactReconciler.getHostNode(prevChild);
	        ReactReconciler.unmountComponent(prevChild, false);
	      }
	    }
	  },
	
	  /**
	   * Unmounts all rendered children. This should be used to clean up children
	   * when this component is unmounted.
	   *
	   * @param {?object} renderedChildren Previously initialized set of children.
	   * @internal
	   */
	  unmountChildren: function (renderedChildren, safely) {
	    for (var name in renderedChildren) {
	      if (renderedChildren.hasOwnProperty(name)) {
	        var renderedChild = renderedChildren[name];
	        ReactReconciler.unmountComponent(renderedChild, safely);
	      }
	    }
	  }
	};
	
	module.exports = ReactChildReconciler;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(49)))

/***/ }),
/* 150 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(66),
	    _assign = __webpack_require__(27);
	
	var ReactCompositeComponent = __webpack_require__(151);
	var ReactEmptyComponent = __webpack_require__(157);
	var ReactHostComponent = __webpack_require__(158);
	
	var getNextDebugID = __webpack_require__(159);
	var invariant = __webpack_require__(35);
	var warning = __webpack_require__(31);
	
	// To avoid a cyclic dependency, we create the final class in this module
	var ReactCompositeComponentWrapper = function (element) {
	  this.construct(element);
	};
	
	function getDeclarationErrorAddendum(owner) {
	  if (owner) {
	    var name = owner.getName();
	    if (name) {
	      return ' Check the render method of `' + name + '`.';
	    }
	  }
	  return '';
	}
	
	/**
	 * Check if the type reference is a known internal type. I.e. not a user
	 * provided composite type.
	 *
	 * @param {function} type
	 * @return {boolean} Returns true if this is a valid internal type.
	 */
	function isInternalComponentType(type) {
	  return typeof type === 'function' && typeof type.prototype !== 'undefined' && typeof type.prototype.mountComponent === 'function' && typeof type.prototype.receiveComponent === 'function';
	}
	
	/**
	 * Given a ReactNode, create an instance that will actually be mounted.
	 *
	 * @param {ReactNode} node
	 * @param {boolean} shouldHaveDebugID
	 * @return {object} A new instance of the element's constructor.
	 * @protected
	 */
	function instantiateReactComponent(node, shouldHaveDebugID) {
	  var instance;
	
	  if (node === null || node === false) {
	    instance = ReactEmptyComponent.create(instantiateReactComponent);
	  } else if (typeof node === 'object') {
	    var element = node;
	    var type = element.type;
	    if (typeof type !== 'function' && typeof type !== 'string') {
	      var info = '';
	      if (true) {
	        if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {
	          info += ' You likely forgot to export your component from the file ' + "it's defined in.";
	        }
	      }
	      info += getDeclarationErrorAddendum(element._owner);
	       true ?  true ? invariant(false, 'Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s', type == null ? type : typeof type, info) : _prodInvariant('130', type == null ? type : typeof type, info) : void 0;
	    }
	
	    // Special case string values
	    if (typeof element.type === 'string') {
	      instance = ReactHostComponent.createInternalComponent(element);
	    } else if (isInternalComponentType(element.type)) {
	      // This is temporarily available for custom components that are not string
	      // representations. I.e. ART. Once those are updated to use the string
	      // representation, we can drop this code path.
	      instance = new element.type(element);
	
	      // We renamed this. Allow the old name for compat. :(
	      if (!instance.getHostNode) {
	        instance.getHostNode = instance.getNativeNode;
	      }
	    } else {
	      instance = new ReactCompositeComponentWrapper(element);
	    }
	  } else if (typeof node === 'string' || typeof node === 'number') {
	    instance = ReactHostComponent.createInstanceForText(node);
	  } else {
	     true ?  true ? invariant(false, 'Encountered invalid React node of type %s', typeof node) : _prodInvariant('131', typeof node) : void 0;
	  }
	
	  if (true) {
	     true ? warning(typeof instance.mountComponent === 'function' && typeof instance.receiveComponent === 'function' && typeof instance.getHostNode === 'function' && typeof instance.unmountComponent === 'function', 'Only React Components can be mounted.') : void 0;
	  }
	
	  // These two fields are used by the DOM and ART diffing algorithms
	  // respectively. Instead of using expandos on components, we should be
	  // storing the state needed by the diffing algorithms elsewhere.
	  instance._mountIndex = 0;
	  instance._mountImage = null;
	
	  if (true) {
	    instance._debugID = shouldHaveDebugID ? getNextDebugID() : 0;
	  }
	
	  // Internal instances should fully constructed at this point, so they should
	  // not get any new fields added to them at this point.
	  if (true) {
	    if (Object.preventExtensions) {
	      Object.preventExtensions(instance);
	    }
	  }
	
	  return instance;
	}
	
	_assign(ReactCompositeComponentWrapper.prototype, ReactCompositeComponent, {
	  _instantiateReactComponent: instantiateReactComponent
	});
	
	module.exports = instantiateReactComponent;

/***/ }),
/* 151 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(66),
	    _assign = __webpack_require__(27);
	
	var React = __webpack_require__(26);
	var ReactComponentEnvironment = __webpack_require__(147);
	var ReactCurrentOwner = __webpack_require__(40);
	var ReactErrorUtils = __webpack_require__(76);
	var ReactInstanceMap = __webpack_require__(148);
	var ReactInstrumentation = __webpack_require__(93);
	var ReactNodeTypes = __webpack_require__(152);
	var ReactReconciler = __webpack_require__(90);
	
	if (true) {
	  var checkReactTypeSpec = __webpack_require__(153);
	}
	
	var emptyObject = __webpack_require__(34);
	var invariant = __webpack_require__(35);
	var shallowEqual = __webpack_require__(155);
	var shouldUpdateReactComponent = __webpack_require__(156);
	var warning = __webpack_require__(31);
	
	var CompositeTypes = {
	  ImpureClass: 0,
	  PureClass: 1,
	  StatelessFunctional: 2
	};
	
	function StatelessComponent(Component) {}
	StatelessComponent.prototype.render = function () {
	  var Component = ReactInstanceMap.get(this)._currentElement.type;
	  var element = Component(this.props, this.context, this.updater);
	  warnIfInvalidElement(Component, element);
	  return element;
	};
	
	function warnIfInvalidElement(Component, element) {
	  if (true) {
	     true ? warning(element === null || element === false || React.isValidElement(element), '%s(...): A valid React element (or null) must be returned. You may have ' + 'returned undefined, an array or some other invalid object.', Component.displayName || Component.name || 'Component') : void 0;
	     true ? warning(!Component.childContextTypes, '%s(...): childContextTypes cannot be defined on a functional component.', Component.displayName || Component.name || 'Component') : void 0;
	  }
	}
	
	function shouldConstruct(Component) {
	  return !!(Component.prototype && Component.prototype.isReactComponent);
	}
	
	function isPureComponent(Component) {
	  return !!(Component.prototype && Component.prototype.isPureReactComponent);
	}
	
	// Separated into a function to contain deoptimizations caused by try/finally.
	function measureLifeCyclePerf(fn, debugID, timerType) {
	  if (debugID === 0) {
	    // Top-level wrappers (see ReactMount) and empty components (see
	    // ReactDOMEmptyComponent) are invisible to hooks and devtools.
	    // Both are implementation details that should go away in the future.
	    return fn();
	  }
	
	  ReactInstrumentation.debugTool.onBeginLifeCycleTimer(debugID, timerType);
	  try {
	    return fn();
	  } finally {
	    ReactInstrumentation.debugTool.onEndLifeCycleTimer(debugID, timerType);
	  }
	}
	
	/**
	 * ------------------ The Life-Cycle of a Composite Component ------------------
	 *
	 * - constructor: Initialization of state. The instance is now retained.
	 *   - componentWillMount
	 *   - render
	 *   - [children's constructors]
	 *     - [children's componentWillMount and render]
	 *     - [children's componentDidMount]
	 *     - componentDidMount
	 *
	 *       Update Phases:
	 *       - componentWillReceiveProps (only called if parent updated)
	 *       - shouldComponentUpdate
	 *         - componentWillUpdate
	 *           - render
	 *           - [children's constructors or receive props phases]
	 *         - componentDidUpdate
	 *
	 *     - componentWillUnmount
	 *     - [children's componentWillUnmount]
	 *   - [children destroyed]
	 * - (destroyed): The instance is now blank, released by React and ready for GC.
	 *
	 * -----------------------------------------------------------------------------
	 */
	
	/**
	 * An incrementing ID assigned to each component when it is mounted. This is
	 * used to enforce the order in which `ReactUpdates` updates dirty components.
	 *
	 * @private
	 */
	var nextMountID = 1;
	
	/**
	 * @lends {ReactCompositeComponent.prototype}
	 */
	var ReactCompositeComponent = {
	  /**
	   * Base constructor for all composite component.
	   *
	   * @param {ReactElement} element
	   * @final
	   * @internal
	   */
	  construct: function (element) {
	    this._currentElement = element;
	    this._rootNodeID = 0;
	    this._compositeType = null;
	    this._instance = null;
	    this._hostParent = null;
	    this._hostContainerInfo = null;
	
	    // See ReactUpdateQueue
	    this._updateBatchNumber = null;
	    this._pendingElement = null;
	    this._pendingStateQueue = null;
	    this._pendingReplaceState = false;
	    this._pendingForceUpdate = false;
	
	    this._renderedNodeType = null;
	    this._renderedComponent = null;
	    this._context = null;
	    this._mountOrder = 0;
	    this._topLevelWrapper = null;
	
	    // See ReactUpdates and ReactUpdateQueue.
	    this._pendingCallbacks = null;
	
	    // ComponentWillUnmount shall only be called once
	    this._calledComponentWillUnmount = false;
	
	    if (true) {
	      this._warnedAboutRefsInRender = false;
	    }
	  },
	
	  /**
	   * Initializes the component, renders markup, and registers event listeners.
	   *
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @param {?object} hostParent
	   * @param {?object} hostContainerInfo
	   * @param {?object} context
	   * @return {?string} Rendered markup to be inserted into the DOM.
	   * @final
	   * @internal
	   */
	  mountComponent: function (transaction, hostParent, hostContainerInfo, context) {
	    var _this = this;
	
	    this._context = context;
	    this._mountOrder = nextMountID++;
	    this._hostParent = hostParent;
	    this._hostContainerInfo = hostContainerInfo;
	
	    var publicProps = this._currentElement.props;
	    var publicContext = this._processContext(context);
	
	    var Component = this._currentElement.type;
	
	    var updateQueue = transaction.getUpdateQueue();
	
	    // Initialize the public class
	    var doConstruct = shouldConstruct(Component);
	    var inst = this._constructComponent(doConstruct, publicProps, publicContext, updateQueue);
	    var renderedElement;
	
	    // Support functional components
	    if (!doConstruct && (inst == null || inst.render == null)) {
	      renderedElement = inst;
	      warnIfInvalidElement(Component, renderedElement);
	      !(inst === null || inst === false || React.isValidElement(inst)) ?  true ? invariant(false, '%s(...): A valid React element (or null) must be returned. You may have returned undefined, an array or some other invalid object.', Component.displayName || Component.name || 'Component') : _prodInvariant('105', Component.displayName || Component.name || 'Component') : void 0;
	      inst = new StatelessComponent(Component);
	      this._compositeType = CompositeTypes.StatelessFunctional;
	    } else {
	      if (isPureComponent(Component)) {
	        this._compositeType = CompositeTypes.PureClass;
	      } else {
	        this._compositeType = CompositeTypes.ImpureClass;
	      }
	    }
	
	    if (true) {
	      // This will throw later in _renderValidatedComponent, but add an early
	      // warning now to help debugging
	      if (inst.render == null) {
	         true ? warning(false, '%s(...): No `render` method found on the returned component ' + 'instance: you may have forgotten to define `render`.', Component.displayName || Component.name || 'Component') : void 0;
	      }
	
	      var propsMutated = inst.props !== publicProps;
	      var componentName = Component.displayName || Component.name || 'Component';
	
	       true ? warning(inst.props === undefined || !propsMutated, '%s(...): When calling super() in `%s`, make sure to pass ' + "up the same props that your component's constructor was passed.", componentName, componentName) : void 0;
	    }
	
	    // These should be set up in the constructor, but as a convenience for
	    // simpler class abstractions, we set them up after the fact.
	    inst.props = publicProps;
	    inst.context = publicContext;
	    inst.refs = emptyObject;
	    inst.updater = updateQueue;
	
	    this._instance = inst;
	
	    // Store a reference from the instance back to the internal representation
	    ReactInstanceMap.set(inst, this);
	
	    if (true) {
	      // Since plain JS classes are defined without any special initialization
	      // logic, we can not catch common errors early. Therefore, we have to
	      // catch them here, at initialization time, instead.
	       true ? warning(!inst.getInitialState || inst.getInitialState.isReactClassApproved || inst.state, 'getInitialState was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Did you mean to define a state property instead?', this.getName() || 'a component') : void 0;
	       true ? warning(!inst.getDefaultProps || inst.getDefaultProps.isReactClassApproved, 'getDefaultProps was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Use a static property to define defaultProps instead.', this.getName() || 'a component') : void 0;
	       true ? warning(!inst.propTypes, 'propTypes was defined as an instance property on %s. Use a static ' + 'property to define propTypes instead.', this.getName() || 'a component') : void 0;
	       true ? warning(!inst.contextTypes, 'contextTypes was defined as an instance property on %s. Use a ' + 'static property to define contextTypes instead.', this.getName() || 'a component') : void 0;
	       true ? warning(typeof inst.componentShouldUpdate !== 'function', '%s has a method called ' + 'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 'The name is phrased as a question because the function is ' + 'expected to return a value.', this.getName() || 'A component') : void 0;
	       true ? warning(typeof inst.componentDidUnmount !== 'function', '%s has a method called ' + 'componentDidUnmount(). But there is no such lifecycle method. ' + 'Did you mean componentWillUnmount()?', this.getName() || 'A component') : void 0;
	       true ? warning(typeof inst.componentWillRecieveProps !== 'function', '%s has a method called ' + 'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?', this.getName() || 'A component') : void 0;
	    }
	
	    var initialState = inst.state;
	    if (initialState === undefined) {
	      inst.state = initialState = null;
	    }
	    !(typeof initialState === 'object' && !Array.isArray(initialState)) ?  true ? invariant(false, '%s.state: must be set to an object or null', this.getName() || 'ReactCompositeComponent') : _prodInvariant('106', this.getName() || 'ReactCompositeComponent') : void 0;
	
	    this._pendingStateQueue = null;
	    this._pendingReplaceState = false;
	    this._pendingForceUpdate = false;
	
	    var markup;
	    if (inst.unstable_handleError) {
	      markup = this.performInitialMountWithErrorHandling(renderedElement, hostParent, hostContainerInfo, transaction, context);
	    } else {
	      markup = this.performInitialMount(renderedElement, hostParent, hostContainerInfo, transaction, context);
	    }
	
	    if (inst.componentDidMount) {
	      if (true) {
	        transaction.getReactMountReady().enqueue(function () {
	          measureLifeCyclePerf(function () {
	            return inst.componentDidMount();
	          }, _this._debugID, 'componentDidMount');
	        });
	      } else {
	        transaction.getReactMountReady().enqueue(inst.componentDidMount, inst);
	      }
	    }
	
	    return markup;
	  },
	
	  _constructComponent: function (doConstruct, publicProps, publicContext, updateQueue) {
	    if (("development") !== 'production' && !doConstruct) {
	      ReactCurrentOwner.current = this;
	      try {
	        return this._constructComponentWithoutOwner(doConstruct, publicProps, publicContext, updateQueue);
	      } finally {
	        ReactCurrentOwner.current = null;
	      }
	    } else {
	      return this._constructComponentWithoutOwner(doConstruct, publicProps, publicContext, updateQueue);
	    }
	  },
	
	  _constructComponentWithoutOwner: function (doConstruct, publicProps, publicContext, updateQueue) {
	    var Component = this._currentElement.type;
	
	    if (doConstruct) {
	      if (true) {
	        return measureLifeCyclePerf(function () {
	          return new Component(publicProps, publicContext, updateQueue);
	        }, this._debugID, 'ctor');
	      } else {
	        return new Component(publicProps, publicContext, updateQueue);
	      }
	    }
	
	    // This can still be an instance in case of factory components
	    // but we'll count this as time spent rendering as the more common case.
	    if (true) {
	      return measureLifeCyclePerf(function () {
	        return Component(publicProps, publicContext, updateQueue);
	      }, this._debugID, 'render');
	    } else {
	      return Component(publicProps, publicContext, updateQueue);
	    }
	  },
	
	  performInitialMountWithErrorHandling: function (renderedElement, hostParent, hostContainerInfo, transaction, context) {
	    var markup;
	    var checkpoint = transaction.checkpoint();
	    try {
	      markup = this.performInitialMount(renderedElement, hostParent, hostContainerInfo, transaction, context);
	    } catch (e) {
	      // Roll back to checkpoint, handle error (which may add items to the transaction), and take a new checkpoint
	      transaction.rollback(checkpoint);
	      this._instance.unstable_handleError(e);
	      if (this._pendingStateQueue) {
	        this._instance.state = this._processPendingState(this._instance.props, this._instance.context);
	      }
	      checkpoint = transaction.checkpoint();
	
	      this._renderedComponent.unmountComponent(true);
	      transaction.rollback(checkpoint);
	
	      // Try again - we've informed the component about the error, so they can render an error message this time.
	      // If this throws again, the error will bubble up (and can be caught by a higher error boundary).
	      markup = this.performInitialMount(renderedElement, hostParent, hostContainerInfo, transaction, context);
	    }
	    return markup;
	  },
	
	  performInitialMount: function (renderedElement, hostParent, hostContainerInfo, transaction, context) {
	    var inst = this._instance;
	
	    var debugID = 0;
	    if (true) {
	      debugID = this._debugID;
	    }
	
	    if (inst.componentWillMount) {
	      if (true) {
	        measureLifeCyclePerf(function () {
	          return inst.componentWillMount();
	        }, debugID, 'componentWillMount');
	      } else {
	        inst.componentWillMount();
	      }
	      // When mounting, calls to `setState` by `componentWillMount` will set
	      // `this._pendingStateQueue` without triggering a re-render.
	      if (this._pendingStateQueue) {
	        inst.state = this._processPendingState(inst.props, inst.context);
	      }
	    }
	
	    // If not a stateless component, we now render
	    if (renderedElement === undefined) {
	      renderedElement = this._renderValidatedComponent();
	    }
	
	    var nodeType = ReactNodeTypes.getType(renderedElement);
	    this._renderedNodeType = nodeType;
	    var child = this._instantiateReactComponent(renderedElement, nodeType !== ReactNodeTypes.EMPTY /* shouldHaveDebugID */
	    );
	    this._renderedComponent = child;
	
	    var markup = ReactReconciler.mountComponent(child, transaction, hostParent, hostContainerInfo, this._processChildContext(context), debugID);
	
	    if (true) {
	      if (debugID !== 0) {
	        var childDebugIDs = child._debugID !== 0 ? [child._debugID] : [];
	        ReactInstrumentation.debugTool.onSetChildren(debugID, childDebugIDs);
	      }
	    }
	
	    return markup;
	  },
	
	  getHostNode: function () {
	    return ReactReconciler.getHostNode(this._renderedComponent);
	  },
	
	  /**
	   * Releases any resources allocated by `mountComponent`.
	   *
	   * @final
	   * @internal
	   */
	  unmountComponent: function (safely) {
	    if (!this._renderedComponent) {
	      return;
	    }
	
	    var inst = this._instance;
	
	    if (inst.componentWillUnmount && !inst._calledComponentWillUnmount) {
	      inst._calledComponentWillUnmount = true;
	
	      if (safely) {
	        var name = this.getName() + '.componentWillUnmount()';
	        ReactErrorUtils.invokeGuardedCallback(name, inst.componentWillUnmount.bind(inst));
	      } else {
	        if (true) {
	          measureLifeCyclePerf(function () {
	            return inst.componentWillUnmount();
	          }, this._debugID, 'componentWillUnmount');
	        } else {
	          inst.componentWillUnmount();
	        }
	      }
	    }
	
	    if (this._renderedComponent) {
	      ReactReconciler.unmountComponent(this._renderedComponent, safely);
	      this._renderedNodeType = null;
	      this._renderedComponent = null;
	      this._instance = null;
	    }
	
	    // Reset pending fields
	    // Even if this component is scheduled for another update in ReactUpdates,
	    // it would still be ignored because these fields are reset.
	    this._pendingStateQueue = null;
	    this._pendingReplaceState = false;
	    this._pendingForceUpdate = false;
	    this._pendingCallbacks = null;
	    this._pendingElement = null;
	
	    // These fields do not really need to be reset since this object is no
	    // longer accessible.
	    this._context = null;
	    this._rootNodeID = 0;
	    this._topLevelWrapper = null;
	
	    // Delete the reference from the instance to this internal representation
	    // which allow the internals to be properly cleaned up even if the user
	    // leaks a reference to the public instance.
	    ReactInstanceMap.remove(inst);
	
	    // Some existing components rely on inst.props even after they've been
	    // destroyed (in event handlers).
	    // TODO: inst.props = null;
	    // TODO: inst.state = null;
	    // TODO: inst.context = null;
	  },
	
	  /**
	   * Filters the context object to only contain keys specified in
	   * `contextTypes`
	   *
	   * @param {object} context
	   * @return {?object}
	   * @private
	   */
	  _maskContext: function (context) {
	    var Component = this._currentElement.type;
	    var contextTypes = Component.contextTypes;
	    if (!contextTypes) {
	      return emptyObject;
	    }
	    var maskedContext = {};
	    for (var contextName in contextTypes) {
	      maskedContext[contextName] = context[contextName];
	    }
	    return maskedContext;
	  },
	
	  /**
	   * Filters the context object to only contain keys specified in
	   * `contextTypes`, and asserts that they are valid.
	   *
	   * @param {object} context
	   * @return {?object}
	   * @private
	   */
	  _processContext: function (context) {
	    var maskedContext = this._maskContext(context);
	    if (true) {
	      var Component = this._currentElement.type;
	      if (Component.contextTypes) {
	        this._checkContextTypes(Component.contextTypes, maskedContext, 'context');
	      }
	    }
	    return maskedContext;
	  },
	
	  /**
	   * @param {object} currentContext
	   * @return {object}
	   * @private
	   */
	  _processChildContext: function (currentContext) {
	    var Component = this._currentElement.type;
	    var inst = this._instance;
	    var childContext;
	
	    if (inst.getChildContext) {
	      if (true) {
	        ReactInstrumentation.debugTool.onBeginProcessingChildContext();
	        try {
	          childContext = inst.getChildContext();
	        } finally {
	          ReactInstrumentation.debugTool.onEndProcessingChildContext();
	        }
	      } else {
	        childContext = inst.getChildContext();
	      }
	    }
	
	    if (childContext) {
	      !(typeof Component.childContextTypes === 'object') ?  true ? invariant(false, '%s.getChildContext(): childContextTypes must be defined in order to use getChildContext().', this.getName() || 'ReactCompositeComponent') : _prodInvariant('107', this.getName() || 'ReactCompositeComponent') : void 0;
	      if (true) {
	        this._checkContextTypes(Component.childContextTypes, childContext, 'child context');
	      }
	      for (var name in childContext) {
	        !(name in Component.childContextTypes) ?  true ? invariant(false, '%s.getChildContext(): key "%s" is not defined in childContextTypes.', this.getName() || 'ReactCompositeComponent', name) : _prodInvariant('108', this.getName() || 'ReactCompositeComponent', name) : void 0;
	      }
	      return _assign({}, currentContext, childContext);
	    }
	    return currentContext;
	  },
	
	  /**
	   * Assert that the context types are valid
	   *
	   * @param {object} typeSpecs Map of context field to a ReactPropType
	   * @param {object} values Runtime values that need to be type-checked
	   * @param {string} location e.g. "prop", "context", "child context"
	   * @private
	   */
	  _checkContextTypes: function (typeSpecs, values, location) {
	    if (true) {
	      checkReactTypeSpec(typeSpecs, values, location, this.getName(), null, this._debugID);
	    }
	  },
	
	  receiveComponent: function (nextElement, transaction, nextContext) {
	    var prevElement = this._currentElement;
	    var prevContext = this._context;
	
	    this._pendingElement = null;
	
	    this.updateComponent(transaction, prevElement, nextElement, prevContext, nextContext);
	  },
	
	  /**
	   * If any of `_pendingElement`, `_pendingStateQueue`, or `_pendingForceUpdate`
	   * is set, update the component.
	   *
	   * @param {ReactReconcileTransaction} transaction
	   * @internal
	   */
	  performUpdateIfNecessary: function (transaction) {
	    if (this._pendingElement != null) {
	      ReactReconciler.receiveComponent(this, this._pendingElement, transaction, this._context);
	    } else if (this._pendingStateQueue !== null || this._pendingForceUpdate) {
	      this.updateComponent(transaction, this._currentElement, this._currentElement, this._context, this._context);
	    } else {
	      this._updateBatchNumber = null;
	    }
	  },
	
	  /**
	   * Perform an update to a mounted component. The componentWillReceiveProps and
	   * shouldComponentUpdate methods are called, then (assuming the update isn't
	   * skipped) the remaining update lifecycle methods are called and the DOM
	   * representation is updated.
	   *
	   * By default, this implements React's rendering and reconciliation algorithm.
	   * Sophisticated clients may wish to override this.
	   *
	   * @param {ReactReconcileTransaction} transaction
	   * @param {ReactElement} prevParentElement
	   * @param {ReactElement} nextParentElement
	   * @internal
	   * @overridable
	   */
	  updateComponent: function (transaction, prevParentElement, nextParentElement, prevUnmaskedContext, nextUnmaskedContext) {
	    var inst = this._instance;
	    !(inst != null) ?  true ? invariant(false, 'Attempted to update component `%s` that has already been unmounted (or failed to mount).', this.getName() || 'ReactCompositeComponent') : _prodInvariant('136', this.getName() || 'ReactCompositeComponent') : void 0;
	
	    var willReceive = false;
	    var nextContext;
	
	    // Determine if the context has changed or not
	    if (this._context === nextUnmaskedContext) {
	      nextContext = inst.context;
	    } else {
	      nextContext = this._processContext(nextUnmaskedContext);
	      willReceive = true;
	    }
	
	    var prevProps = prevParentElement.props;
	    var nextProps = nextParentElement.props;
	
	    // Not a simple state update but a props update
	    if (prevParentElement !== nextParentElement) {
	      willReceive = true;
	    }
	
	    // An update here will schedule an update but immediately set
	    // _pendingStateQueue which will ensure that any state updates gets
	    // immediately reconciled instead of waiting for the next batch.
	    if (willReceive && inst.componentWillReceiveProps) {
	      if (true) {
	        measureLifeCyclePerf(function () {
	          return inst.componentWillReceiveProps(nextProps, nextContext);
	        }, this._debugID, 'componentWillReceiveProps');
	      } else {
	        inst.componentWillReceiveProps(nextProps, nextContext);
	      }
	    }
	
	    var nextState = this._processPendingState(nextProps, nextContext);
	    var shouldUpdate = true;
	
	    if (!this._pendingForceUpdate) {
	      if (inst.shouldComponentUpdate) {
	        if (true) {
	          shouldUpdate = measureLifeCyclePerf(function () {
	            return inst.shouldComponentUpdate(nextProps, nextState, nextContext);
	          }, this._debugID, 'shouldComponentUpdate');
	        } else {
	          shouldUpdate = inst.shouldComponentUpdate(nextProps, nextState, nextContext);
	        }
	      } else {
	        if (this._compositeType === CompositeTypes.PureClass) {
	          shouldUpdate = !shallowEqual(prevProps, nextProps) || !shallowEqual(inst.state, nextState);
	        }
	      }
	    }
	
	    if (true) {
	       true ? warning(shouldUpdate !== undefined, '%s.shouldComponentUpdate(): Returned undefined instead of a ' + 'boolean value. Make sure to return true or false.', this.getName() || 'ReactCompositeComponent') : void 0;
	    }
	
	    this._updateBatchNumber = null;
	    if (shouldUpdate) {
	      this._pendingForceUpdate = false;
	      // Will set `this.props`, `this.state` and `this.context`.
	      this._performComponentUpdate(nextParentElement, nextProps, nextState, nextContext, transaction, nextUnmaskedContext);
	    } else {
	      // If it's determined that a component should not update, we still want
	      // to set props and state but we shortcut the rest of the update.
	      this._currentElement = nextParentElement;
	      this._context = nextUnmaskedContext;
	      inst.props = nextProps;
	      inst.state = nextState;
	      inst.context = nextContext;
	    }
	  },
	
	  _processPendingState: function (props, context) {
	    var inst = this._instance;
	    var queue = this._pendingStateQueue;
	    var replace = this._pendingReplaceState;
	    this._pendingReplaceState = false;
	    this._pendingStateQueue = null;
	
	    if (!queue) {
	      return inst.state;
	    }
	
	    if (replace && queue.length === 1) {
	      return queue[0];
	    }
	
	    var nextState = _assign({}, replace ? queue[0] : inst.state);
	    for (var i = replace ? 1 : 0; i < queue.length; i++) {
	      var partial = queue[i];
	      _assign(nextState, typeof partial === 'function' ? partial.call(inst, nextState, props, context) : partial);
	    }
	
	    return nextState;
	  },
	
	  /**
	   * Merges new props and state, notifies delegate methods of update and
	   * performs update.
	   *
	   * @param {ReactElement} nextElement Next element
	   * @param {object} nextProps Next public object to set as properties.
	   * @param {?object} nextState Next object to set as state.
	   * @param {?object} nextContext Next public object to set as context.
	   * @param {ReactReconcileTransaction} transaction
	   * @param {?object} unmaskedContext
	   * @private
	   */
	  _performComponentUpdate: function (nextElement, nextProps, nextState, nextContext, transaction, unmaskedContext) {
	    var _this2 = this;
	
	    var inst = this._instance;
	
	    var hasComponentDidUpdate = Boolean(inst.componentDidUpdate);
	    var prevProps;
	    var prevState;
	    var prevContext;
	    if (hasComponentDidUpdate) {
	      prevProps = inst.props;
	      prevState = inst.state;
	      prevContext = inst.context;
	    }
	
	    if (inst.componentWillUpdate) {
	      if (true) {
	        measureLifeCyclePerf(function () {
	          return inst.componentWillUpdate(nextProps, nextState, nextContext);
	        }, this._debugID, 'componentWillUpdate');
	      } else {
	        inst.componentWillUpdate(nextProps, nextState, nextContext);
	      }
	    }
	
	    this._currentElement = nextElement;
	    this._context = unmaskedContext;
	    inst.props = nextProps;
	    inst.state = nextState;
	    inst.context = nextContext;
	
	    this._updateRenderedComponent(transaction, unmaskedContext);
	
	    if (hasComponentDidUpdate) {
	      if (true) {
	        transaction.getReactMountReady().enqueue(function () {
	          measureLifeCyclePerf(inst.componentDidUpdate.bind(inst, prevProps, prevState, prevContext), _this2._debugID, 'componentDidUpdate');
	        });
	      } else {
	        transaction.getReactMountReady().enqueue(inst.componentDidUpdate.bind(inst, prevProps, prevState, prevContext), inst);
	      }
	    }
	  },
	
	  /**
	   * Call the component's `render` method and update the DOM accordingly.
	   *
	   * @param {ReactReconcileTransaction} transaction
	   * @internal
	   */
	  _updateRenderedComponent: function (transaction, context) {
	    var prevComponentInstance = this._renderedComponent;
	    var prevRenderedElement = prevComponentInstance._currentElement;
	    var nextRenderedElement = this._renderValidatedComponent();
	
	    var debugID = 0;
	    if (true) {
	      debugID = this._debugID;
	    }
	
	    if (shouldUpdateReactComponent(prevRenderedElement, nextRenderedElement)) {
	      ReactReconciler.receiveComponent(prevComponentInstance, nextRenderedElement, transaction, this._processChildContext(context));
	    } else {
	      var oldHostNode = ReactReconciler.getHostNode(prevComponentInstance);
	      ReactReconciler.unmountComponent(prevComponentInstance, false);
	
	      var nodeType = ReactNodeTypes.getType(nextRenderedElement);
	      this._renderedNodeType = nodeType;
	      var child = this._instantiateReactComponent(nextRenderedElement, nodeType !== ReactNodeTypes.EMPTY /* shouldHaveDebugID */
	      );
	      this._renderedComponent = child;
	
	      var nextMarkup = ReactReconciler.mountComponent(child, transaction, this._hostParent, this._hostContainerInfo, this._processChildContext(context), debugID);
	
	      if (true) {
	        if (debugID !== 0) {
	          var childDebugIDs = child._debugID !== 0 ? [child._debugID] : [];
	          ReactInstrumentation.debugTool.onSetChildren(debugID, childDebugIDs);
	        }
	      }
	
	      this._replaceNodeWithMarkup(oldHostNode, nextMarkup, prevComponentInstance);
	    }
	  },
	
	  /**
	   * Overridden in shallow rendering.
	   *
	   * @protected
	   */
	  _replaceNodeWithMarkup: function (oldHostNode, nextMarkup, prevInstance) {
	    ReactComponentEnvironment.replaceNodeWithMarkup(oldHostNode, nextMarkup, prevInstance);
	  },
	
	  /**
	   * @protected
	   */
	  _renderValidatedComponentWithoutOwnerOrContext: function () {
	    var inst = this._instance;
	    var renderedElement;
	
	    if (true) {
	      renderedElement = measureLifeCyclePerf(function () {
	        return inst.render();
	      }, this._debugID, 'render');
	    } else {
	      renderedElement = inst.render();
	    }
	
	    if (true) {
	      // We allow auto-mocks to proceed as if they're returning null.
	      if (renderedElement === undefined && inst.render._isMockFunction) {
	        // This is probably bad practice. Consider warning here and
	        // deprecating this convenience.
	        renderedElement = null;
	      }
	    }
	
	    return renderedElement;
	  },
	
	  /**
	   * @private
	   */
	  _renderValidatedComponent: function () {
	    var renderedElement;
	    if (true) {
	      ReactCurrentOwner.current = this;
	      try {
	        renderedElement = this._renderValidatedComponentWithoutOwnerOrContext();
	      } finally {
	        ReactCurrentOwner.current = null;
	      }
	    } else {
	      renderedElement = this._renderValidatedComponentWithoutOwnerOrContext();
	    }
	    !(
	    // TODO: An `isValidNode` function would probably be more appropriate
	    renderedElement === null || renderedElement === false || React.isValidElement(renderedElement)) ?  true ? invariant(false, '%s.render(): A valid React element (or null) must be returned. You may have returned undefined, an array or some other invalid object.', this.getName() || 'ReactCompositeComponent') : _prodInvariant('109', this.getName() || 'ReactCompositeComponent') : void 0;
	
	    return renderedElement;
	  },
	
	  /**
	   * Lazily allocates the refs object and stores `component` as `ref`.
	   *
	   * @param {string} ref Reference name.
	   * @param {component} component Component to store as `ref`.
	   * @final
	   * @private
	   */
	  attachRef: function (ref, component) {
	    var inst = this.getPublicInstance();
	    !(inst != null) ?  true ? invariant(false, 'Stateless function components cannot have refs.') : _prodInvariant('110') : void 0;
	    var publicComponentInstance = component.getPublicInstance();
	    if (true) {
	      var componentName = component && component.getName ? component.getName() : 'a component';
	       true ? warning(publicComponentInstance != null || component._compositeType !== CompositeTypes.StatelessFunctional, 'Stateless function components cannot be given refs ' + '(See ref "%s" in %s created by %s). ' + 'Attempts to access this ref will fail.', ref, componentName, this.getName()) : void 0;
	    }
	    var refs = inst.refs === emptyObject ? inst.refs = {} : inst.refs;
	    refs[ref] = publicComponentInstance;
	  },
	
	  /**
	   * Detaches a reference name.
	   *
	   * @param {string} ref Name to dereference.
	   * @final
	   * @private
	   */
	  detachRef: function (ref) {
	    var refs = this.getPublicInstance().refs;
	    delete refs[ref];
	  },
	
	  /**
	   * Get a text description of the component that can be used to identify it
	   * in error messages.
	   * @return {string} The name or null.
	   * @internal
	   */
	  getName: function () {
	    var type = this._currentElement.type;
	    var constructor = this._instance && this._instance.constructor;
	    return type.displayName || constructor && constructor.displayName || type.name || constructor && constructor.name || null;
	  },
	
	  /**
	   * Get the publicly accessible representation of this component - i.e. what
	   * is exposed by refs and returned by render. Can be null for stateless
	   * components.
	   *
	   * @return {ReactComponent} the public component instance.
	   * @internal
	   */
	  getPublicInstance: function () {
	    var inst = this._instance;
	    if (this._compositeType === CompositeTypes.StatelessFunctional) {
	      return null;
	    }
	    return inst;
	  },
	
	  // Stub
	  _instantiateReactComponent: null
	};
	
	module.exports = ReactCompositeComponent;

/***/ }),
/* 152 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * 
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(66);
	
	var React = __webpack_require__(26);
	
	var invariant = __webpack_require__(35);
	
	var ReactNodeTypes = {
	  HOST: 0,
	  COMPOSITE: 1,
	  EMPTY: 2,
	
	  getType: function (node) {
	    if (node === null || node === false) {
	      return ReactNodeTypes.EMPTY;
	    } else if (React.isValidElement(node)) {
	      if (typeof node.type === 'function') {
	        return ReactNodeTypes.COMPOSITE;
	      } else {
	        return ReactNodeTypes.HOST;
	      }
	    }
	     true ?  true ? invariant(false, 'Unexpected node: %s', node) : _prodInvariant('26', node) : void 0;
	  }
	};
	
	module.exports = ReactNodeTypes;

/***/ }),
/* 153 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(66);
	
	var ReactPropTypeLocationNames = __webpack_require__(154);
	var ReactPropTypesSecret = __webpack_require__(142);
	
	var invariant = __webpack_require__(35);
	var warning = __webpack_require__(31);
	
	var ReactComponentTreeHook;
	
	if (typeof process !== 'undefined' && ({"NODE_ENV":"development"}) && ("development") === 'test') {
	  // Temporary hack.
	  // Inline requires don't work well with Jest:
	  // https://github.com/facebook/react/issues/7240
	  // Remove the inline requires when we don't need them anymore:
	  // https://github.com/facebook/react/pull/7178
	  ReactComponentTreeHook = __webpack_require__(47);
	}
	
	var loggedTypeFailures = {};
	
	/**
	 * Assert that the values match with the type specs.
	 * Error messages are memorized and will only be shown once.
	 *
	 * @param {object} typeSpecs Map of name to a ReactPropType
	 * @param {object} values Runtime values that need to be type-checked
	 * @param {string} location e.g. "prop", "context", "child context"
	 * @param {string} componentName Name of the component for error messages.
	 * @param {?object} element The React element that is being type-checked
	 * @param {?number} debugID The React component instance that is being type-checked
	 * @private
	 */
	function checkReactTypeSpec(typeSpecs, values, location, componentName, element, debugID) {
	  for (var typeSpecName in typeSpecs) {
	    if (typeSpecs.hasOwnProperty(typeSpecName)) {
	      var error;
	      // Prop type validation may throw. In case they do, we don't want to
	      // fail the render phase where it didn't fail before. So we log it.
	      // After these have been cleaned up, we'll let them throw.
	      try {
	        // This is intentionally an invariant that gets caught. It's the same
	        // behavior as without this statement except with a better message.
	        !(typeof typeSpecs[typeSpecName] === 'function') ?  true ? invariant(false, '%s: %s type `%s` is invalid; it must be a function, usually from React.PropTypes.', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName) : _prodInvariant('84', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName) : void 0;
	        error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);
	      } catch (ex) {
	        error = ex;
	      }
	       true ? warning(!error || error instanceof Error, '%s: type specification of %s `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName, typeof error) : void 0;
	      if (error instanceof Error && !(error.message in loggedTypeFailures)) {
	        // Only monitor this failure once because there tends to be a lot of the
	        // same error.
	        loggedTypeFailures[error.message] = true;
	
	        var componentStackInfo = '';
	
	        if (true) {
	          if (!ReactComponentTreeHook) {
	            ReactComponentTreeHook = __webpack_require__(47);
	          }
	          if (debugID !== null) {
	            componentStackInfo = ReactComponentTreeHook.getStackAddendumByID(debugID);
	          } else if (element !== null) {
	            componentStackInfo = ReactComponentTreeHook.getCurrentStackAddendum(element);
	          }
	        }
	
	         true ? warning(false, 'Failed %s type: %s%s', location, error.message, componentStackInfo) : void 0;
	      }
	    }
	  }
	}
	
	module.exports = checkReactTypeSpec;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(49)))

/***/ }),
/* 154 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * 
	 */
	
	'use strict';
	
	var ReactPropTypeLocationNames = {};
	
	if (true) {
	  ReactPropTypeLocationNames = {
	    prop: 'prop',
	    context: 'context',
	    childContext: 'child context'
	  };
	}
	
	module.exports = ReactPropTypeLocationNames;

/***/ }),
/* 155 */
/***/ (function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * @typechecks
	 * 
	 */
	
	/*eslint-disable no-self-compare */
	
	'use strict';
	
	var hasOwnProperty = Object.prototype.hasOwnProperty;
	
	/**
	 * inlined Object.is polyfill to avoid requiring consumers ship their own
	 * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
	 */
	function is(x, y) {
	  // SameValue algorithm
	  if (x === y) {
	    // Steps 1-5, 7-10
	    // Steps 6.b-6.e: +0 != -0
	    // Added the nonzero y check to make Flow happy, but it is redundant
	    return x !== 0 || y !== 0 || 1 / x === 1 / y;
	  } else {
	    // Step 6.a: NaN == NaN
	    return x !== x && y !== y;
	  }
	}
	
	/**
	 * Performs equality by iterating through keys on an object and returning false
	 * when any key has values which are not strictly equal between the arguments.
	 * Returns true when the values of all keys are strictly equal.
	 */
	function shallowEqual(objA, objB) {
	  if (is(objA, objB)) {
	    return true;
	  }
	
	  if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {
	    return false;
	  }
	
	  var keysA = Object.keys(objA);
	  var keysB = Object.keys(objB);
	
	  if (keysA.length !== keysB.length) {
	    return false;
	  }
	
	  // Test for A's keys different from B.
	  for (var i = 0; i < keysA.length; i++) {
	    if (!hasOwnProperty.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {
	      return false;
	    }
	  }
	
	  return true;
	}
	
	module.exports = shallowEqual;

/***/ }),
/* 156 */
/***/ (function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */
	
	'use strict';
	
	/**
	 * Given a `prevElement` and `nextElement`, determines if the existing
	 * instance should be updated as opposed to being destroyed or replaced by a new
	 * instance. Both arguments are elements. This ensures that this logic can
	 * operate on stateless trees without any backing instance.
	 *
	 * @param {?object} prevElement
	 * @param {?object} nextElement
	 * @return {boolean} True if the existing instance should be updated.
	 * @protected
	 */
	
	function shouldUpdateReactComponent(prevElement, nextElement) {
	  var prevEmpty = prevElement === null || prevElement === false;
	  var nextEmpty = nextElement === null || nextElement === false;
	  if (prevEmpty || nextEmpty) {
	    return prevEmpty === nextEmpty;
	  }
	
	  var prevType = typeof prevElement;
	  var nextType = typeof nextElement;
	  if (prevType === 'string' || prevType === 'number') {
	    return nextType === 'string' || nextType === 'number';
	  } else {
	    return nextType === 'object' && prevElement.type === nextElement.type && prevElement.key === nextElement.key;
	  }
	}
	
	module.exports = shouldUpdateReactComponent;

/***/ }),
/* 157 */
/***/ (function(module, exports) {

	/**
	 * Copyright (c) 2014-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */
	
	'use strict';
	
	var emptyComponentFactory;
	
	var ReactEmptyComponentInjection = {
	  injectEmptyComponentFactory: function (factory) {
	    emptyComponentFactory = factory;
	  }
	};
	
	var ReactEmptyComponent = {
	  create: function (instantiate) {
	    return emptyComponentFactory(instantiate);
	  }
	};
	
	ReactEmptyComponent.injection = ReactEmptyComponentInjection;
	
	module.exports = ReactEmptyComponent;

/***/ }),
/* 158 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2014-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(66);
	
	var invariant = __webpack_require__(35);
	
	var genericComponentClass = null;
	var textComponentClass = null;
	
	var ReactHostComponentInjection = {
	  // This accepts a class that receives the tag string. This is a catch all
	  // that can render any kind of tag.
	  injectGenericComponentClass: function (componentClass) {
	    genericComponentClass = componentClass;
	  },
	  // This accepts a text component class that takes the text string to be
	  // rendered as props.
	  injectTextComponentClass: function (componentClass) {
	    textComponentClass = componentClass;
	  }
	};
	
	/**
	 * Get a host internal component class for a specific tag.
	 *
	 * @param {ReactElement} element The element to create.
	 * @return {function} The internal class constructor function.
	 */
	function createInternalComponent(element) {
	  !genericComponentClass ?  true ? invariant(false, 'There is no registered component for the tag %s', element.type) : _prodInvariant('111', element.type) : void 0;
	  return new genericComponentClass(element);
	}
	
	/**
	 * @param {ReactText} text
	 * @return {ReactComponent}
	 */
	function createInstanceForText(text) {
	  return new textComponentClass(text);
	}
	
	/**
	 * @param {ReactComponent} component
	 * @return {boolean}
	 */
	function isTextComponent(component) {
	  return component instanceof textComponentClass;
	}
	
	var ReactHostComponent = {
	  createInternalComponent: createInternalComponent,
	  createInstanceForText: createInstanceForText,
	  isTextComponent: isTextComponent,
	  injection: ReactHostComponentInjection
	};
	
	module.exports = ReactHostComponent;

/***/ }),
/* 159 */
/***/ (function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * 
	 */
	
	'use strict';
	
	var nextDebugID = 1;
	
	function getNextDebugID() {
	  return nextDebugID++;
	}
	
	module.exports = getNextDebugID;

/***/ }),
/* 160 */
/***/ (function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * 
	 */
	
	'use strict';
	
	/**
	 * Escape and wrap key so it is safe to use as a reactid
	 *
	 * @param {string} key to be escaped.
	 * @return {string} the escaped key.
	 */
	
	function escape(key) {
	  var escapeRegex = /[=:]/g;
	  var escaperLookup = {
	    '=': '=0',
	    ':': '=2'
	  };
	  var escapedString = ('' + key).replace(escapeRegex, function (match) {
	    return escaperLookup[match];
	  });
	
	  return '$' + escapedString;
	}
	
	/**
	 * Unescape and unwrap key for human-readable display
	 *
	 * @param {string} key to unescape.
	 * @return {string} the unescaped key.
	 */
	function unescape(key) {
	  var unescapeRegex = /(=0|=2)/g;
	  var unescaperLookup = {
	    '=0': '=',
	    '=2': ':'
	  };
	  var keySubstring = key[0] === '.' && key[1] === '$' ? key.substring(2) : key.substring(1);
	
	  return ('' + keySubstring).replace(unescapeRegex, function (match) {
	    return unescaperLookup[match];
	  });
	}
	
	var KeyEscapeUtils = {
	  escape: escape,
	  unescape: unescape
	};
	
	module.exports = KeyEscapeUtils;

/***/ }),
/* 161 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(66);
	
	var ReactCurrentOwner = __webpack_require__(40);
	var REACT_ELEMENT_TYPE = __webpack_require__(162);
	
	var getIteratorFn = __webpack_require__(163);
	var invariant = __webpack_require__(35);
	var KeyEscapeUtils = __webpack_require__(160);
	var warning = __webpack_require__(31);
	
	var SEPARATOR = '.';
	var SUBSEPARATOR = ':';
	
	/**
	 * This is inlined from ReactElement since this file is shared between
	 * isomorphic and renderers. We could extract this to a
	 *
	 */
	
	/**
	 * TODO: Test that a single child and an array with one item have the same key
	 * pattern.
	 */
	
	var didWarnAboutMaps = false;
	
	/**
	 * Generate a key string that identifies a component within a set.
	 *
	 * @param {*} component A component that could contain a manual key.
	 * @param {number} index Index that is used if a manual key is not provided.
	 * @return {string}
	 */
	function getComponentKey(component, index) {
	  // Do some typechecking here since we call this blindly. We want to ensure
	  // that we don't block potential future ES APIs.
	  if (component && typeof component === 'object' && component.key != null) {
	    // Explicit key
	    return KeyEscapeUtils.escape(component.key);
	  }
	  // Implicit key determined by the index in the set
	  return index.toString(36);
	}
	
	/**
	 * @param {?*} children Children tree container.
	 * @param {!string} nameSoFar Name of the key path so far.
	 * @param {!function} callback Callback to invoke with each child found.
	 * @param {?*} traverseContext Used to pass information throughout the traversal
	 * process.
	 * @return {!number} The number of children in this subtree.
	 */
	function traverseAllChildrenImpl(children, nameSoFar, callback, traverseContext) {
	  var type = typeof children;
	
	  if (type === 'undefined' || type === 'boolean') {
	    // All of the above are perceived as null.
	    children = null;
	  }
	
	  if (children === null || type === 'string' || type === 'number' ||
	  // The following is inlined from ReactElement. This means we can optimize
	  // some checks. React Fiber also inlines this logic for similar purposes.
	  type === 'object' && children.$$typeof === REACT_ELEMENT_TYPE) {
	    callback(traverseContext, children,
	    // If it's the only child, treat the name as if it was wrapped in an array
	    // so that it's consistent if the number of children grows.
	    nameSoFar === '' ? SEPARATOR + getComponentKey(children, 0) : nameSoFar);
	    return 1;
	  }
	
	  var child;
	  var nextName;
	  var subtreeCount = 0; // Count of children found in the current subtree.
	  var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;
	
	  if (Array.isArray(children)) {
	    for (var i = 0; i < children.length; i++) {
	      child = children[i];
	      nextName = nextNamePrefix + getComponentKey(child, i);
	      subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
	    }
	  } else {
	    var iteratorFn = getIteratorFn(children);
	    if (iteratorFn) {
	      var iterator = iteratorFn.call(children);
	      var step;
	      if (iteratorFn !== children.entries) {
	        var ii = 0;
	        while (!(step = iterator.next()).done) {
	          child = step.value;
	          nextName = nextNamePrefix + getComponentKey(child, ii++);
	          subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
	        }
	      } else {
	        if (true) {
	          var mapsAsChildrenAddendum = '';
	          if (ReactCurrentOwner.current) {
	            var mapsAsChildrenOwnerName = ReactCurrentOwner.current.getName();
	            if (mapsAsChildrenOwnerName) {
	              mapsAsChildrenAddendum = ' Check the render method of `' + mapsAsChildrenOwnerName + '`.';
	            }
	          }
	           true ? warning(didWarnAboutMaps, 'Using Maps as children is not yet fully supported. It is an ' + 'experimental feature that might be removed. Convert it to a ' + 'sequence / iterable of keyed ReactElements instead.%s', mapsAsChildrenAddendum) : void 0;
	          didWarnAboutMaps = true;
	        }
	        // Iterator will provide entry [k,v] tuples rather than values.
	        while (!(step = iterator.next()).done) {
	          var entry = step.value;
	          if (entry) {
	            child = entry[1];
	            nextName = nextNamePrefix + KeyEscapeUtils.escape(entry[0]) + SUBSEPARATOR + getComponentKey(child, 0);
	            subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
	          }
	        }
	      }
	    } else if (type === 'object') {
	      var addendum = '';
	      if (true) {
	        addendum = ' If you meant to render a collection of children, use an array ' + 'instead or wrap the object using createFragment(object) from the ' + 'React add-ons.';
	        if (children._isReactElement) {
	          addendum = " It looks like you're using an element created by a different " + 'version of React. Make sure to use only one copy of React.';
	        }
	        if (ReactCurrentOwner.current) {
	          var name = ReactCurrentOwner.current.getName();
	          if (name) {
	            addendum += ' Check the render method of `' + name + '`.';
	          }
	        }
	      }
	      var childrenString = String(children);
	       true ?  true ? invariant(false, 'Objects are not valid as a React child (found: %s).%s', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : _prodInvariant('31', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : void 0;
	    }
	  }
	
	  return subtreeCount;
	}
	
	/**
	 * Traverses children that are typically specified as `props.children`, but
	 * might also be specified through attributes:
	 *
	 * - `traverseAllChildren(this.props.children, ...)`
	 * - `traverseAllChildren(this.props.leftPanelChildren, ...)`
	 *
	 * The `traverseContext` is an optional argument that is passed through the
	 * entire traversal. It can be used to store accumulations or anything else that
	 * the callback might find relevant.
	 *
	 * @param {?*} children Children tree object.
	 * @param {!function} callback To invoke upon traversing each child.
	 * @param {?*} traverseContext Context for traversal.
	 * @return {!number} The number of children in this subtree.
	 */
	function traverseAllChildren(children, callback, traverseContext) {
	  if (children == null) {
	    return 0;
	  }
	
	  return traverseAllChildrenImpl(children, '', callback, traverseContext);
	}
	
	module.exports = traverseAllChildren;

/***/ }),
/* 162 */
/***/ (function(module, exports) {

	/**
	 * Copyright (c) 2014-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * 
	 */
	
	'use strict';
	
	// The Symbol used to tag the ReactElement type. If there is no native Symbol
	// nor polyfill, then a plain number is used for performance.
	
	var REACT_ELEMENT_TYPE = typeof Symbol === 'function' && Symbol['for'] && Symbol['for']('react.element') || 0xeac7;
	
	module.exports = REACT_ELEMENT_TYPE;

/***/ }),
/* 163 */
/***/ (function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * 
	 */
	
	'use strict';
	
	/* global Symbol */
	
	var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
	var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.
	
	/**
	 * Returns the iterator method function contained on the iterable object.
	 *
	 * Be sure to invoke the function with the iterable as context:
	 *
	 *     var iteratorFn = getIteratorFn(myIterable);
	 *     if (iteratorFn) {
	 *       var iterator = iteratorFn.call(myIterable);
	 *       ...
	 *     }
	 *
	 * @param {?object} maybeIterable
	 * @return {?function}
	 */
	function getIteratorFn(maybeIterable) {
	  var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
	  if (typeof iteratorFn === 'function') {
	    return iteratorFn;
	  }
	}
	
	module.exports = getIteratorFn;

/***/ }),
/* 164 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * 
	 */
	
	'use strict';
	
	var KeyEscapeUtils = __webpack_require__(160);
	var traverseAllChildren = __webpack_require__(161);
	var warning = __webpack_require__(31);
	
	var ReactComponentTreeHook;
	
	if (typeof process !== 'undefined' && ({"NODE_ENV":"development"}) && ("development") === 'test') {
	  // Temporary hack.
	  // Inline requires don't work well with Jest:
	  // https://github.com/facebook/react/issues/7240
	  // Remove the inline requires when we don't need them anymore:
	  // https://github.com/facebook/react/pull/7178
	  ReactComponentTreeHook = __webpack_require__(47);
	}
	
	/**
	 * @param {function} traverseContext Context passed through traversal.
	 * @param {?ReactComponent} child React child component.
	 * @param {!string} name String name of key path to child.
	 * @param {number=} selfDebugID Optional debugID of the current internal instance.
	 */
	function flattenSingleChildIntoContext(traverseContext, child, name, selfDebugID) {
	  // We found a component instance.
	  if (traverseContext && typeof traverseContext === 'object') {
	    var result = traverseContext;
	    var keyUnique = result[name] === undefined;
	    if (true) {
	      if (!ReactComponentTreeHook) {
	        ReactComponentTreeHook = __webpack_require__(47);
	      }
	      if (!keyUnique) {
	         true ? warning(false, 'flattenChildren(...): Encountered two children with the same key, ' + '`%s`. Child keys must be unique; when two children share a key, only ' + 'the first child will be used.%s', KeyEscapeUtils.unescape(name), ReactComponentTreeHook.getStackAddendumByID(selfDebugID)) : void 0;
	      }
	    }
	    if (keyUnique && child != null) {
	      result[name] = child;
	    }
	  }
	}
	
	/**
	 * Flattens children that are typically specified as `props.children`. Any null
	 * children will not be included in the resulting object.
	 * @return {!object} flattened children keyed by name.
	 */
	function flattenChildren(children, selfDebugID) {
	  if (children == null) {
	    return children;
	  }
	  var result = {};
	
	  if (true) {
	    traverseAllChildren(children, function (traverseContext, child, name) {
	      return flattenSingleChildIntoContext(traverseContext, child, name, selfDebugID);
	    }, result);
	  } else {
	    traverseAllChildren(children, flattenSingleChildIntoContext, result);
	  }
	  return result;
	}
	
	module.exports = flattenChildren;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(49)))

/***/ }),
/* 165 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2014-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */
	
	'use strict';
	
	var _assign = __webpack_require__(27);
	
	var PooledClass = __webpack_require__(81);
	var Transaction = __webpack_require__(99);
	var ReactInstrumentation = __webpack_require__(93);
	var ReactServerUpdateQueue = __webpack_require__(166);
	
	/**
	 * Executed within the scope of the `Transaction` instance. Consider these as
	 * being member methods, but with an implied ordering while being isolated from
	 * each other.
	 */
	var TRANSACTION_WRAPPERS = [];
	
	if (true) {
	  TRANSACTION_WRAPPERS.push({
	    initialize: ReactInstrumentation.debugTool.onBeginFlush,
	    close: ReactInstrumentation.debugTool.onEndFlush
	  });
	}
	
	var noopCallbackQueue = {
	  enqueue: function () {}
	};
	
	/**
	 * @class ReactServerRenderingTransaction
	 * @param {boolean} renderToStaticMarkup
	 */
	function ReactServerRenderingTransaction(renderToStaticMarkup) {
	  this.reinitializeTransaction();
	  this.renderToStaticMarkup = renderToStaticMarkup;
	  this.useCreateElement = false;
	  this.updateQueue = new ReactServerUpdateQueue(this);
	}
	
	var Mixin = {
	  /**
	   * @see Transaction
	   * @abstract
	   * @final
	   * @return {array} Empty list of operation wrap procedures.
	   */
	  getTransactionWrappers: function () {
	    return TRANSACTION_WRAPPERS;
	  },
	
	  /**
	   * @return {object} The queue to collect `onDOMReady` callbacks with.
	   */
	  getReactMountReady: function () {
	    return noopCallbackQueue;
	  },
	
	  /**
	   * @return {object} The queue to collect React async events.
	   */
	  getUpdateQueue: function () {
	    return this.updateQueue;
	  },
	
	  /**
	   * `PooledClass` looks for this, and will invoke this before allowing this
	   * instance to be reused.
	   */
	  destructor: function () {},
	
	  checkpoint: function () {},
	
	  rollback: function () {}
	};
	
	_assign(ReactServerRenderingTransaction.prototype, Transaction, Mixin);
	
	PooledClass.addPoolingTo(ReactServerRenderingTransaction);
	
	module.exports = ReactServerRenderingTransaction;

/***/ }),
/* 166 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2015-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * 
	 */
	
	'use strict';
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	var ReactUpdateQueue = __webpack_require__(167);
	
	var warning = __webpack_require__(31);
	
	function warnNoop(publicInstance, callerName) {
	  if (true) {
	    var constructor = publicInstance.constructor;
	     true ? warning(false, '%s(...): Can only update a mounting component. ' + 'This usually means you called %s() outside componentWillMount() on the server. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, constructor && (constructor.displayName || constructor.name) || 'ReactClass') : void 0;
	  }
	}
	
	/**
	 * This is the update queue used for server rendering.
	 * It delegates to ReactUpdateQueue while server rendering is in progress and
	 * switches to ReactNoopUpdateQueue after the transaction has completed.
	 * @class ReactServerUpdateQueue
	 * @param {Transaction} transaction
	 */
	
	var ReactServerUpdateQueue = function () {
	  function ReactServerUpdateQueue(transaction) {
	    _classCallCheck(this, ReactServerUpdateQueue);
	
	    this.transaction = transaction;
	  }
	
	  /**
	   * Checks whether or not this composite component is mounted.
	   * @param {ReactClass} publicInstance The instance we want to test.
	   * @return {boolean} True if mounted, false otherwise.
	   * @protected
	   * @final
	   */
	
	
	  ReactServerUpdateQueue.prototype.isMounted = function isMounted(publicInstance) {
	    return false;
	  };
	
	  /**
	   * Enqueue a callback that will be executed after all the pending updates
	   * have processed.
	   *
	   * @param {ReactClass} publicInstance The instance to use as `this` context.
	   * @param {?function} callback Called after state is updated.
	   * @internal
	   */
	
	
	  ReactServerUpdateQueue.prototype.enqueueCallback = function enqueueCallback(publicInstance, callback, callerName) {
	    if (this.transaction.isInTransaction()) {
	      ReactUpdateQueue.enqueueCallback(publicInstance, callback, callerName);
	    }
	  };
	
	  /**
	   * Forces an update. This should only be invoked when it is known with
	   * certainty that we are **not** in a DOM transaction.
	   *
	   * You may want to call this when you know that some deeper aspect of the
	   * component's state has changed but `setState` was not called.
	   *
	   * This will not invoke `shouldComponentUpdate`, but it will invoke
	   * `componentWillUpdate` and `componentDidUpdate`.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @internal
	   */
	
	
	  ReactServerUpdateQueue.prototype.enqueueForceUpdate = function enqueueForceUpdate(publicInstance) {
	    if (this.transaction.isInTransaction()) {
	      ReactUpdateQueue.enqueueForceUpdate(publicInstance);
	    } else {
	      warnNoop(publicInstance, 'forceUpdate');
	    }
	  };
	
	  /**
	   * Replaces all of the state. Always use this or `setState` to mutate state.
	   * You should treat `this.state` as immutable.
	   *
	   * There is no guarantee that `this.state` will be immediately updated, so
	   * accessing `this.state` after calling this method may return the old value.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object|function} completeState Next state.
	   * @internal
	   */
	
	
	  ReactServerUpdateQueue.prototype.enqueueReplaceState = function enqueueReplaceState(publicInstance, completeState) {
	    if (this.transaction.isInTransaction()) {
	      ReactUpdateQueue.enqueueReplaceState(publicInstance, completeState);
	    } else {
	      warnNoop(publicInstance, 'replaceState');
	    }
	  };
	
	  /**
	   * Sets a subset of the state. This only exists because _pendingState is
	   * internal. This provides a merging strategy that is not available to deep
	   * properties which is confusing. TODO: Expose pendingState or don't use it
	   * during the merge.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object|function} partialState Next partial state to be merged with state.
	   * @internal
	   */
	
	
	  ReactServerUpdateQueue.prototype.enqueueSetState = function enqueueSetState(publicInstance, partialState) {
	    if (this.transaction.isInTransaction()) {
	      ReactUpdateQueue.enqueueSetState(publicInstance, partialState);
	    } else {
	      warnNoop(publicInstance, 'setState');
	    }
	  };
	
	  return ReactServerUpdateQueue;
	}();
	
	module.exports = ReactServerUpdateQueue;

/***/ }),
/* 167 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2015-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(66);
	
	var ReactCurrentOwner = __webpack_require__(40);
	var ReactInstanceMap = __webpack_require__(148);
	var ReactInstrumentation = __webpack_require__(93);
	var ReactUpdates = __webpack_require__(87);
	
	var invariant = __webpack_require__(35);
	var warning = __webpack_require__(31);
	
	function enqueueUpdate(internalInstance) {
	  ReactUpdates.enqueueUpdate(internalInstance);
	}
	
	function formatUnexpectedArgument(arg) {
	  var type = typeof arg;
	  if (type !== 'object') {
	    return type;
	  }
	  var displayName = arg.constructor && arg.constructor.name || type;
	  var keys = Object.keys(arg);
	  if (keys.length > 0 && keys.length < 20) {
	    return displayName + ' (keys: ' + keys.join(', ') + ')';
	  }
	  return displayName;
	}
	
	function getInternalInstanceReadyForUpdate(publicInstance, callerName) {
	  var internalInstance = ReactInstanceMap.get(publicInstance);
	  if (!internalInstance) {
	    if (true) {
	      var ctor = publicInstance.constructor;
	      // Only warn when we have a callerName. Otherwise we should be silent.
	      // We're probably calling from enqueueCallback. We don't want to warn
	      // there because we already warned for the corresponding lifecycle method.
	       true ? warning(!callerName, '%s(...): Can only update a mounted or mounting component. ' + 'This usually means you called %s() on an unmounted component. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, ctor && (ctor.displayName || ctor.name) || 'ReactClass') : void 0;
	    }
	    return null;
	  }
	
	  if (true) {
	     true ? warning(ReactCurrentOwner.current == null, '%s(...): Cannot update during an existing state transition (such as ' + "within `render` or another component's constructor). Render methods " + 'should be a pure function of props and state; constructor ' + 'side-effects are an anti-pattern, but can be moved to ' + '`componentWillMount`.', callerName) : void 0;
	  }
	
	  return internalInstance;
	}
	
	/**
	 * ReactUpdateQueue allows for state updates to be scheduled into a later
	 * reconciliation step.
	 */
	var ReactUpdateQueue = {
	  /**
	   * Checks whether or not this composite component is mounted.
	   * @param {ReactClass} publicInstance The instance we want to test.
	   * @return {boolean} True if mounted, false otherwise.
	   * @protected
	   * @final
	   */
	  isMounted: function (publicInstance) {
	    if (true) {
	      var owner = ReactCurrentOwner.current;
	      if (owner !== null) {
	         true ? warning(owner._warnedAboutRefsInRender, '%s is accessing isMounted inside its render() function. ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', owner.getName() || 'A component') : void 0;
	        owner._warnedAboutRefsInRender = true;
	      }
	    }
	    var internalInstance = ReactInstanceMap.get(publicInstance);
	    if (internalInstance) {
	      // During componentWillMount and render this will still be null but after
	      // that will always render to something. At least for now. So we can use
	      // this hack.
	      return !!internalInstance._renderedComponent;
	    } else {
	      return false;
	    }
	  },
	
	  /**
	   * Enqueue a callback that will be executed after all the pending updates
	   * have processed.
	   *
	   * @param {ReactClass} publicInstance The instance to use as `this` context.
	   * @param {?function} callback Called after state is updated.
	   * @param {string} callerName Name of the calling function in the public API.
	   * @internal
	   */
	  enqueueCallback: function (publicInstance, callback, callerName) {
	    ReactUpdateQueue.validateCallback(callback, callerName);
	    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance);
	
	    // Previously we would throw an error if we didn't have an internal
	    // instance. Since we want to make it a no-op instead, we mirror the same
	    // behavior we have in other enqueue* methods.
	    // We also need to ignore callbacks in componentWillMount. See
	    // enqueueUpdates.
	    if (!internalInstance) {
	      return null;
	    }
	
	    if (internalInstance._pendingCallbacks) {
	      internalInstance._pendingCallbacks.push(callback);
	    } else {
	      internalInstance._pendingCallbacks = [callback];
	    }
	    // TODO: The callback here is ignored when setState is called from
	    // componentWillMount. Either fix it or disallow doing so completely in
	    // favor of getInitialState. Alternatively, we can disallow
	    // componentWillMount during server-side rendering.
	    enqueueUpdate(internalInstance);
	  },
	
	  enqueueCallbackInternal: function (internalInstance, callback) {
	    if (internalInstance._pendingCallbacks) {
	      internalInstance._pendingCallbacks.push(callback);
	    } else {
	      internalInstance._pendingCallbacks = [callback];
	    }
	    enqueueUpdate(internalInstance);
	  },
	
	  /**
	   * Forces an update. This should only be invoked when it is known with
	   * certainty that we are **not** in a DOM transaction.
	   *
	   * You may want to call this when you know that some deeper aspect of the
	   * component's state has changed but `setState` was not called.
	   *
	   * This will not invoke `shouldComponentUpdate`, but it will invoke
	   * `componentWillUpdate` and `componentDidUpdate`.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @internal
	   */
	  enqueueForceUpdate: function (publicInstance) {
	    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'forceUpdate');
	
	    if (!internalInstance) {
	      return;
	    }
	
	    internalInstance._pendingForceUpdate = true;
	
	    enqueueUpdate(internalInstance);
	  },
	
	  /**
	   * Replaces all of the state. Always use this or `setState` to mutate state.
	   * You should treat `this.state` as immutable.
	   *
	   * There is no guarantee that `this.state` will be immediately updated, so
	   * accessing `this.state` after calling this method may return the old value.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object} completeState Next state.
	   * @internal
	   */
	  enqueueReplaceState: function (publicInstance, completeState, callback) {
	    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'replaceState');
	
	    if (!internalInstance) {
	      return;
	    }
	
	    internalInstance._pendingStateQueue = [completeState];
	    internalInstance._pendingReplaceState = true;
	
	    // Future-proof 15.5
	    if (callback !== undefined && callback !== null) {
	      ReactUpdateQueue.validateCallback(callback, 'replaceState');
	      if (internalInstance._pendingCallbacks) {
	        internalInstance._pendingCallbacks.push(callback);
	      } else {
	        internalInstance._pendingCallbacks = [callback];
	      }
	    }
	
	    enqueueUpdate(internalInstance);
	  },
	
	  /**
	   * Sets a subset of the state. This only exists because _pendingState is
	   * internal. This provides a merging strategy that is not available to deep
	   * properties which is confusing. TODO: Expose pendingState or don't use it
	   * during the merge.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object} partialState Next partial state to be merged with state.
	   * @internal
	   */
	  enqueueSetState: function (publicInstance, partialState) {
	    if (true) {
	      ReactInstrumentation.debugTool.onSetState();
	       true ? warning(partialState != null, 'setState(...): You passed an undefined or null state object; ' + 'instead, use forceUpdate().') : void 0;
	    }
	
	    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'setState');
	
	    if (!internalInstance) {
	      return;
	    }
	
	    var queue = internalInstance._pendingStateQueue || (internalInstance._pendingStateQueue = []);
	    queue.push(partialState);
	
	    enqueueUpdate(internalInstance);
	  },
	
	  enqueueElementInternal: function (internalInstance, nextElement, nextContext) {
	    internalInstance._pendingElement = nextElement;
	    // TODO: introduce _pendingContext instead of setting it directly.
	    internalInstance._context = nextContext;
	    enqueueUpdate(internalInstance);
	  },
	
	  validateCallback: function (callback, callerName) {
	    !(!callback || typeof callback === 'function') ?  true ? invariant(false, '%s(...): Expected the last optional `callback` argument to be a function. Instead received: %s.', callerName, formatUnexpectedArgument(callback)) : _prodInvariant('122', callerName, formatUnexpectedArgument(callback)) : void 0;
	  }
	};
	
	module.exports = ReactUpdateQueue;

/***/ }),
/* 168 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2015-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */
	
	'use strict';
	
	var _assign = __webpack_require__(27);
	
	var emptyFunction = __webpack_require__(32);
	var warning = __webpack_require__(31);
	
	var validateDOMNesting = emptyFunction;
	
	if (true) {
	  // This validation code was written based on the HTML5 parsing spec:
	  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope
	  //
	  // Note: this does not catch all invalid nesting, nor does it try to (as it's
	  // not clear what practical benefit doing so provides); instead, we warn only
	  // for cases where the parser will give a parse tree differing from what React
	  // intended. For example, <b><div></div></b> is invalid but we don't warn
	  // because it still parses correctly; we do warn for other cases like nested
	  // <p> tags where the beginning of the second element implicitly closes the
	  // first, causing a confusing mess.
	
	  // https://html.spec.whatwg.org/multipage/syntax.html#special
	  var specialTags = ['address', 'applet', 'area', 'article', 'aside', 'base', 'basefont', 'bgsound', 'blockquote', 'body', 'br', 'button', 'caption', 'center', 'col', 'colgroup', 'dd', 'details', 'dir', 'div', 'dl', 'dt', 'embed', 'fieldset', 'figcaption', 'figure', 'footer', 'form', 'frame', 'frameset', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'iframe', 'img', 'input', 'isindex', 'li', 'link', 'listing', 'main', 'marquee', 'menu', 'menuitem', 'meta', 'nav', 'noembed', 'noframes', 'noscript', 'object', 'ol', 'p', 'param', 'plaintext', 'pre', 'script', 'section', 'select', 'source', 'style', 'summary', 'table', 'tbody', 'td', 'template', 'textarea', 'tfoot', 'th', 'thead', 'title', 'tr', 'track', 'ul', 'wbr', 'xmp'];
	
	  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope
	  var inScopeTags = ['applet', 'caption', 'html', 'table', 'td', 'th', 'marquee', 'object', 'template',
	
	  // https://html.spec.whatwg.org/multipage/syntax.html#html-integration-point
	  // TODO: Distinguish by namespace here -- for <title>, including it here
	  // errs on the side of fewer warnings
	  'foreignObject', 'desc', 'title'];
	
	  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-button-scope
	  var buttonScopeTags = inScopeTags.concat(['button']);
	
	  // https://html.spec.whatwg.org/multipage/syntax.html#generate-implied-end-tags
	  var impliedEndTags = ['dd', 'dt', 'li', 'option', 'optgroup', 'p', 'rp', 'rt'];
	
	  var emptyAncestorInfo = {
	    current: null,
	
	    formTag: null,
	    aTagInScope: null,
	    buttonTagInScope: null,
	    nobrTagInScope: null,
	    pTagInButtonScope: null,
	
	    listItemTagAutoclosing: null,
	    dlItemTagAutoclosing: null
	  };
	
	  var updatedAncestorInfo = function (oldInfo, tag, instance) {
	    var ancestorInfo = _assign({}, oldInfo || emptyAncestorInfo);
	    var info = { tag: tag, instance: instance };
	
	    if (inScopeTags.indexOf(tag) !== -1) {
	      ancestorInfo.aTagInScope = null;
	      ancestorInfo.buttonTagInScope = null;
	      ancestorInfo.nobrTagInScope = null;
	    }
	    if (buttonScopeTags.indexOf(tag) !== -1) {
	      ancestorInfo.pTagInButtonScope = null;
	    }
	
	    // See rules for 'li', 'dd', 'dt' start tags in
	    // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody
	    if (specialTags.indexOf(tag) !== -1 && tag !== 'address' && tag !== 'div' && tag !== 'p') {
	      ancestorInfo.listItemTagAutoclosing = null;
	      ancestorInfo.dlItemTagAutoclosing = null;
	    }
	
	    ancestorInfo.current = info;
	
	    if (tag === 'form') {
	      ancestorInfo.formTag = info;
	    }
	    if (tag === 'a') {
	      ancestorInfo.aTagInScope = info;
	    }
	    if (tag === 'button') {
	      ancestorInfo.buttonTagInScope = info;
	    }
	    if (tag === 'nobr') {
	      ancestorInfo.nobrTagInScope = info;
	    }
	    if (tag === 'p') {
	      ancestorInfo.pTagInButtonScope = info;
	    }
	    if (tag === 'li') {
	      ancestorInfo.listItemTagAutoclosing = info;
	    }
	    if (tag === 'dd' || tag === 'dt') {
	      ancestorInfo.dlItemTagAutoclosing = info;
	    }
	
	    return ancestorInfo;
	  };
	
	  /**
	   * Returns whether
	   */
	  var isTagValidWithParent = function (tag, parentTag) {
	    // First, let's check if we're in an unusual parsing mode...
	    switch (parentTag) {
	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inselect
	      case 'select':
	        return tag === 'option' || tag === 'optgroup' || tag === '#text';
	      case 'optgroup':
	        return tag === 'option' || tag === '#text';
	      // Strictly speaking, seeing an <option> doesn't mean we're in a <select>
	      // but
	      case 'option':
	        return tag === '#text';
	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intd
	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incaption
	      // No special behavior since these rules fall back to "in body" mode for
	      // all except special table nodes which cause bad parsing behavior anyway.
	
	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intr
	      case 'tr':
	        return tag === 'th' || tag === 'td' || tag === 'style' || tag === 'script' || tag === 'template';
	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intbody
	      case 'tbody':
	      case 'thead':
	      case 'tfoot':
	        return tag === 'tr' || tag === 'style' || tag === 'script' || tag === 'template';
	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incolgroup
	      case 'colgroup':
	        return tag === 'col' || tag === 'template';
	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intable
	      case 'table':
	        return tag === 'caption' || tag === 'colgroup' || tag === 'tbody' || tag === 'tfoot' || tag === 'thead' || tag === 'style' || tag === 'script' || tag === 'template';
	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inhead
	      case 'head':
	        return tag === 'base' || tag === 'basefont' || tag === 'bgsound' || tag === 'link' || tag === 'meta' || tag === 'title' || tag === 'noscript' || tag === 'noframes' || tag === 'style' || tag === 'script' || tag === 'template';
	      // https://html.spec.whatwg.org/multipage/semantics.html#the-html-element
	      case 'html':
	        return tag === 'head' || tag === 'body';
	      case '#document':
	        return tag === 'html';
	    }
	
	    // Probably in the "in body" parsing mode, so we outlaw only tag combos
	    // where the parsing rules cause implicit opens or closes to be added.
	    // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody
	    switch (tag) {
	      case 'h1':
	      case 'h2':
	      case 'h3':
	      case 'h4':
	      case 'h5':
	      case 'h6':
	        return parentTag !== 'h1' && parentTag !== 'h2' && parentTag !== 'h3' && parentTag !== 'h4' && parentTag !== 'h5' && parentTag !== 'h6';
	
	      case 'rp':
	      case 'rt':
	        return impliedEndTags.indexOf(parentTag) === -1;
	
	      case 'body':
	      case 'caption':
	      case 'col':
	      case 'colgroup':
	      case 'frame':
	      case 'head':
	      case 'html':
	      case 'tbody':
	      case 'td':
	      case 'tfoot':
	      case 'th':
	      case 'thead':
	      case 'tr':
	        // These tags are only valid with a few parents that have special child
	        // parsing rules -- if we're down here, then none of those matched and
	        // so we allow it only if we don't know what the parent is, as all other
	        // cases are invalid.
	        return parentTag == null;
	    }
	
	    return true;
	  };
	
	  /**
	   * Returns whether
	   */
	  var findInvalidAncestorForTag = function (tag, ancestorInfo) {
	    switch (tag) {
	      case 'address':
	      case 'article':
	      case 'aside':
	      case 'blockquote':
	      case 'center':
	      case 'details':
	      case 'dialog':
	      case 'dir':
	      case 'div':
	      case 'dl':
	      case 'fieldset':
	      case 'figcaption':
	      case 'figure':
	      case 'footer':
	      case 'header':
	      case 'hgroup':
	      case 'main':
	      case 'menu':
	      case 'nav':
	      case 'ol':
	      case 'p':
	      case 'section':
	      case 'summary':
	      case 'ul':
	      case 'pre':
	      case 'listing':
	      case 'table':
	      case 'hr':
	      case 'xmp':
	      case 'h1':
	      case 'h2':
	      case 'h3':
	      case 'h4':
	      case 'h5':
	      case 'h6':
	        return ancestorInfo.pTagInButtonScope;
	
	      case 'form':
	        return ancestorInfo.formTag || ancestorInfo.pTagInButtonScope;
	
	      case 'li':
	        return ancestorInfo.listItemTagAutoclosing;
	
	      case 'dd':
	      case 'dt':
	        return ancestorInfo.dlItemTagAutoclosing;
	
	      case 'button':
	        return ancestorInfo.buttonTagInScope;
	
	      case 'a':
	        // Spec says something about storing a list of markers, but it sounds
	        // equivalent to this check.
	        return ancestorInfo.aTagInScope;
	
	      case 'nobr':
	        return ancestorInfo.nobrTagInScope;
	    }
	
	    return null;
	  };
	
	  /**
	   * Given a ReactCompositeComponent instance, return a list of its recursive
	   * owners, starting at the root and ending with the instance itself.
	   */
	  var findOwnerStack = function (instance) {
	    if (!instance) {
	      return [];
	    }
	
	    var stack = [];
	    do {
	      stack.push(instance);
	    } while (instance = instance._currentElement._owner);
	    stack.reverse();
	    return stack;
	  };
	
	  var didWarn = {};
	
	  validateDOMNesting = function (childTag, childText, childInstance, ancestorInfo) {
	    ancestorInfo = ancestorInfo || emptyAncestorInfo;
	    var parentInfo = ancestorInfo.current;
	    var parentTag = parentInfo && parentInfo.tag;
	
	    if (childText != null) {
	       true ? warning(childTag == null, 'validateDOMNesting: when childText is passed, childTag should be null') : void 0;
	      childTag = '#text';
	    }
	
	    var invalidParent = isTagValidWithParent(childTag, parentTag) ? null : parentInfo;
	    var invalidAncestor = invalidParent ? null : findInvalidAncestorForTag(childTag, ancestorInfo);
	    var problematic = invalidParent || invalidAncestor;
	
	    if (problematic) {
	      var ancestorTag = problematic.tag;
	      var ancestorInstance = problematic.instance;
	
	      var childOwner = childInstance && childInstance._currentElement._owner;
	      var ancestorOwner = ancestorInstance && ancestorInstance._currentElement._owner;
	
	      var childOwners = findOwnerStack(childOwner);
	      var ancestorOwners = findOwnerStack(ancestorOwner);
	
	      var minStackLen = Math.min(childOwners.length, ancestorOwners.length);
	      var i;
	
	      var deepestCommon = -1;
	      for (i = 0; i < minStackLen; i++) {
	        if (childOwners[i] === ancestorOwners[i]) {
	          deepestCommon = i;
	        } else {
	          break;
	        }
	      }
	
	      var UNKNOWN = '(unknown)';
	      var childOwnerNames = childOwners.slice(deepestCommon + 1).map(function (inst) {
	        return inst.getName() || UNKNOWN;
	      });
	      var ancestorOwnerNames = ancestorOwners.slice(deepestCommon + 1).map(function (inst) {
	        return inst.getName() || UNKNOWN;
	      });
	      var ownerInfo = [].concat(
	      // If the parent and child instances have a common owner ancestor, start
	      // with that -- otherwise we just start with the parent's owners.
	      deepestCommon !== -1 ? childOwners[deepestCommon].getName() || UNKNOWN : [], ancestorOwnerNames, ancestorTag,
	      // If we're warning about an invalid (non-parent) ancestry, add '...'
	      invalidAncestor ? ['...'] : [], childOwnerNames, childTag).join(' > ');
	
	      var warnKey = !!invalidParent + '|' + childTag + '|' + ancestorTag + '|' + ownerInfo;
	      if (didWarn[warnKey]) {
	        return;
	      }
	      didWarn[warnKey] = true;
	
	      var tagDisplayName = childTag;
	      var whitespaceInfo = '';
	      if (childTag === '#text') {
	        if (/\S/.test(childText)) {
	          tagDisplayName = 'Text nodes';
	        } else {
	          tagDisplayName = 'Whitespace text nodes';
	          whitespaceInfo = " Make sure you don't have any extra whitespace between tags on " + 'each line of your source code.';
	        }
	      } else {
	        tagDisplayName = '<' + childTag + '>';
	      }
	
	      if (invalidParent) {
	        var info = '';
	        if (ancestorTag === 'table' && childTag === 'tr') {
	          info += ' Add a <tbody> to your code to match the DOM tree generated by ' + 'the browser.';
	        }
	         true ? warning(false, 'validateDOMNesting(...): %s cannot appear as a child of <%s>.%s ' + 'See %s.%s', tagDisplayName, ancestorTag, whitespaceInfo, ownerInfo, info) : void 0;
	      } else {
	         true ? warning(false, 'validateDOMNesting(...): %s cannot appear as a descendant of ' + '<%s>. See %s.', tagDisplayName, ancestorTag, ownerInfo) : void 0;
	      }
	    }
	  };
	
	  validateDOMNesting.updatedAncestorInfo = updatedAncestorInfo;
	
	  // For testing
	  validateDOMNesting.isTagValidInContext = function (tag, ancestorInfo) {
	    ancestorInfo = ancestorInfo || emptyAncestorInfo;
	    var parentInfo = ancestorInfo.current;
	    var parentTag = parentInfo && parentInfo.tag;
	    return isTagValidWithParent(tag, parentTag) && !findInvalidAncestorForTag(tag, ancestorInfo);
	  };
	}
	
	module.exports = validateDOMNesting;

/***/ }),
/* 169 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2014-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */
	
	'use strict';
	
	var _assign = __webpack_require__(27);
	
	var DOMLazyTree = __webpack_require__(113);
	var ReactDOMComponentTree = __webpack_require__(65);
	
	var ReactDOMEmptyComponent = function (instantiate) {
	  // ReactCompositeComponent uses this:
	  this._currentElement = null;
	  // ReactDOMComponentTree uses these:
	  this._hostNode = null;
	  this._hostParent = null;
	  this._hostContainerInfo = null;
	  this._domID = 0;
	};
	_assign(ReactDOMEmptyComponent.prototype, {
	  mountComponent: function (transaction, hostParent, hostContainerInfo, context) {
	    var domID = hostContainerInfo._idCounter++;
	    this._domID = domID;
	    this._hostParent = hostParent;
	    this._hostContainerInfo = hostContainerInfo;
	
	    var nodeValue = ' react-empty: ' + this._domID + ' ';
	    if (transaction.useCreateElement) {
	      var ownerDocument = hostContainerInfo._ownerDocument;
	      var node = ownerDocument.createComment(nodeValue);
	      ReactDOMComponentTree.precacheNode(this, node);
	      return DOMLazyTree(node);
	    } else {
	      if (transaction.renderToStaticMarkup) {
	        // Normally we'd insert a comment node, but since this is a situation
	        // where React won't take over (static pages), we can simply return
	        // nothing.
	        return '';
	      }
	      return '<!--' + nodeValue + '-->';
	    }
	  },
	  receiveComponent: function () {},
	  getHostNode: function () {
	    return ReactDOMComponentTree.getNodeFromInstance(this);
	  },
	  unmountComponent: function () {
	    ReactDOMComponentTree.uncacheNode(this);
	  }
	});
	
	module.exports = ReactDOMEmptyComponent;

/***/ }),
/* 170 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2015-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(66);
	
	var invariant = __webpack_require__(35);
	
	/**
	 * Return the lowest common ancestor of A and B, or null if they are in
	 * different trees.
	 */
	function getLowestCommonAncestor(instA, instB) {
	  !('_hostNode' in instA) ?  true ? invariant(false, 'getNodeFromInstance: Invalid argument.') : _prodInvariant('33') : void 0;
	  !('_hostNode' in instB) ?  true ? invariant(false, 'getNodeFromInstance: Invalid argument.') : _prodInvariant('33') : void 0;
	
	  var depthA = 0;
	  for (var tempA = instA; tempA; tempA = tempA._hostParent) {
	    depthA++;
	  }
	  var depthB = 0;
	  for (var tempB = instB; tempB; tempB = tempB._hostParent) {
	    depthB++;
	  }
	
	  // If A is deeper, crawl up.
	  while (depthA - depthB > 0) {
	    instA = instA._hostParent;
	    depthA--;
	  }
	
	  // If B is deeper, crawl up.
	  while (depthB - depthA > 0) {
	    instB = instB._hostParent;
	    depthB--;
	  }
	
	  // Walk in lockstep until we find a match.
	  var depth = depthA;
	  while (depth--) {
	    if (instA === instB) {
	      return instA;
	    }
	    instA = instA._hostParent;
	    instB = instB._hostParent;
	  }
	  return null;
	}
	
	/**
	 * Return if A is an ancestor of B.
	 */
	function isAncestor(instA, instB) {
	  !('_hostNode' in instA) ?  true ? invariant(false, 'isAncestor: Invalid argument.') : _prodInvariant('35') : void 0;
	  !('_hostNode' in instB) ?  true ? invariant(false, 'isAncestor: Invalid argument.') : _prodInvariant('35') : void 0;
	
	  while (instB) {
	    if (instB === instA) {
	      return true;
	    }
	    instB = instB._hostParent;
	  }
	  return false;
	}
	
	/**
	 * Return the parent instance of the passed-in instance.
	 */
	function getParentInstance(inst) {
	  !('_hostNode' in inst) ?  true ? invariant(false, 'getParentInstance: Invalid argument.') : _prodInvariant('36') : void 0;
	
	  return inst._hostParent;
	}
	
	/**
	 * Simulates the traversal of a two-phase, capture/bubble event dispatch.
	 */
	function traverseTwoPhase(inst, fn, arg) {
	  var path = [];
	  while (inst) {
	    path.push(inst);
	    inst = inst._hostParent;
	  }
	  var i;
	  for (i = path.length; i-- > 0;) {
	    fn(path[i], 'captured', arg);
	  }
	  for (i = 0; i < path.length; i++) {
	    fn(path[i], 'bubbled', arg);
	  }
	}
	
	/**
	 * Traverses the ID hierarchy and invokes the supplied `cb` on any IDs that
	 * should would receive a `mouseEnter` or `mouseLeave` event.
	 *
	 * Does not invoke the callback on the nearest common ancestor because nothing
	 * "entered" or "left" that element.
	 */
	function traverseEnterLeave(from, to, fn, argFrom, argTo) {
	  var common = from && to ? getLowestCommonAncestor(from, to) : null;
	  var pathFrom = [];
	  while (from && from !== common) {
	    pathFrom.push(from);
	    from = from._hostParent;
	  }
	  var pathTo = [];
	  while (to && to !== common) {
	    pathTo.push(to);
	    to = to._hostParent;
	  }
	  var i;
	  for (i = 0; i < pathFrom.length; i++) {
	    fn(pathFrom[i], 'bubbled', argFrom);
	  }
	  for (i = pathTo.length; i-- > 0;) {
	    fn(pathTo[i], 'captured', argTo);
	  }
	}
	
	module.exports = {
	  isAncestor: isAncestor,
	  getLowestCommonAncestor: getLowestCommonAncestor,
	  getParentInstance: getParentInstance,
	  traverseTwoPhase: traverseTwoPhase,
	  traverseEnterLeave: traverseEnterLeave
	};

/***/ }),
/* 171 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(66),
	    _assign = __webpack_require__(27);
	
	var DOMChildrenOperations = __webpack_require__(112);
	var DOMLazyTree = __webpack_require__(113);
	var ReactDOMComponentTree = __webpack_require__(65);
	
	var escapeTextContentForBrowser = __webpack_require__(118);
	var invariant = __webpack_require__(35);
	var validateDOMNesting = __webpack_require__(168);
	
	/**
	 * Text nodes violate a couple assumptions that React makes about components:
	 *
	 *  - When mounting text into the DOM, adjacent text nodes are merged.
	 *  - Text nodes cannot be assigned a React root ID.
	 *
	 * This component is used to wrap strings between comment nodes so that they
	 * can undergo the same reconciliation that is applied to elements.
	 *
	 * TODO: Investigate representing React components in the DOM with text nodes.
	 *
	 * @class ReactDOMTextComponent
	 * @extends ReactComponent
	 * @internal
	 */
	var ReactDOMTextComponent = function (text) {
	  // TODO: This is really a ReactText (ReactNode), not a ReactElement
	  this._currentElement = text;
	  this._stringText = '' + text;
	  // ReactDOMComponentTree uses these:
	  this._hostNode = null;
	  this._hostParent = null;
	
	  // Properties
	  this._domID = 0;
	  this._mountIndex = 0;
	  this._closingComment = null;
	  this._commentNodes = null;
	};
	
	_assign(ReactDOMTextComponent.prototype, {
	  /**
	   * Creates the markup for this text node. This node is not intended to have
	   * any features besides containing text content.
	   *
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @return {string} Markup for this text node.
	   * @internal
	   */
	  mountComponent: function (transaction, hostParent, hostContainerInfo, context) {
	    if (true) {
	      var parentInfo;
	      if (hostParent != null) {
	        parentInfo = hostParent._ancestorInfo;
	      } else if (hostContainerInfo != null) {
	        parentInfo = hostContainerInfo._ancestorInfo;
	      }
	      if (parentInfo) {
	        // parentInfo should always be present except for the top-level
	        // component when server rendering
	        validateDOMNesting(null, this._stringText, this, parentInfo);
	      }
	    }
	
	    var domID = hostContainerInfo._idCounter++;
	    var openingValue = ' react-text: ' + domID + ' ';
	    var closingValue = ' /react-text ';
	    this._domID = domID;
	    this._hostParent = hostParent;
	    if (transaction.useCreateElement) {
	      var ownerDocument = hostContainerInfo._ownerDocument;
	      var openingComment = ownerDocument.createComment(openingValue);
	      var closingComment = ownerDocument.createComment(closingValue);
	      var lazyTree = DOMLazyTree(ownerDocument.createDocumentFragment());
	      DOMLazyTree.queueChild(lazyTree, DOMLazyTree(openingComment));
	      if (this._stringText) {
	        DOMLazyTree.queueChild(lazyTree, DOMLazyTree(ownerDocument.createTextNode(this._stringText)));
	      }
	      DOMLazyTree.queueChild(lazyTree, DOMLazyTree(closingComment));
	      ReactDOMComponentTree.precacheNode(this, openingComment);
	      this._closingComment = closingComment;
	      return lazyTree;
	    } else {
	      var escapedText = escapeTextContentForBrowser(this._stringText);
	
	      if (transaction.renderToStaticMarkup) {
	        // Normally we'd wrap this between comment nodes for the reasons stated
	        // above, but since this is a situation where React won't take over
	        // (static pages), we can simply return the text as it is.
	        return escapedText;
	      }
	
	      return '<!--' + openingValue + '-->' + escapedText + '<!--' + closingValue + '-->';
	    }
	  },
	
	  /**
	   * Updates this component by updating the text content.
	   *
	   * @param {ReactText} nextText The next text content
	   * @param {ReactReconcileTransaction} transaction
	   * @internal
	   */
	  receiveComponent: function (nextText, transaction) {
	    if (nextText !== this._currentElement) {
	      this._currentElement = nextText;
	      var nextStringText = '' + nextText;
	      if (nextStringText !== this._stringText) {
	        // TODO: Save this as pending props and use performUpdateIfNecessary
	        // and/or updateComponent to do the actual update for consistency with
	        // other component types?
	        this._stringText = nextStringText;
	        var commentNodes = this.getHostNode();
	        DOMChildrenOperations.replaceDelimitedText(commentNodes[0], commentNodes[1], nextStringText);
	      }
	    }
	  },
	
	  getHostNode: function () {
	    var hostNode = this._commentNodes;
	    if (hostNode) {
	      return hostNode;
	    }
	    if (!this._closingComment) {
	      var openingComment = ReactDOMComponentTree.getNodeFromInstance(this);
	      var node = openingComment.nextSibling;
	      while (true) {
	        !(node != null) ?  true ? invariant(false, 'Missing closing comment for text component %s', this._domID) : _prodInvariant('67', this._domID) : void 0;
	        if (node.nodeType === 8 && node.nodeValue === ' /react-text ') {
	          this._closingComment = node;
	          break;
	        }
	        node = node.nextSibling;
	      }
	    }
	    hostNode = [this._hostNode, this._closingComment];
	    this._commentNodes = hostNode;
	    return hostNode;
	  },
	
	  unmountComponent: function () {
	    this._closingComment = null;
	    this._commentNodes = null;
	    ReactDOMComponentTree.uncacheNode(this);
	  }
	});
	
	module.exports = ReactDOMTextComponent;

/***/ }),
/* 172 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */
	
	'use strict';
	
	var _assign = __webpack_require__(27);
	
	var ReactUpdates = __webpack_require__(87);
	var Transaction = __webpack_require__(99);
	
	var emptyFunction = __webpack_require__(32);
	
	var RESET_BATCHED_UPDATES = {
	  initialize: emptyFunction,
	  close: function () {
	    ReactDefaultBatchingStrategy.isBatchingUpdates = false;
	  }
	};
	
	var FLUSH_BATCHED_UPDATES = {
	  initialize: emptyFunction,
	  close: ReactUpdates.flushBatchedUpdates.bind(ReactUpdates)
	};
	
	var TRANSACTION_WRAPPERS = [FLUSH_BATCHED_UPDATES, RESET_BATCHED_UPDATES];
	
	function ReactDefaultBatchingStrategyTransaction() {
	  this.reinitializeTransaction();
	}
	
	_assign(ReactDefaultBatchingStrategyTransaction.prototype, Transaction, {
	  getTransactionWrappers: function () {
	    return TRANSACTION_WRAPPERS;
	  }
	});
	
	var transaction = new ReactDefaultBatchingStrategyTransaction();
	
	var ReactDefaultBatchingStrategy = {
	  isBatchingUpdates: false,
	
	  /**
	   * Call the provided function in a context within which calls to `setState`
	   * and friends are batched such that components aren't updated unnecessarily.
	   */
	  batchedUpdates: function (callback, a, b, c, d, e) {
	    var alreadyBatchingUpdates = ReactDefaultBatchingStrategy.isBatchingUpdates;
	
	    ReactDefaultBatchingStrategy.isBatchingUpdates = true;
	
	    // The code is written this way to avoid extra allocations
	    if (alreadyBatchingUpdates) {
	      return callback(a, b, c, d, e);
	    } else {
	      return transaction.perform(callback, null, a, b, c, d, e);
	    }
	  }
	};
	
	module.exports = ReactDefaultBatchingStrategy;

/***/ }),
/* 173 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */
	
	'use strict';
	
	var _assign = __webpack_require__(27);
	
	var EventListener = __webpack_require__(174);
	var ExecutionEnvironment = __webpack_require__(79);
	var PooledClass = __webpack_require__(81);
	var ReactDOMComponentTree = __webpack_require__(65);
	var ReactUpdates = __webpack_require__(87);
	
	var getEventTarget = __webpack_require__(101);
	var getUnboundedScrollPosition = __webpack_require__(175);
	
	/**
	 * Find the deepest React component completely containing the root of the
	 * passed-in instance (for use when entire React trees are nested within each
	 * other). If React trees are not nested, returns null.
	 */
	function findParent(inst) {
	  // TODO: It may be a good idea to cache this to prevent unnecessary DOM
	  // traversal, but caching is difficult to do correctly without using a
	  // mutation observer to listen for all DOM changes.
	  while (inst._hostParent) {
	    inst = inst._hostParent;
	  }
	  var rootNode = ReactDOMComponentTree.getNodeFromInstance(inst);
	  var container = rootNode.parentNode;
	  return ReactDOMComponentTree.getClosestInstanceFromNode(container);
	}
	
	// Used to store ancestor hierarchy in top level callback
	function TopLevelCallbackBookKeeping(topLevelType, nativeEvent) {
	  this.topLevelType = topLevelType;
	  this.nativeEvent = nativeEvent;
	  this.ancestors = [];
	}
	_assign(TopLevelCallbackBookKeeping.prototype, {
	  destructor: function () {
	    this.topLevelType = null;
	    this.nativeEvent = null;
	    this.ancestors.length = 0;
	  }
	});
	PooledClass.addPoolingTo(TopLevelCallbackBookKeeping, PooledClass.twoArgumentPooler);
	
	function handleTopLevelImpl(bookKeeping) {
	  var nativeEventTarget = getEventTarget(bookKeeping.nativeEvent);
	  var targetInst = ReactDOMComponentTree.getClosestInstanceFromNode(nativeEventTarget);
	
	  // Loop through the hierarchy, in case there's any nested components.
	  // It's important that we build the array of ancestors before calling any
	  // event handlers, because event handlers can modify the DOM, leading to
	  // inconsistencies with ReactMount's node cache. See #1105.
	  var ancestor = targetInst;
	  do {
	    bookKeeping.ancestors.push(ancestor);
	    ancestor = ancestor && findParent(ancestor);
	  } while (ancestor);
	
	  for (var i = 0; i < bookKeeping.ancestors.length; i++) {
	    targetInst = bookKeeping.ancestors[i];
	    ReactEventListener._handleTopLevel(bookKeeping.topLevelType, targetInst, bookKeeping.nativeEvent, getEventTarget(bookKeeping.nativeEvent));
	  }
	}
	
	function scrollValueMonitor(cb) {
	  var scrollPosition = getUnboundedScrollPosition(window);
	  cb(scrollPosition);
	}
	
	var ReactEventListener = {
	  _enabled: true,
	  _handleTopLevel: null,
	
	  WINDOW_HANDLE: ExecutionEnvironment.canUseDOM ? window : null,
	
	  setHandleTopLevel: function (handleTopLevel) {
	    ReactEventListener._handleTopLevel = handleTopLevel;
	  },
	
	  setEnabled: function (enabled) {
	    ReactEventListener._enabled = !!enabled;
	  },
	
	  isEnabled: function () {
	    return ReactEventListener._enabled;
	  },
	
	  /**
	   * Traps top-level events by using event bubbling.
	   *
	   * @param {string} topLevelType Record from `EventConstants`.
	   * @param {string} handlerBaseName Event name (e.g. "click").
	   * @param {object} element Element on which to attach listener.
	   * @return {?object} An object with a remove function which will forcefully
	   *                  remove the listener.
	   * @internal
	   */
	  trapBubbledEvent: function (topLevelType, handlerBaseName, element) {
	    if (!element) {
	      return null;
	    }
	    return EventListener.listen(element, handlerBaseName, ReactEventListener.dispatchEvent.bind(null, topLevelType));
	  },
	
	  /**
	   * Traps a top-level event by using event capturing.
	   *
	   * @param {string} topLevelType Record from `EventConstants`.
	   * @param {string} handlerBaseName Event name (e.g. "click").
	   * @param {object} element Element on which to attach listener.
	   * @return {?object} An object with a remove function which will forcefully
	   *                  remove the listener.
	   * @internal
	   */
	  trapCapturedEvent: function (topLevelType, handlerBaseName, element) {
	    if (!element) {
	      return null;
	    }
	    return EventListener.capture(element, handlerBaseName, ReactEventListener.dispatchEvent.bind(null, topLevelType));
	  },
	
	  monitorScrollValue: function (refresh) {
	    var callback = scrollValueMonitor.bind(null, refresh);
	    EventListener.listen(window, 'scroll', callback);
	  },
	
	  dispatchEvent: function (topLevelType, nativeEvent) {
	    if (!ReactEventListener._enabled) {
	      return;
	    }
	
	    var bookKeeping = TopLevelCallbackBookKeeping.getPooled(topLevelType, nativeEvent);
	    try {
	      // Event queue being processed in the same cycle allows
	      // `preventDefault`.
	      ReactUpdates.batchedUpdates(handleTopLevelImpl, bookKeeping);
	    } finally {
	      TopLevelCallbackBookKeeping.release(bookKeeping);
	    }
	  }
	};
	
	module.exports = ReactEventListener;

/***/ }),
/* 174 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * @typechecks
	 */
	
	var emptyFunction = __webpack_require__(32);
	
	/**
	 * Upstream version of event listener. Does not take into account specific
	 * nature of platform.
	 */
	var EventListener = {
	  /**
	   * Listen to DOM events during the bubble phase.
	   *
	   * @param {DOMEventTarget} target DOM element to register listener on.
	   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.
	   * @param {function} callback Callback function.
	   * @return {object} Object with a `remove` method.
	   */
	  listen: function listen(target, eventType, callback) {
	    if (target.addEventListener) {
	      target.addEventListener(eventType, callback, false);
	      return {
	        remove: function remove() {
	          target.removeEventListener(eventType, callback, false);
	        }
	      };
	    } else if (target.attachEvent) {
	      target.attachEvent('on' + eventType, callback);
	      return {
	        remove: function remove() {
	          target.detachEvent('on' + eventType, callback);
	        }
	      };
	    }
	  },
	
	  /**
	   * Listen to DOM events during the capture phase.
	   *
	   * @param {DOMEventTarget} target DOM element to register listener on.
	   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.
	   * @param {function} callback Callback function.
	   * @return {object} Object with a `remove` method.
	   */
	  capture: function capture(target, eventType, callback) {
	    if (target.addEventListener) {
	      target.addEventListener(eventType, callback, true);
	      return {
	        remove: function remove() {
	          target.removeEventListener(eventType, callback, true);
	        }
	      };
	    } else {
	      if (true) {
	        console.error('Attempted to listen to events during the capture phase on a ' + 'browser that does not support the capture phase. Your application ' + 'will not receive some events.');
	      }
	      return {
	        remove: emptyFunction
	      };
	    }
	  },
	
	  registerDefault: function registerDefault() {}
	};
	
	module.exports = EventListener;

/***/ }),
/* 175 */
/***/ (function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * @typechecks
	 */
	
	'use strict';
	
	/**
	 * Gets the scroll position of the supplied element or window.
	 *
	 * The return values are unbounded, unlike `getScrollPosition`. This means they
	 * may be negative or exceed the element boundaries (which is possible using
	 * inertial scrolling).
	 *
	 * @param {DOMWindow|DOMElement} scrollable
	 * @return {object} Map with `x` and `y` keys.
	 */
	
	function getUnboundedScrollPosition(scrollable) {
	  if (scrollable.Window && scrollable instanceof scrollable.Window) {
	    return {
	      x: scrollable.pageXOffset || scrollable.document.documentElement.scrollLeft,
	      y: scrollable.pageYOffset || scrollable.document.documentElement.scrollTop
	    };
	  }
	  return {
	    x: scrollable.scrollLeft,
	    y: scrollable.scrollTop
	  };
	}
	
	module.exports = getUnboundedScrollPosition;

/***/ }),
/* 176 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */
	
	'use strict';
	
	var DOMProperty = __webpack_require__(67);
	var EventPluginHub = __webpack_require__(73);
	var EventPluginUtils = __webpack_require__(75);
	var ReactComponentEnvironment = __webpack_require__(147);
	var ReactEmptyComponent = __webpack_require__(157);
	var ReactBrowserEventEmitter = __webpack_require__(137);
	var ReactHostComponent = __webpack_require__(158);
	var ReactUpdates = __webpack_require__(87);
	
	var ReactInjection = {
	  Component: ReactComponentEnvironment.injection,
	  DOMProperty: DOMProperty.injection,
	  EmptyComponent: ReactEmptyComponent.injection,
	  EventPluginHub: EventPluginHub.injection,
	  EventPluginUtils: EventPluginUtils.injection,
	  EventEmitter: ReactBrowserEventEmitter.injection,
	  HostComponent: ReactHostComponent.injection,
	  Updates: ReactUpdates.injection
	};
	
	module.exports = ReactInjection;

/***/ }),
/* 177 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */
	
	'use strict';
	
	var _assign = __webpack_require__(27);
	
	var CallbackQueue = __webpack_require__(88);
	var PooledClass = __webpack_require__(81);
	var ReactBrowserEventEmitter = __webpack_require__(137);
	var ReactInputSelection = __webpack_require__(178);
	var ReactInstrumentation = __webpack_require__(93);
	var Transaction = __webpack_require__(99);
	var ReactUpdateQueue = __webpack_require__(167);
	
	/**
	 * Ensures that, when possible, the selection range (currently selected text
	 * input) is not disturbed by performing the transaction.
	 */
	var SELECTION_RESTORATION = {
	  /**
	   * @return {Selection} Selection information.
	   */
	  initialize: ReactInputSelection.getSelectionInformation,
	  /**
	   * @param {Selection} sel Selection information returned from `initialize`.
	   */
	  close: ReactInputSelection.restoreSelection
	};
	
	/**
	 * Suppresses events (blur/focus) that could be inadvertently dispatched due to
	 * high level DOM manipulations (like temporarily removing a text input from the
	 * DOM).
	 */
	var EVENT_SUPPRESSION = {
	  /**
	   * @return {boolean} The enabled status of `ReactBrowserEventEmitter` before
	   * the reconciliation.
	   */
	  initialize: function () {
	    var currentlyEnabled = ReactBrowserEventEmitter.isEnabled();
	    ReactBrowserEventEmitter.setEnabled(false);
	    return currentlyEnabled;
	  },
	
	  /**
	   * @param {boolean} previouslyEnabled Enabled status of
	   *   `ReactBrowserEventEmitter` before the reconciliation occurred. `close`
	   *   restores the previous value.
	   */
	  close: function (previouslyEnabled) {
	    ReactBrowserEventEmitter.setEnabled(previouslyEnabled);
	  }
	};
	
	/**
	 * Provides a queue for collecting `componentDidMount` and
	 * `componentDidUpdate` callbacks during the transaction.
	 */
	var ON_DOM_READY_QUEUEING = {
	  /**
	   * Initializes the internal `onDOMReady` queue.
	   */
	  initialize: function () {
	    this.reactMountReady.reset();
	  },
	
	  /**
	   * After DOM is flushed, invoke all registered `onDOMReady` callbacks.
	   */
	  close: function () {
	    this.reactMountReady.notifyAll();
	  }
	};
	
	/**
	 * Executed within the scope of the `Transaction` instance. Consider these as
	 * being member methods, but with an implied ordering while being isolated from
	 * each other.
	 */
	var TRANSACTION_WRAPPERS = [SELECTION_RESTORATION, EVENT_SUPPRESSION, ON_DOM_READY_QUEUEING];
	
	if (true) {
	  TRANSACTION_WRAPPERS.push({
	    initialize: ReactInstrumentation.debugTool.onBeginFlush,
	    close: ReactInstrumentation.debugTool.onEndFlush
	  });
	}
	
	/**
	 * Currently:
	 * - The order that these are listed in the transaction is critical:
	 * - Suppresses events.
	 * - Restores selection range.
	 *
	 * Future:
	 * - Restore document/overflow scroll positions that were unintentionally
	 *   modified via DOM insertions above the top viewport boundary.
	 * - Implement/integrate with customized constraint based layout system and keep
	 *   track of which dimensions must be remeasured.
	 *
	 * @class ReactReconcileTransaction
	 */
	function ReactReconcileTransaction(useCreateElement) {
	  this.reinitializeTransaction();
	  // Only server-side rendering really needs this option (see
	  // `ReactServerRendering`), but server-side uses
	  // `ReactServerRenderingTransaction` instead. This option is here so that it's
	  // accessible and defaults to false when `ReactDOMComponent` and
	  // `ReactDOMTextComponent` checks it in `mountComponent`.`
	  this.renderToStaticMarkup = false;
	  this.reactMountReady = CallbackQueue.getPooled(null);
	  this.useCreateElement = useCreateElement;
	}
	
	var Mixin = {
	  /**
	   * @see Transaction
	   * @abstract
	   * @final
	   * @return {array<object>} List of operation wrap procedures.
	   *   TODO: convert to array<TransactionWrapper>
	   */
	  getTransactionWrappers: function () {
	    return TRANSACTION_WRAPPERS;
	  },
	
	  /**
	   * @return {object} The queue to collect `onDOMReady` callbacks with.
	   */
	  getReactMountReady: function () {
	    return this.reactMountReady;
	  },
	
	  /**
	   * @return {object} The queue to collect React async events.
	   */
	  getUpdateQueue: function () {
	    return ReactUpdateQueue;
	  },
	
	  /**
	   * Save current transaction state -- if the return value from this method is
	   * passed to `rollback`, the transaction will be reset to that state.
	   */
	  checkpoint: function () {
	    // reactMountReady is the our only stateful wrapper
	    return this.reactMountReady.checkpoint();
	  },
	
	  rollback: function (checkpoint) {
	    this.reactMountReady.rollback(checkpoint);
	  },
	
	  /**
	   * `PooledClass` looks for this, and will invoke this before allowing this
	   * instance to be reused.
	   */
	  destructor: function () {
	    CallbackQueue.release(this.reactMountReady);
	    this.reactMountReady = null;
	  }
	};
	
	_assign(ReactReconcileTransaction.prototype, Transaction, Mixin);
	
	PooledClass.addPoolingTo(ReactReconcileTransaction);
	
	module.exports = ReactReconcileTransaction;

/***/ }),
/* 178 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */
	
	'use strict';
	
	var ReactDOMSelection = __webpack_require__(179);
	
	var containsNode = __webpack_require__(181);
	var focusNode = __webpack_require__(126);
	var getActiveElement = __webpack_require__(184);
	
	function isInDocument(node) {
	  return containsNode(document.documentElement, node);
	}
	
	/**
	 * @ReactInputSelection: React input selection module. Based on Selection.js,
	 * but modified to be suitable for react and has a couple of bug fixes (doesn't
	 * assume buttons have range selections allowed).
	 * Input selection module for React.
	 */
	var ReactInputSelection = {
	  hasSelectionCapabilities: function (elem) {
	    var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();
	    return nodeName && (nodeName === 'input' && elem.type === 'text' || nodeName === 'textarea' || elem.contentEditable === 'true');
	  },
	
	  getSelectionInformation: function () {
	    var focusedElem = getActiveElement();
	    return {
	      focusedElem: focusedElem,
	      selectionRange: ReactInputSelection.hasSelectionCapabilities(focusedElem) ? ReactInputSelection.getSelection(focusedElem) : null
	    };
	  },
	
	  /**
	   * @restoreSelection: If any selection information was potentially lost,
	   * restore it. This is useful when performing operations that could remove dom
	   * nodes and place them back in, resulting in focus being lost.
	   */
	  restoreSelection: function (priorSelectionInformation) {
	    var curFocusedElem = getActiveElement();
	    var priorFocusedElem = priorSelectionInformation.focusedElem;
	    var priorSelectionRange = priorSelectionInformation.selectionRange;
	    if (curFocusedElem !== priorFocusedElem && isInDocument(priorFocusedElem)) {
	      if (ReactInputSelection.hasSelectionCapabilities(priorFocusedElem)) {
	        ReactInputSelection.setSelection(priorFocusedElem, priorSelectionRange);
	      }
	      focusNode(priorFocusedElem);
	    }
	  },
	
	  /**
	   * @getSelection: Gets the selection bounds of a focused textarea, input or
	   * contentEditable node.
	   * -@input: Look up selection bounds of this input
	   * -@return {start: selectionStart, end: selectionEnd}
	   */
	  getSelection: function (input) {
	    var selection;
	
	    if ('selectionStart' in input) {
	      // Modern browser with input or textarea.
	      selection = {
	        start: input.selectionStart,
	        end: input.selectionEnd
	      };
	    } else if (document.selection && input.nodeName && input.nodeName.toLowerCase() === 'input') {
	      // IE8 input.
	      var range = document.selection.createRange();
	      // There can only be one selection per document in IE, so it must
	      // be in our element.
	      if (range.parentElement() === input) {
	        selection = {
	          start: -range.moveStart('character', -input.value.length),
	          end: -range.moveEnd('character', -input.value.length)
	        };
	      }
	    } else {
	      // Content editable or old IE textarea.
	      selection = ReactDOMSelection.getOffsets(input);
	    }
	
	    return selection || { start: 0, end: 0 };
	  },
	
	  /**
	   * @setSelection: Sets the selection bounds of a textarea or input and focuses
	   * the input.
	   * -@input     Set selection bounds of this input or textarea
	   * -@offsets   Object of same form that is returned from get*
	   */
	  setSelection: function (input, offsets) {
	    var start = offsets.start;
	    var end = offsets.end;
	    if (end === undefined) {
	      end = start;
	    }
	
	    if ('selectionStart' in input) {
	      input.selectionStart = start;
	      input.selectionEnd = Math.min(end, input.value.length);
	    } else if (document.selection && input.nodeName && input.nodeName.toLowerCase() === 'input') {
	      var range = input.createTextRange();
	      range.collapse(true);
	      range.moveStart('character', start);
	      range.moveEnd('character', end - start);
	      range.select();
	    } else {
	      ReactDOMSelection.setOffsets(input, offsets);
	    }
	  }
	};
	
	module.exports = ReactInputSelection;

/***/ }),
/* 179 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */
	
	'use strict';
	
	var ExecutionEnvironment = __webpack_require__(79);
	
	var getNodeForCharacterOffset = __webpack_require__(180);
	var getTextContentAccessor = __webpack_require__(82);
	
	/**
	 * While `isCollapsed` is available on the Selection object and `collapsed`
	 * is available on the Range object, IE11 sometimes gets them wrong.
	 * If the anchor/focus nodes and offsets are the same, the range is collapsed.
	 */
	function isCollapsed(anchorNode, anchorOffset, focusNode, focusOffset) {
	  return anchorNode === focusNode && anchorOffset === focusOffset;
	}
	
	/**
	 * Get the appropriate anchor and focus node/offset pairs for IE.
	 *
	 * The catch here is that IE's selection API doesn't provide information
	 * about whether the selection is forward or backward, so we have to
	 * behave as though it's always forward.
	 *
	 * IE text differs from modern selection in that it behaves as though
	 * block elements end with a new line. This means character offsets will
	 * differ between the two APIs.
	 *
	 * @param {DOMElement} node
	 * @return {object}
	 */
	function getIEOffsets(node) {
	  var selection = document.selection;
	  var selectedRange = selection.createRange();
	  var selectedLength = selectedRange.text.length;
	
	  // Duplicate selection so we can move range without breaking user selection.
	  var fromStart = selectedRange.duplicate();
	  fromStart.moveToElementText(node);
	  fromStart.setEndPoint('EndToStart', selectedRange);
	
	  var startOffset = fromStart.text.length;
	  var endOffset = startOffset + selectedLength;
	
	  return {
	    start: startOffset,
	    end: endOffset
	  };
	}
	
	/**
	 * @param {DOMElement} node
	 * @return {?object}
	 */
	function getModernOffsets(node) {
	  var selection = window.getSelection && window.getSelection();
	
	  if (!selection || selection.rangeCount === 0) {
	    return null;
	  }
	
	  var anchorNode = selection.anchorNode;
	  var anchorOffset = selection.anchorOffset;
	  var focusNode = selection.focusNode;
	  var focusOffset = selection.focusOffset;
	
	  var currentRange = selection.getRangeAt(0);
	
	  // In Firefox, range.startContainer and range.endContainer can be "anonymous
	  // divs", e.g. the up/down buttons on an <input type="number">. Anonymous
	  // divs do not seem to expose properties, triggering a "Permission denied
	  // error" if any of its properties are accessed. The only seemingly possible
	  // way to avoid erroring is to access a property that typically works for
	  // non-anonymous divs and catch any error that may otherwise arise. See
	  // https://bugzilla.mozilla.org/show_bug.cgi?id=208427
	  try {
	    /* eslint-disable no-unused-expressions */
	    currentRange.startContainer.nodeType;
	    currentRange.endContainer.nodeType;
	    /* eslint-enable no-unused-expressions */
	  } catch (e) {
	    return null;
	  }
	
	  // If the node and offset values are the same, the selection is collapsed.
	  // `Selection.isCollapsed` is available natively, but IE sometimes gets
	  // this value wrong.
	  var isSelectionCollapsed = isCollapsed(selection.anchorNode, selection.anchorOffset, selection.focusNode, selection.focusOffset);
	
	  var rangeLength = isSelectionCollapsed ? 0 : currentRange.toString().length;
	
	  var tempRange = currentRange.cloneRange();
	  tempRange.selectNodeContents(node);
	  tempRange.setEnd(currentRange.startContainer, currentRange.startOffset);
	
	  var isTempRangeCollapsed = isCollapsed(tempRange.startContainer, tempRange.startOffset, tempRange.endContainer, tempRange.endOffset);
	
	  var start = isTempRangeCollapsed ? 0 : tempRange.toString().length;
	  var end = start + rangeLength;
	
	  // Detect whether the selection is backward.
	  var detectionRange = document.createRange();
	  detectionRange.setStart(anchorNode, anchorOffset);
	  detectionRange.setEnd(focusNode, focusOffset);
	  var isBackward = detectionRange.collapsed;
	
	  return {
	    start: isBackward ? end : start,
	    end: isBackward ? start : end
	  };
	}
	
	/**
	 * @param {DOMElement|DOMTextNode} node
	 * @param {object} offsets
	 */
	function setIEOffsets(node, offsets) {
	  var range = document.selection.createRange().duplicate();
	  var start, end;
	
	  if (offsets.end === undefined) {
	    start = offsets.start;
	    end = start;
	  } else if (offsets.start > offsets.end) {
	    start = offsets.end;
	    end = offsets.start;
	  } else {
	    start = offsets.start;
	    end = offsets.end;
	  }
	
	  range.moveToElementText(node);
	  range.moveStart('character', start);
	  range.setEndPoint('EndToStart', range);
	  range.moveEnd('character', end - start);
	  range.select();
	}
	
	/**
	 * In modern non-IE browsers, we can support both forward and backward
	 * selections.
	 *
	 * Note: IE10+ supports the Selection object, but it does not support
	 * the `extend` method, which means that even in modern IE, it's not possible
	 * to programmatically create a backward selection. Thus, for all IE
	 * versions, we use the old IE API to create our selections.
	 *
	 * @param {DOMElement|DOMTextNode} node
	 * @param {object} offsets
	 */
	function setModernOffsets(node, offsets) {
	  if (!window.getSelection) {
	    return;
	  }
	
	  var selection = window.getSelection();
	  var length = node[getTextContentAccessor()].length;
	  var start = Math.min(offsets.start, length);
	  var end = offsets.end === undefined ? start : Math.min(offsets.end, length);
	
	  // IE 11 uses modern selection, but doesn't support the extend method.
	  // Flip backward selections, so we can set with a single range.
	  if (!selection.extend && start > end) {
	    var temp = end;
	    end = start;
	    start = temp;
	  }
	
	  var startMarker = getNodeForCharacterOffset(node, start);
	  var endMarker = getNodeForCharacterOffset(node, end);
	
	  if (startMarker && endMarker) {
	    var range = document.createRange();
	    range.setStart(startMarker.node, startMarker.offset);
	    selection.removeAllRanges();
	
	    if (start > end) {
	      selection.addRange(range);
	      selection.extend(endMarker.node, endMarker.offset);
	    } else {
	      range.setEnd(endMarker.node, endMarker.offset);
	      selection.addRange(range);
	    }
	  }
	}
	
	var useIEOffsets = ExecutionEnvironment.canUseDOM && 'selection' in document && !('getSelection' in window);
	
	var ReactDOMSelection = {
	  /**
	   * @param {DOMElement} node
	   */
	  getOffsets: useIEOffsets ? getIEOffsets : getModernOffsets,
	
	  /**
	   * @param {DOMElement|DOMTextNode} node
	   * @param {object} offsets
	   */
	  setOffsets: useIEOffsets ? setIEOffsets : setModernOffsets
	};
	
	module.exports = ReactDOMSelection;

/***/ }),
/* 180 */
/***/ (function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */
	
	'use strict';
	
	/**
	 * Given any node return the first leaf node without children.
	 *
	 * @param {DOMElement|DOMTextNode} node
	 * @return {DOMElement|DOMTextNode}
	 */
	
	function getLeafNode(node) {
	  while (node && node.firstChild) {
	    node = node.firstChild;
	  }
	  return node;
	}
	
	/**
	 * Get the next sibling within a container. This will walk up the
	 * DOM if a node's siblings have been exhausted.
	 *
	 * @param {DOMElement|DOMTextNode} node
	 * @return {?DOMElement|DOMTextNode}
	 */
	function getSiblingNode(node) {
	  while (node) {
	    if (node.nextSibling) {
	      return node.nextSibling;
	    }
	    node = node.parentNode;
	  }
	}
	
	/**
	 * Get object describing the nodes which contain characters at offset.
	 *
	 * @param {DOMElement|DOMTextNode} root
	 * @param {number} offset
	 * @return {?object}
	 */
	function getNodeForCharacterOffset(root, offset) {
	  var node = getLeafNode(root);
	  var nodeStart = 0;
	  var nodeEnd = 0;
	
	  while (node) {
	    if (node.nodeType === 3) {
	      nodeEnd = nodeStart + node.textContent.length;
	
	      if (nodeStart <= offset && nodeEnd >= offset) {
	        return {
	          node: node,
	          offset: offset - nodeStart
	        };
	      }
	
	      nodeStart = nodeEnd;
	    }
	
	    node = getLeafNode(getSiblingNode(node));
	  }
	}
	
	module.exports = getNodeForCharacterOffset;

/***/ }),
/* 181 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * 
	 */
	
	var isTextNode = __webpack_require__(182);
	
	/*eslint-disable no-bitwise */
	
	/**
	 * Checks if a given DOM node contains or is another DOM node.
	 */
	function containsNode(outerNode, innerNode) {
	  if (!outerNode || !innerNode) {
	    return false;
	  } else if (outerNode === innerNode) {
	    return true;
	  } else if (isTextNode(outerNode)) {
	    return false;
	  } else if (isTextNode(innerNode)) {
	    return containsNode(outerNode, innerNode.parentNode);
	  } else if ('contains' in outerNode) {
	    return outerNode.contains(innerNode);
	  } else if (outerNode.compareDocumentPosition) {
	    return !!(outerNode.compareDocumentPosition(innerNode) & 16);
	  } else {
	    return false;
	  }
	}
	
	module.exports = containsNode;

/***/ }),
/* 182 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * @typechecks
	 */
	
	var isNode = __webpack_require__(183);
	
	/**
	 * @param {*} object The object to check.
	 * @return {boolean} Whether or not the object is a DOM text node.
	 */
	function isTextNode(object) {
	  return isNode(object) && object.nodeType == 3;
	}
	
	module.exports = isTextNode;

/***/ }),
/* 183 */
/***/ (function(module, exports) {

	'use strict';
	
	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * @typechecks
	 */
	
	/**
	 * @param {*} object The object to check.
	 * @return {boolean} Whether or not the object is a DOM node.
	 */
	function isNode(object) {
	  var doc = object ? object.ownerDocument || object : document;
	  var defaultView = doc.defaultView || window;
	  return !!(object && (typeof defaultView.Node === 'function' ? object instanceof defaultView.Node : typeof object === 'object' && typeof object.nodeType === 'number' && typeof object.nodeName === 'string'));
	}
	
	module.exports = isNode;

/***/ }),
/* 184 */
/***/ (function(module, exports) {

	'use strict';
	
	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * @typechecks
	 */
	
	/* eslint-disable fb-www/typeof-undefined */
	
	/**
	 * Same as document.activeElement but wraps in a try-catch block. In IE it is
	 * not safe to call document.activeElement if there is nothing focused.
	 *
	 * The activeElement will be null only if the document or document body is not
	 * yet defined.
	 *
	 * @param {?DOMDocument} doc Defaults to current document.
	 * @return {?DOMElement}
	 */
	function getActiveElement(doc) /*?DOMElement*/{
	  doc = doc || (typeof document !== 'undefined' ? document : undefined);
	  if (typeof doc === 'undefined') {
	    return null;
	  }
	  try {
	    return doc.activeElement || doc.body;
	  } catch (e) {
	    return doc.body;
	  }
	}
	
	module.exports = getActiveElement;

/***/ }),
/* 185 */
/***/ (function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */
	
	'use strict';
	
	var NS = {
	  xlink: 'http://www.w3.org/1999/xlink',
	  xml: 'http://www.w3.org/XML/1998/namespace'
	};
	
	// We use attributes for everything SVG so let's avoid some duplication and run
	// code instead.
	// The following are all specified in the HTML config already so we exclude here.
	// - class (as className)
	// - color
	// - height
	// - id
	// - lang
	// - max
	// - media
	// - method
	// - min
	// - name
	// - style
	// - target
	// - type
	// - width
	var ATTRS = {
	  accentHeight: 'accent-height',
	  accumulate: 0,
	  additive: 0,
	  alignmentBaseline: 'alignment-baseline',
	  allowReorder: 'allowReorder',
	  alphabetic: 0,
	  amplitude: 0,
	  arabicForm: 'arabic-form',
	  ascent: 0,
	  attributeName: 'attributeName',
	  attributeType: 'attributeType',
	  autoReverse: 'autoReverse',
	  azimuth: 0,
	  baseFrequency: 'baseFrequency',
	  baseProfile: 'baseProfile',
	  baselineShift: 'baseline-shift',
	  bbox: 0,
	  begin: 0,
	  bias: 0,
	  by: 0,
	  calcMode: 'calcMode',
	  capHeight: 'cap-height',
	  clip: 0,
	  clipPath: 'clip-path',
	  clipRule: 'clip-rule',
	  clipPathUnits: 'clipPathUnits',
	  colorInterpolation: 'color-interpolation',
	  colorInterpolationFilters: 'color-interpolation-filters',
	  colorProfile: 'color-profile',
	  colorRendering: 'color-rendering',
	  contentScriptType: 'contentScriptType',
	  contentStyleType: 'contentStyleType',
	  cursor: 0,
	  cx: 0,
	  cy: 0,
	  d: 0,
	  decelerate: 0,
	  descent: 0,
	  diffuseConstant: 'diffuseConstant',
	  direction: 0,
	  display: 0,
	  divisor: 0,
	  dominantBaseline: 'dominant-baseline',
	  dur: 0,
	  dx: 0,
	  dy: 0,
	  edgeMode: 'edgeMode',
	  elevation: 0,
	  enableBackground: 'enable-background',
	  end: 0,
	  exponent: 0,
	  externalResourcesRequired: 'externalResourcesRequired',
	  fill: 0,
	  fillOpacity: 'fill-opacity',
	  fillRule: 'fill-rule',
	  filter: 0,
	  filterRes: 'filterRes',
	  filterUnits: 'filterUnits',
	  floodColor: 'flood-color',
	  floodOpacity: 'flood-opacity',
	  focusable: 0,
	  fontFamily: 'font-family',
	  fontSize: 'font-size',
	  fontSizeAdjust: 'font-size-adjust',
	  fontStretch: 'font-stretch',
	  fontStyle: 'font-style',
	  fontVariant: 'font-variant',
	  fontWeight: 'font-weight',
	  format: 0,
	  from: 0,
	  fx: 0,
	  fy: 0,
	  g1: 0,
	  g2: 0,
	  glyphName: 'glyph-name',
	  glyphOrientationHorizontal: 'glyph-orientation-horizontal',
	  glyphOrientationVertical: 'glyph-orientation-vertical',
	  glyphRef: 'glyphRef',
	  gradientTransform: 'gradientTransform',
	  gradientUnits: 'gradientUnits',
	  hanging: 0,
	  horizAdvX: 'horiz-adv-x',
	  horizOriginX: 'horiz-origin-x',
	  ideographic: 0,
	  imageRendering: 'image-rendering',
	  'in': 0,
	  in2: 0,
	  intercept: 0,
	  k: 0,
	  k1: 0,
	  k2: 0,
	  k3: 0,
	  k4: 0,
	  kernelMatrix: 'kernelMatrix',
	  kernelUnitLength: 'kernelUnitLength',
	  kerning: 0,
	  keyPoints: 'keyPoints',
	  keySplines: 'keySplines',
	  keyTimes: 'keyTimes',
	  lengthAdjust: 'lengthAdjust',
	  letterSpacing: 'letter-spacing',
	  lightingColor: 'lighting-color',
	  limitingConeAngle: 'limitingConeAngle',
	  local: 0,
	  markerEnd: 'marker-end',
	  markerMid: 'marker-mid',
	  markerStart: 'marker-start',
	  markerHeight: 'markerHeight',
	  markerUnits: 'markerUnits',
	  markerWidth: 'markerWidth',
	  mask: 0,
	  maskContentUnits: 'maskContentUnits',
	  maskUnits: 'maskUnits',
	  mathematical: 0,
	  mode: 0,
	  numOctaves: 'numOctaves',
	  offset: 0,
	  opacity: 0,
	  operator: 0,
	  order: 0,
	  orient: 0,
	  orientation: 0,
	  origin: 0,
	  overflow: 0,
	  overlinePosition: 'overline-position',
	  overlineThickness: 'overline-thickness',
	  paintOrder: 'paint-order',
	  panose1: 'panose-1',
	  pathLength: 'pathLength',
	  patternContentUnits: 'patternContentUnits',
	  patternTransform: 'patternTransform',
	  patternUnits: 'patternUnits',
	  pointerEvents: 'pointer-events',
	  points: 0,
	  pointsAtX: 'pointsAtX',
	  pointsAtY: 'pointsAtY',
	  pointsAtZ: 'pointsAtZ',
	  preserveAlpha: 'preserveAlpha',
	  preserveAspectRatio: 'preserveAspectRatio',
	  primitiveUnits: 'primitiveUnits',
	  r: 0,
	  radius: 0,
	  refX: 'refX',
	  refY: 'refY',
	  renderingIntent: 'rendering-intent',
	  repeatCount: 'repeatCount',
	  repeatDur: 'repeatDur',
	  requiredExtensions: 'requiredExtensions',
	  requiredFeatures: 'requiredFeatures',
	  restart: 0,
	  result: 0,
	  rotate: 0,
	  rx: 0,
	  ry: 0,
	  scale: 0,
	  seed: 0,
	  shapeRendering: 'shape-rendering',
	  slope: 0,
	  spacing: 0,
	  specularConstant: 'specularConstant',
	  specularExponent: 'specularExponent',
	  speed: 0,
	  spreadMethod: 'spreadMethod',
	  startOffset: 'startOffset',
	  stdDeviation: 'stdDeviation',
	  stemh: 0,
	  stemv: 0,
	  stitchTiles: 'stitchTiles',
	  stopColor: 'stop-color',
	  stopOpacity: 'stop-opacity',
	  strikethroughPosition: 'strikethrough-position',
	  strikethroughThickness: 'strikethrough-thickness',
	  string: 0,
	  stroke: 0,
	  strokeDasharray: 'stroke-dasharray',
	  strokeDashoffset: 'stroke-dashoffset',
	  strokeLinecap: 'stroke-linecap',
	  strokeLinejoin: 'stroke-linejoin',
	  strokeMiterlimit: 'stroke-miterlimit',
	  strokeOpacity: 'stroke-opacity',
	  strokeWidth: 'stroke-width',
	  surfaceScale: 'surfaceScale',
	  systemLanguage: 'systemLanguage',
	  tableValues: 'tableValues',
	  targetX: 'targetX',
	  targetY: 'targetY',
	  textAnchor: 'text-anchor',
	  textDecoration: 'text-decoration',
	  textRendering: 'text-rendering',
	  textLength: 'textLength',
	  to: 0,
	  transform: 0,
	  u1: 0,
	  u2: 0,
	  underlinePosition: 'underline-position',
	  underlineThickness: 'underline-thickness',
	  unicode: 0,
	  unicodeBidi: 'unicode-bidi',
	  unicodeRange: 'unicode-range',
	  unitsPerEm: 'units-per-em',
	  vAlphabetic: 'v-alphabetic',
	  vHanging: 'v-hanging',
	  vIdeographic: 'v-ideographic',
	  vMathematical: 'v-mathematical',
	  values: 0,
	  vectorEffect: 'vector-effect',
	  version: 0,
	  vertAdvY: 'vert-adv-y',
	  vertOriginX: 'vert-origin-x',
	  vertOriginY: 'vert-origin-y',
	  viewBox: 'viewBox',
	  viewTarget: 'viewTarget',
	  visibility: 0,
	  widths: 0,
	  wordSpacing: 'word-spacing',
	  writingMode: 'writing-mode',
	  x: 0,
	  xHeight: 'x-height',
	  x1: 0,
	  x2: 0,
	  xChannelSelector: 'xChannelSelector',
	  xlinkActuate: 'xlink:actuate',
	  xlinkArcrole: 'xlink:arcrole',
	  xlinkHref: 'xlink:href',
	  xlinkRole: 'xlink:role',
	  xlinkShow: 'xlink:show',
	  xlinkTitle: 'xlink:title',
	  xlinkType: 'xlink:type',
	  xmlBase: 'xml:base',
	  xmlns: 0,
	  xmlnsXlink: 'xmlns:xlink',
	  xmlLang: 'xml:lang',
	  xmlSpace: 'xml:space',
	  y: 0,
	  y1: 0,
	  y2: 0,
	  yChannelSelector: 'yChannelSelector',
	  z: 0,
	  zoomAndPan: 'zoomAndPan'
	};
	
	var SVGDOMPropertyConfig = {
	  Properties: {},
	  DOMAttributeNamespaces: {
	    xlinkActuate: NS.xlink,
	    xlinkArcrole: NS.xlink,
	    xlinkHref: NS.xlink,
	    xlinkRole: NS.xlink,
	    xlinkShow: NS.xlink,
	    xlinkTitle: NS.xlink,
	    xlinkType: NS.xlink,
	    xmlBase: NS.xml,
	    xmlLang: NS.xml,
	    xmlSpace: NS.xml
	  },
	  DOMAttributeNames: {}
	};
	
	Object.keys(ATTRS).forEach(function (key) {
	  SVGDOMPropertyConfig.Properties[key] = 0;
	  if (ATTRS[key]) {
	    SVGDOMPropertyConfig.DOMAttributeNames[key] = ATTRS[key];
	  }
	});
	
	module.exports = SVGDOMPropertyConfig;

/***/ }),
/* 186 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */
	
	'use strict';
	
	var EventPropagators = __webpack_require__(72);
	var ExecutionEnvironment = __webpack_require__(79);
	var ReactDOMComponentTree = __webpack_require__(65);
	var ReactInputSelection = __webpack_require__(178);
	var SyntheticEvent = __webpack_require__(84);
	
	var getActiveElement = __webpack_require__(184);
	var isTextInputElement = __webpack_require__(103);
	var shallowEqual = __webpack_require__(155);
	
	var skipSelectionChangeEvent = ExecutionEnvironment.canUseDOM && 'documentMode' in document && document.documentMode <= 11;
	
	var eventTypes = {
	  select: {
	    phasedRegistrationNames: {
	      bubbled: 'onSelect',
	      captured: 'onSelectCapture'
	    },
	    dependencies: ['topBlur', 'topContextMenu', 'topFocus', 'topKeyDown', 'topKeyUp', 'topMouseDown', 'topMouseUp', 'topSelectionChange']
	  }
	};
	
	var activeElement = null;
	var activeElementInst = null;
	var lastSelection = null;
	var mouseDown = false;
	
	// Track whether a listener exists for this plugin. If none exist, we do
	// not extract events. See #3639.
	var hasListener = false;
	
	/**
	 * Get an object which is a unique representation of the current selection.
	 *
	 * The return value will not be consistent across nodes or browsers, but
	 * two identical selections on the same node will return identical objects.
	 *
	 * @param {DOMElement} node
	 * @return {object}
	 */
	function getSelection(node) {
	  if ('selectionStart' in node && ReactInputSelection.hasSelectionCapabilities(node)) {
	    return {
	      start: node.selectionStart,
	      end: node.selectionEnd
	    };
	  } else if (window.getSelection) {
	    var selection = window.getSelection();
	    return {
	      anchorNode: selection.anchorNode,
	      anchorOffset: selection.anchorOffset,
	      focusNode: selection.focusNode,
	      focusOffset: selection.focusOffset
	    };
	  } else if (document.selection) {
	    var range = document.selection.createRange();
	    return {
	      parentElement: range.parentElement(),
	      text: range.text,
	      top: range.boundingTop,
	      left: range.boundingLeft
	    };
	  }
	}
	
	/**
	 * Poll selection to see whether it's changed.
	 *
	 * @param {object} nativeEvent
	 * @return {?SyntheticEvent}
	 */
	function constructSelectEvent(nativeEvent, nativeEventTarget) {
	  // Ensure we have the right element, and that the user is not dragging a
	  // selection (this matches native `select` event behavior). In HTML5, select
	  // fires only on input and textarea thus if there's no focused element we
	  // won't dispatch.
	  if (mouseDown || activeElement == null || activeElement !== getActiveElement()) {
	    return null;
	  }
	
	  // Only fire when selection has actually changed.
	  var currentSelection = getSelection(activeElement);
	  if (!lastSelection || !shallowEqual(lastSelection, currentSelection)) {
	    lastSelection = currentSelection;
	
	    var syntheticEvent = SyntheticEvent.getPooled(eventTypes.select, activeElementInst, nativeEvent, nativeEventTarget);
	
	    syntheticEvent.type = 'select';
	    syntheticEvent.target = activeElement;
	
	    EventPropagators.accumulateTwoPhaseDispatches(syntheticEvent);
	
	    return syntheticEvent;
	  }
	
	  return null;
	}
	
	/**
	 * This plugin creates an `onSelect` event that normalizes select events
	 * across form elements.
	 *
	 * Supported elements are:
	 * - input (see `isTextInputElement`)
	 * - textarea
	 * - contentEditable
	 *
	 * This differs from native browser implementations in the following ways:
	 * - Fires on contentEditable fields as well as inputs.
	 * - Fires for collapsed selection.
	 * - Fires after user input.
	 */
	var SelectEventPlugin = {
	  eventTypes: eventTypes,
	
	  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	    if (!hasListener) {
	      return null;
	    }
	
	    var targetNode = targetInst ? ReactDOMComponentTree.getNodeFromInstance(targetInst) : window;
	
	    switch (topLevelType) {
	      // Track the input node that has focus.
	      case 'topFocus':
	        if (isTextInputElement(targetNode) || targetNode.contentEditable === 'true') {
	          activeElement = targetNode;
	          activeElementInst = targetInst;
	          lastSelection = null;
	        }
	        break;
	      case 'topBlur':
	        activeElement = null;
	        activeElementInst = null;
	        lastSelection = null;
	        break;
	      // Don't fire the event while the user is dragging. This matches the
	      // semantics of the native select event.
	      case 'topMouseDown':
	        mouseDown = true;
	        break;
	      case 'topContextMenu':
	      case 'topMouseUp':
	        mouseDown = false;
	        return constructSelectEvent(nativeEvent, nativeEventTarget);
	      // Chrome and IE fire non-standard event when selection is changed (and
	      // sometimes when it hasn't). IE's event fires out of order with respect
	      // to key and input events on deletion, so we discard it.
	      //
	      // Firefox doesn't support selectionchange, so check selection status
	      // after each key entry. The selection changes after keydown and before
	      // keyup, but we check on keydown as well in the case of holding down a
	      // key, when multiple keydown events are fired but only one keyup is.
	      // This is also our approach for IE handling, for the reason above.
	      case 'topSelectionChange':
	        if (skipSelectionChangeEvent) {
	          break;
	        }
	      // falls through
	      case 'topKeyDown':
	      case 'topKeyUp':
	        return constructSelectEvent(nativeEvent, nativeEventTarget);
	    }
	
	    return null;
	  },
	
	  didPutListener: function (inst, registrationName, listener) {
	    if (registrationName === 'onSelect') {
	      hasListener = true;
	    }
	  }
	};
	
	module.exports = SelectEventPlugin;

/***/ }),
/* 187 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * 
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(66);
	
	var EventListener = __webpack_require__(174);
	var EventPropagators = __webpack_require__(72);
	var ReactDOMComponentTree = __webpack_require__(65);
	var SyntheticAnimationEvent = __webpack_require__(188);
	var SyntheticClipboardEvent = __webpack_require__(189);
	var SyntheticEvent = __webpack_require__(84);
	var SyntheticFocusEvent = __webpack_require__(190);
	var SyntheticKeyboardEvent = __webpack_require__(191);
	var SyntheticMouseEvent = __webpack_require__(106);
	var SyntheticDragEvent = __webpack_require__(194);
	var SyntheticTouchEvent = __webpack_require__(195);
	var SyntheticTransitionEvent = __webpack_require__(196);
	var SyntheticUIEvent = __webpack_require__(107);
	var SyntheticWheelEvent = __webpack_require__(197);
	
	var emptyFunction = __webpack_require__(32);
	var getEventCharCode = __webpack_require__(192);
	var invariant = __webpack_require__(35);
	
	/**
	 * Turns
	 * ['abort', ...]
	 * into
	 * eventTypes = {
	 *   'abort': {
	 *     phasedRegistrationNames: {
	 *       bubbled: 'onAbort',
	 *       captured: 'onAbortCapture',
	 *     },
	 *     dependencies: ['topAbort'],
	 *   },
	 *   ...
	 * };
	 * topLevelEventsToDispatchConfig = {
	 *   'topAbort': { sameConfig }
	 * };
	 */
	var eventTypes = {};
	var topLevelEventsToDispatchConfig = {};
	['abort', 'animationEnd', 'animationIteration', 'animationStart', 'blur', 'canPlay', 'canPlayThrough', 'click', 'contextMenu', 'copy', 'cut', 'doubleClick', 'drag', 'dragEnd', 'dragEnter', 'dragExit', 'dragLeave', 'dragOver', 'dragStart', 'drop', 'durationChange', 'emptied', 'encrypted', 'ended', 'error', 'focus', 'input', 'invalid', 'keyDown', 'keyPress', 'keyUp', 'load', 'loadedData', 'loadedMetadata', 'loadStart', 'mouseDown', 'mouseMove', 'mouseOut', 'mouseOver', 'mouseUp', 'paste', 'pause', 'play', 'playing', 'progress', 'rateChange', 'reset', 'scroll', 'seeked', 'seeking', 'stalled', 'submit', 'suspend', 'timeUpdate', 'touchCancel', 'touchEnd', 'touchMove', 'touchStart', 'transitionEnd', 'volumeChange', 'waiting', 'wheel'].forEach(function (event) {
	  var capitalizedEvent = event[0].toUpperCase() + event.slice(1);
	  var onEvent = 'on' + capitalizedEvent;
	  var topEvent = 'top' + capitalizedEvent;
	
	  var type = {
	    phasedRegistrationNames: {
	      bubbled: onEvent,
	      captured: onEvent + 'Capture'
	    },
	    dependencies: [topEvent]
	  };
	  eventTypes[event] = type;
	  topLevelEventsToDispatchConfig[topEvent] = type;
	});
	
	var onClickListeners = {};
	
	function getDictionaryKey(inst) {
	  // Prevents V8 performance issue:
	  // https://github.com/facebook/react/pull/7232
	  return '.' + inst._rootNodeID;
	}
	
	function isInteractive(tag) {
	  return tag === 'button' || tag === 'input' || tag === 'select' || tag === 'textarea';
	}
	
	var SimpleEventPlugin = {
	  eventTypes: eventTypes,
	
	  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	    var dispatchConfig = topLevelEventsToDispatchConfig[topLevelType];
	    if (!dispatchConfig) {
	      return null;
	    }
	    var EventConstructor;
	    switch (topLevelType) {
	      case 'topAbort':
	      case 'topCanPlay':
	      case 'topCanPlayThrough':
	      case 'topDurationChange':
	      case 'topEmptied':
	      case 'topEncrypted':
	      case 'topEnded':
	      case 'topError':
	      case 'topInput':
	      case 'topInvalid':
	      case 'topLoad':
	      case 'topLoadedData':
	      case 'topLoadedMetadata':
	      case 'topLoadStart':
	      case 'topPause':
	      case 'topPlay':
	      case 'topPlaying':
	      case 'topProgress':
	      case 'topRateChange':
	      case 'topReset':
	      case 'topSeeked':
	      case 'topSeeking':
	      case 'topStalled':
	      case 'topSubmit':
	      case 'topSuspend':
	      case 'topTimeUpdate':
	      case 'topVolumeChange':
	      case 'topWaiting':
	        // HTML Events
	        // @see http://www.w3.org/TR/html5/index.html#events-0
	        EventConstructor = SyntheticEvent;
	        break;
	      case 'topKeyPress':
	        // Firefox creates a keypress event for function keys too. This removes
	        // the unwanted keypress events. Enter is however both printable and
	        // non-printable. One would expect Tab to be as well (but it isn't).
	        if (getEventCharCode(nativeEvent) === 0) {
	          return null;
	        }
	      /* falls through */
	      case 'topKeyDown':
	      case 'topKeyUp':
	        EventConstructor = SyntheticKeyboardEvent;
	        break;
	      case 'topBlur':
	      case 'topFocus':
	        EventConstructor = SyntheticFocusEvent;
	        break;
	      case 'topClick':
	        // Firefox creates a click event on right mouse clicks. This removes the
	        // unwanted click events.
	        if (nativeEvent.button === 2) {
	          return null;
	        }
	      /* falls through */
	      case 'topDoubleClick':
	      case 'topMouseDown':
	      case 'topMouseMove':
	      case 'topMouseUp':
	      // TODO: Disabled elements should not respond to mouse events
	      /* falls through */
	      case 'topMouseOut':
	      case 'topMouseOver':
	      case 'topContextMenu':
	        EventConstructor = SyntheticMouseEvent;
	        break;
	      case 'topDrag':
	      case 'topDragEnd':
	      case 'topDragEnter':
	      case 'topDragExit':
	      case 'topDragLeave':
	      case 'topDragOver':
	      case 'topDragStart':
	      case 'topDrop':
	        EventConstructor = SyntheticDragEvent;
	        break;
	      case 'topTouchCancel':
	      case 'topTouchEnd':
	      case 'topTouchMove':
	      case 'topTouchStart':
	        EventConstructor = SyntheticTouchEvent;
	        break;
	      case 'topAnimationEnd':
	      case 'topAnimationIteration':
	      case 'topAnimationStart':
	        EventConstructor = SyntheticAnimationEvent;
	        break;
	      case 'topTransitionEnd':
	        EventConstructor = SyntheticTransitionEvent;
	        break;
	      case 'topScroll':
	        EventConstructor = SyntheticUIEvent;
	        break;
	      case 'topWheel':
	        EventConstructor = SyntheticWheelEvent;
	        break;
	      case 'topCopy':
	      case 'topCut':
	      case 'topPaste':
	        EventConstructor = SyntheticClipboardEvent;
	        break;
	    }
	    !EventConstructor ?  true ? invariant(false, 'SimpleEventPlugin: Unhandled event type, `%s`.', topLevelType) : _prodInvariant('86', topLevelType) : void 0;
	    var event = EventConstructor.getPooled(dispatchConfig, targetInst, nativeEvent, nativeEventTarget);
	    EventPropagators.accumulateTwoPhaseDispatches(event);
	    return event;
	  },
	
	  didPutListener: function (inst, registrationName, listener) {
	    // Mobile Safari does not fire properly bubble click events on
	    // non-interactive elements, which means delegated click listeners do not
	    // fire. The workaround for this bug involves attaching an empty click
	    // listener on the target node.
	    // http://www.quirksmode.org/blog/archives/2010/09/click_event_del.html
	    if (registrationName === 'onClick' && !isInteractive(inst._tag)) {
	      var key = getDictionaryKey(inst);
	      var node = ReactDOMComponentTree.getNodeFromInstance(inst);
	      if (!onClickListeners[key]) {
	        onClickListeners[key] = EventListener.listen(node, 'click', emptyFunction);
	      }
	    }
	  },
	
	  willDeleteListener: function (inst, registrationName) {
	    if (registrationName === 'onClick' && !isInteractive(inst._tag)) {
	      var key = getDictionaryKey(inst);
	      onClickListeners[key].remove();
	      delete onClickListeners[key];
	    }
	  }
	};
	
	module.exports = SimpleEventPlugin;

/***/ }),
/* 188 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */
	
	'use strict';
	
	var SyntheticEvent = __webpack_require__(84);
	
	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/css3-animations/#AnimationEvent-interface
	 * @see https://developer.mozilla.org/en-US/docs/Web/API/AnimationEvent
	 */
	var AnimationEventInterface = {
	  animationName: null,
	  elapsedTime: null,
	  pseudoElement: null
	};
	
	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticEvent}
	 */
	function SyntheticAnimationEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}
	
	SyntheticEvent.augmentClass(SyntheticAnimationEvent, AnimationEventInterface);
	
	module.exports = SyntheticAnimationEvent;

/***/ }),
/* 189 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */
	
	'use strict';
	
	var SyntheticEvent = __webpack_require__(84);
	
	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/clipboard-apis/
	 */
	var ClipboardEventInterface = {
	  clipboardData: function (event) {
	    return 'clipboardData' in event ? event.clipboardData : window.clipboardData;
	  }
	};
	
	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticClipboardEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}
	
	SyntheticEvent.augmentClass(SyntheticClipboardEvent, ClipboardEventInterface);
	
	module.exports = SyntheticClipboardEvent;

/***/ }),
/* 190 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */
	
	'use strict';
	
	var SyntheticUIEvent = __webpack_require__(107);
	
	/**
	 * @interface FocusEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var FocusEventInterface = {
	  relatedTarget: null
	};
	
	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticFocusEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}
	
	SyntheticUIEvent.augmentClass(SyntheticFocusEvent, FocusEventInterface);
	
	module.exports = SyntheticFocusEvent;

/***/ }),
/* 191 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */
	
	'use strict';
	
	var SyntheticUIEvent = __webpack_require__(107);
	
	var getEventCharCode = __webpack_require__(192);
	var getEventKey = __webpack_require__(193);
	var getEventModifierState = __webpack_require__(109);
	
	/**
	 * @interface KeyboardEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var KeyboardEventInterface = {
	  key: getEventKey,
	  location: null,
	  ctrlKey: null,
	  shiftKey: null,
	  altKey: null,
	  metaKey: null,
	  repeat: null,
	  locale: null,
	  getModifierState: getEventModifierState,
	  // Legacy Interface
	  charCode: function (event) {
	    // `charCode` is the result of a KeyPress event and represents the value of
	    // the actual printable character.
	
	    // KeyPress is deprecated, but its replacement is not yet final and not
	    // implemented in any major browser. Only KeyPress has charCode.
	    if (event.type === 'keypress') {
	      return getEventCharCode(event);
	    }
	    return 0;
	  },
	  keyCode: function (event) {
	    // `keyCode` is the result of a KeyDown/Up event and represents the value of
	    // physical keyboard key.
	
	    // The actual meaning of the value depends on the users' keyboard layout
	    // which cannot be detected. Assuming that it is a US keyboard layout
	    // provides a surprisingly accurate mapping for US and European users.
	    // Due to this, it is left to the user to implement at this time.
	    if (event.type === 'keydown' || event.type === 'keyup') {
	      return event.keyCode;
	    }
	    return 0;
	  },
	  which: function (event) {
	    // `which` is an alias for either `keyCode` or `charCode` depending on the
	    // type of the event.
	    if (event.type === 'keypress') {
	      return getEventCharCode(event);
	    }
	    if (event.type === 'keydown' || event.type === 'keyup') {
	      return event.keyCode;
	    }
	    return 0;
	  }
	};
	
	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticKeyboardEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}
	
	SyntheticUIEvent.augmentClass(SyntheticKeyboardEvent, KeyboardEventInterface);
	
	module.exports = SyntheticKeyboardEvent;

/***/ }),
/* 192 */
/***/ (function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */
	
	'use strict';
	
	/**
	 * `charCode` represents the actual "character code" and is safe to use with
	 * `String.fromCharCode`. As such, only keys that correspond to printable
	 * characters produce a valid `charCode`, the only exception to this is Enter.
	 * The Tab-key is considered non-printable and does not have a `charCode`,
	 * presumably because it does not produce a tab-character in browsers.
	 *
	 * @param {object} nativeEvent Native browser event.
	 * @return {number} Normalized `charCode` property.
	 */
	
	function getEventCharCode(nativeEvent) {
	  var charCode;
	  var keyCode = nativeEvent.keyCode;
	
	  if ('charCode' in nativeEvent) {
	    charCode = nativeEvent.charCode;
	
	    // FF does not set `charCode` for the Enter-key, check against `keyCode`.
	    if (charCode === 0 && keyCode === 13) {
	      charCode = 13;
	    }
	  } else {
	    // IE8 does not implement `charCode`, but `keyCode` has the correct value.
	    charCode = keyCode;
	  }
	
	  // Some non-printable keys are reported in `charCode`/`keyCode`, discard them.
	  // Must not discard the (non-)printable Enter-key.
	  if (charCode >= 32 || charCode === 13) {
	    return charCode;
	  }
	
	  return 0;
	}
	
	module.exports = getEventCharCode;

/***/ }),
/* 193 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */
	
	'use strict';
	
	var getEventCharCode = __webpack_require__(192);
	
	/**
	 * Normalization of deprecated HTML5 `key` values
	 * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names
	 */
	var normalizeKey = {
	  Esc: 'Escape',
	  Spacebar: ' ',
	  Left: 'ArrowLeft',
	  Up: 'ArrowUp',
	  Right: 'ArrowRight',
	  Down: 'ArrowDown',
	  Del: 'Delete',
	  Win: 'OS',
	  Menu: 'ContextMenu',
	  Apps: 'ContextMenu',
	  Scroll: 'ScrollLock',
	  MozPrintableKey: 'Unidentified'
	};
	
	/**
	 * Translation from legacy `keyCode` to HTML5 `key`
	 * Only special keys supported, all others depend on keyboard layout or browser
	 * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names
	 */
	var translateToKey = {
	  8: 'Backspace',
	  9: 'Tab',
	  12: 'Clear',
	  13: 'Enter',
	  16: 'Shift',
	  17: 'Control',
	  18: 'Alt',
	  19: 'Pause',
	  20: 'CapsLock',
	  27: 'Escape',
	  32: ' ',
	  33: 'PageUp',
	  34: 'PageDown',
	  35: 'End',
	  36: 'Home',
	  37: 'ArrowLeft',
	  38: 'ArrowUp',
	  39: 'ArrowRight',
	  40: 'ArrowDown',
	  45: 'Insert',
	  46: 'Delete',
	  112: 'F1',
	  113: 'F2',
	  114: 'F3',
	  115: 'F4',
	  116: 'F5',
	  117: 'F6',
	  118: 'F7',
	  119: 'F8',
	  120: 'F9',
	  121: 'F10',
	  122: 'F11',
	  123: 'F12',
	  144: 'NumLock',
	  145: 'ScrollLock',
	  224: 'Meta'
	};
	
	/**
	 * @param {object} nativeEvent Native browser event.
	 * @return {string} Normalized `key` property.
	 */
	function getEventKey(nativeEvent) {
	  if (nativeEvent.key) {
	    // Normalize inconsistent values reported by browsers due to
	    // implementations of a working draft specification.
	
	    // FireFox implements `key` but returns `MozPrintableKey` for all
	    // printable characters (normalized to `Unidentified`), ignore it.
	    var key = normalizeKey[nativeEvent.key] || nativeEvent.key;
	    if (key !== 'Unidentified') {
	      return key;
	    }
	  }
	
	  // Browser does not implement `key`, polyfill as much of it as we can.
	  if (nativeEvent.type === 'keypress') {
	    var charCode = getEventCharCode(nativeEvent);
	
	    // The enter-key is technically both printable and non-printable and can
	    // thus be captured by `keypress`, no other non-printable key should.
	    return charCode === 13 ? 'Enter' : String.fromCharCode(charCode);
	  }
	  if (nativeEvent.type === 'keydown' || nativeEvent.type === 'keyup') {
	    // While user keyboard layout determines the actual meaning of each
	    // `keyCode` value, almost all function keys have a universal value.
	    return translateToKey[nativeEvent.keyCode] || 'Unidentified';
	  }
	  return '';
	}
	
	module.exports = getEventKey;

/***/ }),
/* 194 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */
	
	'use strict';
	
	var SyntheticMouseEvent = __webpack_require__(106);
	
	/**
	 * @interface DragEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var DragEventInterface = {
	  dataTransfer: null
	};
	
	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticDragEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticMouseEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}
	
	SyntheticMouseEvent.augmentClass(SyntheticDragEvent, DragEventInterface);
	
	module.exports = SyntheticDragEvent;

/***/ }),
/* 195 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */
	
	'use strict';
	
	var SyntheticUIEvent = __webpack_require__(107);
	
	var getEventModifierState = __webpack_require__(109);
	
	/**
	 * @interface TouchEvent
	 * @see http://www.w3.org/TR/touch-events/
	 */
	var TouchEventInterface = {
	  touches: null,
	  targetTouches: null,
	  changedTouches: null,
	  altKey: null,
	  metaKey: null,
	  ctrlKey: null,
	  shiftKey: null,
	  getModifierState: getEventModifierState
	};
	
	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticTouchEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}
	
	SyntheticUIEvent.augmentClass(SyntheticTouchEvent, TouchEventInterface);
	
	module.exports = SyntheticTouchEvent;

/***/ }),
/* 196 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */
	
	'use strict';
	
	var SyntheticEvent = __webpack_require__(84);
	
	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/2009/WD-css3-transitions-20090320/#transition-events-
	 * @see https://developer.mozilla.org/en-US/docs/Web/API/TransitionEvent
	 */
	var TransitionEventInterface = {
	  propertyName: null,
	  elapsedTime: null,
	  pseudoElement: null
	};
	
	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticEvent}
	 */
	function SyntheticTransitionEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}
	
	SyntheticEvent.augmentClass(SyntheticTransitionEvent, TransitionEventInterface);
	
	module.exports = SyntheticTransitionEvent;

/***/ }),
/* 197 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */
	
	'use strict';
	
	var SyntheticMouseEvent = __webpack_require__(106);
	
	/**
	 * @interface WheelEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var WheelEventInterface = {
	  deltaX: function (event) {
	    return 'deltaX' in event ? event.deltaX : // Fallback to `wheelDeltaX` for Webkit and normalize (right is positive).
	    'wheelDeltaX' in event ? -event.wheelDeltaX : 0;
	  },
	  deltaY: function (event) {
	    return 'deltaY' in event ? event.deltaY : // Fallback to `wheelDeltaY` for Webkit and normalize (down is positive).
	    'wheelDeltaY' in event ? -event.wheelDeltaY : // Fallback to `wheelDelta` for IE<9 and normalize (down is positive).
	    'wheelDelta' in event ? -event.wheelDelta : 0;
	  },
	  deltaZ: null,
	
	  // Browsers without "deltaMode" is reporting in raw wheel delta where one
	  // notch on the scroll is always +/- 120, roughly equivalent to pixels.
	  // A good approximation of DOM_DELTA_LINE (1) is 5% of viewport size or
	  // ~40 pixels, for DOM_DELTA_SCREEN (2) it is 87.5% of viewport size.
	  deltaMode: null
	};
	
	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticMouseEvent}
	 */
	function SyntheticWheelEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticMouseEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}
	
	SyntheticMouseEvent.augmentClass(SyntheticWheelEvent, WheelEventInterface);
	
	module.exports = SyntheticWheelEvent;

/***/ }),
/* 198 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(66);
	
	var DOMLazyTree = __webpack_require__(113);
	var DOMProperty = __webpack_require__(67);
	var React = __webpack_require__(26);
	var ReactBrowserEventEmitter = __webpack_require__(137);
	var ReactCurrentOwner = __webpack_require__(40);
	var ReactDOMComponentTree = __webpack_require__(65);
	var ReactDOMContainerInfo = __webpack_require__(199);
	var ReactDOMFeatureFlags = __webpack_require__(200);
	var ReactFeatureFlags = __webpack_require__(89);
	var ReactInstanceMap = __webpack_require__(148);
	var ReactInstrumentation = __webpack_require__(93);
	var ReactMarkupChecksum = __webpack_require__(201);
	var ReactReconciler = __webpack_require__(90);
	var ReactUpdateQueue = __webpack_require__(167);
	var ReactUpdates = __webpack_require__(87);
	
	var emptyObject = __webpack_require__(34);
	var instantiateReactComponent = __webpack_require__(150);
	var invariant = __webpack_require__(35);
	var setInnerHTML = __webpack_require__(115);
	var shouldUpdateReactComponent = __webpack_require__(156);
	var warning = __webpack_require__(31);
	
	var ATTR_NAME = DOMProperty.ID_ATTRIBUTE_NAME;
	var ROOT_ATTR_NAME = DOMProperty.ROOT_ATTRIBUTE_NAME;
	
	var ELEMENT_NODE_TYPE = 1;
	var DOC_NODE_TYPE = 9;
	var DOCUMENT_FRAGMENT_NODE_TYPE = 11;
	
	var instancesByReactRootID = {};
	
	/**
	 * Finds the index of the first character
	 * that's not common between the two given strings.
	 *
	 * @return {number} the index of the character where the strings diverge
	 */
	function firstDifferenceIndex(string1, string2) {
	  var minLen = Math.min(string1.length, string2.length);
	  for (var i = 0; i < minLen; i++) {
	    if (string1.charAt(i) !== string2.charAt(i)) {
	      return i;
	    }
	  }
	  return string1.length === string2.length ? -1 : minLen;
	}
	
	/**
	 * @param {DOMElement|DOMDocument} container DOM element that may contain
	 * a React component
	 * @return {?*} DOM element that may have the reactRoot ID, or null.
	 */
	function getReactRootElementInContainer(container) {
	  if (!container) {
	    return null;
	  }
	
	  if (container.nodeType === DOC_NODE_TYPE) {
	    return container.documentElement;
	  } else {
	    return container.firstChild;
	  }
	}
	
	function internalGetID(node) {
	  // If node is something like a window, document, or text node, none of
	  // which support attributes or a .getAttribute method, gracefully return
	  // the empty string, as if the attribute were missing.
	  return node.getAttribute && node.getAttribute(ATTR_NAME) || '';
	}
	
	/**
	 * Mounts this component and inserts it into the DOM.
	 *
	 * @param {ReactComponent} componentInstance The instance to mount.
	 * @param {DOMElement} container DOM element to mount into.
	 * @param {ReactReconcileTransaction} transaction
	 * @param {boolean} shouldReuseMarkup If true, do not insert markup
	 */
	function mountComponentIntoNode(wrapperInstance, container, transaction, shouldReuseMarkup, context) {
	  var markerName;
	  if (ReactFeatureFlags.logTopLevelRenders) {
	    var wrappedElement = wrapperInstance._currentElement.props.child;
	    var type = wrappedElement.type;
	    markerName = 'React mount: ' + (typeof type === 'string' ? type : type.displayName || type.name);
	    console.time(markerName);
	  }
	
	  var markup = ReactReconciler.mountComponent(wrapperInstance, transaction, null, ReactDOMContainerInfo(wrapperInstance, container), context, 0 /* parentDebugID */
	  );
	
	  if (markerName) {
	    console.timeEnd(markerName);
	  }
	
	  wrapperInstance._renderedComponent._topLevelWrapper = wrapperInstance;
	  ReactMount._mountImageIntoNode(markup, container, wrapperInstance, shouldReuseMarkup, transaction);
	}
	
	/**
	 * Batched mount.
	 *
	 * @param {ReactComponent} componentInstance The instance to mount.
	 * @param {DOMElement} container DOM element to mount into.
	 * @param {boolean} shouldReuseMarkup If true, do not insert markup
	 */
	function batchedMountComponentIntoNode(componentInstance, container, shouldReuseMarkup, context) {
	  var transaction = ReactUpdates.ReactReconcileTransaction.getPooled(
	  /* useCreateElement */
	  !shouldReuseMarkup && ReactDOMFeatureFlags.useCreateElement);
	  transaction.perform(mountComponentIntoNode, null, componentInstance, container, transaction, shouldReuseMarkup, context);
	  ReactUpdates.ReactReconcileTransaction.release(transaction);
	}
	
	/**
	 * Unmounts a component and removes it from the DOM.
	 *
	 * @param {ReactComponent} instance React component instance.
	 * @param {DOMElement} container DOM element to unmount from.
	 * @final
	 * @internal
	 * @see {ReactMount.unmountComponentAtNode}
	 */
	function unmountComponentFromNode(instance, container, safely) {
	  if (true) {
	    ReactInstrumentation.debugTool.onBeginFlush();
	  }
	  ReactReconciler.unmountComponent(instance, safely);
	  if (true) {
	    ReactInstrumentation.debugTool.onEndFlush();
	  }
	
	  if (container.nodeType === DOC_NODE_TYPE) {
	    container = container.documentElement;
	  }
	
	  // http://jsperf.com/emptying-a-node
	  while (container.lastChild) {
	    container.removeChild(container.lastChild);
	  }
	}
	
	/**
	 * True if the supplied DOM node has a direct React-rendered child that is
	 * not a React root element. Useful for warning in `render`,
	 * `unmountComponentAtNode`, etc.
	 *
	 * @param {?DOMElement} node The candidate DOM node.
	 * @return {boolean} True if the DOM element contains a direct child that was
	 * rendered by React but is not a root element.
	 * @internal
	 */
	function hasNonRootReactChild(container) {
	  var rootEl = getReactRootElementInContainer(container);
	  if (rootEl) {
	    var inst = ReactDOMComponentTree.getInstanceFromNode(rootEl);
	    return !!(inst && inst._hostParent);
	  }
	}
	
	/**
	 * True if the supplied DOM node is a React DOM element and
	 * it has been rendered by another copy of React.
	 *
	 * @param {?DOMElement} node The candidate DOM node.
	 * @return {boolean} True if the DOM has been rendered by another copy of React
	 * @internal
	 */
	function nodeIsRenderedByOtherInstance(container) {
	  var rootEl = getReactRootElementInContainer(container);
	  return !!(rootEl && isReactNode(rootEl) && !ReactDOMComponentTree.getInstanceFromNode(rootEl));
	}
	
	/**
	 * True if the supplied DOM node is a valid node element.
	 *
	 * @param {?DOMElement} node The candidate DOM node.
	 * @return {boolean} True if the DOM is a valid DOM node.
	 * @internal
	 */
	function isValidContainer(node) {
	  return !!(node && (node.nodeType === ELEMENT_NODE_TYPE || node.nodeType === DOC_NODE_TYPE || node.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE));
	}
	
	/**
	 * True if the supplied DOM node is a valid React node element.
	 *
	 * @param {?DOMElement} node The candidate DOM node.
	 * @return {boolean} True if the DOM is a valid React DOM node.
	 * @internal
	 */
	function isReactNode(node) {
	  return isValidContainer(node) && (node.hasAttribute(ROOT_ATTR_NAME) || node.hasAttribute(ATTR_NAME));
	}
	
	function getHostRootInstanceInContainer(container) {
	  var rootEl = getReactRootElementInContainer(container);
	  var prevHostInstance = rootEl && ReactDOMComponentTree.getInstanceFromNode(rootEl);
	  return prevHostInstance && !prevHostInstance._hostParent ? prevHostInstance : null;
	}
	
	function getTopLevelWrapperInContainer(container) {
	  var root = getHostRootInstanceInContainer(container);
	  return root ? root._hostContainerInfo._topLevelWrapper : null;
	}
	
	/**
	 * Temporary (?) hack so that we can store all top-level pending updates on
	 * composites instead of having to worry about different types of components
	 * here.
	 */
	var topLevelRootCounter = 1;
	var TopLevelWrapper = function () {
	  this.rootID = topLevelRootCounter++;
	};
	TopLevelWrapper.prototype.isReactComponent = {};
	if (true) {
	  TopLevelWrapper.displayName = 'TopLevelWrapper';
	}
	TopLevelWrapper.prototype.render = function () {
	  return this.props.child;
	};
	TopLevelWrapper.isReactTopLevelWrapper = true;
	
	/**
	 * Mounting is the process of initializing a React component by creating its
	 * representative DOM elements and inserting them into a supplied `container`.
	 * Any prior content inside `container` is destroyed in the process.
	 *
	 *   ReactMount.render(
	 *     component,
	 *     document.getElementById('container')
	 *   );
	 *
	 *   <div id="container">                   <-- Supplied `container`.
	 *     <div data-reactid=".3">              <-- Rendered reactRoot of React
	 *       // ...                                 component.
	 *     </div>
	 *   </div>
	 *
	 * Inside of `container`, the first element rendered is the "reactRoot".
	 */
	var ReactMount = {
	  TopLevelWrapper: TopLevelWrapper,
	
	  /**
	   * Used by devtools. The keys are not important.
	   */
	  _instancesByReactRootID: instancesByReactRootID,
	
	  /**
	   * This is a hook provided to support rendering React components while
	   * ensuring that the apparent scroll position of its `container` does not
	   * change.
	   *
	   * @param {DOMElement} container The `container` being rendered into.
	   * @param {function} renderCallback This must be called once to do the render.
	   */
	  scrollMonitor: function (container, renderCallback) {
	    renderCallback();
	  },
	
	  /**
	   * Take a component that's already mounted into the DOM and replace its props
	   * @param {ReactComponent} prevComponent component instance already in the DOM
	   * @param {ReactElement} nextElement component instance to render
	   * @param {DOMElement} container container to render into
	   * @param {?function} callback function triggered on completion
	   */
	  _updateRootComponent: function (prevComponent, nextElement, nextContext, container, callback) {
	    ReactMount.scrollMonitor(container, function () {
	      ReactUpdateQueue.enqueueElementInternal(prevComponent, nextElement, nextContext);
	      if (callback) {
	        ReactUpdateQueue.enqueueCallbackInternal(prevComponent, callback);
	      }
	    });
	
	    return prevComponent;
	  },
	
	  /**
	   * Render a new component into the DOM. Hooked by hooks!
	   *
	   * @param {ReactElement} nextElement element to render
	   * @param {DOMElement} container container to render into
	   * @param {boolean} shouldReuseMarkup if we should skip the markup insertion
	   * @return {ReactComponent} nextComponent
	   */
	  _renderNewRootComponent: function (nextElement, container, shouldReuseMarkup, context) {
	    // Various parts of our code (such as ReactCompositeComponent's
	    // _renderValidatedComponent) assume that calls to render aren't nested;
	    // verify that that's the case.
	     true ? warning(ReactCurrentOwner.current == null, '_renderNewRootComponent(): Render methods should be a pure function ' + 'of props and state; triggering nested component updates from ' + 'render is not allowed. If necessary, trigger nested updates in ' + 'componentDidUpdate. Check the render method of %s.', ReactCurrentOwner.current && ReactCurrentOwner.current.getName() || 'ReactCompositeComponent') : void 0;
	
	    !isValidContainer(container) ?  true ? invariant(false, '_registerComponent(...): Target container is not a DOM element.') : _prodInvariant('37') : void 0;
	
	    ReactBrowserEventEmitter.ensureScrollValueMonitoring();
	    var componentInstance = instantiateReactComponent(nextElement, false);
	
	    // The initial render is synchronous but any updates that happen during
	    // rendering, in componentWillMount or componentDidMount, will be batched
	    // according to the current batching strategy.
	
	    ReactUpdates.batchedUpdates(batchedMountComponentIntoNode, componentInstance, container, shouldReuseMarkup, context);
	
	    var wrapperID = componentInstance._instance.rootID;
	    instancesByReactRootID[wrapperID] = componentInstance;
	
	    return componentInstance;
	  },
	
	  /**
	   * Renders a React component into the DOM in the supplied `container`.
	   *
	   * If the React component was previously rendered into `container`, this will
	   * perform an update on it and only mutate the DOM as necessary to reflect the
	   * latest React component.
	   *
	   * @param {ReactComponent} parentComponent The conceptual parent of this render tree.
	   * @param {ReactElement} nextElement Component element to render.
	   * @param {DOMElement} container DOM element to render into.
	   * @param {?function} callback function triggered on completion
	   * @return {ReactComponent} Component instance rendered in `container`.
	   */
	  renderSubtreeIntoContainer: function (parentComponent, nextElement, container, callback) {
	    !(parentComponent != null && ReactInstanceMap.has(parentComponent)) ?  true ? invariant(false, 'parentComponent must be a valid React Component') : _prodInvariant('38') : void 0;
	    return ReactMount._renderSubtreeIntoContainer(parentComponent, nextElement, container, callback);
	  },
	
	  _renderSubtreeIntoContainer: function (parentComponent, nextElement, container, callback) {
	    ReactUpdateQueue.validateCallback(callback, 'ReactDOM.render');
	    !React.isValidElement(nextElement) ?  true ? invariant(false, 'ReactDOM.render(): Invalid component element.%s', typeof nextElement === 'string' ? " Instead of passing a string like 'div', pass " + "React.createElement('div') or <div />." : typeof nextElement === 'function' ? ' Instead of passing a class like Foo, pass ' + 'React.createElement(Foo) or <Foo />.' : // Check if it quacks like an element
	    nextElement != null && nextElement.props !== undefined ? ' This may be caused by unintentionally loading two independent ' + 'copies of React.' : '') : _prodInvariant('39', typeof nextElement === 'string' ? " Instead of passing a string like 'div', pass " + "React.createElement('div') or <div />." : typeof nextElement === 'function' ? ' Instead of passing a class like Foo, pass ' + 'React.createElement(Foo) or <Foo />.' : nextElement != null && nextElement.props !== undefined ? ' This may be caused by unintentionally loading two independent ' + 'copies of React.' : '') : void 0;
	
	     true ? warning(!container || !container.tagName || container.tagName.toUpperCase() !== 'BODY', 'render(): Rendering components directly into document.body is ' + 'discouraged, since its children are often manipulated by third-party ' + 'scripts and browser extensions. This may lead to subtle ' + 'reconciliation issues. Try rendering into a container element created ' + 'for your app.') : void 0;
	
	    var nextWrappedElement = React.createElement(TopLevelWrapper, {
	      child: nextElement
	    });
	
	    var nextContext;
	    if (parentComponent) {
	      var parentInst = ReactInstanceMap.get(parentComponent);
	      nextContext = parentInst._processChildContext(parentInst._context);
	    } else {
	      nextContext = emptyObject;
	    }
	
	    var prevComponent = getTopLevelWrapperInContainer(container);
	
	    if (prevComponent) {
	      var prevWrappedElement = prevComponent._currentElement;
	      var prevElement = prevWrappedElement.props.child;
	      if (shouldUpdateReactComponent(prevElement, nextElement)) {
	        var publicInst = prevComponent._renderedComponent.getPublicInstance();
	        var updatedCallback = callback && function () {
	          callback.call(publicInst);
	        };
	        ReactMount._updateRootComponent(prevComponent, nextWrappedElement, nextContext, container, updatedCallback);
	        return publicInst;
	      } else {
	        ReactMount.unmountComponentAtNode(container);
	      }
	    }
	
	    var reactRootElement = getReactRootElementInContainer(container);
	    var containerHasReactMarkup = reactRootElement && !!internalGetID(reactRootElement);
	    var containerHasNonRootReactChild = hasNonRootReactChild(container);
	
	    if (true) {
	       true ? warning(!containerHasNonRootReactChild, 'render(...): Replacing React-rendered children with a new root ' + 'component. If you intended to update the children of this node, ' + 'you should instead have the existing children update their state ' + 'and render the new components instead of calling ReactDOM.render.') : void 0;
	
	      if (!containerHasReactMarkup || reactRootElement.nextSibling) {
	        var rootElementSibling = reactRootElement;
	        while (rootElementSibling) {
	          if (internalGetID(rootElementSibling)) {
	             true ? warning(false, 'render(): Target node has markup rendered by React, but there ' + 'are unrelated nodes as well. This is most commonly caused by ' + 'white-space inserted around server-rendered markup.') : void 0;
	            break;
	          }
	          rootElementSibling = rootElementSibling.nextSibling;
	        }
	      }
	    }
	
	    var shouldReuseMarkup = containerHasReactMarkup && !prevComponent && !containerHasNonRootReactChild;
	    var component = ReactMount._renderNewRootComponent(nextWrappedElement, container, shouldReuseMarkup, nextContext)._renderedComponent.getPublicInstance();
	    if (callback) {
	      callback.call(component);
	    }
	    return component;
	  },
	
	  /**
	   * Renders a React component into the DOM in the supplied `container`.
	   * See https://facebook.github.io/react/docs/top-level-api.html#reactdom.render
	   *
	   * If the React component was previously rendered into `container`, this will
	   * perform an update on it and only mutate the DOM as necessary to reflect the
	   * latest React component.
	   *
	   * @param {ReactElement} nextElement Component element to render.
	   * @param {DOMElement} container DOM element to render into.
	   * @param {?function} callback function triggered on completion
	   * @return {ReactComponent} Component instance rendered in `container`.
	   */
	  render: function (nextElement, container, callback) {
	    return ReactMount._renderSubtreeIntoContainer(null, nextElement, container, callback);
	  },
	
	  /**
	   * Unmounts and destroys the React component rendered in the `container`.
	   * See https://facebook.github.io/react/docs/top-level-api.html#reactdom.unmountcomponentatnode
	   *
	   * @param {DOMElement} container DOM element containing a React component.
	   * @return {boolean} True if a component was found in and unmounted from
	   *                   `container`
	   */
	  unmountComponentAtNode: function (container) {
	    // Various parts of our code (such as ReactCompositeComponent's
	    // _renderValidatedComponent) assume that calls to render aren't nested;
	    // verify that that's the case. (Strictly speaking, unmounting won't cause a
	    // render but we still don't expect to be in a render call here.)
	     true ? warning(ReactCurrentOwner.current == null, 'unmountComponentAtNode(): Render methods should be a pure function ' + 'of props and state; triggering nested component updates from render ' + 'is not allowed. If necessary, trigger nested updates in ' + 'componentDidUpdate. Check the render method of %s.', ReactCurrentOwner.current && ReactCurrentOwner.current.getName() || 'ReactCompositeComponent') : void 0;
	
	    !isValidContainer(container) ?  true ? invariant(false, 'unmountComponentAtNode(...): Target container is not a DOM element.') : _prodInvariant('40') : void 0;
	
	    if (true) {
	       true ? warning(!nodeIsRenderedByOtherInstance(container), "unmountComponentAtNode(): The node you're attempting to unmount " + 'was rendered by another copy of React.') : void 0;
	    }
	
	    var prevComponent = getTopLevelWrapperInContainer(container);
	    if (!prevComponent) {
	      // Check if the node being unmounted was rendered by React, but isn't a
	      // root node.
	      var containerHasNonRootReactChild = hasNonRootReactChild(container);
	
	      // Check if the container itself is a React root node.
	      var isContainerReactRoot = container.nodeType === 1 && container.hasAttribute(ROOT_ATTR_NAME);
	
	      if (true) {
	         true ? warning(!containerHasNonRootReactChild, "unmountComponentAtNode(): The node you're attempting to unmount " + 'was rendered by React and is not a top-level container. %s', isContainerReactRoot ? 'You may have accidentally passed in a React root node instead ' + 'of its container.' : 'Instead, have the parent component update its state and ' + 'rerender in order to remove this component.') : void 0;
	      }
	
	      return false;
	    }
	    delete instancesByReactRootID[prevComponent._instance.rootID];
	    ReactUpdates.batchedUpdates(unmountComponentFromNode, prevComponent, container, false);
	    return true;
	  },
	
	  _mountImageIntoNode: function (markup, container, instance, shouldReuseMarkup, transaction) {
	    !isValidContainer(container) ?  true ? invariant(false, 'mountComponentIntoNode(...): Target container is not valid.') : _prodInvariant('41') : void 0;
	
	    if (shouldReuseMarkup) {
	      var rootElement = getReactRootElementInContainer(container);
	      if (ReactMarkupChecksum.canReuseMarkup(markup, rootElement)) {
	        ReactDOMComponentTree.precacheNode(instance, rootElement);
	        return;
	      } else {
	        var checksum = rootElement.getAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);
	        rootElement.removeAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);
	
	        var rootMarkup = rootElement.outerHTML;
	        rootElement.setAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME, checksum);
	
	        var normalizedMarkup = markup;
	        if (true) {
	          // because rootMarkup is retrieved from the DOM, various normalizations
	          // will have occurred which will not be present in `markup`. Here,
	          // insert markup into a <div> or <iframe> depending on the container
	          // type to perform the same normalizations before comparing.
	          var normalizer;
	          if (container.nodeType === ELEMENT_NODE_TYPE) {
	            normalizer = document.createElement('div');
	            normalizer.innerHTML = markup;
	            normalizedMarkup = normalizer.innerHTML;
	          } else {
	            normalizer = document.createElement('iframe');
	            document.body.appendChild(normalizer);
	            normalizer.contentDocument.write(markup);
	            normalizedMarkup = normalizer.contentDocument.documentElement.outerHTML;
	            document.body.removeChild(normalizer);
	          }
	        }
	
	        var diffIndex = firstDifferenceIndex(normalizedMarkup, rootMarkup);
	        var difference = ' (client) ' + normalizedMarkup.substring(diffIndex - 20, diffIndex + 20) + '\n (server) ' + rootMarkup.substring(diffIndex - 20, diffIndex + 20);
	
	        !(container.nodeType !== DOC_NODE_TYPE) ?  true ? invariant(false, 'You\'re trying to render a component to the document using server rendering but the checksum was invalid. This usually means you rendered a different component type or props on the client from the one on the server, or your render() methods are impure. React cannot handle this case due to cross-browser quirks by rendering at the document root. You should look for environment dependent code in your components and ensure the props are the same client and server side:\n%s', difference) : _prodInvariant('42', difference) : void 0;
	
	        if (true) {
	           true ? warning(false, 'React attempted to reuse markup in a container but the ' + 'checksum was invalid. This generally means that you are ' + 'using server rendering and the markup generated on the ' + 'server was not what the client was expecting. React injected ' + 'new markup to compensate which works but you have lost many ' + 'of the benefits of server rendering. Instead, figure out ' + 'why the markup being generated is different on the client ' + 'or server:\n%s', difference) : void 0;
	        }
	      }
	    }
	
	    !(container.nodeType !== DOC_NODE_TYPE) ?  true ? invariant(false, 'You\'re trying to render a component to the document but you didn\'t use server rendering. We can\'t do this without using server rendering due to cross-browser quirks. See ReactDOMServer.renderToString() for server rendering.') : _prodInvariant('43') : void 0;
	
	    if (transaction.useCreateElement) {
	      while (container.lastChild) {
	        container.removeChild(container.lastChild);
	      }
	      DOMLazyTree.insertTreeBefore(container, markup, null);
	    } else {
	      setInnerHTML(container, markup);
	      ReactDOMComponentTree.precacheNode(instance, container.firstChild);
	    }
	
	    if (true) {
	      var hostNode = ReactDOMComponentTree.getInstanceFromNode(container.firstChild);
	      if (hostNode._debugID !== 0) {
	        ReactInstrumentation.debugTool.onHostOperation({
	          instanceID: hostNode._debugID,
	          type: 'mount',
	          payload: markup.toString()
	        });
	      }
	    }
	  }
	};
	
	module.exports = ReactMount;

/***/ }),
/* 199 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */
	
	'use strict';
	
	var validateDOMNesting = __webpack_require__(168);
	
	var DOC_NODE_TYPE = 9;
	
	function ReactDOMContainerInfo(topLevelWrapper, node) {
	  var info = {
	    _topLevelWrapper: topLevelWrapper,
	    _idCounter: 1,
	    _ownerDocument: node ? node.nodeType === DOC_NODE_TYPE ? node : node.ownerDocument : null,
	    _node: node,
	    _tag: node ? node.nodeName.toLowerCase() : null,
	    _namespaceURI: node ? node.namespaceURI : null
	  };
	  if (true) {
	    info._ancestorInfo = node ? validateDOMNesting.updatedAncestorInfo(null, info._tag, null) : null;
	  }
	  return info;
	}
	
	module.exports = ReactDOMContainerInfo;

/***/ }),
/* 200 */
/***/ (function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */
	
	'use strict';
	
	var ReactDOMFeatureFlags = {
	  useCreateElement: true,
	  useFiber: false
	};
	
	module.exports = ReactDOMFeatureFlags;

/***/ }),
/* 201 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */
	
	'use strict';
	
	var adler32 = __webpack_require__(202);
	
	var TAG_END = /\/?>/;
	var COMMENT_START = /^<\!\-\-/;
	
	var ReactMarkupChecksum = {
	  CHECKSUM_ATTR_NAME: 'data-react-checksum',
	
	  /**
	   * @param {string} markup Markup string
	   * @return {string} Markup string with checksum attribute attached
	   */
	  addChecksumToMarkup: function (markup) {
	    var checksum = adler32(markup);
	
	    // Add checksum (handle both parent tags, comments and self-closing tags)
	    if (COMMENT_START.test(markup)) {
	      return markup;
	    } else {
	      return markup.replace(TAG_END, ' ' + ReactMarkupChecksum.CHECKSUM_ATTR_NAME + '="' + checksum + '"$&');
	    }
	  },
	
	  /**
	   * @param {string} markup to use
	   * @param {DOMElement} element root React element
	   * @returns {boolean} whether or not the markup is the same
	   */
	  canReuseMarkup: function (markup, element) {
	    var existingChecksum = element.getAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);
	    existingChecksum = existingChecksum && parseInt(existingChecksum, 10);
	    var markupChecksum = adler32(markup);
	    return markupChecksum === existingChecksum;
	  }
	};
	
	module.exports = ReactMarkupChecksum;

/***/ }),
/* 202 */
/***/ (function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * 
	 */
	
	'use strict';
	
	var MOD = 65521;
	
	// adler32 is not cryptographically strong, and is only used to sanity check that
	// markup generated on the server matches the markup generated on the client.
	// This implementation (a modified version of the SheetJS version) has been optimized
	// for our use case, at the expense of conforming to the adler32 specification
	// for non-ascii inputs.
	function adler32(data) {
	  var a = 1;
	  var b = 0;
	  var i = 0;
	  var l = data.length;
	  var m = l & ~0x3;
	  while (i < m) {
	    var n = Math.min(i + 4096, m);
	    for (; i < n; i += 4) {
	      b += (a += data.charCodeAt(i)) + (a += data.charCodeAt(i + 1)) + (a += data.charCodeAt(i + 2)) + (a += data.charCodeAt(i + 3));
	    }
	    a %= MOD;
	    b %= MOD;
	  }
	  for (; i < l; i++) {
	    b += a += data.charCodeAt(i);
	  }
	  a %= MOD;
	  b %= MOD;
	  return a | b << 16;
	}
	
	module.exports = adler32;

/***/ }),
/* 203 */
/***/ (function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */
	
	'use strict';
	
	module.exports = '15.6.2';

/***/ }),
/* 204 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(66);
	
	var ReactCurrentOwner = __webpack_require__(40);
	var ReactDOMComponentTree = __webpack_require__(65);
	var ReactInstanceMap = __webpack_require__(148);
	
	var getHostComponentFromComposite = __webpack_require__(205);
	var invariant = __webpack_require__(35);
	var warning = __webpack_require__(31);
	
	/**
	 * Returns the DOM node rendered by this element.
	 *
	 * See https://facebook.github.io/react/docs/top-level-api.html#reactdom.finddomnode
	 *
	 * @param {ReactComponent|DOMElement} componentOrElement
	 * @return {?DOMElement} The root node of this element.
	 */
	function findDOMNode(componentOrElement) {
	  if (true) {
	    var owner = ReactCurrentOwner.current;
	    if (owner !== null) {
	       true ? warning(owner._warnedAboutRefsInRender, '%s is accessing findDOMNode inside its render(). ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', owner.getName() || 'A component') : void 0;
	      owner._warnedAboutRefsInRender = true;
	    }
	  }
	  if (componentOrElement == null) {
	    return null;
	  }
	  if (componentOrElement.nodeType === 1) {
	    return componentOrElement;
	  }
	
	  var inst = ReactInstanceMap.get(componentOrElement);
	  if (inst) {
	    inst = getHostComponentFromComposite(inst);
	    return inst ? ReactDOMComponentTree.getNodeFromInstance(inst) : null;
	  }
	
	  if (typeof componentOrElement.render === 'function') {
	     true ?  true ? invariant(false, 'findDOMNode was called on an unmounted component.') : _prodInvariant('44') : void 0;
	  } else {
	     true ?  true ? invariant(false, 'Element appears to be neither ReactComponent nor DOMNode (keys: %s)', Object.keys(componentOrElement)) : _prodInvariant('45', Object.keys(componentOrElement)) : void 0;
	  }
	}
	
	module.exports = findDOMNode;

/***/ }),
/* 205 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */
	
	'use strict';
	
	var ReactNodeTypes = __webpack_require__(152);
	
	function getHostComponentFromComposite(inst) {
	  var type;
	
	  while ((type = inst._renderedNodeType) === ReactNodeTypes.COMPOSITE) {
	    inst = inst._renderedComponent;
	  }
	
	  if (type === ReactNodeTypes.HOST) {
	    return inst._renderedComponent;
	  } else if (type === ReactNodeTypes.EMPTY) {
	    return null;
	  }
	}
	
	module.exports = getHostComponentFromComposite;

/***/ }),
/* 206 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */
	
	'use strict';
	
	var ReactMount = __webpack_require__(198);
	
	module.exports = ReactMount.renderSubtreeIntoContainer;

/***/ }),
/* 207 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */
	
	'use strict';
	
	var DOMProperty = __webpack_require__(67);
	var EventPluginRegistry = __webpack_require__(74);
	var ReactComponentTreeHook = __webpack_require__(47);
	
	var warning = __webpack_require__(31);
	
	if (true) {
	  var reactProps = {
	    children: true,
	    dangerouslySetInnerHTML: true,
	    key: true,
	    ref: true,
	
	    autoFocus: true,
	    defaultValue: true,
	    valueLink: true,
	    defaultChecked: true,
	    checkedLink: true,
	    innerHTML: true,
	    suppressContentEditableWarning: true,
	    onFocusIn: true,
	    onFocusOut: true
	  };
	  var warnedProperties = {};
	
	  var validateProperty = function (tagName, name, debugID) {
	    if (DOMProperty.properties.hasOwnProperty(name) || DOMProperty.isCustomAttribute(name)) {
	      return true;
	    }
	    if (reactProps.hasOwnProperty(name) && reactProps[name] || warnedProperties.hasOwnProperty(name) && warnedProperties[name]) {
	      return true;
	    }
	    if (EventPluginRegistry.registrationNameModules.hasOwnProperty(name)) {
	      return true;
	    }
	    warnedProperties[name] = true;
	    var lowerCasedName = name.toLowerCase();
	
	    // data-* attributes should be lowercase; suggest the lowercase version
	    var standardName = DOMProperty.isCustomAttribute(lowerCasedName) ? lowerCasedName : DOMProperty.getPossibleStandardName.hasOwnProperty(lowerCasedName) ? DOMProperty.getPossibleStandardName[lowerCasedName] : null;
	
	    var registrationName = EventPluginRegistry.possibleRegistrationNames.hasOwnProperty(lowerCasedName) ? EventPluginRegistry.possibleRegistrationNames[lowerCasedName] : null;
	
	    if (standardName != null) {
	       true ? warning(false, 'Unknown DOM property %s. Did you mean %s?%s', name, standardName, ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;
	      return true;
	    } else if (registrationName != null) {
	       true ? warning(false, 'Unknown event handler property %s. Did you mean `%s`?%s', name, registrationName, ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;
	      return true;
	    } else {
	      // We were unable to guess which prop the user intended.
	      // It is likely that the user was just blindly spreading/forwarding props
	      // Components should be careful to only render valid props/attributes.
	      // Warning will be invoked in warnUnknownProperties to allow grouping.
	      return false;
	    }
	  };
	}
	
	var warnUnknownProperties = function (debugID, element) {
	  var unknownProps = [];
	  for (var key in element.props) {
	    var isValid = validateProperty(element.type, key, debugID);
	    if (!isValid) {
	      unknownProps.push(key);
	    }
	  }
	
	  var unknownPropString = unknownProps.map(function (prop) {
	    return '`' + prop + '`';
	  }).join(', ');
	
	  if (unknownProps.length === 1) {
	     true ? warning(false, 'Unknown prop %s on <%s> tag. Remove this prop from the element. ' + 'For details, see https://fb.me/react-unknown-prop%s', unknownPropString, element.type, ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;
	  } else if (unknownProps.length > 1) {
	     true ? warning(false, 'Unknown props %s on <%s> tag. Remove these props from the element. ' + 'For details, see https://fb.me/react-unknown-prop%s', unknownPropString, element.type, ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;
	  }
	};
	
	function handleElement(debugID, element) {
	  if (element == null || typeof element.type !== 'string') {
	    return;
	  }
	  if (element.type.indexOf('-') >= 0 || element.props.is) {
	    return;
	  }
	  warnUnknownProperties(debugID, element);
	}
	
	var ReactDOMUnknownPropertyHook = {
	  onBeforeMountComponent: function (debugID, element) {
	    handleElement(debugID, element);
	  },
	  onBeforeUpdateComponent: function (debugID, element) {
	    handleElement(debugID, element);
	  }
	};
	
	module.exports = ReactDOMUnknownPropertyHook;

/***/ }),
/* 208 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */
	
	'use strict';
	
	var ReactComponentTreeHook = __webpack_require__(47);
	
	var warning = __webpack_require__(31);
	
	var didWarnValueNull = false;
	
	function handleElement(debugID, element) {
	  if (element == null) {
	    return;
	  }
	  if (element.type !== 'input' && element.type !== 'textarea' && element.type !== 'select') {
	    return;
	  }
	  if (element.props != null && element.props.value === null && !didWarnValueNull) {
	     true ? warning(false, '`value` prop on `%s` should not be null. ' + 'Consider using the empty string to clear the component or `undefined` ' + 'for uncontrolled components.%s', element.type, ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;
	
	    didWarnValueNull = true;
	  }
	}
	
	var ReactDOMNullInputValuePropHook = {
	  onBeforeMountComponent: function (debugID, element) {
	    handleElement(debugID, element);
	  },
	  onBeforeUpdateComponent: function (debugID, element) {
	    handleElement(debugID, element);
	  }
	};
	
	module.exports = ReactDOMNullInputValuePropHook;

/***/ }),
/* 209 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */
	
	'use strict';
	
	var DOMProperty = __webpack_require__(67);
	var ReactComponentTreeHook = __webpack_require__(47);
	
	var warning = __webpack_require__(31);
	
	var warnedProperties = {};
	var rARIA = new RegExp('^(aria)-[' + DOMProperty.ATTRIBUTE_NAME_CHAR + ']*$');
	
	function validateProperty(tagName, name, debugID) {
	  if (warnedProperties.hasOwnProperty(name) && warnedProperties[name]) {
	    return true;
	  }
	
	  if (rARIA.test(name)) {
	    var lowerCasedName = name.toLowerCase();
	    var standardName = DOMProperty.getPossibleStandardName.hasOwnProperty(lowerCasedName) ? DOMProperty.getPossibleStandardName[lowerCasedName] : null;
	
	    // If this is an aria-* attribute, but is not listed in the known DOM
	    // DOM properties, then it is an invalid aria-* attribute.
	    if (standardName == null) {
	      warnedProperties[name] = true;
	      return false;
	    }
	    // aria-* attributes should be lowercase; suggest the lowercase version.
	    if (name !== standardName) {
	       true ? warning(false, 'Unknown ARIA attribute %s. Did you mean %s?%s', name, standardName, ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;
	      warnedProperties[name] = true;
	      return true;
	    }
	  }
	
	  return true;
	}
	
	function warnInvalidARIAProps(debugID, element) {
	  var invalidProps = [];
	
	  for (var key in element.props) {
	    var isValid = validateProperty(element.type, key, debugID);
	    if (!isValid) {
	      invalidProps.push(key);
	    }
	  }
	
	  var unknownPropString = invalidProps.map(function (prop) {
	    return '`' + prop + '`';
	  }).join(', ');
	
	  if (invalidProps.length === 1) {
	     true ? warning(false, 'Invalid aria prop %s on <%s> tag. ' + 'For details, see https://fb.me/invalid-aria-prop%s', unknownPropString, element.type, ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;
	  } else if (invalidProps.length > 1) {
	     true ? warning(false, 'Invalid aria props %s on <%s> tag. ' + 'For details, see https://fb.me/invalid-aria-prop%s', unknownPropString, element.type, ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;
	  }
	}
	
	function handleElement(debugID, element) {
	  if (element == null || typeof element.type !== 'string') {
	    return;
	  }
	  if (element.type.indexOf('-') >= 0 || element.props.is) {
	    return;
	  }
	
	  warnInvalidARIAProps(debugID, element);
	}
	
	var ReactDOMInvalidARIAHook = {
	  onBeforeMountComponent: function (debugID, element) {
	    if (true) {
	      handleElement(debugID, element);
	    }
	  },
	  onBeforeUpdateComponent: function (debugID, element) {
	    if (true) {
	      handleElement(debugID, element);
	    }
	  }
	};
	
	module.exports = ReactDOMInvalidARIAHook;

/***/ }),
/* 210 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _redux = __webpack_require__(211);
	
	var _reduxThunk = __webpack_require__(231);
	
	var _reduxThunk2 = _interopRequireDefault(_reduxThunk);
	
	var _reactRouter = __webpack_require__(232);
	
	var _reducers = __webpack_require__(312);
	
	var _reducers2 = _interopRequireDefault(_reducers);
	
	var _location = __webpack_require__(380);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = function () {
	  var initialState = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
	
	  // ======================================================
	  // Middleware Configuration
	  // ======================================================
	  var middleware = [_reduxThunk2.default];
	
	  // ======================================================
	  // Store Enhancers
	  // ======================================================
	  var enhancers = [];
	  if (true) {
	    var devToolsExtension = window.devToolsExtension;
	    if (typeof devToolsExtension === 'function') {
	      enhancers.push(devToolsExtension());
	    }
	  }
	
	  // ======================================================
	  // Store Instantiation and HMR Setup
	  // ======================================================
	  var store = (0, _redux.createStore)((0, _reducers2.default)(), initialState, _redux.compose.apply(undefined, [_redux.applyMiddleware.apply(undefined, middleware)].concat(enhancers)));
	  store.asyncReducers = {};
	
	  // To unsubscribe, invoke `store.unsubscribeHistory()` anytime
	  store.unsubscribeHistory = _reactRouter.browserHistory.listen((0, _location.updateLocation)(store));
	
	  if (true) {
	    module.hot.accept(312, function () {
	      var reducers = __webpack_require__(312).default;
	      store.replaceReducer(reducers(store.asyncReducers));
	    });
	  }
	
	  return store;
	};

/***/ }),
/* 211 */,
/* 212 */,
/* 213 */,
/* 214 */,
/* 215 */,
/* 216 */,
/* 217 */,
/* 218 */,
/* 219 */,
/* 220 */,
/* 221 */,
/* 222 */,
/* 223 */,
/* 224 */,
/* 225 */,
/* 226 */,
/* 227 */,
/* 228 */,
/* 229 */,
/* 230 */,
/* 231 */
/***/ (function(module, exports) {

	'use strict';
	
	exports.__esModule = true;
	function createThunkMiddleware(extraArgument) {
	  return function (_ref) {
	    var dispatch = _ref.dispatch,
	        getState = _ref.getState;
	    return function (next) {
	      return function (action) {
	        if (typeof action === 'function') {
	          return action(dispatch, getState, extraArgument);
	        }
	
	        return next(action);
	      };
	    };
	  };
	}
	
	var thunk = createThunkMiddleware();
	thunk.withExtraArgument = createThunkMiddleware;
	
	exports['default'] = thunk;

/***/ }),
/* 232 */,
/* 233 */,
/* 234 */,
/* 235 */,
/* 236 */,
/* 237 */,
/* 238 */,
/* 239 */,
/* 240 */,
/* 241 */,
/* 242 */,
/* 243 */,
/* 244 */,
/* 245 */,
/* 246 */,
/* 247 */,
/* 248 */,
/* 249 */,
/* 250 */,
/* 251 */,
/* 252 */,
/* 253 */,
/* 254 */,
/* 255 */,
/* 256 */,
/* 257 */,
/* 258 */,
/* 259 */,
/* 260 */,
/* 261 */,
/* 262 */,
/* 263 */,
/* 264 */,
/* 265 */,
/* 266 */,
/* 267 */,
/* 268 */,
/* 269 */,
/* 270 */,
/* 271 */,
/* 272 */,
/* 273 */,
/* 274 */,
/* 275 */,
/* 276 */,
/* 277 */,
/* 278 */,
/* 279 */,
/* 280 */,
/* 281 */,
/* 282 */,
/* 283 */,
/* 284 */,
/* 285 */,
/* 286 */,
/* 287 */,
/* 288 */,
/* 289 */,
/* 290 */,
/* 291 */,
/* 292 */,
/* 293 */,
/* 294 */,
/* 295 */,
/* 296 */,
/* 297 */,
/* 298 */,
/* 299 */,
/* 300 */,
/* 301 */,
/* 302 */,
/* 303 */,
/* 304 */,
/* 305 */,
/* 306 */,
/* 307 */,
/* 308 */,
/* 309 */,
/* 310 */,
/* 311 */,
/* 312 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.injectReducer = exports.makeRootReducer = undefined;
	
	var _extends2 = __webpack_require__(313);
	
	var _extends3 = _interopRequireDefault(_extends2);
	
	var _redux = __webpack_require__(211);
	
	var _reducers = __webpack_require__(335);
	
	var _reducers2 = _interopRequireDefault(_reducers);
	
	var _location = __webpack_require__(380);
	
	var _location2 = _interopRequireDefault(_location);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var makeRootReducer = exports.makeRootReducer = function makeRootReducer(asyncReducers) {
	  return (0, _redux.combineReducers)((0, _extends3.default)({
	    location: _location2.default
	  }, _reducers2.default, asyncReducers));
	};
	
	var injectReducer = exports.injectReducer = function injectReducer(store, _ref) {
	  var key = _ref.key,
	      reducer = _ref.reducer;
	
	  store.asyncReducers[key] = reducer;
	  store.replaceReducer(makeRootReducer(store.asyncReducers));
	};
	
	exports.default = makeRootReducer;

/***/ }),
/* 313 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	exports.__esModule = true;
	
	var _assign = __webpack_require__(314);
	
	var _assign2 = _interopRequireDefault(_assign);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = _assign2.default || function (target) {
	  for (var i = 1; i < arguments.length; i++) {
	    var source = arguments[i];
	
	    for (var key in source) {
	      if (Object.prototype.hasOwnProperty.call(source, key)) {
	        target[key] = source[key];
	      }
	    }
	  }
	
	  return target;
	};

/***/ }),
/* 314 */
/***/ (function(module, exports, __webpack_require__) {

	module.exports = { "default": __webpack_require__(315), __esModule: true };

/***/ }),
/* 315 */
/***/ (function(module, exports, __webpack_require__) {

	__webpack_require__(316);
	module.exports = __webpack_require__(7).Object.assign;


/***/ }),
/* 316 */
/***/ (function(module, exports, __webpack_require__) {

	// 19.1.3.1 Object.assign(target, source)
	var $export = __webpack_require__(5);
	
	$export($export.S + $export.F, 'Object', { assign: __webpack_require__(317) });


/***/ }),
/* 317 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	// 19.1.2.1 Object.assign(target, source, ...)
	var DESCRIPTORS = __webpack_require__(15);
	var getKeys = __webpack_require__(318);
	var gOPS = __webpack_require__(332);
	var pIE = __webpack_require__(333);
	var toObject = __webpack_require__(334);
	var IObject = __webpack_require__(321);
	var $assign = Object.assign;
	
	// should work with symbols and should have deterministic property order (V8 bug)
	module.exports = !$assign || __webpack_require__(16)(function () {
	  var A = {};
	  var B = {};
	  // eslint-disable-next-line no-undef
	  var S = Symbol();
	  var K = 'abcdefghijklmnopqrst';
	  A[S] = 7;
	  K.split('').forEach(function (k) { B[k] = k; });
	  return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;
	}) ? function assign(target, source) { // eslint-disable-line no-unused-vars
	  var T = toObject(target);
	  var aLen = arguments.length;
	  var index = 1;
	  var getSymbols = gOPS.f;
	  var isEnum = pIE.f;
	  while (aLen > index) {
	    var S = IObject(arguments[index++]);
	    var keys = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S);
	    var length = keys.length;
	    var j = 0;
	    var key;
	    while (length > j) {
	      key = keys[j++];
	      if (!DESCRIPTORS || isEnum.call(S, key)) T[key] = S[key];
	    }
	  } return T;
	} : $assign;


/***/ }),
/* 318 */
/***/ (function(module, exports, __webpack_require__) {

	// 19.1.2.14 / 15.2.3.14 Object.keys(O)
	var $keys = __webpack_require__(319);
	var enumBugKeys = __webpack_require__(331);
	
	module.exports = Object.keys || function keys(O) {
	  return $keys(O, enumBugKeys);
	};


/***/ }),
/* 319 */
/***/ (function(module, exports, __webpack_require__) {

	var has = __webpack_require__(20);
	var toIObject = __webpack_require__(320);
	var arrayIndexOf = __webpack_require__(323)(false);
	var IE_PROTO = __webpack_require__(327)('IE_PROTO');
	
	module.exports = function (object, names) {
	  var O = toIObject(object);
	  var i = 0;
	  var result = [];
	  var key;
	  for (key in O) if (key != IE_PROTO) has(O, key) && result.push(key);
	  // Don't enum bug & hidden keys
	  while (names.length > i) if (has(O, key = names[i++])) {
	    ~arrayIndexOf(result, key) || result.push(key);
	  }
	  return result;
	};


/***/ }),
/* 320 */
/***/ (function(module, exports, __webpack_require__) {

	// to indexed object, toObject with fallback for non-array-like ES3 strings
	var IObject = __webpack_require__(321);
	var defined = __webpack_require__(322);
	module.exports = function (it) {
	  return IObject(defined(it));
	};


/***/ }),
/* 321 */
/***/ (function(module, exports, __webpack_require__) {

	// fallback for non-array-like ES3 and non-enumerable old V8 strings
	var cof = __webpack_require__(24);
	// eslint-disable-next-line no-prototype-builtins
	module.exports = Object('z').propertyIsEnumerable(0) ? Object : function (it) {
	  return cof(it) == 'String' ? it.split('') : Object(it);
	};


/***/ }),
/* 322 */
/***/ (function(module, exports) {

	// 7.2.1 RequireObjectCoercible(argument)
	module.exports = function (it) {
	  if (it == undefined) throw TypeError("Can't call method on  " + it);
	  return it;
	};


/***/ }),
/* 323 */
/***/ (function(module, exports, __webpack_require__) {

	// false -> Array#indexOf
	// true  -> Array#includes
	var toIObject = __webpack_require__(320);
	var toLength = __webpack_require__(324);
	var toAbsoluteIndex = __webpack_require__(326);
	module.exports = function (IS_INCLUDES) {
	  return function ($this, el, fromIndex) {
	    var O = toIObject($this);
	    var length = toLength(O.length);
	    var index = toAbsoluteIndex(fromIndex, length);
	    var value;
	    // Array#includes uses SameValueZero equality algorithm
	    // eslint-disable-next-line no-self-compare
	    if (IS_INCLUDES && el != el) while (length > index) {
	      value = O[index++];
	      // eslint-disable-next-line no-self-compare
	      if (value != value) return true;
	    // Array#indexOf ignores holes, Array#includes - not
	    } else for (;length > index; index++) if (IS_INCLUDES || index in O) {
	      if (O[index] === el) return IS_INCLUDES || index || 0;
	    } return !IS_INCLUDES && -1;
	  };
	};


/***/ }),
/* 324 */
/***/ (function(module, exports, __webpack_require__) {

	// 7.1.15 ToLength
	var toInteger = __webpack_require__(325);
	var min = Math.min;
	module.exports = function (it) {
	  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991
	};


/***/ }),
/* 325 */
/***/ (function(module, exports) {

	// 7.1.4 ToInteger
	var ceil = Math.ceil;
	var floor = Math.floor;
	module.exports = function (it) {
	  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);
	};


/***/ }),
/* 326 */
/***/ (function(module, exports, __webpack_require__) {

	var toInteger = __webpack_require__(325);
	var max = Math.max;
	var min = Math.min;
	module.exports = function (index, length) {
	  index = toInteger(index);
	  return index < 0 ? max(index + length, 0) : min(index, length);
	};


/***/ }),
/* 327 */
/***/ (function(module, exports, __webpack_require__) {

	var shared = __webpack_require__(328)('keys');
	var uid = __webpack_require__(330);
	module.exports = function (key) {
	  return shared[key] || (shared[key] = uid(key));
	};


/***/ }),
/* 328 */
/***/ (function(module, exports, __webpack_require__) {

	var core = __webpack_require__(7);
	var global = __webpack_require__(6);
	var SHARED = '__core-js_shared__';
	var store = global[SHARED] || (global[SHARED] = {});
	
	(module.exports = function (key, value) {
	  return store[key] || (store[key] = value !== undefined ? value : {});
	})('versions', []).push({
	  version: core.version,
	  mode: __webpack_require__(329) ? 'pure' : 'global',
	  copyright: '© 2019 Denis Pushkarev (zloirock.ru)'
	});


/***/ }),
/* 329 */
/***/ (function(module, exports) {

	module.exports = true;


/***/ }),
/* 330 */
/***/ (function(module, exports) {

	var id = 0;
	var px = Math.random();
	module.exports = function (key) {
	  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));
	};


/***/ }),
/* 331 */
/***/ (function(module, exports) {

	// IE 8- don't enum bug keys
	module.exports = (
	  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'
	).split(',');


/***/ }),
/* 332 */
/***/ (function(module, exports) {

	exports.f = Object.getOwnPropertySymbols;


/***/ }),
/* 333 */
/***/ (function(module, exports) {

	exports.f = {}.propertyIsEnumerable;


/***/ }),
/* 334 */
/***/ (function(module, exports, __webpack_require__) {

	// 7.1.13 ToObject(argument)
	var defined = __webpack_require__(322);
	module.exports = function (it) {
	  return Object(defined(it));
	};


/***/ }),
/* 335 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _counter = __webpack_require__(336);
	
	var _counter2 = _interopRequireDefault(_counter);
	
	var _generalinfo = __webpack_require__(378);
	
	var _generalinfo2 = _interopRequireDefault(_generalinfo);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	//{append_include_here}
	
	exports.default = {
	  counter: _counter2.default,
	  generalInfo: _generalinfo2.default
	  //{append_module_here}
	};

/***/ }),
/* 336 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _defineProperty2 = __webpack_require__(337);
	
	var _defineProperty3 = _interopRequireDefault(_defineProperty2);
	
	exports.default = counterReducer;
	
	var _counter = __webpack_require__(341);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	// ------------------------------------
	// Action Handlers
	// ------------------------------------
	var ACTION_HANDLERS = (0, _defineProperty3.default)({}, _counter.COUNTER_INCREMENT, function (state, action) {
	  return state + action.payload;
	});
	
	// ------------------------------------
	// Reducer
	// ------------------------------------
	var initialState = 0;
	function counterReducer() {
	  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;
	  var action = arguments[1];
	
	  var handler = ACTION_HANDLERS[action.type];
	
	  return handler ? handler(state, action) : state;
	}

/***/ }),
/* 337 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	exports.__esModule = true;
	
	var _defineProperty = __webpack_require__(338);
	
	var _defineProperty2 = _interopRequireDefault(_defineProperty);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = function (obj, key, value) {
	  if (key in obj) {
	    (0, _defineProperty2.default)(obj, key, {
	      value: value,
	      enumerable: true,
	      configurable: true,
	      writable: true
	    });
	  } else {
	    obj[key] = value;
	  }
	
	  return obj;
	};

/***/ }),
/* 338 */
/***/ (function(module, exports, __webpack_require__) {

	module.exports = { "default": __webpack_require__(339), __esModule: true };

/***/ }),
/* 339 */
/***/ (function(module, exports, __webpack_require__) {

	__webpack_require__(340);
	var $Object = __webpack_require__(7).Object;
	module.exports = function defineProperty(it, key, desc) {
	  return $Object.defineProperty(it, key, desc);
	};


/***/ }),
/* 340 */
/***/ (function(module, exports, __webpack_require__) {

	var $export = __webpack_require__(5);
	// 19.1.2.4 / 15.2.3.6 Object.defineProperty(O, P, Attributes)
	$export($export.S + $export.F * !__webpack_require__(15), 'Object', { defineProperty: __webpack_require__(11).f });


/***/ }),
/* 341 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.actions = exports.doubleAsync = exports.COUNTER_INCREMENT = undefined;
	
	var _promise = __webpack_require__(342);
	
	var _promise2 = _interopRequireDefault(_promise);
	
	exports.increment = increment;
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	// ------------------------------------
	// Constants
	// ------------------------------------
	var COUNTER_INCREMENT = exports.COUNTER_INCREMENT = 'COUNTER_INCREMENT';
	
	// ------------------------------------
	// Actions
	// ------------------------------------
	function increment() {
	  var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;
	
	  return {
	    type: COUNTER_INCREMENT,
	    payload: value
	  };
	}
	
	/*  This is a thunk, meaning it is a function that immediately
	    returns a function for lazy evaluation. It is incredibly useful for
	    creating async actions, especially when combined with redux-thunk!
	
	    NOTE: This is solely for demonstration purposes. In a real application,
	    you'd probably want to dispatch an action of COUNTER_DOUBLE and let the
	    reducer take care of this logic.  */
	
	var doubleAsync = exports.doubleAsync = function doubleAsync() {
	  return function (dispatch, getState) {
	    return new _promise2.default(function (resolve) {
	      setTimeout(function () {
	        dispatch(increment(getState().counter));
	        resolve();
	      }, 200);
	    });
	  };
	};
	
	var actions = exports.actions = {
	  increment: increment,
	  doubleAsync: doubleAsync
	};

/***/ }),
/* 342 */
/***/ (function(module, exports, __webpack_require__) {

	module.exports = { "default": __webpack_require__(343), __esModule: true };

/***/ }),
/* 343 */
/***/ (function(module, exports, __webpack_require__) {

	__webpack_require__(344);
	__webpack_require__(345);
	__webpack_require__(356);
	__webpack_require__(360);
	__webpack_require__(376);
	__webpack_require__(377);
	module.exports = __webpack_require__(7).Promise;


/***/ }),
/* 344 */
/***/ (function(module, exports) {



/***/ }),
/* 345 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	var $at = __webpack_require__(346)(true);
	
	// 21.1.3.27 String.prototype[@@iterator]()
	__webpack_require__(347)(String, 'String', function (iterated) {
	  this._t = String(iterated); // target
	  this._i = 0;                // next index
	// 21.1.5.2.1 %StringIteratorPrototype%.next()
	}, function () {
	  var O = this._t;
	  var index = this._i;
	  var point;
	  if (index >= O.length) return { value: undefined, done: true };
	  point = $at(O, index);
	  this._i += point.length;
	  return { value: point, done: false };
	});


/***/ }),
/* 346 */
/***/ (function(module, exports, __webpack_require__) {

	var toInteger = __webpack_require__(325);
	var defined = __webpack_require__(322);
	// true  -> String#at
	// false -> String#codePointAt
	module.exports = function (TO_STRING) {
	  return function (that, pos) {
	    var s = String(defined(that));
	    var i = toInteger(pos);
	    var l = s.length;
	    var a, b;
	    if (i < 0 || i >= l) return TO_STRING ? '' : undefined;
	    a = s.charCodeAt(i);
	    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff
	      ? TO_STRING ? s.charAt(i) : a
	      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;
	  };
	};


/***/ }),
/* 347 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	var LIBRARY = __webpack_require__(329);
	var $export = __webpack_require__(5);
	var redefine = __webpack_require__(348);
	var hide = __webpack_require__(10);
	var Iterators = __webpack_require__(349);
	var $iterCreate = __webpack_require__(350);
	var setToStringTag = __webpack_require__(353);
	var getPrototypeOf = __webpack_require__(355);
	var ITERATOR = __webpack_require__(354)('iterator');
	var BUGGY = !([].keys && 'next' in [].keys()); // Safari has buggy iterators w/o `next`
	var FF_ITERATOR = '@@iterator';
	var KEYS = 'keys';
	var VALUES = 'values';
	
	var returnThis = function () { return this; };
	
	module.exports = function (Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {
	  $iterCreate(Constructor, NAME, next);
	  var getMethod = function (kind) {
	    if (!BUGGY && kind in proto) return proto[kind];
	    switch (kind) {
	      case KEYS: return function keys() { return new Constructor(this, kind); };
	      case VALUES: return function values() { return new Constructor(this, kind); };
	    } return function entries() { return new Constructor(this, kind); };
	  };
	  var TAG = NAME + ' Iterator';
	  var DEF_VALUES = DEFAULT == VALUES;
	  var VALUES_BUG = false;
	  var proto = Base.prototype;
	  var $native = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT];
	  var $default = $native || getMethod(DEFAULT);
	  var $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined;
	  var $anyNative = NAME == 'Array' ? proto.entries || $native : $native;
	  var methods, key, IteratorPrototype;
	  // Fix native
	  if ($anyNative) {
	    IteratorPrototype = getPrototypeOf($anyNative.call(new Base()));
	    if (IteratorPrototype !== Object.prototype && IteratorPrototype.next) {
	      // Set @@toStringTag to native iterators
	      setToStringTag(IteratorPrototype, TAG, true);
	      // fix for some old engines
	      if (!LIBRARY && typeof IteratorPrototype[ITERATOR] != 'function') hide(IteratorPrototype, ITERATOR, returnThis);
	    }
	  }
	  // fix Array#{values, @@iterator}.name in V8 / FF
	  if (DEF_VALUES && $native && $native.name !== VALUES) {
	    VALUES_BUG = true;
	    $default = function values() { return $native.call(this); };
	  }
	  // Define iterator
	  if ((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])) {
	    hide(proto, ITERATOR, $default);
	  }
	  // Plug for library
	  Iterators[NAME] = $default;
	  Iterators[TAG] = returnThis;
	  if (DEFAULT) {
	    methods = {
	      values: DEF_VALUES ? $default : getMethod(VALUES),
	      keys: IS_SET ? $default : getMethod(KEYS),
	      entries: $entries
	    };
	    if (FORCED) for (key in methods) {
	      if (!(key in proto)) redefine(proto, key, methods[key]);
	    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);
	  }
	  return methods;
	};


/***/ }),
/* 348 */
/***/ (function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(10);


/***/ }),
/* 349 */
/***/ (function(module, exports) {

	module.exports = {};


/***/ }),
/* 350 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	var create = __webpack_require__(351);
	var descriptor = __webpack_require__(19);
	var setToStringTag = __webpack_require__(353);
	var IteratorPrototype = {};
	
	// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()
	__webpack_require__(10)(IteratorPrototype, __webpack_require__(354)('iterator'), function () { return this; });
	
	module.exports = function (Constructor, NAME, next) {
	  Constructor.prototype = create(IteratorPrototype, { next: descriptor(1, next) });
	  setToStringTag(Constructor, NAME + ' Iterator');
	};


/***/ }),
/* 351 */
/***/ (function(module, exports, __webpack_require__) {

	// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])
	var anObject = __webpack_require__(12);
	var dPs = __webpack_require__(352);
	var enumBugKeys = __webpack_require__(331);
	var IE_PROTO = __webpack_require__(327)('IE_PROTO');
	var Empty = function () { /* empty */ };
	var PROTOTYPE = 'prototype';
	
	// Create object with fake `null` prototype: use iframe Object with cleared prototype
	var createDict = function () {
	  // Thrash, waste and sodomy: IE GC bug
	  var iframe = __webpack_require__(17)('iframe');
	  var i = enumBugKeys.length;
	  var lt = '<';
	  var gt = '>';
	  var iframeDocument;
	  iframe.style.display = 'none';
	  __webpack_require__(23).appendChild(iframe);
	  iframe.src = 'javascript:'; // eslint-disable-line no-script-url
	  // createDict = iframe.contentWindow.Object;
	  // html.removeChild(iframe);
	  iframeDocument = iframe.contentWindow.document;
	  iframeDocument.open();
	  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);
	  iframeDocument.close();
	  createDict = iframeDocument.F;
	  while (i--) delete createDict[PROTOTYPE][enumBugKeys[i]];
	  return createDict();
	};
	
	module.exports = Object.create || function create(O, Properties) {
	  var result;
	  if (O !== null) {
	    Empty[PROTOTYPE] = anObject(O);
	    result = new Empty();
	    Empty[PROTOTYPE] = null;
	    // add "__proto__" for Object.getPrototypeOf polyfill
	    result[IE_PROTO] = O;
	  } else result = createDict();
	  return Properties === undefined ? result : dPs(result, Properties);
	};


/***/ }),
/* 352 */
/***/ (function(module, exports, __webpack_require__) {

	var dP = __webpack_require__(11);
	var anObject = __webpack_require__(12);
	var getKeys = __webpack_require__(318);
	
	module.exports = __webpack_require__(15) ? Object.defineProperties : function defineProperties(O, Properties) {
	  anObject(O);
	  var keys = getKeys(Properties);
	  var length = keys.length;
	  var i = 0;
	  var P;
	  while (length > i) dP.f(O, P = keys[i++], Properties[P]);
	  return O;
	};


/***/ }),
/* 353 */
/***/ (function(module, exports, __webpack_require__) {

	var def = __webpack_require__(11).f;
	var has = __webpack_require__(20);
	var TAG = __webpack_require__(354)('toStringTag');
	
	module.exports = function (it, tag, stat) {
	  if (it && !has(it = stat ? it : it.prototype, TAG)) def(it, TAG, { configurable: true, value: tag });
	};


/***/ }),
/* 354 */
/***/ (function(module, exports, __webpack_require__) {

	var store = __webpack_require__(328)('wks');
	var uid = __webpack_require__(330);
	var Symbol = __webpack_require__(6).Symbol;
	var USE_SYMBOL = typeof Symbol == 'function';
	
	var $exports = module.exports = function (name) {
	  return store[name] || (store[name] =
	    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));
	};
	
	$exports.store = store;


/***/ }),
/* 355 */
/***/ (function(module, exports, __webpack_require__) {

	// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)
	var has = __webpack_require__(20);
	var toObject = __webpack_require__(334);
	var IE_PROTO = __webpack_require__(327)('IE_PROTO');
	var ObjectProto = Object.prototype;
	
	module.exports = Object.getPrototypeOf || function (O) {
	  O = toObject(O);
	  if (has(O, IE_PROTO)) return O[IE_PROTO];
	  if (typeof O.constructor == 'function' && O instanceof O.constructor) {
	    return O.constructor.prototype;
	  } return O instanceof Object ? ObjectProto : null;
	};


/***/ }),
/* 356 */
/***/ (function(module, exports, __webpack_require__) {

	__webpack_require__(357);
	var global = __webpack_require__(6);
	var hide = __webpack_require__(10);
	var Iterators = __webpack_require__(349);
	var TO_STRING_TAG = __webpack_require__(354)('toStringTag');
	
	var DOMIterables = ('CSSRuleList,CSSStyleDeclaration,CSSValueList,ClientRectList,DOMRectList,DOMStringList,' +
	  'DOMTokenList,DataTransferItemList,FileList,HTMLAllCollection,HTMLCollection,HTMLFormElement,HTMLSelectElement,' +
	  'MediaList,MimeTypeArray,NamedNodeMap,NodeList,PaintRequestList,Plugin,PluginArray,SVGLengthList,SVGNumberList,' +
	  'SVGPathSegList,SVGPointList,SVGStringList,SVGTransformList,SourceBufferList,StyleSheetList,TextTrackCueList,' +
	  'TextTrackList,TouchList').split(',');
	
	for (var i = 0; i < DOMIterables.length; i++) {
	  var NAME = DOMIterables[i];
	  var Collection = global[NAME];
	  var proto = Collection && Collection.prototype;
	  if (proto && !proto[TO_STRING_TAG]) hide(proto, TO_STRING_TAG, NAME);
	  Iterators[NAME] = Iterators.Array;
	}


/***/ }),
/* 357 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	var addToUnscopables = __webpack_require__(358);
	var step = __webpack_require__(359);
	var Iterators = __webpack_require__(349);
	var toIObject = __webpack_require__(320);
	
	// 22.1.3.4 Array.prototype.entries()
	// 22.1.3.13 Array.prototype.keys()
	// 22.1.3.29 Array.prototype.values()
	// 22.1.3.30 Array.prototype[@@iterator]()
	module.exports = __webpack_require__(347)(Array, 'Array', function (iterated, kind) {
	  this._t = toIObject(iterated); // target
	  this._i = 0;                   // next index
	  this._k = kind;                // kind
	// 22.1.5.2.1 %ArrayIteratorPrototype%.next()
	}, function () {
	  var O = this._t;
	  var kind = this._k;
	  var index = this._i++;
	  if (!O || index >= O.length) {
	    this._t = undefined;
	    return step(1);
	  }
	  if (kind == 'keys') return step(0, index);
	  if (kind == 'values') return step(0, O[index]);
	  return step(0, [index, O[index]]);
	}, 'values');
	
	// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)
	Iterators.Arguments = Iterators.Array;
	
	addToUnscopables('keys');
	addToUnscopables('values');
	addToUnscopables('entries');


/***/ }),
/* 358 */
/***/ (function(module, exports) {

	module.exports = function () { /* empty */ };


/***/ }),
/* 359 */
/***/ (function(module, exports) {

	module.exports = function (done, value) {
	  return { value: value, done: !!done };
	};


/***/ }),
/* 360 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	var LIBRARY = __webpack_require__(329);
	var global = __webpack_require__(6);
	var ctx = __webpack_require__(8);
	var classof = __webpack_require__(361);
	var $export = __webpack_require__(5);
	var isObject = __webpack_require__(13);
	var aFunction = __webpack_require__(9);
	var anInstance = __webpack_require__(362);
	var forOf = __webpack_require__(363);
	var speciesConstructor = __webpack_require__(367);
	var task = __webpack_require__(21).set;
	var microtask = __webpack_require__(368)();
	var newPromiseCapabilityModule = __webpack_require__(369);
	var perform = __webpack_require__(370);
	var userAgent = __webpack_require__(371);
	var promiseResolve = __webpack_require__(372);
	var PROMISE = 'Promise';
	var TypeError = global.TypeError;
	var process = global.process;
	var versions = process && process.versions;
	var v8 = versions && versions.v8 || '';
	var $Promise = global[PROMISE];
	var isNode = classof(process) == 'process';
	var empty = function () { /* empty */ };
	var Internal, newGenericPromiseCapability, OwnPromiseCapability, Wrapper;
	var newPromiseCapability = newGenericPromiseCapability = newPromiseCapabilityModule.f;
	
	var USE_NATIVE = !!function () {
	  try {
	    // correct subclassing with @@species support
	    var promise = $Promise.resolve(1);
	    var FakePromise = (promise.constructor = {})[__webpack_require__(354)('species')] = function (exec) {
	      exec(empty, empty);
	    };
	    // unhandled rejections tracking support, NodeJS Promise without it fails @@species test
	    return (isNode || typeof PromiseRejectionEvent == 'function')
	      && promise.then(empty) instanceof FakePromise
	      // v8 6.6 (Node 10 and Chrome 66) have a bug with resolving custom thenables
	      // https://bugs.chromium.org/p/chromium/issues/detail?id=830565
	      // we can't detect it synchronously, so just check versions
	      && v8.indexOf('6.6') !== 0
	      && userAgent.indexOf('Chrome/66') === -1;
	  } catch (e) { /* empty */ }
	}();
	
	// helpers
	var isThenable = function (it) {
	  var then;
	  return isObject(it) && typeof (then = it.then) == 'function' ? then : false;
	};
	var notify = function (promise, isReject) {
	  if (promise._n) return;
	  promise._n = true;
	  var chain = promise._c;
	  microtask(function () {
	    var value = promise._v;
	    var ok = promise._s == 1;
	    var i = 0;
	    var run = function (reaction) {
	      var handler = ok ? reaction.ok : reaction.fail;
	      var resolve = reaction.resolve;
	      var reject = reaction.reject;
	      var domain = reaction.domain;
	      var result, then, exited;
	      try {
	        if (handler) {
	          if (!ok) {
	            if (promise._h == 2) onHandleUnhandled(promise);
	            promise._h = 1;
	          }
	          if (handler === true) result = value;
	          else {
	            if (domain) domain.enter();
	            result = handler(value); // may throw
	            if (domain) {
	              domain.exit();
	              exited = true;
	            }
	          }
	          if (result === reaction.promise) {
	            reject(TypeError('Promise-chain cycle'));
	          } else if (then = isThenable(result)) {
	            then.call(result, resolve, reject);
	          } else resolve(result);
	        } else reject(value);
	      } catch (e) {
	        if (domain && !exited) domain.exit();
	        reject(e);
	      }
	    };
	    while (chain.length > i) run(chain[i++]); // variable length - can't use forEach
	    promise._c = [];
	    promise._n = false;
	    if (isReject && !promise._h) onUnhandled(promise);
	  });
	};
	var onUnhandled = function (promise) {
	  task.call(global, function () {
	    var value = promise._v;
	    var unhandled = isUnhandled(promise);
	    var result, handler, console;
	    if (unhandled) {
	      result = perform(function () {
	        if (isNode) {
	          process.emit('unhandledRejection', value, promise);
	        } else if (handler = global.onunhandledrejection) {
	          handler({ promise: promise, reason: value });
	        } else if ((console = global.console) && console.error) {
	          console.error('Unhandled promise rejection', value);
	        }
	      });
	      // Browsers should not trigger `rejectionHandled` event if it was handled here, NodeJS - should
	      promise._h = isNode || isUnhandled(promise) ? 2 : 1;
	    } promise._a = undefined;
	    if (unhandled && result.e) throw result.v;
	  });
	};
	var isUnhandled = function (promise) {
	  return promise._h !== 1 && (promise._a || promise._c).length === 0;
	};
	var onHandleUnhandled = function (promise) {
	  task.call(global, function () {
	    var handler;
	    if (isNode) {
	      process.emit('rejectionHandled', promise);
	    } else if (handler = global.onrejectionhandled) {
	      handler({ promise: promise, reason: promise._v });
	    }
	  });
	};
	var $reject = function (value) {
	  var promise = this;
	  if (promise._d) return;
	  promise._d = true;
	  promise = promise._w || promise; // unwrap
	  promise._v = value;
	  promise._s = 2;
	  if (!promise._a) promise._a = promise._c.slice();
	  notify(promise, true);
	};
	var $resolve = function (value) {
	  var promise = this;
	  var then;
	  if (promise._d) return;
	  promise._d = true;
	  promise = promise._w || promise; // unwrap
	  try {
	    if (promise === value) throw TypeError("Promise can't be resolved itself");
	    if (then = isThenable(value)) {
	      microtask(function () {
	        var wrapper = { _w: promise, _d: false }; // wrap
	        try {
	          then.call(value, ctx($resolve, wrapper, 1), ctx($reject, wrapper, 1));
	        } catch (e) {
	          $reject.call(wrapper, e);
	        }
	      });
	    } else {
	      promise._v = value;
	      promise._s = 1;
	      notify(promise, false);
	    }
	  } catch (e) {
	    $reject.call({ _w: promise, _d: false }, e); // wrap
	  }
	};
	
	// constructor polyfill
	if (!USE_NATIVE) {
	  // 25.4.3.1 Promise(executor)
	  $Promise = function Promise(executor) {
	    anInstance(this, $Promise, PROMISE, '_h');
	    aFunction(executor);
	    Internal.call(this);
	    try {
	      executor(ctx($resolve, this, 1), ctx($reject, this, 1));
	    } catch (err) {
	      $reject.call(this, err);
	    }
	  };
	  // eslint-disable-next-line no-unused-vars
	  Internal = function Promise(executor) {
	    this._c = [];             // <- awaiting reactions
	    this._a = undefined;      // <- checked in isUnhandled reactions
	    this._s = 0;              // <- state
	    this._d = false;          // <- done
	    this._v = undefined;      // <- value
	    this._h = 0;              // <- rejection state, 0 - default, 1 - handled, 2 - unhandled
	    this._n = false;          // <- notify
	  };
	  Internal.prototype = __webpack_require__(373)($Promise.prototype, {
	    // 25.4.5.3 Promise.prototype.then(onFulfilled, onRejected)
	    then: function then(onFulfilled, onRejected) {
	      var reaction = newPromiseCapability(speciesConstructor(this, $Promise));
	      reaction.ok = typeof onFulfilled == 'function' ? onFulfilled : true;
	      reaction.fail = typeof onRejected == 'function' && onRejected;
	      reaction.domain = isNode ? process.domain : undefined;
	      this._c.push(reaction);
	      if (this._a) this._a.push(reaction);
	      if (this._s) notify(this, false);
	      return reaction.promise;
	    },
	    // 25.4.5.1 Promise.prototype.catch(onRejected)
	    'catch': function (onRejected) {
	      return this.then(undefined, onRejected);
	    }
	  });
	  OwnPromiseCapability = function () {
	    var promise = new Internal();
	    this.promise = promise;
	    this.resolve = ctx($resolve, promise, 1);
	    this.reject = ctx($reject, promise, 1);
	  };
	  newPromiseCapabilityModule.f = newPromiseCapability = function (C) {
	    return C === $Promise || C === Wrapper
	      ? new OwnPromiseCapability(C)
	      : newGenericPromiseCapability(C);
	  };
	}
	
	$export($export.G + $export.W + $export.F * !USE_NATIVE, { Promise: $Promise });
	__webpack_require__(353)($Promise, PROMISE);
	__webpack_require__(374)(PROMISE);
	Wrapper = __webpack_require__(7)[PROMISE];
	
	// statics
	$export($export.S + $export.F * !USE_NATIVE, PROMISE, {
	  // 25.4.4.5 Promise.reject(r)
	  reject: function reject(r) {
	    var capability = newPromiseCapability(this);
	    var $$reject = capability.reject;
	    $$reject(r);
	    return capability.promise;
	  }
	});
	$export($export.S + $export.F * (LIBRARY || !USE_NATIVE), PROMISE, {
	  // 25.4.4.6 Promise.resolve(x)
	  resolve: function resolve(x) {
	    return promiseResolve(LIBRARY && this === Wrapper ? $Promise : this, x);
	  }
	});
	$export($export.S + $export.F * !(USE_NATIVE && __webpack_require__(375)(function (iter) {
	  $Promise.all(iter)['catch'](empty);
	})), PROMISE, {
	  // 25.4.4.1 Promise.all(iterable)
	  all: function all(iterable) {
	    var C = this;
	    var capability = newPromiseCapability(C);
	    var resolve = capability.resolve;
	    var reject = capability.reject;
	    var result = perform(function () {
	      var values = [];
	      var index = 0;
	      var remaining = 1;
	      forOf(iterable, false, function (promise) {
	        var $index = index++;
	        var alreadyCalled = false;
	        values.push(undefined);
	        remaining++;
	        C.resolve(promise).then(function (value) {
	          if (alreadyCalled) return;
	          alreadyCalled = true;
	          values[$index] = value;
	          --remaining || resolve(values);
	        }, reject);
	      });
	      --remaining || resolve(values);
	    });
	    if (result.e) reject(result.v);
	    return capability.promise;
	  },
	  // 25.4.4.4 Promise.race(iterable)
	  race: function race(iterable) {
	    var C = this;
	    var capability = newPromiseCapability(C);
	    var reject = capability.reject;
	    var result = perform(function () {
	      forOf(iterable, false, function (promise) {
	        C.resolve(promise).then(capability.resolve, reject);
	      });
	    });
	    if (result.e) reject(result.v);
	    return capability.promise;
	  }
	});


/***/ }),
/* 361 */
/***/ (function(module, exports, __webpack_require__) {

	// getting tag from 19.1.3.6 Object.prototype.toString()
	var cof = __webpack_require__(24);
	var TAG = __webpack_require__(354)('toStringTag');
	// ES3 wrong here
	var ARG = cof(function () { return arguments; }()) == 'Arguments';
	
	// fallback for IE11 Script Access Denied error
	var tryGet = function (it, key) {
	  try {
	    return it[key];
	  } catch (e) { /* empty */ }
	};
	
	module.exports = function (it) {
	  var O, T, B;
	  return it === undefined ? 'Undefined' : it === null ? 'Null'
	    // @@toStringTag case
	    : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T
	    // builtinTag case
	    : ARG ? cof(O)
	    // ES3 arguments fallback
	    : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;
	};


/***/ }),
/* 362 */
/***/ (function(module, exports) {

	module.exports = function (it, Constructor, name, forbiddenField) {
	  if (!(it instanceof Constructor) || (forbiddenField !== undefined && forbiddenField in it)) {
	    throw TypeError(name + ': incorrect invocation!');
	  } return it;
	};


/***/ }),
/* 363 */
/***/ (function(module, exports, __webpack_require__) {

	var ctx = __webpack_require__(8);
	var call = __webpack_require__(364);
	var isArrayIter = __webpack_require__(365);
	var anObject = __webpack_require__(12);
	var toLength = __webpack_require__(324);
	var getIterFn = __webpack_require__(366);
	var BREAK = {};
	var RETURN = {};
	var exports = module.exports = function (iterable, entries, fn, that, ITERATOR) {
	  var iterFn = ITERATOR ? function () { return iterable; } : getIterFn(iterable);
	  var f = ctx(fn, that, entries ? 2 : 1);
	  var index = 0;
	  var length, step, iterator, result;
	  if (typeof iterFn != 'function') throw TypeError(iterable + ' is not iterable!');
	  // fast case for arrays with default iterator
	  if (isArrayIter(iterFn)) for (length = toLength(iterable.length); length > index; index++) {
	    result = entries ? f(anObject(step = iterable[index])[0], step[1]) : f(iterable[index]);
	    if (result === BREAK || result === RETURN) return result;
	  } else for (iterator = iterFn.call(iterable); !(step = iterator.next()).done;) {
	    result = call(iterator, f, step.value, entries);
	    if (result === BREAK || result === RETURN) return result;
	  }
	};
	exports.BREAK = BREAK;
	exports.RETURN = RETURN;


/***/ }),
/* 364 */
/***/ (function(module, exports, __webpack_require__) {

	// call something on iterator step with safe closing on error
	var anObject = __webpack_require__(12);
	module.exports = function (iterator, fn, value, entries) {
	  try {
	    return entries ? fn(anObject(value)[0], value[1]) : fn(value);
	  // 7.4.6 IteratorClose(iterator, completion)
	  } catch (e) {
	    var ret = iterator['return'];
	    if (ret !== undefined) anObject(ret.call(iterator));
	    throw e;
	  }
	};


/***/ }),
/* 365 */
/***/ (function(module, exports, __webpack_require__) {

	// check on default Array iterator
	var Iterators = __webpack_require__(349);
	var ITERATOR = __webpack_require__(354)('iterator');
	var ArrayProto = Array.prototype;
	
	module.exports = function (it) {
	  return it !== undefined && (Iterators.Array === it || ArrayProto[ITERATOR] === it);
	};


/***/ }),
/* 366 */
/***/ (function(module, exports, __webpack_require__) {

	var classof = __webpack_require__(361);
	var ITERATOR = __webpack_require__(354)('iterator');
	var Iterators = __webpack_require__(349);
	module.exports = __webpack_require__(7).getIteratorMethod = function (it) {
	  if (it != undefined) return it[ITERATOR]
	    || it['@@iterator']
	    || Iterators[classof(it)];
	};


/***/ }),
/* 367 */
/***/ (function(module, exports, __webpack_require__) {

	// 7.3.20 SpeciesConstructor(O, defaultConstructor)
	var anObject = __webpack_require__(12);
	var aFunction = __webpack_require__(9);
	var SPECIES = __webpack_require__(354)('species');
	module.exports = function (O, D) {
	  var C = anObject(O).constructor;
	  var S;
	  return C === undefined || (S = anObject(C)[SPECIES]) == undefined ? D : aFunction(S);
	};


/***/ }),
/* 368 */
/***/ (function(module, exports, __webpack_require__) {

	var global = __webpack_require__(6);
	var macrotask = __webpack_require__(21).set;
	var Observer = global.MutationObserver || global.WebKitMutationObserver;
	var process = global.process;
	var Promise = global.Promise;
	var isNode = __webpack_require__(24)(process) == 'process';
	
	module.exports = function () {
	  var head, last, notify;
	
	  var flush = function () {
	    var parent, fn;
	    if (isNode && (parent = process.domain)) parent.exit();
	    while (head) {
	      fn = head.fn;
	      head = head.next;
	      try {
	        fn();
	      } catch (e) {
	        if (head) notify();
	        else last = undefined;
	        throw e;
	      }
	    } last = undefined;
	    if (parent) parent.enter();
	  };
	
	  // Node.js
	  if (isNode) {
	    notify = function () {
	      process.nextTick(flush);
	    };
	  // browsers with MutationObserver, except iOS Safari - https://github.com/zloirock/core-js/issues/339
	  } else if (Observer && !(global.navigator && global.navigator.standalone)) {
	    var toggle = true;
	    var node = document.createTextNode('');
	    new Observer(flush).observe(node, { characterData: true }); // eslint-disable-line no-new
	    notify = function () {
	      node.data = toggle = !toggle;
	    };
	  // environments with maybe non-completely correct, but existent Promise
	  } else if (Promise && Promise.resolve) {
	    // Promise.resolve without an argument throws an error in LG WebOS 2
	    var promise = Promise.resolve(undefined);
	    notify = function () {
	      promise.then(flush);
	    };
	  // for other environments - macrotask based on:
	  // - setImmediate
	  // - MessageChannel
	  // - window.postMessag
	  // - onreadystatechange
	  // - setTimeout
	  } else {
	    notify = function () {
	      // strange IE + webpack dev server bug - use .call(global)
	      macrotask.call(global, flush);
	    };
	  }
	
	  return function (fn) {
	    var task = { fn: fn, next: undefined };
	    if (last) last.next = task;
	    if (!head) {
	      head = task;
	      notify();
	    } last = task;
	  };
	};


/***/ }),
/* 369 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	// 25.4.1.5 NewPromiseCapability(C)
	var aFunction = __webpack_require__(9);
	
	function PromiseCapability(C) {
	  var resolve, reject;
	  this.promise = new C(function ($$resolve, $$reject) {
	    if (resolve !== undefined || reject !== undefined) throw TypeError('Bad Promise constructor');
	    resolve = $$resolve;
	    reject = $$reject;
	  });
	  this.resolve = aFunction(resolve);
	  this.reject = aFunction(reject);
	}
	
	module.exports.f = function (C) {
	  return new PromiseCapability(C);
	};


/***/ }),
/* 370 */
/***/ (function(module, exports) {

	module.exports = function (exec) {
	  try {
	    return { e: false, v: exec() };
	  } catch (e) {
	    return { e: true, v: e };
	  }
	};


/***/ }),
/* 371 */
/***/ (function(module, exports, __webpack_require__) {

	var global = __webpack_require__(6);
	var navigator = global.navigator;
	
	module.exports = navigator && navigator.userAgent || '';


/***/ }),
/* 372 */
/***/ (function(module, exports, __webpack_require__) {

	var anObject = __webpack_require__(12);
	var isObject = __webpack_require__(13);
	var newPromiseCapability = __webpack_require__(369);
	
	module.exports = function (C, x) {
	  anObject(C);
	  if (isObject(x) && x.constructor === C) return x;
	  var promiseCapability = newPromiseCapability.f(C);
	  var resolve = promiseCapability.resolve;
	  resolve(x);
	  return promiseCapability.promise;
	};


/***/ }),
/* 373 */
/***/ (function(module, exports, __webpack_require__) {

	var hide = __webpack_require__(10);
	module.exports = function (target, src, safe) {
	  for (var key in src) {
	    if (safe && target[key]) target[key] = src[key];
	    else hide(target, key, src[key]);
	  } return target;
	};


/***/ }),
/* 374 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	var global = __webpack_require__(6);
	var core = __webpack_require__(7);
	var dP = __webpack_require__(11);
	var DESCRIPTORS = __webpack_require__(15);
	var SPECIES = __webpack_require__(354)('species');
	
	module.exports = function (KEY) {
	  var C = typeof core[KEY] == 'function' ? core[KEY] : global[KEY];
	  if (DESCRIPTORS && C && !C[SPECIES]) dP.f(C, SPECIES, {
	    configurable: true,
	    get: function () { return this; }
	  });
	};


/***/ }),
/* 375 */
/***/ (function(module, exports, __webpack_require__) {

	var ITERATOR = __webpack_require__(354)('iterator');
	var SAFE_CLOSING = false;
	
	try {
	  var riter = [7][ITERATOR]();
	  riter['return'] = function () { SAFE_CLOSING = true; };
	  // eslint-disable-next-line no-throw-literal
	  Array.from(riter, function () { throw 2; });
	} catch (e) { /* empty */ }
	
	module.exports = function (exec, skipClosing) {
	  if (!skipClosing && !SAFE_CLOSING) return false;
	  var safe = false;
	  try {
	    var arr = [7];
	    var iter = arr[ITERATOR]();
	    iter.next = function () { return { done: safe = true }; };
	    arr[ITERATOR] = function () { return iter; };
	    exec(arr);
	  } catch (e) { /* empty */ }
	  return safe;
	};


/***/ }),
/* 376 */
/***/ (function(module, exports, __webpack_require__) {

	// https://github.com/tc39/proposal-promise-finally
	'use strict';
	var $export = __webpack_require__(5);
	var core = __webpack_require__(7);
	var global = __webpack_require__(6);
	var speciesConstructor = __webpack_require__(367);
	var promiseResolve = __webpack_require__(372);
	
	$export($export.P + $export.R, 'Promise', { 'finally': function (onFinally) {
	  var C = speciesConstructor(this, core.Promise || global.Promise);
	  var isFunction = typeof onFinally == 'function';
	  return this.then(
	    isFunction ? function (x) {
	      return promiseResolve(C, onFinally()).then(function () { return x; });
	    } : onFinally,
	    isFunction ? function (e) {
	      return promiseResolve(C, onFinally()).then(function () { throw e; });
	    } : onFinally
	  );
	} });


/***/ }),
/* 377 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	// https://github.com/tc39/proposal-promise-try
	var $export = __webpack_require__(5);
	var newPromiseCapability = __webpack_require__(369);
	var perform = __webpack_require__(370);
	
	$export($export.S, 'Promise', { 'try': function (callbackfn) {
	  var promiseCapability = newPromiseCapability.f(this);
	  var result = perform(callbackfn);
	  (result.e ? promiseCapability.reject : promiseCapability.resolve)(result.v);
	  return promiseCapability.promise;
	} });


/***/ }),
/* 378 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _defineProperty2 = __webpack_require__(337);
	
	var _defineProperty3 = _interopRequireDefault(_defineProperty2);
	
	var _assign = __webpack_require__(314);
	
	var _assign2 = _interopRequireDefault(_assign);
	
	exports.default = counterReducer;
	
	var _generalinfo = __webpack_require__(379);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	// ------------------------------------
	// Action Handlers
	// ------------------------------------
	var ACTION_HANDLERS = (0, _defineProperty3.default)({}, _generalinfo.ACTION_UPDATE_GENERAL_INFO, function (state, action) {
	
	  return (0, _assign2.default)({}, state, action.payload);
	});
	
	// ------------------------------------
	// Reducer
	// ------------------------------------
	var initialState = {
	  accessToken: null,
	  displayName: "Unknown",
	  avatar: null,
	  notifications: [] // {content: "abcd", id: "1"}
	};
	function counterReducer() {
	  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;
	  var action = arguments[1];
	
	  var handler = ACTION_HANDLERS[action.type];
	
	  return handler ? handler(state, action) : state;
	}

/***/ }),
/* 379 */
/***/ (function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.updateGeneralInfo = updateGeneralInfo;
	// ------------------------------------
	// Constants
	// ------------------------------------
	var ACTION_UPDATE_GENERAL_INFO = exports.ACTION_UPDATE_GENERAL_INFO = 'ACTION_UPDATE_GENERAL_INFO';
	
	// ------------------------------------
	// Actions
	// ------------------------------------
	function updateGeneralInfo() {
	  var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
	
	  return {
	    type: ACTION_UPDATE_GENERAL_INFO,
	    payload: value
	  };
	}
	
	var actions = exports.actions = {
	  updateGeneralInfo: updateGeneralInfo
	};

/***/ }),
/* 380 */
/***/ (function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.locationChange = locationChange;
	exports.default = locationReducer;
	// ------------------------------------
	// Constants
	// ------------------------------------
	var LOCATION_CHANGE = exports.LOCATION_CHANGE = 'LOCATION_CHANGE';
	
	// ------------------------------------
	// Actions
	// ------------------------------------
	function locationChange() {
	  var location = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '/';
	
	  return {
	    type: LOCATION_CHANGE,
	    payload: location
	  };
	}
	
	// ------------------------------------
	// Specialized Action Creator
	// ------------------------------------
	var updateLocation = exports.updateLocation = function updateLocation(_ref) {
	  var dispatch = _ref.dispatch;
	
	  return function (nextLocation) {
	    return dispatch(locationChange(nextLocation));
	  };
	};
	
	// ------------------------------------
	// Reducer
	// ------------------------------------
	var initialState = null;
	function locationReducer() {
	  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;
	  var action = arguments[1];
	
	  return action.type === LOCATION_CHANGE ? action.payload : state;
	}

/***/ }),
/* 381 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _getPrototypeOf = __webpack_require__(382);
	
	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);
	
	var _classCallCheck2 = __webpack_require__(386);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _createClass2 = __webpack_require__(387);
	
	var _createClass3 = _interopRequireDefault(_createClass2);
	
	var _possibleConstructorReturn2 = __webpack_require__(388);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(405);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _react = __webpack_require__(25);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactRouter = __webpack_require__(232);
	
	var _reactRedux = __webpack_require__(413);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var AppContainer = function (_Component) {
	  (0, _inherits3.default)(AppContainer, _Component);
	
	  function AppContainer(props) {
	    (0, _classCallCheck3.default)(this, AppContainer);
	    return (0, _possibleConstructorReturn3.default)(this, (AppContainer.__proto__ || (0, _getPrototypeOf2.default)(AppContainer)).call(this, props));
	    // $.fn.select2.defaults.set("theme", "bootstrap");
	  }
	
	  (0, _createClass3.default)(AppContainer, [{
	    key: 'shouldComponentUpdate',
	    value: function shouldComponentUpdate() {
	      return false;
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var _props = this.props,
	          routes = _props.routes,
	          store = _props.store;
	
	
	      return _react2.default.createElement(
	        _reactRedux.Provider,
	        { store: store },
	        _react2.default.createElement(
	          'div',
	          { style: { height: '100%' } },
	          _react2.default.createElement(_reactRouter.Router, { history: _reactRouter.browserHistory, children: routes })
	        )
	      );
	    }
	  }]);
	  return AppContainer;
	}(_react.Component);
	
	AppContainer.propTypes = {
	  routes: _react.PropTypes.object.isRequired,
	  store: _react.PropTypes.object.isRequired
	};
	exports.default = AppContainer;

/***/ }),
/* 382 */
/***/ (function(module, exports, __webpack_require__) {

	module.exports = { "default": __webpack_require__(383), __esModule: true };

/***/ }),
/* 383 */
/***/ (function(module, exports, __webpack_require__) {

	__webpack_require__(384);
	module.exports = __webpack_require__(7).Object.getPrototypeOf;


/***/ }),
/* 384 */
/***/ (function(module, exports, __webpack_require__) {

	// 19.1.2.9 Object.getPrototypeOf(O)
	var toObject = __webpack_require__(334);
	var $getPrototypeOf = __webpack_require__(355);
	
	__webpack_require__(385)('getPrototypeOf', function () {
	  return function getPrototypeOf(it) {
	    return $getPrototypeOf(toObject(it));
	  };
	});


/***/ }),
/* 385 */
/***/ (function(module, exports, __webpack_require__) {

	// most Object methods by ES6 should accept primitives
	var $export = __webpack_require__(5);
	var core = __webpack_require__(7);
	var fails = __webpack_require__(16);
	module.exports = function (KEY, exec) {
	  var fn = (core.Object || {})[KEY] || Object[KEY];
	  var exp = {};
	  exp[KEY] = exec(fn);
	  $export($export.S + $export.F * fails(function () { fn(1); }), 'Object', exp);
	};


/***/ }),
/* 386 */
/***/ (function(module, exports) {

	"use strict";
	
	exports.__esModule = true;
	
	exports.default = function (instance, Constructor) {
	  if (!(instance instanceof Constructor)) {
	    throw new TypeError("Cannot call a class as a function");
	  }
	};

/***/ }),
/* 387 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	exports.__esModule = true;
	
	var _defineProperty = __webpack_require__(338);
	
	var _defineProperty2 = _interopRequireDefault(_defineProperty);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = function () {
	  function defineProperties(target, props) {
	    for (var i = 0; i < props.length; i++) {
	      var descriptor = props[i];
	      descriptor.enumerable = descriptor.enumerable || false;
	      descriptor.configurable = true;
	      if ("value" in descriptor) descriptor.writable = true;
	      (0, _defineProperty2.default)(target, descriptor.key, descriptor);
	    }
	  }
	
	  return function (Constructor, protoProps, staticProps) {
	    if (protoProps) defineProperties(Constructor.prototype, protoProps);
	    if (staticProps) defineProperties(Constructor, staticProps);
	    return Constructor;
	  };
	}();

/***/ }),
/* 388 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	exports.__esModule = true;
	
	var _typeof2 = __webpack_require__(389);
	
	var _typeof3 = _interopRequireDefault(_typeof2);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = function (self, call) {
	  if (!self) {
	    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
	  }
	
	  return call && ((typeof call === "undefined" ? "undefined" : (0, _typeof3.default)(call)) === "object" || typeof call === "function") ? call : self;
	};

/***/ }),
/* 389 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	exports.__esModule = true;
	
	var _iterator = __webpack_require__(390);
	
	var _iterator2 = _interopRequireDefault(_iterator);
	
	var _symbol = __webpack_require__(393);
	
	var _symbol2 = _interopRequireDefault(_symbol);
	
	var _typeof = typeof _symbol2.default === "function" && typeof _iterator2.default === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof _symbol2.default === "function" && obj.constructor === _symbol2.default && obj !== _symbol2.default.prototype ? "symbol" : typeof obj; };
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = typeof _symbol2.default === "function" && _typeof(_iterator2.default) === "symbol" ? function (obj) {
	  return typeof obj === "undefined" ? "undefined" : _typeof(obj);
	} : function (obj) {
	  return obj && typeof _symbol2.default === "function" && obj.constructor === _symbol2.default && obj !== _symbol2.default.prototype ? "symbol" : typeof obj === "undefined" ? "undefined" : _typeof(obj);
	};

/***/ }),
/* 390 */
/***/ (function(module, exports, __webpack_require__) {

	module.exports = { "default": __webpack_require__(391), __esModule: true };

/***/ }),
/* 391 */
/***/ (function(module, exports, __webpack_require__) {

	__webpack_require__(345);
	__webpack_require__(356);
	module.exports = __webpack_require__(392).f('iterator');


/***/ }),
/* 392 */
/***/ (function(module, exports, __webpack_require__) {

	exports.f = __webpack_require__(354);


/***/ }),
/* 393 */
/***/ (function(module, exports, __webpack_require__) {

	module.exports = { "default": __webpack_require__(394), __esModule: true };

/***/ }),
/* 394 */
/***/ (function(module, exports, __webpack_require__) {

	__webpack_require__(395);
	__webpack_require__(344);
	__webpack_require__(403);
	__webpack_require__(404);
	module.exports = __webpack_require__(7).Symbol;


/***/ }),
/* 395 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	// ECMAScript 6 symbols shim
	var global = __webpack_require__(6);
	var has = __webpack_require__(20);
	var DESCRIPTORS = __webpack_require__(15);
	var $export = __webpack_require__(5);
	var redefine = __webpack_require__(348);
	var META = __webpack_require__(396).KEY;
	var $fails = __webpack_require__(16);
	var shared = __webpack_require__(328);
	var setToStringTag = __webpack_require__(353);
	var uid = __webpack_require__(330);
	var wks = __webpack_require__(354);
	var wksExt = __webpack_require__(392);
	var wksDefine = __webpack_require__(397);
	var enumKeys = __webpack_require__(398);
	var isArray = __webpack_require__(399);
	var anObject = __webpack_require__(12);
	var isObject = __webpack_require__(13);
	var toObject = __webpack_require__(334);
	var toIObject = __webpack_require__(320);
	var toPrimitive = __webpack_require__(18);
	var createDesc = __webpack_require__(19);
	var _create = __webpack_require__(351);
	var gOPNExt = __webpack_require__(400);
	var $GOPD = __webpack_require__(402);
	var $GOPS = __webpack_require__(332);
	var $DP = __webpack_require__(11);
	var $keys = __webpack_require__(318);
	var gOPD = $GOPD.f;
	var dP = $DP.f;
	var gOPN = gOPNExt.f;
	var $Symbol = global.Symbol;
	var $JSON = global.JSON;
	var _stringify = $JSON && $JSON.stringify;
	var PROTOTYPE = 'prototype';
	var HIDDEN = wks('_hidden');
	var TO_PRIMITIVE = wks('toPrimitive');
	var isEnum = {}.propertyIsEnumerable;
	var SymbolRegistry = shared('symbol-registry');
	var AllSymbols = shared('symbols');
	var OPSymbols = shared('op-symbols');
	var ObjectProto = Object[PROTOTYPE];
	var USE_NATIVE = typeof $Symbol == 'function' && !!$GOPS.f;
	var QObject = global.QObject;
	// Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173
	var setter = !QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild;
	
	// fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687
	var setSymbolDesc = DESCRIPTORS && $fails(function () {
	  return _create(dP({}, 'a', {
	    get: function () { return dP(this, 'a', { value: 7 }).a; }
	  })).a != 7;
	}) ? function (it, key, D) {
	  var protoDesc = gOPD(ObjectProto, key);
	  if (protoDesc) delete ObjectProto[key];
	  dP(it, key, D);
	  if (protoDesc && it !== ObjectProto) dP(ObjectProto, key, protoDesc);
	} : dP;
	
	var wrap = function (tag) {
	  var sym = AllSymbols[tag] = _create($Symbol[PROTOTYPE]);
	  sym._k = tag;
	  return sym;
	};
	
	var isSymbol = USE_NATIVE && typeof $Symbol.iterator == 'symbol' ? function (it) {
	  return typeof it == 'symbol';
	} : function (it) {
	  return it instanceof $Symbol;
	};
	
	var $defineProperty = function defineProperty(it, key, D) {
	  if (it === ObjectProto) $defineProperty(OPSymbols, key, D);
	  anObject(it);
	  key = toPrimitive(key, true);
	  anObject(D);
	  if (has(AllSymbols, key)) {
	    if (!D.enumerable) {
	      if (!has(it, HIDDEN)) dP(it, HIDDEN, createDesc(1, {}));
	      it[HIDDEN][key] = true;
	    } else {
	      if (has(it, HIDDEN) && it[HIDDEN][key]) it[HIDDEN][key] = false;
	      D = _create(D, { enumerable: createDesc(0, false) });
	    } return setSymbolDesc(it, key, D);
	  } return dP(it, key, D);
	};
	var $defineProperties = function defineProperties(it, P) {
	  anObject(it);
	  var keys = enumKeys(P = toIObject(P));
	  var i = 0;
	  var l = keys.length;
	  var key;
	  while (l > i) $defineProperty(it, key = keys[i++], P[key]);
	  return it;
	};
	var $create = function create(it, P) {
	  return P === undefined ? _create(it) : $defineProperties(_create(it), P);
	};
	var $propertyIsEnumerable = function propertyIsEnumerable(key) {
	  var E = isEnum.call(this, key = toPrimitive(key, true));
	  if (this === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key)) return false;
	  return E || !has(this, key) || !has(AllSymbols, key) || has(this, HIDDEN) && this[HIDDEN][key] ? E : true;
	};
	var $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(it, key) {
	  it = toIObject(it);
	  key = toPrimitive(key, true);
	  if (it === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key)) return;
	  var D = gOPD(it, key);
	  if (D && has(AllSymbols, key) && !(has(it, HIDDEN) && it[HIDDEN][key])) D.enumerable = true;
	  return D;
	};
	var $getOwnPropertyNames = function getOwnPropertyNames(it) {
	  var names = gOPN(toIObject(it));
	  var result = [];
	  var i = 0;
	  var key;
	  while (names.length > i) {
	    if (!has(AllSymbols, key = names[i++]) && key != HIDDEN && key != META) result.push(key);
	  } return result;
	};
	var $getOwnPropertySymbols = function getOwnPropertySymbols(it) {
	  var IS_OP = it === ObjectProto;
	  var names = gOPN(IS_OP ? OPSymbols : toIObject(it));
	  var result = [];
	  var i = 0;
	  var key;
	  while (names.length > i) {
	    if (has(AllSymbols, key = names[i++]) && (IS_OP ? has(ObjectProto, key) : true)) result.push(AllSymbols[key]);
	  } return result;
	};
	
	// 19.4.1.1 Symbol([description])
	if (!USE_NATIVE) {
	  $Symbol = function Symbol() {
	    if (this instanceof $Symbol) throw TypeError('Symbol is not a constructor!');
	    var tag = uid(arguments.length > 0 ? arguments[0] : undefined);
	    var $set = function (value) {
	      if (this === ObjectProto) $set.call(OPSymbols, value);
	      if (has(this, HIDDEN) && has(this[HIDDEN], tag)) this[HIDDEN][tag] = false;
	      setSymbolDesc(this, tag, createDesc(1, value));
	    };
	    if (DESCRIPTORS && setter) setSymbolDesc(ObjectProto, tag, { configurable: true, set: $set });
	    return wrap(tag);
	  };
	  redefine($Symbol[PROTOTYPE], 'toString', function toString() {
	    return this._k;
	  });
	
	  $GOPD.f = $getOwnPropertyDescriptor;
	  $DP.f = $defineProperty;
	  __webpack_require__(401).f = gOPNExt.f = $getOwnPropertyNames;
	  __webpack_require__(333).f = $propertyIsEnumerable;
	  $GOPS.f = $getOwnPropertySymbols;
	
	  if (DESCRIPTORS && !__webpack_require__(329)) {
	    redefine(ObjectProto, 'propertyIsEnumerable', $propertyIsEnumerable, true);
	  }
	
	  wksExt.f = function (name) {
	    return wrap(wks(name));
	  };
	}
	
	$export($export.G + $export.W + $export.F * !USE_NATIVE, { Symbol: $Symbol });
	
	for (var es6Symbols = (
	  // 19.4.2.2, 19.4.2.3, 19.4.2.4, 19.4.2.6, 19.4.2.8, 19.4.2.9, 19.4.2.10, 19.4.2.11, 19.4.2.12, 19.4.2.13, 19.4.2.14
	  'hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables'
	).split(','), j = 0; es6Symbols.length > j;)wks(es6Symbols[j++]);
	
	for (var wellKnownSymbols = $keys(wks.store), k = 0; wellKnownSymbols.length > k;) wksDefine(wellKnownSymbols[k++]);
	
	$export($export.S + $export.F * !USE_NATIVE, 'Symbol', {
	  // 19.4.2.1 Symbol.for(key)
	  'for': function (key) {
	    return has(SymbolRegistry, key += '')
	      ? SymbolRegistry[key]
	      : SymbolRegistry[key] = $Symbol(key);
	  },
	  // 19.4.2.5 Symbol.keyFor(sym)
	  keyFor: function keyFor(sym) {
	    if (!isSymbol(sym)) throw TypeError(sym + ' is not a symbol!');
	    for (var key in SymbolRegistry) if (SymbolRegistry[key] === sym) return key;
	  },
	  useSetter: function () { setter = true; },
	  useSimple: function () { setter = false; }
	});
	
	$export($export.S + $export.F * !USE_NATIVE, 'Object', {
	  // 19.1.2.2 Object.create(O [, Properties])
	  create: $create,
	  // 19.1.2.4 Object.defineProperty(O, P, Attributes)
	  defineProperty: $defineProperty,
	  // 19.1.2.3 Object.defineProperties(O, Properties)
	  defineProperties: $defineProperties,
	  // 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)
	  getOwnPropertyDescriptor: $getOwnPropertyDescriptor,
	  // 19.1.2.7 Object.getOwnPropertyNames(O)
	  getOwnPropertyNames: $getOwnPropertyNames,
	  // 19.1.2.8 Object.getOwnPropertySymbols(O)
	  getOwnPropertySymbols: $getOwnPropertySymbols
	});
	
	// Chrome 38 and 39 `Object.getOwnPropertySymbols` fails on primitives
	// https://bugs.chromium.org/p/v8/issues/detail?id=3443
	var FAILS_ON_PRIMITIVES = $fails(function () { $GOPS.f(1); });
	
	$export($export.S + $export.F * FAILS_ON_PRIMITIVES, 'Object', {
	  getOwnPropertySymbols: function getOwnPropertySymbols(it) {
	    return $GOPS.f(toObject(it));
	  }
	});
	
	// 24.3.2 JSON.stringify(value [, replacer [, space]])
	$JSON && $export($export.S + $export.F * (!USE_NATIVE || $fails(function () {
	  var S = $Symbol();
	  // MS Edge converts symbol values to JSON as {}
	  // WebKit converts symbol values to JSON as null
	  // V8 throws on boxed symbols
	  return _stringify([S]) != '[null]' || _stringify({ a: S }) != '{}' || _stringify(Object(S)) != '{}';
	})), 'JSON', {
	  stringify: function stringify(it) {
	    var args = [it];
	    var i = 1;
	    var replacer, $replacer;
	    while (arguments.length > i) args.push(arguments[i++]);
	    $replacer = replacer = args[1];
	    if (!isObject(replacer) && it === undefined || isSymbol(it)) return; // IE8 returns string on undefined
	    if (!isArray(replacer)) replacer = function (key, value) {
	      if (typeof $replacer == 'function') value = $replacer.call(this, key, value);
	      if (!isSymbol(value)) return value;
	    };
	    args[1] = replacer;
	    return _stringify.apply($JSON, args);
	  }
	});
	
	// 19.4.3.4 Symbol.prototype[@@toPrimitive](hint)
	$Symbol[PROTOTYPE][TO_PRIMITIVE] || __webpack_require__(10)($Symbol[PROTOTYPE], TO_PRIMITIVE, $Symbol[PROTOTYPE].valueOf);
	// 19.4.3.5 Symbol.prototype[@@toStringTag]
	setToStringTag($Symbol, 'Symbol');
	// 20.2.1.9 Math[@@toStringTag]
	setToStringTag(Math, 'Math', true);
	// 24.3.3 JSON[@@toStringTag]
	setToStringTag(global.JSON, 'JSON', true);


/***/ }),
/* 396 */
/***/ (function(module, exports, __webpack_require__) {

	var META = __webpack_require__(330)('meta');
	var isObject = __webpack_require__(13);
	var has = __webpack_require__(20);
	var setDesc = __webpack_require__(11).f;
	var id = 0;
	var isExtensible = Object.isExtensible || function () {
	  return true;
	};
	var FREEZE = !__webpack_require__(16)(function () {
	  return isExtensible(Object.preventExtensions({}));
	});
	var setMeta = function (it) {
	  setDesc(it, META, { value: {
	    i: 'O' + ++id, // object ID
	    w: {}          // weak collections IDs
	  } });
	};
	var fastKey = function (it, create) {
	  // return primitive with prefix
	  if (!isObject(it)) return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;
	  if (!has(it, META)) {
	    // can't set metadata to uncaught frozen object
	    if (!isExtensible(it)) return 'F';
	    // not necessary to add metadata
	    if (!create) return 'E';
	    // add missing metadata
	    setMeta(it);
	  // return object ID
	  } return it[META].i;
	};
	var getWeak = function (it, create) {
	  if (!has(it, META)) {
	    // can't set metadata to uncaught frozen object
	    if (!isExtensible(it)) return true;
	    // not necessary to add metadata
	    if (!create) return false;
	    // add missing metadata
	    setMeta(it);
	  // return hash weak collections IDs
	  } return it[META].w;
	};
	// add metadata on freeze-family methods calling
	var onFreeze = function (it) {
	  if (FREEZE && meta.NEED && isExtensible(it) && !has(it, META)) setMeta(it);
	  return it;
	};
	var meta = module.exports = {
	  KEY: META,
	  NEED: false,
	  fastKey: fastKey,
	  getWeak: getWeak,
	  onFreeze: onFreeze
	};


/***/ }),
/* 397 */
/***/ (function(module, exports, __webpack_require__) {

	var global = __webpack_require__(6);
	var core = __webpack_require__(7);
	var LIBRARY = __webpack_require__(329);
	var wksExt = __webpack_require__(392);
	var defineProperty = __webpack_require__(11).f;
	module.exports = function (name) {
	  var $Symbol = core.Symbol || (core.Symbol = LIBRARY ? {} : global.Symbol || {});
	  if (name.charAt(0) != '_' && !(name in $Symbol)) defineProperty($Symbol, name, { value: wksExt.f(name) });
	};


/***/ }),
/* 398 */
/***/ (function(module, exports, __webpack_require__) {

	// all enumerable object keys, includes symbols
	var getKeys = __webpack_require__(318);
	var gOPS = __webpack_require__(332);
	var pIE = __webpack_require__(333);
	module.exports = function (it) {
	  var result = getKeys(it);
	  var getSymbols = gOPS.f;
	  if (getSymbols) {
	    var symbols = getSymbols(it);
	    var isEnum = pIE.f;
	    var i = 0;
	    var key;
	    while (symbols.length > i) if (isEnum.call(it, key = symbols[i++])) result.push(key);
	  } return result;
	};


/***/ }),
/* 399 */
/***/ (function(module, exports, __webpack_require__) {

	// 7.2.2 IsArray(argument)
	var cof = __webpack_require__(24);
	module.exports = Array.isArray || function isArray(arg) {
	  return cof(arg) == 'Array';
	};


/***/ }),
/* 400 */
/***/ (function(module, exports, __webpack_require__) {

	// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window
	var toIObject = __webpack_require__(320);
	var gOPN = __webpack_require__(401).f;
	var toString = {}.toString;
	
	var windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames
	  ? Object.getOwnPropertyNames(window) : [];
	
	var getWindowNames = function (it) {
	  try {
	    return gOPN(it);
	  } catch (e) {
	    return windowNames.slice();
	  }
	};
	
	module.exports.f = function getOwnPropertyNames(it) {
	  return windowNames && toString.call(it) == '[object Window]' ? getWindowNames(it) : gOPN(toIObject(it));
	};


/***/ }),
/* 401 */
/***/ (function(module, exports, __webpack_require__) {

	// 19.1.2.7 / 15.2.3.4 Object.getOwnPropertyNames(O)
	var $keys = __webpack_require__(319);
	var hiddenKeys = __webpack_require__(331).concat('length', 'prototype');
	
	exports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {
	  return $keys(O, hiddenKeys);
	};


/***/ }),
/* 402 */
/***/ (function(module, exports, __webpack_require__) {

	var pIE = __webpack_require__(333);
	var createDesc = __webpack_require__(19);
	var toIObject = __webpack_require__(320);
	var toPrimitive = __webpack_require__(18);
	var has = __webpack_require__(20);
	var IE8_DOM_DEFINE = __webpack_require__(14);
	var gOPD = Object.getOwnPropertyDescriptor;
	
	exports.f = __webpack_require__(15) ? gOPD : function getOwnPropertyDescriptor(O, P) {
	  O = toIObject(O);
	  P = toPrimitive(P, true);
	  if (IE8_DOM_DEFINE) try {
	    return gOPD(O, P);
	  } catch (e) { /* empty */ }
	  if (has(O, P)) return createDesc(!pIE.f.call(O, P), O[P]);
	};


/***/ }),
/* 403 */
/***/ (function(module, exports, __webpack_require__) {

	__webpack_require__(397)('asyncIterator');


/***/ }),
/* 404 */
/***/ (function(module, exports, __webpack_require__) {

	__webpack_require__(397)('observable');


/***/ }),
/* 405 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	exports.__esModule = true;
	
	var _setPrototypeOf = __webpack_require__(406);
	
	var _setPrototypeOf2 = _interopRequireDefault(_setPrototypeOf);
	
	var _create = __webpack_require__(410);
	
	var _create2 = _interopRequireDefault(_create);
	
	var _typeof2 = __webpack_require__(389);
	
	var _typeof3 = _interopRequireDefault(_typeof2);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = function (subClass, superClass) {
	  if (typeof superClass !== "function" && superClass !== null) {
	    throw new TypeError("Super expression must either be null or a function, not " + (typeof superClass === "undefined" ? "undefined" : (0, _typeof3.default)(superClass)));
	  }
	
	  subClass.prototype = (0, _create2.default)(superClass && superClass.prototype, {
	    constructor: {
	      value: subClass,
	      enumerable: false,
	      writable: true,
	      configurable: true
	    }
	  });
	  if (superClass) _setPrototypeOf2.default ? (0, _setPrototypeOf2.default)(subClass, superClass) : subClass.__proto__ = superClass;
	};

/***/ }),
/* 406 */
/***/ (function(module, exports, __webpack_require__) {

	module.exports = { "default": __webpack_require__(407), __esModule: true };

/***/ }),
/* 407 */
/***/ (function(module, exports, __webpack_require__) {

	__webpack_require__(408);
	module.exports = __webpack_require__(7).Object.setPrototypeOf;


/***/ }),
/* 408 */
/***/ (function(module, exports, __webpack_require__) {

	// 19.1.3.19 Object.setPrototypeOf(O, proto)
	var $export = __webpack_require__(5);
	$export($export.S, 'Object', { setPrototypeOf: __webpack_require__(409).set });


/***/ }),
/* 409 */
/***/ (function(module, exports, __webpack_require__) {

	// Works with __proto__ only. Old v8 can't work with null proto objects.
	/* eslint-disable no-proto */
	var isObject = __webpack_require__(13);
	var anObject = __webpack_require__(12);
	var check = function (O, proto) {
	  anObject(O);
	  if (!isObject(proto) && proto !== null) throw TypeError(proto + ": can't set as prototype!");
	};
	module.exports = {
	  set: Object.setPrototypeOf || ('__proto__' in {} ? // eslint-disable-line
	    function (test, buggy, set) {
	      try {
	        set = __webpack_require__(8)(Function.call, __webpack_require__(402).f(Object.prototype, '__proto__').set, 2);
	        set(test, []);
	        buggy = !(test instanceof Array);
	      } catch (e) { buggy = true; }
	      return function setPrototypeOf(O, proto) {
	        check(O, proto);
	        if (buggy) O.__proto__ = proto;
	        else set(O, proto);
	        return O;
	      };
	    }({}, false) : undefined),
	  check: check
	};


/***/ }),
/* 410 */
/***/ (function(module, exports, __webpack_require__) {

	module.exports = { "default": __webpack_require__(411), __esModule: true };

/***/ }),
/* 411 */
/***/ (function(module, exports, __webpack_require__) {

	__webpack_require__(412);
	var $Object = __webpack_require__(7).Object;
	module.exports = function create(P, D) {
	  return $Object.create(P, D);
	};


/***/ }),
/* 412 */
/***/ (function(module, exports, __webpack_require__) {

	var $export = __webpack_require__(5);
	// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])
	$export($export.S, 'Object', { create: __webpack_require__(351) });


/***/ }),
/* 413 */,
/* 414 */,
/* 415 */,
/* 416 */,
/* 417 */,
/* 418 */,
/* 419 */,
/* 420 */,
/* 421 */,
/* 422 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.createRoutes = undefined;
	
	var _toConsumableArray2 = __webpack_require__(423);
	
	var _toConsumableArray3 = _interopRequireDefault(_toConsumableArray2);
	
	var _CoreLayout = __webpack_require__(428);
	
	var _CoreLayout2 = _interopRequireDefault(_CoreLayout);
	
	var _Home = __webpack_require__(481);
	
	var _Home2 = _interopRequireDefault(_Home);
	
	var _routeTable = __webpack_require__(492);
	
	var _routeTable2 = _interopRequireDefault(_routeTable);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/*  Note: Instead of using JSX, we recommend using react-router
	    PlainRoute objects to build route definitions.
	
	    https://github.com/ReactTraining/react-router/blob/master/docs/guides/RouteConfiguration.md
	
	    Note: __BASENAME__ is base path setting up for case relative directory like /abc/<route>
	*/
	
	var createRoutes = exports.createRoutes = function createRoutes(store) {
	  return {
	    path: ("") + '/',
	    component: _CoreLayout2.default,
	    indexRoute: (0, _Home2.default)(store),
	    childRoutes: [].concat((0, _toConsumableArray3.default)(_routeTable2.default.map(function (itm) {
	      var tmp = itm(store);
	      if (tmp.path) tmp.path = ("") + tmp.path;
	      return tmp;
	    })))
	  };
	};
	
	/*  Note: childRoutes can be chunked or otherwise loaded programmatically
	    using getChildRoutes with the following signature:
	
	    getChildRoutes (location, cb) {
	      require.ensure([], (require) => {
	        cb(null, [
	          // Remove imports!
	          require('./Counter').default(store)
	        ])
	      })
	    }
	
	    However, this is not necessary for code-splitting! It simply provides
	    an API for async route definitions. Your code splitting should occur
	    inside the route `getComponent` function, since it is only invoked
	    when the route exists and matches.
	*/
	
	// We only need to import the modules necessary for initial render
	exports.default = createRoutes;

/***/ }),
/* 423 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	exports.__esModule = true;
	
	var _from = __webpack_require__(424);
	
	var _from2 = _interopRequireDefault(_from);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = function (arr) {
	  if (Array.isArray(arr)) {
	    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {
	      arr2[i] = arr[i];
	    }
	
	    return arr2;
	  } else {
	    return (0, _from2.default)(arr);
	  }
	};

/***/ }),
/* 424 */
/***/ (function(module, exports, __webpack_require__) {

	module.exports = { "default": __webpack_require__(425), __esModule: true };

/***/ }),
/* 425 */
/***/ (function(module, exports, __webpack_require__) {

	__webpack_require__(345);
	__webpack_require__(426);
	module.exports = __webpack_require__(7).Array.from;


/***/ }),
/* 426 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	var ctx = __webpack_require__(8);
	var $export = __webpack_require__(5);
	var toObject = __webpack_require__(334);
	var call = __webpack_require__(364);
	var isArrayIter = __webpack_require__(365);
	var toLength = __webpack_require__(324);
	var createProperty = __webpack_require__(427);
	var getIterFn = __webpack_require__(366);
	
	$export($export.S + $export.F * !__webpack_require__(375)(function (iter) { Array.from(iter); }), 'Array', {
	  // 22.1.2.1 Array.from(arrayLike, mapfn = undefined, thisArg = undefined)
	  from: function from(arrayLike /* , mapfn = undefined, thisArg = undefined */) {
	    var O = toObject(arrayLike);
	    var C = typeof this == 'function' ? this : Array;
	    var aLen = arguments.length;
	    var mapfn = aLen > 1 ? arguments[1] : undefined;
	    var mapping = mapfn !== undefined;
	    var index = 0;
	    var iterFn = getIterFn(O);
	    var length, result, step, iterator;
	    if (mapping) mapfn = ctx(mapfn, aLen > 2 ? arguments[2] : undefined, 2);
	    // if object isn't iterable or it's array with default iterator - use simple case
	    if (iterFn != undefined && !(C == Array && isArrayIter(iterFn))) {
	      for (iterator = iterFn.call(O), result = new C(); !(step = iterator.next()).done; index++) {
	        createProperty(result, index, mapping ? call(iterator, mapfn, [step.value, index], true) : step.value);
	      }
	    } else {
	      length = toLength(O.length);
	      for (result = new C(length); length > index; index++) {
	        createProperty(result, index, mapping ? mapfn(O[index], index) : O[index]);
	      }
	    }
	    result.length = index;
	    return result;
	  }
	});


/***/ }),
/* 427 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	var $defineProperty = __webpack_require__(11);
	var createDesc = __webpack_require__(19);
	
	module.exports = function (object, index, value) {
	  if (index in object) $defineProperty.f(object, index, createDesc(0, value));
	  else object[index] = value;
	};


/***/ }),
/* 428 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.CoreLayout = undefined;
	
	var _getPrototypeOf = __webpack_require__(382);
	
	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);
	
	var _classCallCheck2 = __webpack_require__(386);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _createClass2 = __webpack_require__(387);
	
	var _createClass3 = _interopRequireDefault(_createClass2);
	
	var _possibleConstructorReturn2 = __webpack_require__(388);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(405);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _reactRedux = __webpack_require__(413);
	
	var _react = __webpack_require__(25);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _Header = __webpack_require__(429);
	
	var _Header2 = _interopRequireDefault(_Header);
	
	var _Footer = __webpack_require__(465);
	
	var _Footer2 = _interopRequireDefault(_Footer);
	
	var _SideMenu = __webpack_require__(468);
	
	var _SideMenu2 = _interopRequireDefault(_SideMenu);
	
	var _Login = __webpack_require__(472);
	
	var _Login2 = _interopRequireDefault(_Login);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var CoreLayout = exports.CoreLayout = function (_Component) {
	  (0, _inherits3.default)(CoreLayout, _Component);
	
	  function CoreLayout() {
	    (0, _classCallCheck3.default)(this, CoreLayout);
	    return (0, _possibleConstructorReturn3.default)(this, (CoreLayout.__proto__ || (0, _getPrototypeOf2.default)(CoreLayout)).apply(this, arguments));
	  }
	
	  (0, _createClass3.default)(CoreLayout, [{
	    key: 'render',
	    value: function render() {
	      var _props = this.props,
	          generalInfo = _props.generalInfo,
	          children = _props.children;
	
	
	      return _react2.default.createElement(
	        'div',
	        null,
	        !generalInfo.accessToken && _react2.default.createElement(
	          'div',
	          null,
	          _react2.default.createElement(_Login2.default, null)
	        ),
	        generalInfo.accessToken && _react2.default.createElement(
	          'div',
	          null,
	          _react2.default.createElement(_Header2.default, null),
	          _react2.default.createElement(
	            'div',
	            { className: 'page-container' },
	            _react2.default.createElement(_SideMenu2.default, null),
	            _react2.default.createElement(
	              'div',
	              { className: 'page-content-wrapper' },
	              _react2.default.createElement(
	                'div',
	                { className: 'page-content' },
	                children
	              )
	            ),
	            _react2.default.createElement(_Footer2.default, null)
	          )
	        )
	      );
	    }
	  }]);
	  return CoreLayout;
	}(_react.Component);
	
	CoreLayout.propTypes = {
	  children: _react2.default.PropTypes.element.isRequired
	};
	
	var mapDispatchToProps = function mapDispatchToProps(dispatch) {
	  return {
	    dispatch: dispatch
	  };
	};
	
	var mapStateToProps = function mapStateToProps(state) {
	  return {
	    generalInfo: state.generalInfo
	  };
	};
	
	exports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(CoreLayout);

/***/ }),
/* 429 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _Header = __webpack_require__(430);
	
	var _Header2 = _interopRequireDefault(_Header);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = _Header2.default;

/***/ }),
/* 430 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _getPrototypeOf = __webpack_require__(382);
	
	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);
	
	var _classCallCheck2 = __webpack_require__(386);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _createClass2 = __webpack_require__(387);
	
	var _createClass3 = _interopRequireDefault(_createClass2);
	
	var _possibleConstructorReturn2 = __webpack_require__(388);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(405);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _reactRedux = __webpack_require__(413);
	
	var _react = __webpack_require__(25);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _Logo = __webpack_require__(431);
	
	var _Logo2 = _interopRequireDefault(_Logo);
	
	var _HeaderAccount = __webpack_require__(434);
	
	var _HeaderAccount2 = _interopRequireDefault(_HeaderAccount);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var Header = function (_Component) {
	  (0, _inherits3.default)(Header, _Component);
	
	  function Header() {
	    (0, _classCallCheck3.default)(this, Header);
	    return (0, _possibleConstructorReturn3.default)(this, (Header.__proto__ || (0, _getPrototypeOf2.default)(Header)).apply(this, arguments));
	  }
	
	  (0, _createClass3.default)(Header, [{
	    key: 'render',
	    value: function render() {
	      return _react2.default.createElement(
	        'div',
	        { className: 'page-header navbar navbar-fixed-top' },
	        _react2.default.createElement(
	          'div',
	          { className: 'page-header-inner ' },
	          _react2.default.createElement(_Logo2.default, null),
	          _react2.default.createElement(
	            'a',
	            { href: 'javascript:;', className: 'menu-toggler responsive-toggler', 'data-toggle': 'collapse', 'data-target': '.navbar-collapse' },
	            _react2.default.createElement('span', null)
	          ),
	          _react2.default.createElement(_HeaderAccount2.default, this.props)
	        )
	      );
	    }
	  }]);
	  return Header;
	}(_react.Component);
	
	var mapDispatchToProps = function mapDispatchToProps(dispatch) {
	  return {
	    notificationClick: function notificationClick() {},
	    logOutClick: function logOutClick() {},
	    dispatch: dispatch
	  };
	};
	
	var mapStateToProps = function mapStateToProps(state) {
	  return {
	    generalInfo: state.generalInfo
	  };
	};
	
	exports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(Header);

/***/ }),
/* 431 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _Logo = __webpack_require__(432);
	
	var _Logo2 = _interopRequireDefault(_Logo);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = _Logo2.default;

/***/ }),
/* 432 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.Logo = undefined;
	
	var _react = __webpack_require__(25);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _ccai_logo_dashboard = __webpack_require__(433);
	
	var _ccai_logo_dashboard2 = _interopRequireDefault(_ccai_logo_dashboard);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var Logo = exports.Logo = function Logo() {
	  return _react2.default.createElement(
	    'div',
	    { className: 'page-logo' },
	    _react2.default.createElement(
	      'a',
	      { href: '/' },
	      _react2.default.createElement('img', { height: '28', width: '100', src: _ccai_logo_dashboard2.default, alt: 'logo', className: 'logo-default' }),
	      ' '
	    ),
	    _react2.default.createElement(
	      'div',
	      { className: 'menu-toggler sidebar-toggler' },
	      _react2.default.createElement('span', null)
	    )
	  );
	};
	
	exports.default = Logo;

/***/ }),
/* 433 */
/***/ (function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "4961648ecf202029619124de3d54f7cd.png";

/***/ }),
/* 434 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _HeaderAccount = __webpack_require__(435);
	
	var _HeaderAccount2 = _interopRequireDefault(_HeaderAccount);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = _HeaderAccount2.default;

/***/ }),
/* 435 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _extends2 = __webpack_require__(313);
	
	var _extends3 = _interopRequireDefault(_extends2);
	
	var _getPrototypeOf = __webpack_require__(382);
	
	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);
	
	var _classCallCheck2 = __webpack_require__(386);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _createClass2 = __webpack_require__(387);
	
	var _createClass3 = _interopRequireDefault(_createClass2);
	
	var _possibleConstructorReturn2 = __webpack_require__(388);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(405);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _react = __webpack_require__(25);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _HeaderNotification = __webpack_require__(436);
	
	var _HeaderNotification2 = _interopRequireDefault(_HeaderNotification);
	
	var _ApiService = __webpack_require__(438);
	
	var _ApiService2 = _interopRequireDefault(_ApiService);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	//const DefaultAvatar = "https://avatars3.githubusercontent.com/u/10923944?s=60"
	var DefaultAvatar = "http://127.0.0.1:3000/e5691977d9fc5b9a3cfc345f4f9a619c.png";
	var data = [];
	
	var HeaderAccount = function (_Component) {
	  (0, _inherits3.default)(HeaderAccount, _Component);
	
	  function HeaderAccount() {
	    var _ref;
	
	    var _temp, _this, _ret;
	
	    (0, _classCallCheck3.default)(this, HeaderAccount);
	
	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }
	
	    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = HeaderAccount.__proto__ || (0, _getPrototypeOf2.default)(HeaderAccount)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
	      header: [{
	        prop: "plantId"
	      }, {
	        prop: "plantDescr"
	      }, {
	        prop: "plantCode"
	      }],
	      data: data
	    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
	  }
	
	  (0, _createClass3.default)(HeaderAccount, [{
	    key: 'componentWillMount',
	    value: function componentWillMount() {
	      var _this2 = this;
	
	      _ApiService2.default.fetchCcaPlants().then(function (response) {
	        _this2.setState({
	          data: response.data
	        });
	      });
	      /*
	      this.showLoading(true)
	        setTimeout(() => {
	          this.showLoading(false)
	        }, 500)
	      if(data == null || data == undefined) {
	      this.showLoading(true)
	      } else {
	      setTimeout(() => {
	        this.showLoading(false)
	      }, 500)
	      }
	      */
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var _props = this.props,
	          notificationClick = _props.notificationClick,
	          logOutClick = _props.logOutClick,
	          generalInfo = _props.generalInfo;
	
	      var notifications = generalInfo.notifications || [];
	      var avatar = generalInfo.avatar || DefaultAvatar;
	      var displayName = generalInfo.displayName || "Administrator";
	      var plantAreaDefault = generalInfo.plantAreaName || "Ccai Cibitung Plant (3020)";
	      /*
	      const selectArea = data.map((object) =>
	          <li key={object.plantId}>
	            <a href="javascript:;" >
	              <span className="time">Show</span>
	              <span className="details">
	                <span className="label label-sm label-icon label-success">
	                  <i className="fa fa-plus"></i>
	                </span> {object.plantDescr} {object.plantCode} </span>
	            </a>
	          </li>
	      );
	      */
	      var selectArea = data.map(function (item, index) {
	        return _react2.default.createElement(
	          'li',
	          { key: index },
	          _react2.default.createElement(
	            'a',
	            { href: 'javascript:;' },
	            _react2.default.createElement(
	              'span',
	              { className: 'time' },
	              'Show'
	            ),
	            _react2.default.createElement(
	              'span',
	              { className: 'details' },
	              _react2.default.createElement(
	                'span',
	                { className: 'label label-sm label-icon label-success' },
	                _react2.default.createElement('i', { className: 'fa fa-plus' })
	              ),
	              ' ',
	              item.plantDescr,
	              ' ',
	              item.plantCode,
	              ' '
	            )
	          )
	        );
	      });
	
	      return _react2.default.createElement(
	        'div',
	        { className: 'top-menu' },
	        _react2.default.createElement(
	          'ul',
	          { className: 'nav navbar-nav pull-right' },
	          _react2.default.createElement(
	            'li',
	            { className: 'dropdown dropdown-extended dropdown-notification', id: 'header_notification_bar' },
	            notifications && notifications.length > 0 && _react2.default.createElement(
	              'a',
	              { href: 'javascript:;', className: 'dropdown-toggle', 'data-toggle': 'dropdown', 'data-hover': 'dropdown', 'data-close-others': 'true' },
	              _react2.default.createElement('i', { className: 'icon-bell' }),
	              _react2.default.createElement(
	                'span',
	                { className: 'badge badge-default' },
	                ' ',
	                notifications.length,
	                ' '
	              )
	            ),
	            _react2.default.createElement(
	              'ul',
	              { className: 'dropdown-menu' },
	              notifications.map(function (itm, i) {
	                return _react2.default.createElement(_HeaderNotification2.default, (0, _extends3.default)({ key: i }, itm, {
	                  onClick: function onClick(_) {
	                    notificationClick && notificationClick(itm);
	                  } }));
	              })
	            )
	          ),
	          _react2.default.createElement(
	            'li',
	            { className: 'dropdown dropdown-extended dropdown-notification', id: 'header_notification_bar' },
	            _react2.default.createElement(
	              'a',
	              { href: 'javascript:;', className: 'dropdown-toggle', 'data-toggle': 'dropdown', 'data-hover': 'dropdown', 'data-close-others': 'true' },
	              _react2.default.createElement('i', { className: 'glyphicon glyphicon-home' }),
	              _react2.default.createElement(
	                'span',
	                { className: 'badge badge-default' },
	                ' ',
	                plantAreaDefault
	              )
	            ),
	            _react2.default.createElement(
	              'ul',
	              { className: 'dropdown-menu' },
	              _react2.default.createElement(
	                'li',
	                { className: 'external' },
	                _react2.default.createElement(
	                  'h3',
	                  null,
	                  _react2.default.createElement(
	                    'span',
	                    { className: 'bold' },
	                    '8 Available'
	                  ),
	                  ' Plants'
	                ),
	                _react2.default.createElement(
	                  'a',
	                  { href: '/' },
	                  'view all'
	                )
	              ),
	              _react2.default.createElement(
	                'li',
	                null,
	                _react2.default.createElement(
	                  'div',
	                  { className: 'slimScrollDiv' },
	                  _react2.default.createElement(
	                    'ul',
	                    { className: 'dropdown-menu-list scroller' },
	                    _react2.default.createElement(
	                      'li',
	                      null,
	                      _react2.default.createElement(
	                        'a',
	                        { href: 'javascript:;', onClick: function onClick(_) {
	                            plantAreaNameChange && plantAreaNameChange("Ccai Cikedokan Plant (3025)");
	                          } },
	                        _react2.default.createElement(
	                          'span',
	                          { className: 'time' },
	                          'Show'
	                        ),
	                        _react2.default.createElement(
	                          'span',
	                          { className: 'details' },
	                          _react2.default.createElement(
	                            'span',
	                            { className: 'label label-sm label-icon label-success' },
	                            _react2.default.createElement('i', { className: 'fa fa-plus' })
	                          ),
	                          ' Ccai Cikedokan Plant (3025) '
	                        )
	                      )
	                    ),
	                    _react2.default.createElement(
	                      'li',
	                      null,
	                      _react2.default.createElement(
	                        'a',
	                        { href: 'javascript:;', onClick: function onClick(_) {
	                            plantAreaNameChange && plantAreaNameChange("Ccai Semarang Plant (3035)");
	                          } },
	                        _react2.default.createElement(
	                          'span',
	                          { className: 'time' },
	                          'Show'
	                        ),
	                        _react2.default.createElement(
	                          'span',
	                          { className: 'details' },
	                          _react2.default.createElement(
	                            'span',
	                            { className: 'label label-sm label-icon label-success' },
	                            _react2.default.createElement('i', { className: 'fa fa-plus' })
	                          ),
	                          ' Ccai Semarang Plant (3035) '
	                        )
	                      )
	                    ),
	                    _react2.default.createElement(
	                      'li',
	                      null,
	                      _react2.default.createElement(
	                        'a',
	                        { href: 'javascript:;', onClick: function onClick(_) {
	                            plantAreaNameChange && plantAreaNameChange("Ccai Bandung Plant (3030)");
	                          } },
	                        _react2.default.createElement(
	                          'span',
	                          { className: 'time' },
	                          'Show'
	                        ),
	                        _react2.default.createElement(
	                          'span',
	                          { className: 'details' },
	                          _react2.default.createElement(
	                            'span',
	                            { className: 'label label-sm label-icon label-success' },
	                            _react2.default.createElement('i', { className: 'fa fa-plus' })
	                          ),
	                          ' Ccai Bandung Plant (3030) '
	                        )
	                      )
	                    ),
	                    _react2.default.createElement(
	                      'li',
	                      null,
	                      _react2.default.createElement(
	                        'a',
	                        { href: 'javascript:;', onClick: function onClick(_) {
	                            plantAreaNameChange && plantAreaNameChange("Ccai Surabaya Plant (3040)");
	                          } },
	                        _react2.default.createElement(
	                          'span',
	                          { className: 'time' },
	                          'Show'
	                        ),
	                        _react2.default.createElement(
	                          'span',
	                          { className: 'details' },
	                          _react2.default.createElement(
	                            'span',
	                            { className: 'label label-sm label-icon label-success' },
	                            _react2.default.createElement('i', { className: 'fa fa-plus' })
	                          ),
	                          ' Ccai Surabaya Plant (3040) '
	                        )
	                      )
	                    ),
	                    _react2.default.createElement(
	                      'li',
	                      null,
	                      _react2.default.createElement(
	                        'a',
	                        { href: 'javascript:;', onClick: function onClick(_) {
	                            plantAreaNameChange && plantAreaNameChange("Ccai Lampung Plant (3010)");
	                          } },
	                        _react2.default.createElement(
	                          'span',
	                          { className: 'time' },
	                          'Show'
	                        ),
	                        _react2.default.createElement(
	                          'span',
	                          { className: 'details' },
	                          _react2.default.createElement(
	                            'span',
	                            { className: 'label label-sm label-icon label-success' },
	                            _react2.default.createElement('i', { className: 'fa fa-plus' })
	                          ),
	                          ' Ccai Lampung Plant (3010) '
	                        )
	                      )
	                    ),
	                    _react2.default.createElement(
	                      'li',
	                      null,
	                      _react2.default.createElement(
	                        'a',
	                        { href: 'javascript:;', onClick: function onClick(_) {
	                            plantAreaNameChange && plantAreaNameChange("Ccai Medan Plant (3000)");
	                          } },
	                        _react2.default.createElement(
	                          'span',
	                          { className: 'time' },
	                          'Show'
	                        ),
	                        _react2.default.createElement(
	                          'span',
	                          { className: 'details' },
	                          _react2.default.createElement(
	                            'span',
	                            { className: 'label label-sm label-icon label-success' },
	                            _react2.default.createElement('i', { className: 'fa fa-plus' })
	                          ),
	                          ' Ccai Medan Plant (3000) '
	                        )
	                      )
	                    ),
	                    _react2.default.createElement(
	                      'li',
	                      null,
	                      _react2.default.createElement(
	                        'a',
	                        { href: 'javascript:;', onClick: function onClick(_) {
	                            plantAreaNameChange && plantAreaNameChange("Ccai Bali Plant (3045)");
	                          } },
	                        _react2.default.createElement(
	                          'span',
	                          { className: 'time' },
	                          'Show'
	                        ),
	                        _react2.default.createElement(
	                          'span',
	                          { className: 'details' },
	                          _react2.default.createElement(
	                            'span',
	                            { className: 'label label-sm label-icon label-success' },
	                            _react2.default.createElement('i', { className: 'fa fa-plus' })
	                          ),
	                          ' Ccai Bali Plant (3045) '
	                        )
	                      )
	                    )
	                  ),
	                  _react2.default.createElement('div', { className: 'slimScrollBar' }),
	                  _react2.default.createElement('div', { className: 'slimScrollRail' })
	                )
	              )
	            )
	          ),
	          _react2.default.createElement(
	            'li',
	            { className: 'dropdown dropdown-user' },
	            _react2.default.createElement(
	              'a',
	              { href: 'javascript:;', className: 'dropdown-toggle', 'data-toggle': 'dropdown', 'data-hover': 'dropdown', 'data-close-others': 'true' },
	              _react2.default.createElement('img', { alt: '', className: 'img-circle', src: avatar }),
	              _react2.default.createElement(
	                'span',
	                { className: 'username username-hide-on-mobile' },
	                ' ',
	                displayName,
	                ' '
	              ),
	              _react2.default.createElement('i', { className: 'fa fa-angle-down' })
	            ),
	            _react2.default.createElement(
	              'ul',
	              { className: 'dropdown-menu dropdown-menu-default' },
	              _react2.default.createElement(
	                'li',
	                null,
	                _react2.default.createElement(
	                  'a',
	                  { href: '' },
	                  _react2.default.createElement('i', { className: 'icon-user' }),
	                  ' My Profile'
	                )
	              )
	            )
	          ),
	          _react2.default.createElement(
	            'li',
	            { className: 'dropdown dropdown-quick-sidebar-toggler' },
	            _react2.default.createElement(
	              'a',
	              { href: 'javascript:;', className: 'dropdown-toggle' },
	              _react2.default.createElement('i', { className: 'icon-logout', onClick: function onClick(_) {
	                  logOutClick && logOutClick();
	                } })
	            )
	          )
	        )
	      );
	    }
	  }]);
	  return HeaderAccount;
	}(_react.Component);
	
	HeaderAccount.propTypes = {
	  notificationClick: _react.PropTypes.func,
	  generalInfo: _react.PropTypes.object,
	  logOutClick: _react.PropTypes.func
	};
	
	
	HeaderAccount.defaultProps = {
	  generalInfo: {},
	  notificationClick: function notificationClick(itm) {
	    console.log("goto notify logout", itm);
	  },
	  logOutClick: function logOutClick() {
	    console.log("logout");
	  },
	  plantAreaNameChange: function plantAreaNameChange() {
	    console.log(undefined);
	  }
	};
	
	exports.default = HeaderAccount;

/***/ }),
/* 436 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _HeaderNotification = __webpack_require__(437);
	
	var _HeaderNotification2 = _interopRequireDefault(_HeaderNotification);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = _HeaderNotification2.default;

/***/ }),
/* 437 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _getPrototypeOf = __webpack_require__(382);
	
	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);
	
	var _classCallCheck2 = __webpack_require__(386);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _createClass2 = __webpack_require__(387);
	
	var _createClass3 = _interopRequireDefault(_createClass2);
	
	var _possibleConstructorReturn2 = __webpack_require__(388);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(405);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _react = __webpack_require__(25);
	
	var _react2 = _interopRequireDefault(_react);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var HeaderNotification = function (_Component) {
	  (0, _inherits3.default)(HeaderNotification, _Component);
	
	  function HeaderNotification() {
	    (0, _classCallCheck3.default)(this, HeaderNotification);
	    return (0, _possibleConstructorReturn3.default)(this, (HeaderNotification.__proto__ || (0, _getPrototypeOf2.default)(HeaderNotification)).apply(this, arguments));
	  }
	
	  (0, _createClass3.default)(HeaderNotification, [{
	    key: "render",
	    value: function render() {
	      var _props = this.props,
	          content = _props.content,
	          _onClick = _props.onClick;
	
	
	      return _react2.default.createElement(
	        "li",
	        { className: "external" },
	        _react2.default.createElement(
	          "h3",
	          null,
	          content
	        ),
	        _react2.default.createElement(
	          "a",
	          { onClick: function onClick(itm) {
	              _onClick && _onClick();
	            } },
	          "go"
	        )
	      );
	    }
	  }]);
	  return HeaderNotification;
	}(_react.Component);
	
	exports.default = HeaderNotification;

/***/ }),
/* 438 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _classCallCheck2 = __webpack_require__(386);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _createClass2 = __webpack_require__(387);
	
	var _createClass3 = _interopRequireDefault(_createClass2);
	
	var _axios = __webpack_require__(439);
	
	var _axios2 = _interopRequireDefault(_axios);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	//const CORS_PROXY = 'https://cors-anywhere.herokuapp.com';
	//const API_BASE_URL = CORS_PROXY + '/' +'http://localhost:5000/api';
	//const API_BASE_URL = 'http://localhost:5000/api';
	var API_BASE_URL = '/proxy/api';
	// const idVal = urlParams.get('id');
	/* if(idVal) {
	    alert(idVal);
	} else {
	    //alert('id tidak ditemukan...!');
	    idVal = 1;
	} */
	
	var ApiService = function () {
	    function ApiService() {
	        (0, _classCallCheck3.default)(this, ApiService);
	    }
	
	    (0, _createClass3.default)(ApiService, [{
	        key: 'fetchCcaPlants',
	
	        //############## CcaPlants
	        value: function fetchCcaPlants() {
	            return _axios2.default.get(API_BASE_URL + '/CcaPlants');
	        }
	    }, {
	        key: 'fetchCcaPlantsById',
	        value: function fetchCcaPlantsById(Id) {
	            return _axios2.default.get(API_BASE_URL + '/CcaPlants' + '/' + Id);
	        }
	    }, {
	        key: 'deleteCcaPlants',
	        value: function deleteCcaPlants(Id) {
	            return _axios2.default.delete(API_BASE_URL + '/CcaPlants' + '/' + Id);
	        }
	    }, {
	        key: 'addCcaPlants',
	        value: function addCcaPlants(data) {
	            return _axios2.default.post("" + API_BASE_URL + '/CcaPlants', data);
	        }
	    }, {
	        key: 'editCcaPlants',
	        value: function editCcaPlants(Id, data) {
	            return _axios2.default.put(API_BASE_URL + '/CcaPlants' + '/' + Id, data);
	        }
	    }, {
	        key: 'fetchCcaPlantsLast',
	        value: function fetchCcaPlantsLast() {
	            return _axios2.default.get(API_BASE_URL + '/CcaPlants/Last');
	        }
	    }, {
	        key: 'fetchGetCcaPlantbyId',
	        value: function fetchGetCcaPlantbyId(Id) {
	            return _axios2.default.get(API_BASE_URL + '/CcaPlants' + '/GetCcaPlantbyId/' + Id);
	        }
	
	        //############## CcaPlantRealtimes for CcaPlants adding
	
	    }, {
	        key: 'fetchCcaPlantRealtimes',
	        value: function fetchCcaPlantRealtimes() {
	            return _axios2.default.get(API_BASE_URL + '/CcaPlantRealtimes');
	        }
	    }, {
	        key: 'fetchCcaPlantRealtimesById',
	        value: function fetchCcaPlantRealtimesById(Id) {
	            return _axios2.default.get(API_BASE_URL + '/CcaPlantRealtimes' + '/' + Id);
	        }
	    }, {
	        key: 'deleteCcaPlantRealtimes',
	        value: function deleteCcaPlantRealtimes(Id) {
	            return _axios2.default.delete(API_BASE_URL + '/CcaPlantRealtimes' + '/' + Id);
	        }
	    }, {
	        key: 'addCcaPlantRealtimes',
	        value: function addCcaPlantRealtimes(data) {
	            return _axios2.default.post("" + API_BASE_URL + '/CcaPlantRealtimes', data);
	        }
	    }, {
	        key: 'editCcaPlantRealtimes',
	        value: function editCcaPlantRealtimes(Id, data) {
	            return _axios2.default.put(API_BASE_URL + '/CcaPlantRealtimes' + '/' + Id, data);
	        }
	
	        //############## CcaPlantWms 
	
	    }, {
	        key: 'fetchCcaPlantWms',
	        value: function fetchCcaPlantWms() {
	            return _axios2.default.get(API_BASE_URL + '/CcaPlantWms');
	        }
	    }, {
	        key: 'fetchCcaPlantWmsById',
	        value: function fetchCcaPlantWmsById(Id) {
	            return _axios2.default.get(API_BASE_URL + '/CcaPlantWms' + '/' + Id);
	        }
	    }, {
	        key: 'deleteCcaPlantWms',
	        value: function deleteCcaPlantWms(Id) {
	            return _axios2.default.delete(API_BASE_URL + '/CcaPlantWms' + '/' + Id);
	        }
	    }, {
	        key: 'addCCcaPlantWms',
	        value: function addCCcaPlantWms(data) {
	            return _axios2.default.post("" + API_BASE_URL + '/CcaPlantWms', data);
	        }
	    }, {
	        key: 'editCcaPlantWms',
	        value: function editCcaPlantWms(Id, data) {
	            return _axios2.default.put(API_BASE_URL + '/CcaPlantWms' + '/' + Id, data);
	        }
	
	        //############## CcaPlantEwms 
	
	    }, {
	        key: 'fetchCcaPlantEwms',
	        value: function fetchCcaPlantEwms() {
	            return _axios2.default.get(API_BASE_URL + '/CcaPlantEwms');
	        }
	    }, {
	        key: 'fetchCcaPlantEwmsById',
	        value: function fetchCcaPlantEwmsById(Id) {
	            return _axios2.default.get(API_BASE_URL + '/CcaPlantEwms' + '/' + Id);
	        }
	    }, {
	        key: 'deleteCcaPlantEwms',
	        value: function deleteCcaPlantEwms(Id) {
	            return _axios2.default.delete(API_BASE_URL + '/CcaPlantEwms' + '/' + Id);
	        }
	    }, {
	        key: 'addCcaPlantEwms',
	        value: function addCcaPlantEwms(data) {
	            return _axios2.default.post("" + API_BASE_URL + '/CcaPlantEwms', data);
	        }
	    }, {
	        key: 'editCcaPlantEwms',
	        value: function editCcaPlantEwms(Id, data) {
	            return _axios2.default.put(API_BASE_URL + '/CcaPlantEwms' + '/' + Id, data);
	        }
	
	        //############## MasterRolePlant for CcaPlants adding
	
	    }, {
	        key: 'fetchMasterRolePlants',
	        value: function fetchMasterRolePlants() {
	            return _axios2.default.get(API_BASE_URL + '/MasterRolePlants');
	        }
	    }, {
	        key: 'fetchMasterRolePlantsById',
	        value: function fetchMasterRolePlantsById(Id) {
	            return _axios2.default.get(API_BASE_URL + '/MasterRolePlants' + '/' + Id);
	        }
	    }, {
	        key: 'deleteMasterRolePlants',
	        value: function deleteMasterRolePlants(Id) {
	            return _axios2.default.delete(API_BASE_URL + '/MasterRolePlants' + '/' + Id);
	        }
	    }, {
	        key: 'addMasterRolePlants',
	        value: function addMasterRolePlants(data) {
	            return _axios2.default.post("" + API_BASE_URL + '/MasterRolePlants', data);
	        }
	    }, {
	        key: 'editMasterRolePlants',
	        value: function editMasterRolePlants(Id, data) {
	            return _axios2.default.put(API_BASE_URL + '/MasterRolePlants' + '/' + Id, data);
	        }
	
	        //############## CcaLines
	
	    }, {
	        key: 'fetchCcaLines',
	        value: function fetchCcaLines() {
	            return _axios2.default.get(API_BASE_URL + '/CcaLines');
	        }
	    }, {
	        key: 'fetchCcaLinesById',
	        value: function fetchCcaLinesById(Id) {
	            return _axios2.default.get(API_BASE_URL + '/CcaLines' + '/' + Id);
	        }
	    }, {
	        key: 'deleteCcaLines',
	        value: function deleteCcaLines(Id) {
	            return _axios2.default.delete(API_BASE_URL + '/CcaLines' + '/' + Id);
	        }
	    }, {
	        key: 'addCcaLines',
	        value: function addCcaLines(data) {
	            return _axios2.default.post("" + API_BASE_URL + '/CcaLines', data);
	        }
	    }, {
	        key: 'editCcaLines',
	        value: function editCcaLines(Id, data) {
	            return _axios2.default.put(API_BASE_URL + '/CcaLines' + '/' + Id, data);
	        }
	    }, {
	        key: 'fetchCcaLinesLast',
	        value: function fetchCcaLinesLast() {
	            return _axios2.default.get(API_BASE_URL + '/CcaLines/Last');
	        }
	
	        //############## CcaPlantLines
	
	    }, {
	        key: 'fetchCcaPlantLines',
	        value: function fetchCcaPlantLines() {
	            return _axios2.default.get(API_BASE_URL + '/CcaPlantLines');
	        }
	    }, {
	        key: 'fetchCcaPlantLinesById',
	        value: function fetchCcaPlantLinesById(Id) {
	            return _axios2.default.get(API_BASE_URL + '/CcaPlantLines' + '/' + Id);
	        }
	    }, {
	        key: 'deleteCcaPlantLines',
	        value: function deleteCcaPlantLines(Id) {
	            return _axios2.default.delete(API_BASE_URL + '/CcaPlantLines' + '/' + Id);
	        }
	    }, {
	        key: 'addCcaPlantLines',
	        value: function addCcaPlantLines(data) {
	            return _axios2.default.post("" + API_BASE_URL + '/CcaPlantLines', data);
	        }
	    }, {
	        key: 'editCcaPlantLines',
	        value: function editCcaPlantLines(Id, data) {
	            return _axios2.default.put(API_BASE_URL + '/CcaPlantLines' + '/' + Id, data);
	        }
	
	        //############## CcaLineRepacks
	
	    }, {
	        key: 'fetchCcaLineRepacks',
	        value: function fetchCcaLineRepacks() {
	            return _axios2.default.get(API_BASE_URL + '/CcaLineRepacks');
	        }
	    }, {
	        key: 'fetchCcaLineRepacksById',
	        value: function fetchCcaLineRepacksById(Id) {
	            return _axios2.default.get(API_BASE_URL + '/CcaLineRepacks' + '/' + Id);
	        }
	    }, {
	        key: 'deleteCcaLineRepacks',
	        value: function deleteCcaLineRepacks(Id) {
	            return _axios2.default.delete(API_BASE_URL + '/CcaLineRepacks' + '/' + Id);
	        }
	    }, {
	        key: 'addCcaLineRepacks',
	        value: function addCcaLineRepacks(data) {
	            return _axios2.default.post("" + API_BASE_URL + '/CcaLineRepacks', data);
	        }
	    }, {
	        key: 'editCcaLineRepacks',
	        value: function editCcaLineRepacks(Id, data) {
	            return _axios2.default.put(API_BASE_URL + '/CcaLineRepacks' + '/' + Id, data);
	        }
	
	        //############## CcaLinePrinters
	
	    }, {
	        key: 'fetchCcaLinePrinters',
	        value: function fetchCcaLinePrinters() {
	            return _axios2.default.get(API_BASE_URL + '/CcaLinePrinters');
	        }
	    }, {
	        key: 'fetchCcaLinePrintersById',
	        value: function fetchCcaLinePrintersById(Id) {
	            return _axios2.default.get(API_BASE_URL + '/CcaLinePrinters' + '/' + Id);
	        }
	    }, {
	        key: 'deleteCcaLinePrinters',
	        value: function deleteCcaLinePrinters(Id) {
	            return _axios2.default.delete(API_BASE_URL + '/CcaLinePrinters' + '/' + Id);
	        }
	    }, {
	        key: 'addCcaLinePrinters',
	        value: function addCcaLinePrinters(data) {
	            return _axios2.default.post("" + API_BASE_URL + '/CcaLinePrinters', data);
	        }
	    }, {
	        key: 'editCcaLinePrinters',
	        value: function editCcaLinePrinters(Id, data) {
	            return _axios2.default.put(API_BASE_URL + '/CcaLinePrinters' + '/' + Id, data);
	        }
	
	        //############## CcaLinesScanners
	
	    }, {
	        key: 'fetchCcaLineScanners',
	        value: function fetchCcaLineScanners() {
	            return _axios2.default.get(API_BASE_URL + '/CcaLineScanners');
	        }
	    }, {
	        key: 'fetchCcaLineScannersById',
	        value: function fetchCcaLineScannersById(Id) {
	            return _axios2.default.get(API_BASE_URL + '/CcaLineScanners' + '/' + Id);
	        }
	    }, {
	        key: 'deleteCcaLineScanners',
	        value: function deleteCcaLineScanners(Id) {
	            return _axios2.default.delete(API_BASE_URL + '/CcaLineScanners' + '/' + Id);
	        }
	    }, {
	        key: 'addCcaLineScanners',
	        value: function addCcaLineScanners(data) {
	            return _axios2.default.post("" + API_BASE_URL + '/CcaLineScanners', data);
	        }
	    }, {
	        key: 'editCcaLineScanners',
	        value: function editCcaLineScanners(Id, data) {
	            return _axios2.default.put(API_BASE_URL + '/CcaLineScanners' + '/' + Id, data);
	        }
	    }, {
	        key: 'deleteCcaSickLineScanners',
	        value: function deleteCcaSickLineScanners(Id) {
	            return _axios2.default.delete(API_BASE_URL + '/CcaLineScanners' + '/SickScanner/' + Id);
	        }
	
	        //############## CcaPrinters
	
	    }, {
	        key: 'fetchCcaPrinters',
	        value: function fetchCcaPrinters() {
	            return _axios2.default.get(API_BASE_URL + '/CcaPrinters');
	        }
	    }, {
	        key: 'fetchCcaPrintersById',
	        value: function fetchCcaPrintersById(Id) {
	            return _axios2.default.get(API_BASE_URL + '/CcaPrinters' + '/' + Id);
	        }
	    }, {
	        key: 'deleteCcaPrinters',
	        value: function deleteCcaPrinters(Id) {
	            return _axios2.default.delete(API_BASE_URL + '/CcaPrinters' + '/' + Id);
	        }
	    }, {
	        key: 'addCcaPrinters',
	        value: function addCcaPrinters(data) {
	            return _axios2.default.post("" + API_BASE_URL + '/CcaPrinters', data);
	        }
	    }, {
	        key: 'editCcaPrinters',
	        value: function editCcaPrinters(Id, data) {
	            return _axios2.default.put(API_BASE_URL + '/CcaPrinters' + '/' + Id, data);
	        }
	    }, {
	        key: 'fetchCcaOnlinePrinters',
	        value: function fetchCcaOnlinePrinters() {
	            return _axios2.default.get(API_BASE_URL + '/CcaOnlinePrinters');
	        }
	    }, {
	        key: 'fetchCcaOfflinePrinters',
	        value: function fetchCcaOfflinePrinters() {
	            return _axios2.default.get(API_BASE_URL + '/CcaOfflinePrinters');
	        }
	
	        //############## CcaScanners
	
	    }, {
	        key: 'fetchCcaScanners',
	        value: function fetchCcaScanners() {
	            return _axios2.default.get(API_BASE_URL + '/CcaScanners');
	        }
	    }, {
	        key: 'fetchCcaScannersById',
	        value: function fetchCcaScannersById(Id) {
	            return _axios2.default.get(API_BASE_URL + '/CcaScanners' + '/' + Id);
	        }
	    }, {
	        key: 'deleteCcaScanners',
	        value: function deleteCcaScanners(Id) {
	            return _axios2.default.delete(API_BASE_URL + '/CcaScanners' + '/' + Id);
	        }
	    }, {
	        key: 'addCcaScanners',
	        value: function addCcaScanners(data) {
	            return _axios2.default.post("" + API_BASE_URL + '/CcaScanners', data);
	        }
	    }, {
	        key: 'editCcaScanners',
	        value: function editCcaScanners(Id, data) {
	            return _axios2.default.put(API_BASE_URL + '/CcaScanners' + '/' + Id, data);
	        }
	    }, {
	        key: 'fetchCcaScannerLast',
	        value: function fetchCcaScannerLast() {
	            return _axios2.default.get(API_BASE_URL + '/CcaScanners' + '/Last');
	        }
	
	        //############## CcaItems or Materials
	
	    }, {
	        key: 'fetchCcaItems',
	        value: function fetchCcaItems() {
	            return _axios2.default.get(API_BASE_URL + '/CcaItems');
	        }
	    }, {
	        key: 'fetchCcaItemsById',
	        value: function fetchCcaItemsById(Id) {
	            return _axios2.default.get(API_BASE_URL + '/CcaItems' + '/' + Id);
	        }
	    }, {
	        key: 'deleteCcaItems',
	        value: function deleteCcaItems(Id) {
	            return _axios2.default.delete(API_BASE_URL + '/CcaItems' + '/' + Id);
	        }
	    }, {
	        key: 'addCcaItems',
	        value: function addCcaItems(data) {
	            return _axios2.default.post("" + API_BASE_URL + '/CcaItems', data);
	        }
	    }, {
	        key: 'editCcaItems',
	        value: function editCcaItems(Id, data) {
	            return _axios2.default.put(API_BASE_URL + '/CcaItems' + '/' + Id, data);
	        }
	
	        //############## CcaProcessOrders or CcaWorkorders on API
	
	    }, {
	        key: 'fetchCcaProcessOrders',
	        value: function fetchCcaProcessOrders() {
	            return _axios2.default.get(API_BASE_URL + '/CcaWorkorders');
	        }
	    }, {
	        key: 'fetchCcaProcessOrdersById',
	        value: function fetchCcaProcessOrdersById(Id) {
	            return _axios2.default.get(API_BASE_URL + '/CcaWorkorders' + '/' + Id);
	        }
	    }, {
	        key: 'deleteCcaProcessOrders',
	        value: function deleteCcaProcessOrders(Id) {
	            return _axios2.default.delete(API_BASE_URL + '/CcaWorkorders' + '/' + Id);
	        }
	    }, {
	        key: 'addCcaProcessOrders',
	        value: function addCcaProcessOrders(data) {
	            return _axios2.default.post("" + API_BASE_URL + '/CcaWorkorders', data);
	        }
	    }, {
	        key: 'editCcaProcessOrders',
	        value: function editCcaProcessOrders(Id, data) {
	            return _axios2.default.put(API_BASE_URL + '/CcaWorkorders' + '/' + Id, data);
	        }
	
	        //############## MasterRoles on API
	
	    }, {
	        key: 'fetchMasterRoles',
	        value: function fetchMasterRoles() {
	            return _axios2.default.get(API_BASE_URL + '/MasterRoles');
	        }
	    }, {
	        key: 'fetchMasterRolesById',
	        value: function fetchMasterRolesById(Id) {
	            return _axios2.default.get(API_BASE_URL + '/MasterRoles' + '/' + Id);
	        }
	    }, {
	        key: 'deleteMasterRoles',
	        value: function deleteMasterRoles(Id) {
	            return _axios2.default.delete(API_BASE_URL + '/MasterRoles' + '/' + Id);
	        }
	    }, {
	        key: 'addMasterRoles',
	        value: function addMasterRoles(data) {
	            return _axios2.default.post("" + API_BASE_URL + '/MasterRoles', data);
	        }
	    }, {
	        key: 'editMasterRoles',
	        value: function editMasterRoles(Id, data) {
	            return _axios2.default.put(API_BASE_URL + '/MasterRoles' + '/' + Id, data);
	        }
	
	        //############## MasterUsers on API
	
	    }, {
	        key: 'fetchMasterUsers',
	        value: function fetchMasterUsers() {
	            return _axios2.default.get(API_BASE_URL + '/MasterUsers');
	        }
	    }, {
	        key: 'fetchMasterUsersById',
	        value: function fetchMasterUsersById(Id) {
	            return _axios2.default.get(API_BASE_URL + '/MasterUsers' + '/' + Id);
	        }
	    }, {
	        key: 'deleteMasterUsers',
	        value: function deleteMasterUsers(Id) {
	            return _axios2.default.delete(API_BASE_URL + '/MasterUsers' + '/' + Id);
	        }
	    }, {
	        key: 'addMasterUsers',
	        value: function addMasterUsers(data) {
	            return _axios2.default.post("" + API_BASE_URL + '/MasterUsers', data);
	        }
	    }, {
	        key: 'editMasterUsers',
	        value: function editMasterUsers(Id, data) {
	            return _axios2.default.put(API_BASE_URL + '/MasterUsers' + '/' + Id, data);
	        }
	
	        //############## CcaDevices on API
	
	    }, {
	        key: 'fetchCcaDevices',
	        value: function fetchCcaDevices() {
	            return _axios2.default.get(API_BASE_URL + '/CcaDevices');
	        }
	    }, {
	        key: 'fetchCcaDevicesById',
	        value: function fetchCcaDevicesById(Id) {
	            return _axios2.default.get(API_BASE_URL + '/CcaDevices' + '/' + Id);
	        }
	    }, {
	        key: 'deleteCcaDevices',
	        value: function deleteCcaDevices(Id) {
	            return _axios2.default.delete(API_BASE_URL + '/CcaDevices' + '/' + Id);
	        }
	    }, {
	        key: 'addCcaDevices',
	        value: function addCcaDevices(data) {
	            return _axios2.default.post("" + API_BASE_URL + '/CcaDevices', data);
	        }
	    }, {
	        key: 'editCcaDevices',
	        value: function editCcaDevices(data) {
	            return _axios2.default.put(API_BASE_URL + '/CcaDevices' + '/' + data.id, data);
	        }
	
	        //############## CcaSettings on API
	
	    }, {
	        key: 'fetchCcaSettings',
	        value: function fetchCcaSettings() {
	            return _axios2.default.get(API_BASE_URL + '/CcaSettings');
	        }
	    }, {
	        key: 'fetchCcaSettingsById',
	        value: function fetchCcaSettingsById(Id) {
	            return _axios2.default.get(API_BASE_URL + '/CcaSettings' + '/' + Id);
	        }
	    }, {
	        key: 'deleteCcaSettings',
	        value: function deleteCcaSettings(Id) {
	            return _axios2.default.delete(API_BASE_URL + '/CcaSettings' + '/' + Id);
	        }
	    }, {
	        key: 'addCcaSettings',
	        value: function addCcaSettings(data) {
	            return _axios2.default.post("" + API_BASE_URL + '/CcaSettings', data);
	        }
	    }, {
	        key: 'editCcaSettings',
	        value: function editCcaSettings(data) {
	            return _axios2.default.put(API_BASE_URL + '/CcaSettings' + '/' + data.id, data);
	        }
	
	        //############## CcaServiceLines or Listening Service on API
	
	    }, {
	        key: 'fetchCcaServiceLines',
	        value: function fetchCcaServiceLines() {
	            return _axios2.default.get(API_BASE_URL + '/CcaServiceLines');
	        }
	    }, {
	        key: 'fetchCcaServiceLinesById',
	        value: function fetchCcaServiceLinesById(Id) {
	            return _axios2.default.get(API_BASE_URL + '/CcaServiceLines' + '/' + Id);
	        }
	    }, {
	        key: 'deleteCcaServiceLines',
	        value: function deleteCcaServiceLines(Id) {
	            return _axios2.default.delete(API_BASE_URL + '/CcaServiceLines' + '/' + Id);
	        }
	    }, {
	        key: 'addCcaServiceLines',
	        value: function addCcaServiceLines(data) {
	            return _axios2.default.post("" + API_BASE_URL + '/CcaServiceLines', data);
	        }
	    }, {
	        key: 'editCcaServiceLines',
	        value: function editCcaServiceLines(data) {
	            return _axios2.default.put(API_BASE_URL + '/CcaServiceLines' + '/' + data.id, data);
	        }
	
	        //############## CcaPalletReportLites or Listening Service on API
	
	    }, {
	        key: 'fetchCcaPalletReportLites',
	        value: function fetchCcaPalletReportLites() {
	            return _axios2.default.get(API_BASE_URL + '/CcaPalletReportLites');
	        }
	    }, {
	        key: 'fetchCcaPalletReportLitesById',
	        value: function fetchCcaPalletReportLitesById(Id) {
	            return _axios2.default.get(API_BASE_URL + '/CcaPalletReportLites' + '/' + Id);
	        }
	    }, {
	        key: 'deleteCcaPalletReportLites',
	        value: function deleteCcaPalletReportLites(Id) {
	            return _axios2.default.delete(API_BASE_URL + '/CcaPalletReportLites' + '/' + Id);
	        }
	    }, {
	        key: 'addCcaCcaPalletReportLites',
	        value: function addCcaCcaPalletReportLites(data) {
	            return _axios2.default.post("" + API_BASE_URL + '/CcaPalletReportLites', data);
	        }
	    }, {
	        key: 'editCcaPalletReportLites',
	        value: function editCcaPalletReportLites(Id, data) {
	            return _axios2.default.put(API_BASE_URL + '/CcaPalletReportLites' + '/' + Id, data);
	        }
	    }]);
	    return ApiService;
	}();
	
	exports.default = new ApiService();

/***/ }),
/* 439 */
/***/ (function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(440);

/***/ }),
/* 440 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var utils = __webpack_require__(441);
	var bind = __webpack_require__(442);
	var Axios = __webpack_require__(443);
	var mergeConfig = __webpack_require__(461);
	var defaults = __webpack_require__(449);
	
	/**
	 * Create an instance of Axios
	 *
	 * @param {Object} defaultConfig The default config for the instance
	 * @return {Axios} A new instance of Axios
	 */
	function createInstance(defaultConfig) {
	  var context = new Axios(defaultConfig);
	  var instance = bind(Axios.prototype.request, context);
	
	  // Copy axios.prototype to instance
	  utils.extend(instance, Axios.prototype, context);
	
	  // Copy context to instance
	  utils.extend(instance, context);
	
	  return instance;
	}
	
	// Create the default instance to be exported
	var axios = createInstance(defaults);
	
	// Expose Axios class to allow class inheritance
	axios.Axios = Axios;
	
	// Factory for creating new instances
	axios.create = function create(instanceConfig) {
	  return createInstance(mergeConfig(axios.defaults, instanceConfig));
	};
	
	// Expose Cancel & CancelToken
	axios.Cancel = __webpack_require__(462);
	axios.CancelToken = __webpack_require__(463);
	axios.isCancel = __webpack_require__(448);
	
	// Expose all/spread
	axios.all = function all(promises) {
	  return Promise.all(promises);
	};
	axios.spread = __webpack_require__(464);
	
	module.exports = axios;
	
	// Allow use of default import syntax in TypeScript
	module.exports.default = axios;


/***/ }),
/* 441 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var bind = __webpack_require__(442);
	
	/*global toString:true*/
	
	// utils is a library of generic helper functions non-specific to axios
	
	var toString = Object.prototype.toString;
	
	/**
	 * Determine if a value is an Array
	 *
	 * @param {Object} val The value to test
	 * @returns {boolean} True if value is an Array, otherwise false
	 */
	function isArray(val) {
	  return toString.call(val) === '[object Array]';
	}
	
	/**
	 * Determine if a value is undefined
	 *
	 * @param {Object} val The value to test
	 * @returns {boolean} True if the value is undefined, otherwise false
	 */
	function isUndefined(val) {
	  return typeof val === 'undefined';
	}
	
	/**
	 * Determine if a value is a Buffer
	 *
	 * @param {Object} val The value to test
	 * @returns {boolean} True if value is a Buffer, otherwise false
	 */
	function isBuffer(val) {
	  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)
	    && typeof val.constructor.isBuffer === 'function' && val.constructor.isBuffer(val);
	}
	
	/**
	 * Determine if a value is an ArrayBuffer
	 *
	 * @param {Object} val The value to test
	 * @returns {boolean} True if value is an ArrayBuffer, otherwise false
	 */
	function isArrayBuffer(val) {
	  return toString.call(val) === '[object ArrayBuffer]';
	}
	
	/**
	 * Determine if a value is a FormData
	 *
	 * @param {Object} val The value to test
	 * @returns {boolean} True if value is an FormData, otherwise false
	 */
	function isFormData(val) {
	  return (typeof FormData !== 'undefined') && (val instanceof FormData);
	}
	
	/**
	 * Determine if a value is a view on an ArrayBuffer
	 *
	 * @param {Object} val The value to test
	 * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false
	 */
	function isArrayBufferView(val) {
	  var result;
	  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {
	    result = ArrayBuffer.isView(val);
	  } else {
	    result = (val) && (val.buffer) && (val.buffer instanceof ArrayBuffer);
	  }
	  return result;
	}
	
	/**
	 * Determine if a value is a String
	 *
	 * @param {Object} val The value to test
	 * @returns {boolean} True if value is a String, otherwise false
	 */
	function isString(val) {
	  return typeof val === 'string';
	}
	
	/**
	 * Determine if a value is a Number
	 *
	 * @param {Object} val The value to test
	 * @returns {boolean} True if value is a Number, otherwise false
	 */
	function isNumber(val) {
	  return typeof val === 'number';
	}
	
	/**
	 * Determine if a value is an Object
	 *
	 * @param {Object} val The value to test
	 * @returns {boolean} True if value is an Object, otherwise false
	 */
	function isObject(val) {
	  return val !== null && typeof val === 'object';
	}
	
	/**
	 * Determine if a value is a Date
	 *
	 * @param {Object} val The value to test
	 * @returns {boolean} True if value is a Date, otherwise false
	 */
	function isDate(val) {
	  return toString.call(val) === '[object Date]';
	}
	
	/**
	 * Determine if a value is a File
	 *
	 * @param {Object} val The value to test
	 * @returns {boolean} True if value is a File, otherwise false
	 */
	function isFile(val) {
	  return toString.call(val) === '[object File]';
	}
	
	/**
	 * Determine if a value is a Blob
	 *
	 * @param {Object} val The value to test
	 * @returns {boolean} True if value is a Blob, otherwise false
	 */
	function isBlob(val) {
	  return toString.call(val) === '[object Blob]';
	}
	
	/**
	 * Determine if a value is a Function
	 *
	 * @param {Object} val The value to test
	 * @returns {boolean} True if value is a Function, otherwise false
	 */
	function isFunction(val) {
	  return toString.call(val) === '[object Function]';
	}
	
	/**
	 * Determine if a value is a Stream
	 *
	 * @param {Object} val The value to test
	 * @returns {boolean} True if value is a Stream, otherwise false
	 */
	function isStream(val) {
	  return isObject(val) && isFunction(val.pipe);
	}
	
	/**
	 * Determine if a value is a URLSearchParams object
	 *
	 * @param {Object} val The value to test
	 * @returns {boolean} True if value is a URLSearchParams object, otherwise false
	 */
	function isURLSearchParams(val) {
	  return typeof URLSearchParams !== 'undefined' && val instanceof URLSearchParams;
	}
	
	/**
	 * Trim excess whitespace off the beginning and end of a string
	 *
	 * @param {String} str The String to trim
	 * @returns {String} The String freed of excess whitespace
	 */
	function trim(str) {
	  return str.replace(/^\s*/, '').replace(/\s*$/, '');
	}
	
	/**
	 * Determine if we're running in a standard browser environment
	 *
	 * This allows axios to run in a web worker, and react-native.
	 * Both environments support XMLHttpRequest, but not fully standard globals.
	 *
	 * web workers:
	 *  typeof window -> undefined
	 *  typeof document -> undefined
	 *
	 * react-native:
	 *  navigator.product -> 'ReactNative'
	 * nativescript
	 *  navigator.product -> 'NativeScript' or 'NS'
	 */
	function isStandardBrowserEnv() {
	  if (typeof navigator !== 'undefined' && (navigator.product === 'ReactNative' ||
	                                           navigator.product === 'NativeScript' ||
	                                           navigator.product === 'NS')) {
	    return false;
	  }
	  return (
	    typeof window !== 'undefined' &&
	    typeof document !== 'undefined'
	  );
	}
	
	/**
	 * Iterate over an Array or an Object invoking a function for each item.
	 *
	 * If `obj` is an Array callback will be called passing
	 * the value, index, and complete array for each item.
	 *
	 * If 'obj' is an Object callback will be called passing
	 * the value, key, and complete object for each property.
	 *
	 * @param {Object|Array} obj The object to iterate
	 * @param {Function} fn The callback to invoke for each item
	 */
	function forEach(obj, fn) {
	  // Don't bother if no value provided
	  if (obj === null || typeof obj === 'undefined') {
	    return;
	  }
	
	  // Force an array if not already something iterable
	  if (typeof obj !== 'object') {
	    /*eslint no-param-reassign:0*/
	    obj = [obj];
	  }
	
	  if (isArray(obj)) {
	    // Iterate over array values
	    for (var i = 0, l = obj.length; i < l; i++) {
	      fn.call(null, obj[i], i, obj);
	    }
	  } else {
	    // Iterate over object keys
	    for (var key in obj) {
	      if (Object.prototype.hasOwnProperty.call(obj, key)) {
	        fn.call(null, obj[key], key, obj);
	      }
	    }
	  }
	}
	
	/**
	 * Accepts varargs expecting each argument to be an object, then
	 * immutably merges the properties of each object and returns result.
	 *
	 * When multiple objects contain the same key the later object in
	 * the arguments list will take precedence.
	 *
	 * Example:
	 *
	 * ```js
	 * var result = merge({foo: 123}, {foo: 456});
	 * console.log(result.foo); // outputs 456
	 * ```
	 *
	 * @param {Object} obj1 Object to merge
	 * @returns {Object} Result of all merge properties
	 */
	function merge(/* obj1, obj2, obj3, ... */) {
	  var result = {};
	  function assignValue(val, key) {
	    if (typeof result[key] === 'object' && typeof val === 'object') {
	      result[key] = merge(result[key], val);
	    } else {
	      result[key] = val;
	    }
	  }
	
	  for (var i = 0, l = arguments.length; i < l; i++) {
	    forEach(arguments[i], assignValue);
	  }
	  return result;
	}
	
	/**
	 * Function equal to merge with the difference being that no reference
	 * to original objects is kept.
	 *
	 * @see merge
	 * @param {Object} obj1 Object to merge
	 * @returns {Object} Result of all merge properties
	 */
	function deepMerge(/* obj1, obj2, obj3, ... */) {
	  var result = {};
	  function assignValue(val, key) {
	    if (typeof result[key] === 'object' && typeof val === 'object') {
	      result[key] = deepMerge(result[key], val);
	    } else if (typeof val === 'object') {
	      result[key] = deepMerge({}, val);
	    } else {
	      result[key] = val;
	    }
	  }
	
	  for (var i = 0, l = arguments.length; i < l; i++) {
	    forEach(arguments[i], assignValue);
	  }
	  return result;
	}
	
	/**
	 * Extends object a by mutably adding to it the properties of object b.
	 *
	 * @param {Object} a The object to be extended
	 * @param {Object} b The object to copy properties from
	 * @param {Object} thisArg The object to bind function to
	 * @return {Object} The resulting value of object a
	 */
	function extend(a, b, thisArg) {
	  forEach(b, function assignValue(val, key) {
	    if (thisArg && typeof val === 'function') {
	      a[key] = bind(val, thisArg);
	    } else {
	      a[key] = val;
	    }
	  });
	  return a;
	}
	
	module.exports = {
	  isArray: isArray,
	  isArrayBuffer: isArrayBuffer,
	  isBuffer: isBuffer,
	  isFormData: isFormData,
	  isArrayBufferView: isArrayBufferView,
	  isString: isString,
	  isNumber: isNumber,
	  isObject: isObject,
	  isUndefined: isUndefined,
	  isDate: isDate,
	  isFile: isFile,
	  isBlob: isBlob,
	  isFunction: isFunction,
	  isStream: isStream,
	  isURLSearchParams: isURLSearchParams,
	  isStandardBrowserEnv: isStandardBrowserEnv,
	  forEach: forEach,
	  merge: merge,
	  deepMerge: deepMerge,
	  extend: extend,
	  trim: trim
	};


/***/ }),
/* 442 */
/***/ (function(module, exports) {

	'use strict';
	
	module.exports = function bind(fn, thisArg) {
	  return function wrap() {
	    var args = new Array(arguments.length);
	    for (var i = 0; i < args.length; i++) {
	      args[i] = arguments[i];
	    }
	    return fn.apply(thisArg, args);
	  };
	};


/***/ }),
/* 443 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var utils = __webpack_require__(441);
	var buildURL = __webpack_require__(444);
	var InterceptorManager = __webpack_require__(445);
	var dispatchRequest = __webpack_require__(446);
	var mergeConfig = __webpack_require__(461);
	
	/**
	 * Create a new instance of Axios
	 *
	 * @param {Object} instanceConfig The default config for the instance
	 */
	function Axios(instanceConfig) {
	  this.defaults = instanceConfig;
	  this.interceptors = {
	    request: new InterceptorManager(),
	    response: new InterceptorManager()
	  };
	}
	
	/**
	 * Dispatch a request
	 *
	 * @param {Object} config The config specific for this request (merged with this.defaults)
	 */
	Axios.prototype.request = function request(config) {
	  /*eslint no-param-reassign:0*/
	  // Allow for axios('example/url'[, config]) a la fetch API
	  if (typeof config === 'string') {
	    config = arguments[1] || {};
	    config.url = arguments[0];
	  } else {
	    config = config || {};
	  }
	
	  config = mergeConfig(this.defaults, config);
	
	  // Set config.method
	  if (config.method) {
	    config.method = config.method.toLowerCase();
	  } else if (this.defaults.method) {
	    config.method = this.defaults.method.toLowerCase();
	  } else {
	    config.method = 'get';
	  }
	
	  // Hook up interceptors middleware
	  var chain = [dispatchRequest, undefined];
	  var promise = Promise.resolve(config);
	
	  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {
	    chain.unshift(interceptor.fulfilled, interceptor.rejected);
	  });
	
	  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {
	    chain.push(interceptor.fulfilled, interceptor.rejected);
	  });
	
	  while (chain.length) {
	    promise = promise.then(chain.shift(), chain.shift());
	  }
	
	  return promise;
	};
	
	Axios.prototype.getUri = function getUri(config) {
	  config = mergeConfig(this.defaults, config);
	  return buildURL(config.url, config.params, config.paramsSerializer).replace(/^\?/, '');
	};
	
	// Provide aliases for supported request methods
	utils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {
	  /*eslint func-names:0*/
	  Axios.prototype[method] = function(url, config) {
	    return this.request(utils.merge(config || {}, {
	      method: method,
	      url: url
	    }));
	  };
	});
	
	utils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {
	  /*eslint func-names:0*/
	  Axios.prototype[method] = function(url, data, config) {
	    return this.request(utils.merge(config || {}, {
	      method: method,
	      url: url,
	      data: data
	    }));
	  };
	});
	
	module.exports = Axios;


/***/ }),
/* 444 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var utils = __webpack_require__(441);
	
	function encode(val) {
	  return encodeURIComponent(val).
	    replace(/%40/gi, '@').
	    replace(/%3A/gi, ':').
	    replace(/%24/g, '$').
	    replace(/%2C/gi, ',').
	    replace(/%20/g, '+').
	    replace(/%5B/gi, '[').
	    replace(/%5D/gi, ']');
	}
	
	/**
	 * Build a URL by appending params to the end
	 *
	 * @param {string} url The base of the url (e.g., http://www.google.com)
	 * @param {object} [params] The params to be appended
	 * @returns {string} The formatted url
	 */
	module.exports = function buildURL(url, params, paramsSerializer) {
	  /*eslint no-param-reassign:0*/
	  if (!params) {
	    return url;
	  }
	
	  var serializedParams;
	  if (paramsSerializer) {
	    serializedParams = paramsSerializer(params);
	  } else if (utils.isURLSearchParams(params)) {
	    serializedParams = params.toString();
	  } else {
	    var parts = [];
	
	    utils.forEach(params, function serialize(val, key) {
	      if (val === null || typeof val === 'undefined') {
	        return;
	      }
	
	      if (utils.isArray(val)) {
	        key = key + '[]';
	      } else {
	        val = [val];
	      }
	
	      utils.forEach(val, function parseValue(v) {
	        if (utils.isDate(v)) {
	          v = v.toISOString();
	        } else if (utils.isObject(v)) {
	          v = JSON.stringify(v);
	        }
	        parts.push(encode(key) + '=' + encode(v));
	      });
	    });
	
	    serializedParams = parts.join('&');
	  }
	
	  if (serializedParams) {
	    var hashmarkIndex = url.indexOf('#');
	    if (hashmarkIndex !== -1) {
	      url = url.slice(0, hashmarkIndex);
	    }
	
	    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;
	  }
	
	  return url;
	};


/***/ }),
/* 445 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var utils = __webpack_require__(441);
	
	function InterceptorManager() {
	  this.handlers = [];
	}
	
	/**
	 * Add a new interceptor to the stack
	 *
	 * @param {Function} fulfilled The function to handle `then` for a `Promise`
	 * @param {Function} rejected The function to handle `reject` for a `Promise`
	 *
	 * @return {Number} An ID used to remove interceptor later
	 */
	InterceptorManager.prototype.use = function use(fulfilled, rejected) {
	  this.handlers.push({
	    fulfilled: fulfilled,
	    rejected: rejected
	  });
	  return this.handlers.length - 1;
	};
	
	/**
	 * Remove an interceptor from the stack
	 *
	 * @param {Number} id The ID that was returned by `use`
	 */
	InterceptorManager.prototype.eject = function eject(id) {
	  if (this.handlers[id]) {
	    this.handlers[id] = null;
	  }
	};
	
	/**
	 * Iterate over all the registered interceptors
	 *
	 * This method is particularly useful for skipping over any
	 * interceptors that may have become `null` calling `eject`.
	 *
	 * @param {Function} fn The function to call for each interceptor
	 */
	InterceptorManager.prototype.forEach = function forEach(fn) {
	  utils.forEach(this.handlers, function forEachHandler(h) {
	    if (h !== null) {
	      fn(h);
	    }
	  });
	};
	
	module.exports = InterceptorManager;


/***/ }),
/* 446 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var utils = __webpack_require__(441);
	var transformData = __webpack_require__(447);
	var isCancel = __webpack_require__(448);
	var defaults = __webpack_require__(449);
	
	/**
	 * Throws a `Cancel` if cancellation has been requested.
	 */
	function throwIfCancellationRequested(config) {
	  if (config.cancelToken) {
	    config.cancelToken.throwIfRequested();
	  }
	}
	
	/**
	 * Dispatch a request to the server using the configured adapter.
	 *
	 * @param {object} config The config that is to be used for the request
	 * @returns {Promise} The Promise to be fulfilled
	 */
	module.exports = function dispatchRequest(config) {
	  throwIfCancellationRequested(config);
	
	  // Ensure headers exist
	  config.headers = config.headers || {};
	
	  // Transform request data
	  config.data = transformData(
	    config.data,
	    config.headers,
	    config.transformRequest
	  );
	
	  // Flatten headers
	  config.headers = utils.merge(
	    config.headers.common || {},
	    config.headers[config.method] || {},
	    config.headers
	  );
	
	  utils.forEach(
	    ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],
	    function cleanHeaderConfig(method) {
	      delete config.headers[method];
	    }
	  );
	
	  var adapter = config.adapter || defaults.adapter;
	
	  return adapter(config).then(function onAdapterResolution(response) {
	    throwIfCancellationRequested(config);
	
	    // Transform response data
	    response.data = transformData(
	      response.data,
	      response.headers,
	      config.transformResponse
	    );
	
	    return response;
	  }, function onAdapterRejection(reason) {
	    if (!isCancel(reason)) {
	      throwIfCancellationRequested(config);
	
	      // Transform response data
	      if (reason && reason.response) {
	        reason.response.data = transformData(
	          reason.response.data,
	          reason.response.headers,
	          config.transformResponse
	        );
	      }
	    }
	
	    return Promise.reject(reason);
	  });
	};


/***/ }),
/* 447 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var utils = __webpack_require__(441);
	
	/**
	 * Transform the data for a request or a response
	 *
	 * @param {Object|String} data The data to be transformed
	 * @param {Array} headers The headers for the request or response
	 * @param {Array|Function} fns A single function or Array of functions
	 * @returns {*} The resulting transformed data
	 */
	module.exports = function transformData(data, headers, fns) {
	  /*eslint no-param-reassign:0*/
	  utils.forEach(fns, function transform(fn) {
	    data = fn(data, headers);
	  });
	
	  return data;
	};


/***/ }),
/* 448 */
/***/ (function(module, exports) {

	'use strict';
	
	module.exports = function isCancel(value) {
	  return !!(value && value.__CANCEL__);
	};


/***/ }),
/* 449 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';
	
	var utils = __webpack_require__(441);
	var normalizeHeaderName = __webpack_require__(450);
	
	var DEFAULT_CONTENT_TYPE = {
	  'Content-Type': 'application/x-www-form-urlencoded'
	};
	
	function setContentTypeIfUnset(headers, value) {
	  if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {
	    headers['Content-Type'] = value;
	  }
	}
	
	function getDefaultAdapter() {
	  var adapter;
	  if (typeof XMLHttpRequest !== 'undefined') {
	    // For browsers use XHR adapter
	    adapter = __webpack_require__(451);
	  } else if (typeof process !== 'undefined' && Object.prototype.toString.call(process) === '[object process]') {
	    // For node use HTTP adapter
	    adapter = __webpack_require__(451);
	  }
	  return adapter;
	}
	
	var defaults = {
	  adapter: getDefaultAdapter(),
	
	  transformRequest: [function transformRequest(data, headers) {
	    normalizeHeaderName(headers, 'Accept');
	    normalizeHeaderName(headers, 'Content-Type');
	    if (utils.isFormData(data) ||
	      utils.isArrayBuffer(data) ||
	      utils.isBuffer(data) ||
	      utils.isStream(data) ||
	      utils.isFile(data) ||
	      utils.isBlob(data)
	    ) {
	      return data;
	    }
	    if (utils.isArrayBufferView(data)) {
	      return data.buffer;
	    }
	    if (utils.isURLSearchParams(data)) {
	      setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');
	      return data.toString();
	    }
	    if (utils.isObject(data)) {
	      setContentTypeIfUnset(headers, 'application/json;charset=utf-8');
	      return JSON.stringify(data);
	    }
	    return data;
	  }],
	
	  transformResponse: [function transformResponse(data) {
	    /*eslint no-param-reassign:0*/
	    if (typeof data === 'string') {
	      try {
	        data = JSON.parse(data);
	      } catch (e) { /* Ignore */ }
	    }
	    return data;
	  }],
	
	  /**
	   * A timeout in milliseconds to abort a request. If set to 0 (default) a
	   * timeout is not created.
	   */
	  timeout: 0,
	
	  xsrfCookieName: 'XSRF-TOKEN',
	  xsrfHeaderName: 'X-XSRF-TOKEN',
	
	  maxContentLength: -1,
	
	  validateStatus: function validateStatus(status) {
	    return status >= 200 && status < 300;
	  }
	};
	
	defaults.headers = {
	  common: {
	    'Accept': 'application/json, text/plain, */*'
	  }
	};
	
	utils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {
	  defaults.headers[method] = {};
	});
	
	utils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {
	  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);
	});
	
	module.exports = defaults;
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(49)))

/***/ }),
/* 450 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var utils = __webpack_require__(441);
	
	module.exports = function normalizeHeaderName(headers, normalizedName) {
	  utils.forEach(headers, function processHeader(value, name) {
	    if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {
	      headers[normalizedName] = value;
	      delete headers[name];
	    }
	  });
	};


/***/ }),
/* 451 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var utils = __webpack_require__(441);
	var settle = __webpack_require__(452);
	var buildURL = __webpack_require__(444);
	var buildFullPath = __webpack_require__(455);
	var parseHeaders = __webpack_require__(458);
	var isURLSameOrigin = __webpack_require__(459);
	var createError = __webpack_require__(453);
	
	module.exports = function xhrAdapter(config) {
	  return new Promise(function dispatchXhrRequest(resolve, reject) {
	    var requestData = config.data;
	    var requestHeaders = config.headers;
	
	    if (utils.isFormData(requestData)) {
	      delete requestHeaders['Content-Type']; // Let the browser set it
	    }
	
	    var request = new XMLHttpRequest();
	
	    // HTTP basic authentication
	    if (config.auth) {
	      var username = config.auth.username || '';
	      var password = config.auth.password || '';
	      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);
	    }
	
	    var fullPath = buildFullPath(config.baseURL, config.url);
	    request.open(config.method.toUpperCase(), buildURL(fullPath, config.params, config.paramsSerializer), true);
	
	    // Set the request timeout in MS
	    request.timeout = config.timeout;
	
	    // Listen for ready state
	    request.onreadystatechange = function handleLoad() {
	      if (!request || request.readyState !== 4) {
	        return;
	      }
	
	      // The request errored out and we didn't get a response, this will be
	      // handled by onerror instead
	      // With one exception: request that using file: protocol, most browsers
	      // will return status as 0 even though it's a successful request
	      if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {
	        return;
	      }
	
	      // Prepare the response
	      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;
	      var responseData = !config.responseType || config.responseType === 'text' ? request.responseText : request.response;
	      var response = {
	        data: responseData,
	        status: request.status,
	        statusText: request.statusText,
	        headers: responseHeaders,
	        config: config,
	        request: request
	      };
	
	      settle(resolve, reject, response);
	
	      // Clean up request
	      request = null;
	    };
	
	    // Handle browser request cancellation (as opposed to a manual cancellation)
	    request.onabort = function handleAbort() {
	      if (!request) {
	        return;
	      }
	
	      reject(createError('Request aborted', config, 'ECONNABORTED', request));
	
	      // Clean up request
	      request = null;
	    };
	
	    // Handle low level network errors
	    request.onerror = function handleError() {
	      // Real errors are hidden from us by the browser
	      // onerror should only fire if it's a network error
	      reject(createError('Network Error', config, null, request));
	
	      // Clean up request
	      request = null;
	    };
	
	    // Handle timeout
	    request.ontimeout = function handleTimeout() {
	      var timeoutErrorMessage = 'timeout of ' + config.timeout + 'ms exceeded';
	      if (config.timeoutErrorMessage) {
	        timeoutErrorMessage = config.timeoutErrorMessage;
	      }
	      reject(createError(timeoutErrorMessage, config, 'ECONNABORTED',
	        request));
	
	      // Clean up request
	      request = null;
	    };
	
	    // Add xsrf header
	    // This is only done if running in a standard browser environment.
	    // Specifically not if we're in a web worker, or react-native.
	    if (utils.isStandardBrowserEnv()) {
	      var cookies = __webpack_require__(460);
	
	      // Add xsrf header
	      var xsrfValue = (config.withCredentials || isURLSameOrigin(fullPath)) && config.xsrfCookieName ?
	        cookies.read(config.xsrfCookieName) :
	        undefined;
	
	      if (xsrfValue) {
	        requestHeaders[config.xsrfHeaderName] = xsrfValue;
	      }
	    }
	
	    // Add headers to the request
	    if ('setRequestHeader' in request) {
	      utils.forEach(requestHeaders, function setRequestHeader(val, key) {
	        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {
	          // Remove Content-Type if data is undefined
	          delete requestHeaders[key];
	        } else {
	          // Otherwise add header to the request
	          request.setRequestHeader(key, val);
	        }
	      });
	    }
	
	    // Add withCredentials to request if needed
	    if (!utils.isUndefined(config.withCredentials)) {
	      request.withCredentials = !!config.withCredentials;
	    }
	
	    // Add responseType to request if needed
	    if (config.responseType) {
	      try {
	        request.responseType = config.responseType;
	      } catch (e) {
	        // Expected DOMException thrown by browsers not compatible XMLHttpRequest Level 2.
	        // But, this can be suppressed for 'json' type as it can be parsed by default 'transformResponse' function.
	        if (config.responseType !== 'json') {
	          throw e;
	        }
	      }
	    }
	
	    // Handle progress if needed
	    if (typeof config.onDownloadProgress === 'function') {
	      request.addEventListener('progress', config.onDownloadProgress);
	    }
	
	    // Not all browsers support upload events
	    if (typeof config.onUploadProgress === 'function' && request.upload) {
	      request.upload.addEventListener('progress', config.onUploadProgress);
	    }
	
	    if (config.cancelToken) {
	      // Handle cancellation
	      config.cancelToken.promise.then(function onCanceled(cancel) {
	        if (!request) {
	          return;
	        }
	
	        request.abort();
	        reject(cancel);
	        // Clean up request
	        request = null;
	      });
	    }
	
	    if (requestData === undefined) {
	      requestData = null;
	    }
	
	    // Send the request
	    request.send(requestData);
	  });
	};


/***/ }),
/* 452 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var createError = __webpack_require__(453);
	
	/**
	 * Resolve or reject a Promise based on response status.
	 *
	 * @param {Function} resolve A function that resolves the promise.
	 * @param {Function} reject A function that rejects the promise.
	 * @param {object} response The response.
	 */
	module.exports = function settle(resolve, reject, response) {
	  var validateStatus = response.config.validateStatus;
	  if (!validateStatus || validateStatus(response.status)) {
	    resolve(response);
	  } else {
	    reject(createError(
	      'Request failed with status code ' + response.status,
	      response.config,
	      null,
	      response.request,
	      response
	    ));
	  }
	};


/***/ }),
/* 453 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var enhanceError = __webpack_require__(454);
	
	/**
	 * Create an Error with the specified message, config, error code, request and response.
	 *
	 * @param {string} message The error message.
	 * @param {Object} config The config.
	 * @param {string} [code] The error code (for example, 'ECONNABORTED').
	 * @param {Object} [request] The request.
	 * @param {Object} [response] The response.
	 * @returns {Error} The created error.
	 */
	module.exports = function createError(message, config, code, request, response) {
	  var error = new Error(message);
	  return enhanceError(error, config, code, request, response);
	};


/***/ }),
/* 454 */
/***/ (function(module, exports) {

	'use strict';
	
	/**
	 * Update an Error with the specified config, error code, and response.
	 *
	 * @param {Error} error The error to update.
	 * @param {Object} config The config.
	 * @param {string} [code] The error code (for example, 'ECONNABORTED').
	 * @param {Object} [request] The request.
	 * @param {Object} [response] The response.
	 * @returns {Error} The error.
	 */
	module.exports = function enhanceError(error, config, code, request, response) {
	  error.config = config;
	  if (code) {
	    error.code = code;
	  }
	
	  error.request = request;
	  error.response = response;
	  error.isAxiosError = true;
	
	  error.toJSON = function() {
	    return {
	      // Standard
	      message: this.message,
	      name: this.name,
	      // Microsoft
	      description: this.description,
	      number: this.number,
	      // Mozilla
	      fileName: this.fileName,
	      lineNumber: this.lineNumber,
	      columnNumber: this.columnNumber,
	      stack: this.stack,
	      // Axios
	      config: this.config,
	      code: this.code
	    };
	  };
	  return error;
	};


/***/ }),
/* 455 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var isAbsoluteURL = __webpack_require__(456);
	var combineURLs = __webpack_require__(457);
	
	/**
	 * Creates a new URL by combining the baseURL with the requestedURL,
	 * only when the requestedURL is not already an absolute URL.
	 * If the requestURL is absolute, this function returns the requestedURL untouched.
	 *
	 * @param {string} baseURL The base URL
	 * @param {string} requestedURL Absolute or relative URL to combine
	 * @returns {string} The combined full path
	 */
	module.exports = function buildFullPath(baseURL, requestedURL) {
	  if (baseURL && !isAbsoluteURL(requestedURL)) {
	    return combineURLs(baseURL, requestedURL);
	  }
	  return requestedURL;
	};


/***/ }),
/* 456 */
/***/ (function(module, exports) {

	'use strict';
	
	/**
	 * Determines whether the specified URL is absolute
	 *
	 * @param {string} url The URL to test
	 * @returns {boolean} True if the specified URL is absolute, otherwise false
	 */
	module.exports = function isAbsoluteURL(url) {
	  // A URL is considered absolute if it begins with "<scheme>://" or "//" (protocol-relative URL).
	  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed
	  // by any combination of letters, digits, plus, period, or hyphen.
	  return /^([a-z][a-z\d\+\-\.]*:)?\/\//i.test(url);
	};


/***/ }),
/* 457 */
/***/ (function(module, exports) {

	'use strict';
	
	/**
	 * Creates a new URL by combining the specified URLs
	 *
	 * @param {string} baseURL The base URL
	 * @param {string} relativeURL The relative URL
	 * @returns {string} The combined URL
	 */
	module.exports = function combineURLs(baseURL, relativeURL) {
	  return relativeURL
	    ? baseURL.replace(/\/+$/, '') + '/' + relativeURL.replace(/^\/+/, '')
	    : baseURL;
	};


/***/ }),
/* 458 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var utils = __webpack_require__(441);
	
	// Headers whose duplicates are ignored by node
	// c.f. https://nodejs.org/api/http.html#http_message_headers
	var ignoreDuplicateOf = [
	  'age', 'authorization', 'content-length', 'content-type', 'etag',
	  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',
	  'last-modified', 'location', 'max-forwards', 'proxy-authorization',
	  'referer', 'retry-after', 'user-agent'
	];
	
	/**
	 * Parse headers into an object
	 *
	 * ```
	 * Date: Wed, 27 Aug 2014 08:58:49 GMT
	 * Content-Type: application/json
	 * Connection: keep-alive
	 * Transfer-Encoding: chunked
	 * ```
	 *
	 * @param {String} headers Headers needing to be parsed
	 * @returns {Object} Headers parsed into an object
	 */
	module.exports = function parseHeaders(headers) {
	  var parsed = {};
	  var key;
	  var val;
	  var i;
	
	  if (!headers) { return parsed; }
	
	  utils.forEach(headers.split('\n'), function parser(line) {
	    i = line.indexOf(':');
	    key = utils.trim(line.substr(0, i)).toLowerCase();
	    val = utils.trim(line.substr(i + 1));
	
	    if (key) {
	      if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) {
	        return;
	      }
	      if (key === 'set-cookie') {
	        parsed[key] = (parsed[key] ? parsed[key] : []).concat([val]);
	      } else {
	        parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;
	      }
	    }
	  });
	
	  return parsed;
	};


/***/ }),
/* 459 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var utils = __webpack_require__(441);
	
	module.exports = (
	  utils.isStandardBrowserEnv() ?
	
	  // Standard browser envs have full support of the APIs needed to test
	  // whether the request URL is of the same origin as current location.
	    (function standardBrowserEnv() {
	      var msie = /(msie|trident)/i.test(navigator.userAgent);
	      var urlParsingNode = document.createElement('a');
	      var originURL;
	
	      /**
	    * Parse a URL to discover it's components
	    *
	    * @param {String} url The URL to be parsed
	    * @returns {Object}
	    */
	      function resolveURL(url) {
	        var href = url;
	
	        if (msie) {
	        // IE needs attribute set twice to normalize properties
	          urlParsingNode.setAttribute('href', href);
	          href = urlParsingNode.href;
	        }
	
	        urlParsingNode.setAttribute('href', href);
	
	        // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils
	        return {
	          href: urlParsingNode.href,
	          protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',
	          host: urlParsingNode.host,
	          search: urlParsingNode.search ? urlParsingNode.search.replace(/^\?/, '') : '',
	          hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',
	          hostname: urlParsingNode.hostname,
	          port: urlParsingNode.port,
	          pathname: (urlParsingNode.pathname.charAt(0) === '/') ?
	            urlParsingNode.pathname :
	            '/' + urlParsingNode.pathname
	        };
	      }
	
	      originURL = resolveURL(window.location.href);
	
	      /**
	    * Determine if a URL shares the same origin as the current location
	    *
	    * @param {String} requestURL The URL to test
	    * @returns {boolean} True if URL shares the same origin, otherwise false
	    */
	      return function isURLSameOrigin(requestURL) {
	        var parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;
	        return (parsed.protocol === originURL.protocol &&
	            parsed.host === originURL.host);
	      };
	    })() :
	
	  // Non standard browser envs (web workers, react-native) lack needed support.
	    (function nonStandardBrowserEnv() {
	      return function isURLSameOrigin() {
	        return true;
	      };
	    })()
	);


/***/ }),
/* 460 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var utils = __webpack_require__(441);
	
	module.exports = (
	  utils.isStandardBrowserEnv() ?
	
	  // Standard browser envs support document.cookie
	    (function standardBrowserEnv() {
	      return {
	        write: function write(name, value, expires, path, domain, secure) {
	          var cookie = [];
	          cookie.push(name + '=' + encodeURIComponent(value));
	
	          if (utils.isNumber(expires)) {
	            cookie.push('expires=' + new Date(expires).toGMTString());
	          }
	
	          if (utils.isString(path)) {
	            cookie.push('path=' + path);
	          }
	
	          if (utils.isString(domain)) {
	            cookie.push('domain=' + domain);
	          }
	
	          if (secure === true) {
	            cookie.push('secure');
	          }
	
	          document.cookie = cookie.join('; ');
	        },
	
	        read: function read(name) {
	          var match = document.cookie.match(new RegExp('(^|;\\s*)(' + name + ')=([^;]*)'));
	          return (match ? decodeURIComponent(match[3]) : null);
	        },
	
	        remove: function remove(name) {
	          this.write(name, '', Date.now() - 86400000);
	        }
	      };
	    })() :
	
	  // Non standard browser env (web workers, react-native) lack needed support.
	    (function nonStandardBrowserEnv() {
	      return {
	        write: function write() {},
	        read: function read() { return null; },
	        remove: function remove() {}
	      };
	    })()
	);


/***/ }),
/* 461 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var utils = __webpack_require__(441);
	
	/**
	 * Config-specific merge-function which creates a new config-object
	 * by merging two configuration objects together.
	 *
	 * @param {Object} config1
	 * @param {Object} config2
	 * @returns {Object} New object resulting from merging config2 to config1
	 */
	module.exports = function mergeConfig(config1, config2) {
	  // eslint-disable-next-line no-param-reassign
	  config2 = config2 || {};
	  var config = {};
	
	  var valueFromConfig2Keys = ['url', 'method', 'params', 'data'];
	  var mergeDeepPropertiesKeys = ['headers', 'auth', 'proxy'];
	  var defaultToConfig2Keys = [
	    'baseURL', 'url', 'transformRequest', 'transformResponse', 'paramsSerializer',
	    'timeout', 'withCredentials', 'adapter', 'responseType', 'xsrfCookieName',
	    'xsrfHeaderName', 'onUploadProgress', 'onDownloadProgress',
	    'maxContentLength', 'validateStatus', 'maxRedirects', 'httpAgent',
	    'httpsAgent', 'cancelToken', 'socketPath'
	  ];
	
	  utils.forEach(valueFromConfig2Keys, function valueFromConfig2(prop) {
	    if (typeof config2[prop] !== 'undefined') {
	      config[prop] = config2[prop];
	    }
	  });
	
	  utils.forEach(mergeDeepPropertiesKeys, function mergeDeepProperties(prop) {
	    if (utils.isObject(config2[prop])) {
	      config[prop] = utils.deepMerge(config1[prop], config2[prop]);
	    } else if (typeof config2[prop] !== 'undefined') {
	      config[prop] = config2[prop];
	    } else if (utils.isObject(config1[prop])) {
	      config[prop] = utils.deepMerge(config1[prop]);
	    } else if (typeof config1[prop] !== 'undefined') {
	      config[prop] = config1[prop];
	    }
	  });
	
	  utils.forEach(defaultToConfig2Keys, function defaultToConfig2(prop) {
	    if (typeof config2[prop] !== 'undefined') {
	      config[prop] = config2[prop];
	    } else if (typeof config1[prop] !== 'undefined') {
	      config[prop] = config1[prop];
	    }
	  });
	
	  var axiosKeys = valueFromConfig2Keys
	    .concat(mergeDeepPropertiesKeys)
	    .concat(defaultToConfig2Keys);
	
	  var otherKeys = Object
	    .keys(config2)
	    .filter(function filterAxiosKeys(key) {
	      return axiosKeys.indexOf(key) === -1;
	    });
	
	  utils.forEach(otherKeys, function otherKeysDefaultToConfig2(prop) {
	    if (typeof config2[prop] !== 'undefined') {
	      config[prop] = config2[prop];
	    } else if (typeof config1[prop] !== 'undefined') {
	      config[prop] = config1[prop];
	    }
	  });
	
	  return config;
	};


/***/ }),
/* 462 */
/***/ (function(module, exports) {

	'use strict';
	
	/**
	 * A `Cancel` is an object that is thrown when an operation is canceled.
	 *
	 * @class
	 * @param {string=} message The message.
	 */
	function Cancel(message) {
	  this.message = message;
	}
	
	Cancel.prototype.toString = function toString() {
	  return 'Cancel' + (this.message ? ': ' + this.message : '');
	};
	
	Cancel.prototype.__CANCEL__ = true;
	
	module.exports = Cancel;


/***/ }),
/* 463 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var Cancel = __webpack_require__(462);
	
	/**
	 * A `CancelToken` is an object that can be used to request cancellation of an operation.
	 *
	 * @class
	 * @param {Function} executor The executor function.
	 */
	function CancelToken(executor) {
	  if (typeof executor !== 'function') {
	    throw new TypeError('executor must be a function.');
	  }
	
	  var resolvePromise;
	  this.promise = new Promise(function promiseExecutor(resolve) {
	    resolvePromise = resolve;
	  });
	
	  var token = this;
	  executor(function cancel(message) {
	    if (token.reason) {
	      // Cancellation has already been requested
	      return;
	    }
	
	    token.reason = new Cancel(message);
	    resolvePromise(token.reason);
	  });
	}
	
	/**
	 * Throws a `Cancel` if cancellation has been requested.
	 */
	CancelToken.prototype.throwIfRequested = function throwIfRequested() {
	  if (this.reason) {
	    throw this.reason;
	  }
	};
	
	/**
	 * Returns an object that contains a new `CancelToken` and a function that, when called,
	 * cancels the `CancelToken`.
	 */
	CancelToken.source = function source() {
	  var cancel;
	  var token = new CancelToken(function executor(c) {
	    cancel = c;
	  });
	  return {
	    token: token,
	    cancel: cancel
	  };
	};
	
	module.exports = CancelToken;


/***/ }),
/* 464 */
/***/ (function(module, exports) {

	'use strict';
	
	/**
	 * Syntactic sugar for invoking a function and expanding an array for arguments.
	 *
	 * Common use case would be to use `Function.prototype.apply`.
	 *
	 *  ```js
	 *  function f(x, y, z) {}
	 *  var args = [1, 2, 3];
	 *  f.apply(null, args);
	 *  ```
	 *
	 * With `spread` this example can be re-written.
	 *
	 *  ```js
	 *  spread(function(x, y, z) {})([1, 2, 3]);
	 *  ```
	 *
	 * @param {Function} callback
	 * @returns {Function}
	 */
	module.exports = function spread(callback) {
	  return function wrap(arr) {
	    return callback.apply(null, arr);
	  };
	};


/***/ }),
/* 465 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _Footer = __webpack_require__(466);
	
	var _Footer2 = _interopRequireDefault(_Footer);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = _Footer2.default;

/***/ }),
/* 466 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.Footer = undefined;
	
	var _react = __webpack_require__(25);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _logo = __webpack_require__(467);
	
	var _logo2 = _interopRequireDefault(_logo);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var Footer = exports.Footer = function Footer() {
	  return _react2.default.createElement(
	    'div',
	    { className: 'page-footer' },
	    _react2.default.createElement(
	      'div',
	      { className: 'page-footer-inner' },
	      ' 2020 \xA9 PLS - Coca Cola Amatil Indonesia /*',
	      _react2.default.createElement(
	        'a',
	        { target: '_blank', href: 'http://keenthemes.com' },
	        'Keenthemes'
	      ),
	      ' \xA0|\xA0',
	      _react2.default.createElement(
	        'a',
	        { href: 'http://themeforest.net/item/metronic-responsive-admin-dashboard-template/4021469?ref=keenthemes', title: 'Purchase Metronic just for 27$ and get lifetime updates for free', target: '_blank' },
	        'Purchase Metronic!'
	      )
	    ),
	    _react2.default.createElement(
	      'div',
	      { className: 'scroll-to-top', style: { display: "block" } },
	      _react2.default.createElement('i', { className: 'icon-arrow-up' })
	    ),
	    '*/'
	  );
	};
	
	exports.default = Footer;

/***/ }),
/* 467 */
/***/ (function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "4961648ecf202029619124de3d54f7cd.png";

/***/ }),
/* 468 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _SideMenu = __webpack_require__(469);
	
	var _SideMenu2 = _interopRequireDefault(_SideMenu);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = _SideMenu2.default;

/***/ }),
/* 469 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _extends2 = __webpack_require__(313);
	
	var _extends3 = _interopRequireDefault(_extends2);
	
	var _getPrototypeOf = __webpack_require__(382);
	
	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);
	
	var _classCallCheck2 = __webpack_require__(386);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _createClass2 = __webpack_require__(387);
	
	var _createClass3 = _interopRequireDefault(_createClass2);
	
	var _possibleConstructorReturn2 = __webpack_require__(388);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(405);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _react = __webpack_require__(25);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactRedux = __webpack_require__(413);
	
	var _reactRouter = __webpack_require__(232);
	
	var _classnames = __webpack_require__(470);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	var _sideMenuConfig = __webpack_require__(471);
	
	var _sideMenuConfig2 = _interopRequireDefault(_sideMenuConfig);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	//import 'jquery/src/jquery'; //for bootstrap.min.js
	//bootstrap-theme file for bootstrap 3 only
	//import 'bootstrap/dist/css/bootstrap-theme.min.css';
	//import 'bootstrap/dist/css/bootstrap.min.css';
	//import 'bootstrap/dist/js/bootstrap.min.js';
	//import $ from 'jquery'
	
	/* @ SideMenuItem Components
	
	*/
	var SideMenuItem = function (_Component) {
	  (0, _inherits3.default)(SideMenuItem, _Component);
	
	  function SideMenuItem() {
	    (0, _classCallCheck3.default)(this, SideMenuItem);
	    return (0, _possibleConstructorReturn3.default)(this, (SideMenuItem.__proto__ || (0, _getPrototypeOf2.default)(SideMenuItem)).apply(this, arguments));
	  }
	
	  (0, _createClass3.default)(SideMenuItem, [{
	    key: 'render',
	    value: function render() {
	      var _props = this.props,
	          currentPath = _props.currentPath,
	          route = _props.route,
	          title = _props.title;
	
	      var active = currentPath == route;
	      //const activeStyles = active ? ["active"] : []
	      //const activeStyles = active ? ["active"] : []
	      var activeStyles = open ? ["start", "active", "open"] : [];
	
	      return _react2.default.createElement(
	        'li',
	        { className: _classnames2.default.apply(undefined, ["nav-item"].concat(activeStyles)) },
	        _react2.default.createElement(
	          _reactRouter.Link,
	          { to: route, className: 'nav-link' },
	          _react2.default.createElement(
	            'span',
	            { className: 'title' },
	            title
	          )
	        )
	      );
	    }
	  }]);
	  return SideMenuItem;
	}(_react.Component);
	
	/* @ GroupSideMenu Components
	
	*/
	
	
	SideMenuItem.propTypes = {
	  title: _react2.default.PropTypes.string.isRequired,
	  route: _react2.default.PropTypes.string.isRequired
	};
	
	var GroupSideMenu = function (_Component2) {
	  (0, _inherits3.default)(GroupSideMenu, _Component2);
	
	  function GroupSideMenu() {
	    (0, _classCallCheck3.default)(this, GroupSideMenu);
	    return (0, _possibleConstructorReturn3.default)(this, (GroupSideMenu.__proto__ || (0, _getPrototypeOf2.default)(GroupSideMenu)).apply(this, arguments));
	  }
	
	  (0, _createClass3.default)(GroupSideMenu, [{
	    key: 'render',
	    value: function render() {
	      var _props2 = this.props,
	          title = _props2.title,
	          currentPath = _props2.currentPath,
	          childs = _props2.childs;
	
	      var active = childs && childs.find(function (itm) {
	        return itm.route == currentPath;
	      }) != null;
	      var icon = this.props.icon || "icon-gear";
	
	      /* const activeStyles = active ? ["start", "active", "open"] : [] */
	      var activeStyles = open ? ["start", "active", "open"] : [];
	      //const activeStyles = open ? [" "] : []
	
	      return _react2.default.createElement(
	        'li',
	        { className: _classnames2.default.apply(undefined, ["nav-item"].concat(activeStyles)) },
	        _react2.default.createElement(
	          'a',
	          { href: 'javascript:;', className: 'nav-link nav-toggle' },
	          _react2.default.createElement('i', { className: (0, _classnames2.default)(icon) }),
	          _react2.default.createElement(
	            'span',
	            { className: 'title' },
	            title
	          ),
	          _react2.default.createElement('span', { className: 'arrow' }),
	          active && _react2.default.createElement('span', { className: 'selected' })
	        ),
	        _react2.default.createElement(
	          'ul',
	          { className: 'sub-menu' },
	          childs && childs.length && childs.map(function (itm, i) {
	            return _react2.default.createElement(SideMenuItem, (0, _extends3.default)({ currentPath: currentPath, key: i }, itm));
	          })
	        )
	      );
	    }
	  }]);
	  return GroupSideMenu;
	}(_react.Component);
	
	GroupSideMenu.propTypes = {
	  title: _react.PropTypes.string,
	  childs: _react2.default.PropTypes.arrayOf(_react2.default.PropTypes.shape({
	    active: _react.PropTypes.bool,
	    title: _react2.default.PropTypes.string,
	    route: _react2.default.PropTypes.string
	  }))
	};
	
	var SideMenu = function (_Component3) {
	  (0, _inherits3.default)(SideMenu, _Component3);
	
	  function SideMenu() {
	    (0, _classCallCheck3.default)(this, SideMenu);
	    return (0, _possibleConstructorReturn3.default)(this, (SideMenu.__proto__ || (0, _getPrototypeOf2.default)(SideMenu)).apply(this, arguments));
	  }
	
	  (0, _createClass3.default)(SideMenu, [{
	    key: 'render',
	    value: function render() {
	      var currentPath = this.props.location.pathname;
	      var items = this.props.items;
	      var items2 = this.props.items2;
	      var items3 = this.props.items3;
	      var items4 = this.props.items4;
	
	      return _react2.default.createElement(
	        'div',
	        { className: 'page-sidebar-wrapper' },
	        _react2.default.createElement(
	          'div',
	          { className: 'page-sidebar navbar-collapse collapse' },
	          _react2.default.createElement(
	            'ul',
	            { className: 'page-sidebar-menu  page-header-fixed ', 'data-keep-expanded': 'false', 'data-auto-scroll': 'true', 'data-slide-speed': '200', style: { "paddingTop": "20px" } },
	            _react2.default.createElement(
	              'li',
	              { className: 'sidebar-toggler-wrapper hide' },
	              _react2.default.createElement(
	                'div',
	                { className: 'sidebar-toggler' },
	                _react2.default.createElement('span', null)
	              )
	            ),
	            items4 && items4.map(function (itm, i) {
	              return _react2.default.createElement(GroupSideMenu, {
	                key: i,
	                title: itm.groupTitle,
	                currentPath: currentPath,
	                childs: itm.items4
	              });
	            }),
	            items3 && items3.map(function (itm, i) {
	              return _react2.default.createElement(GroupSideMenu, {
	                key: i,
	                title: itm.groupTitle,
	                currentPath: currentPath,
	                childs: itm.items3
	              });
	            }),
	            items2 && items2.map(function (itm, i) {
	              return _react2.default.createElement(GroupSideMenu, {
	                key: i,
	                title: itm.groupTitle,
	                currentPath: currentPath,
	                childs: itm.items2
	              });
	            }),
	            items && items.map(function (itm, i) {
	              return _react2.default.createElement(GroupSideMenu, {
	                key: i,
	                title: itm.groupTitle,
	                currentPath: currentPath,
	                childs: itm.items
	              });
	            })
	          )
	        )
	      );
	    }
	  }]);
	  return SideMenu;
	}(_react.Component);
	
	SideMenu.propTypes = {
	  items: _react2.default.PropTypes.array,
	  items2: _react2.default.PropTypes.array,
	  items3: _react2.default.PropTypes.array,
	  items4: _react2.default.PropTypes.array
	};
	
	
	SideMenu.defaultProps = _sideMenuConfig2.default;
	
	var mapDispatchToProps = function mapDispatchToProps(dispatch) {
	  return {
	    dispatch: dispatch
	  };
	};
	
	var mapStateToProps = function mapStateToProps(state) {
	  return {
	    location: state.location
	  };
	};
	
	exports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(SideMenu);

/***/ }),
/* 470 */
/***/ (function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!
	  Copyright (c) 2017 Jed Watson.
	  Licensed under the MIT License (MIT), see
	  http://jedwatson.github.io/classnames
	*/
	/* global define */
	
	(function () {
		'use strict';
	
		var hasOwn = {}.hasOwnProperty;
	
		function classNames () {
			var classes = [];
	
			for (var i = 0; i < arguments.length; i++) {
				var arg = arguments[i];
				if (!arg) continue;
	
				var argType = typeof arg;
	
				if (argType === 'string' || argType === 'number') {
					classes.push(arg);
				} else if (Array.isArray(arg) && arg.length) {
					var inner = classNames.apply(null, arg);
					if (inner) {
						classes.push(inner);
					}
				} else if (argType === 'object') {
					for (var key in arg) {
						if (hasOwn.call(arg, key) && arg[key]) {
							classes.push(key);
						}
					}
				}
			}
	
			return classes.join(' ');
		}
	
		if (typeof module !== 'undefined' && module.exports) {
			classNames.default = classNames;
			module.exports = classNames;
		} else if (true) {
			// register as 'classnames', consistent with npm package name
			!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function () {
				return classNames;
			}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
		} else {
			window.classNames = classNames;
		}
	}());


/***/ }),
/* 471 */
/***/ (function(module, exports) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	   value: true
	});
	/*
	export default {
	  items : [{
	    groupTitle: "Administration",
	    items: [{
	          title: "Plant Area",
	          route: "/",
	          icon: "icon-map"
	      }, {
	          title: "Line",
	          route: "/tabs",
	          icon: "icon-map"
	      }, {
	          title: "Plant Area",
	          route: "/table",
	          icon: "icon-map"
	      }]
	  }]
	}
	*/
	
	exports.default = {
	   "items4": [{
	      "groupTitle": "PLS",
	      "items4": [{
	         "title": "PLS - Labelling Operation",
	         "route": "/lpa"
	      }]
	   }],
	   "items3": [{
	      "groupTitle": "Pallete Report",
	      "items3": [{
	         "title": "Pallete Report",
	         "route": "/palletenquiry"
	      }]
	   }],
	   "items2": [{
	      "groupTitle": "Utilities",
	      "items2": [{
	         "title": "Manual Printing",
	         "route": "/manual_printing"
	      }, {
	         "title": "Partial Pallete Printing",
	         "route": "/cca_part_pallet"
	      }, {
	         "title": "Repack Printing",
	         "route": "/repack_printing"
	      }, {
	         "title": "Rework Printing",
	         "route": "/rework_printing"
	      }]
	   }],
	   "items": [{
	      "groupTitle": "Administration",
	      "items": [{
	         "title": "Plant Area",
	         "route": "/cca_plants"
	      }, {
	         "title": "Lines",
	         "route": "/cca_lines"
	      }, {
	         "title": "Printers",
	         "route": "/cca_printers"
	      }, {
	         "title": "SICK Scanners",
	         "route": "/cca_scanners"
	      }, {
	         "title": "Material",
	         "route": "/cca_items"
	      }, {
	         "title": "Process Order",
	         "route": "/cca_process_orders"
	      },
	      /* {
	         "title":"Role",
	         "route":"/master_roles"
	      },
	      {
	         "title":"Users",
	         "route":"/master_users"
	      }, */
	      {
	         "title": "Mobile Device",
	         "route": "/cca_devices"
	      }, {
	         "title": "Setting",
	         "route": "/cca_settings"
	      }, {
	         "title": "Listener Service",
	         "route": "/cca_utilities"
	      }, {
	         "title": "Home",
	         "route": "/"
	      }, {
	         "title": "Tabs & UI Comps",
	         "route": "/tabs"
	      }, {
	         "title": "Table",
	         "route": "/table"
	      }, {
	         "title": "Counter",
	         "route": "/counter"
	      }, {
	         "title": "Blank",
	         "route": "/blank_temp"
	      }, {
	         "title": "Sample CRUD",
	         "route": "/sample_crud"
	      }]
	   }]
	};

/***/ }),
/* 472 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _Login = __webpack_require__(473);
	
	var _Login2 = _interopRequireDefault(_Login);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = _Login2.default;

/***/ }),
/* 473 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _getPrototypeOf = __webpack_require__(382);
	
	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);
	
	var _classCallCheck2 = __webpack_require__(386);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _createClass2 = __webpack_require__(387);
	
	var _createClass3 = _interopRequireDefault(_createClass2);
	
	var _possibleConstructorReturn2 = __webpack_require__(388);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(405);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _reactRedux = __webpack_require__(413);
	
	var _react = __webpack_require__(25);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _BaseContainer2 = __webpack_require__(474);
	
	var _BaseContainer3 = _interopRequireDefault(_BaseContainer2);
	
	var _utils = __webpack_require__(476);
	
	var _login = __webpack_require__(479);
	
	var _ccai_logo_login = __webpack_require__(480);
	
	var _ccai_logo_login2 = _interopRequireDefault(_ccai_logo_login);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var Login = function (_BaseContainer) {
	  (0, _inherits3.default)(Login, _BaseContainer);
	
	  function Login() {
	    (0, _classCallCheck3.default)(this, Login);
	    return (0, _possibleConstructorReturn3.default)(this, (Login.__proto__ || (0, _getPrototypeOf2.default)(Login)).apply(this, arguments));
	  }
	
	  (0, _createClass3.default)(Login, [{
	    key: 'componentWillMount',
	    value: function componentWillMount() {
	      this.setState({
	        username: "",
	        password: "",
	        rememberMe: true
	      });
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var _this2 = this;
	
	      var doLogin = this.props.doLogin;
	      var _state = this.state,
	          username = _state.username,
	          password = _state.password,
	          rememberMe = _state.rememberMe;
	
	
	      return _react2.default.createElement(
	        'div',
	        { className: 'login' },
	        _react2.default.createElement(
	          'div',
	          { className: 'logo' },
	          _react2.default.createElement(
	            'a',
	            null,
	            _react2.default.createElement('img', { width: '300', height: '80', src: _ccai_logo_login2.default, alt: '' })
	          )
	        ),
	        _react2.default.createElement(
	          'div',
	          { className: 'content' },
	          _react2.default.createElement(
	            'div',
	            { className: 'login-form' },
	            _react2.default.createElement(
	              'h3',
	              { className: 'form-title font-green' },
	              'Sign In'
	            ),
	            _react2.default.createElement('div', { id: 'alert' }),
	            _react2.default.createElement(
	              'div',
	              { className: 'form-group' },
	              _react2.default.createElement(
	                'label',
	                { className: 'control-label visible-ie8 visible-ie9' },
	                'Username'
	              ),
	              _react2.default.createElement('input', { className: 'form-control form-control-solid placeholder-no-fix',
	                type: 'text', autoComplete: 'off',
	                placeholder: 'Username',
	                name: 'username',
	                value: username,
	                onChange: function onChange(e) {
	                  _this2.setState({
	                    username: e.target.value
	                  });
	                }
	              }),
	              ' '
	            ),
	            _react2.default.createElement(
	              'div',
	              { className: 'form-group' },
	              _react2.default.createElement(
	                'label',
	                { className: 'control-label visible-ie8 visible-ie9' },
	                'Password'
	              ),
	              _react2.default.createElement('input', { className: 'form-control form-control-solid placeholder-no-fix',
	                type: 'password',
	                autoComplete: 'off',
	                placeholder: 'Password',
	                name: 'password',
	                value: password,
	                onChange: function onChange(e) {
	                  _this2.setState({
	                    password: e.target.value
	                  });
	                }
	              }),
	              ' '
	            ),
	            _react2.default.createElement(
	              'div',
	              { className: 'form-actions' },
	              _react2.default.createElement(
	                'button',
	                { className: 'btn green uppercase',
	                  onClick: function onClick(e) {
	                    if (username == "" || password == "") return (0, _utils.alertMessage)({
	                      message: "Missing Username or Password",
	                      type: "error",
	                      icon: "error",
	                      container: "#alert",
	                      focus: false
	                    });
	
	                    if (!doLogin) return;
	
	                    _this2.showLoading(true);
	                    doLogin(username, password, rememberMe).then(function (_) {
	                      _this2.showLoading(false);
	                    });
	                  } },
	                'Login'
	              ),
	              _react2.default.createElement(
	                'label',
	                { className: 'rememberme check mt-checkbox mt-checkbox-outline' },
	                _react2.default.createElement('input', { type: 'checkbox',
	                  name: 'remember',
	                  value: rememberMe,
	                  onClick: function onClick(e) {
	                    _this2.setState({
	                      rememberMe: e.target.checked
	                    });
	                  }
	                }),
	                'Remember',
	                _react2.default.createElement('span', null)
	              ),
	              _react2.default.createElement(
	                'a',
	                { href: 'javascript:;', id: 'forget-password', className: 'forget-password' },
	                'Forgot Password?'
	              )
	            ),
	            _react2.default.createElement(
	              'div',
	              { className: 'login-options' },
	              _react2.default.createElement(
	                'h4',
	                null,
	                'Or login with'
	              ),
	              _react2.default.createElement(
	                'ul',
	                { className: 'social-icons' },
	                _react2.default.createElement(
	                  'li',
	                  null,
	                  _react2.default.createElement('a', { className: 'social-icon-color facebook', 'data-original-title': 'facebook', href: 'javascript:;' })
	                ),
	                _react2.default.createElement(
	                  'li',
	                  null,
	                  _react2.default.createElement('a', { className: 'social-icon-color twitter', 'data-original-title': 'Twitter', href: 'javascript:;' })
	                ),
	                _react2.default.createElement(
	                  'li',
	                  null,
	                  _react2.default.createElement('a', { className: 'social-icon-color googleplus', 'data-original-title': 'Goole Plus', href: 'javascript:;' })
	                ),
	                _react2.default.createElement(
	                  'li',
	                  null,
	                  _react2.default.createElement('a', { className: 'social-icon-color linkedin', 'data-original-title': 'Linkedin', href: 'javascript:;' })
	                )
	              )
	            ),
	            _react2.default.createElement(
	              'div',
	              { className: 'create-account' },
	              _react2.default.createElement(
	                'p',
	                null,
	                _react2.default.createElement(
	                  'a',
	                  { href: 'javascript:;', id: 'register-btn', className: 'uppercase' },
	                  'Create an account'
	                )
	              )
	            )
	          )
	        ),
	        _react2.default.createElement(
	          'div',
	          { className: 'copyright' },
	          ' 2020 \xA9 PLS. Coca Cola Amatil. '
	        ),
	        this.state.loading && _react2.default.createElement('div', { className: 'modal-backdrop fade in' })
	      );
	    }
	  }]);
	  return Login;
	}(_BaseContainer3.default);
	
	var mapDispatchToProps = function mapDispatchToProps(dispatch) {
	  return {
	    doLogin: function doLogin(username, pass, rememberMe) {
	      return dispatch((0, _login.fakeLogin)(username, pass, rememberMe));
	    },
	    dispatch: dispatch
	  };
	};
	
	var mapStateToProps = function mapStateToProps(state) {
	  return {};
	};
	
	exports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(Login);

/***/ }),
/* 474 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _BaseContainer = __webpack_require__(475);
	
	var _BaseContainer2 = _interopRequireDefault(_BaseContainer);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = _BaseContainer2.default;

/***/ }),
/* 475 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _extends2 = __webpack_require__(313);
	
	var _extends3 = _interopRequireDefault(_extends2);
	
	var _assign = __webpack_require__(314);
	
	var _assign2 = _interopRequireDefault(_assign);
	
	var _getPrototypeOf = __webpack_require__(382);
	
	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);
	
	var _classCallCheck2 = __webpack_require__(386);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _createClass2 = __webpack_require__(387);
	
	var _createClass3 = _interopRequireDefault(_createClass2);
	
	var _possibleConstructorReturn2 = __webpack_require__(388);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(405);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _react = __webpack_require__(25);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactRouter = __webpack_require__(232);
	
	var _reactRedux = __webpack_require__(413);
	
	var _classnames = __webpack_require__(470);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	var _utils = __webpack_require__(476);
	
	var _Modal = __webpack_require__(477);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var BreadcrumbItem = function (_Component) {
	  (0, _inherits3.default)(BreadcrumbItem, _Component);
	
	  function BreadcrumbItem() {
	    (0, _classCallCheck3.default)(this, BreadcrumbItem);
	    return (0, _possibleConstructorReturn3.default)(this, (BreadcrumbItem.__proto__ || (0, _getPrototypeOf2.default)(BreadcrumbItem)).apply(this, arguments));
	  }
	
	  (0, _createClass3.default)(BreadcrumbItem, [{
	    key: 'render',
	    value: function render() {
	      var _props = this.props,
	          title = _props.title,
	          route = _props.route;
	
	      return _react2.default.createElement(
	        'li',
	        null,
	        _react2.default.createElement(
	          _reactRouter.Link,
	          { to: route },
	          title
	        ),
	        _react2.default.createElement('i', { className: 'fa fa-circle' })
	      );
	    }
	  }]);
	  return BreadcrumbItem;
	}(_react.Component);
	
	BreadcrumbItem.propTypes = {
	  title: _react2.default.PropTypes.string.isRequired,
	  route: _react2.default.PropTypes.string.isRequired
	};
	
	var BaseContainer = function (_Component2) {
	  (0, _inherits3.default)(BaseContainer, _Component2);
	
	  function BaseContainer(props) {
	    (0, _classCallCheck3.default)(this, BaseContainer);
	
	    var _this2 = (0, _possibleConstructorReturn3.default)(this, (BaseContainer.__proto__ || (0, _getPrototypeOf2.default)(BaseContainer)).call(this, props));
	
	    _this2.state = {
	      title: "",
	      subTitle: "",
	      breadcrumbs: [],
	      loading: false
	    };
	
	    _this2.state = (0, _assign2.default)(_this2.state, (0, _extends3.default)({}, _this2.props));
	    console.log(_this2.state);
	    return _this2;
	  }
	
	  (0, _createClass3.default)(BaseContainer, [{
	    key: 'render',
	    value: function render() {
	      /* setTimeout(() => {
	          this.showLoading(false)
	        }, 5000) */
	      return _react2.default.createElement(
	        'div',
	        null,
	        this._renderPageBar(),
	        this._renderTitle(),
	        _react2.default.createElement(
	          'div',
	          { className: 'row' },
	          _react2.default.createElement(
	            'div',
	            { className: 'portlet light bordered' },
	            this._renderContent()
	          )
	        ),
	        _react2.default.createElement(_Modal.ModalForm, { ref: 'modalDialog' }),
	        this.state.loading && _react2.default.createElement('div', { className: 'modal-backdrop fade in' })
	      );
	    }
	  }, {
	    key: 'showLoading',
	    value: function showLoading(val) {
	      (0, _utils.setLoading)(val);
	      this.setState({
	        loading: val
	      });
	    }
	  }, {
	    key: 'showDialog',
	    value: function showDialog(options) {
	      this.refs.modalDialog.show({
	        title: options.title || "Dialog",
	        content: options.content || this._renderDialog,
	        data: options.data,
	        onConfirm: options.onConfirm
	      });
	    }
	
	    //--------------------------------------------------------------------------//
	    //  Virual Render
	    //--------------------------------------------------------------------------//
	
	  }, {
	    key: '_renderPageBar',
	    value: function _renderPageBar() {
	      var _state = this.state,
	          title = _state.title,
	          subTitle = _state.subTitle,
	          breadcrumbs = _state.breadcrumbs;
	
	      return _react2.default.createElement(
	        'div',
	        { className: 'page-bar' },
	        breadcrumbs && breadcrumbs.length > 0 && _react2.default.createElement(
	          'ul',
	          { className: 'page-breadcrumb' },
	          breadcrumbs && breadcrumbs.map(function (itm) {
	            return _react2.default.createElement(BreadcrumbItem, itm);
	          }),
	          _react2.default.createElement(
	            'li',
	            null,
	            _react2.default.createElement(
	              'span',
	              null,
	              title
	            )
	          )
	        )
	      );
	    }
	  }, {
	    key: '_renderTitle',
	    value: function _renderTitle() {
	      var _state2 = this.state,
	          title = _state2.title,
	          subTitle = _state2.subTitle;
	
	      return _react2.default.createElement(
	        'h1',
	        { className: 'page-title' },
	        title,
	        _react2.default.createElement(
	          'small',
	          null,
	          subTitle
	        )
	      );
	    }
	  }, {
	    key: '_renderContent',
	    value: function _renderContent() {
	      var data = this.state.data;
	
	      return { data: data };
	    }
	  }, {
	    key: '_renderDialog',
	    value: function _renderDialog(data) {}
	  }]);
	  return BaseContainer;
	}(_react.Component);
	
	//--------------------------------------------------------------------------//
	//  Redux Binding
	//--------------------------------------------------------------------------//
	
	exports.default = BaseContainer;

/***/ }),
/* 476 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.alertMessage = exports.scrollToTop = exports.setLoading = undefined;
	
	var _assign = __webpack_require__(314);
	
	var _assign2 = _interopRequireDefault(_assign);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var setLoading = exports.setLoading = function setLoading() {
	  var val = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;
	
	  if (val) App.startPageLoading({ animate: true });else App.stopPageLoading();
	};
	
	var scrollToTop = exports.scrollToTop = function scrollToTop(val) {
	  App.scrollTo();
	};
	
	var DEFAULT_ALERT_ICON_MAP = {
	  "success": "check",
	  "warning": "warning",
	  "danger": "exclamation",
	  "error": "exclamation",
	  "info": "user"
	};
	
	var ALERT_TYPE_CORRECT = {
	  "error": "danger"
	
	  // type: ["success", "warning", "danger", "info"]
	  // icon: ["check", "warning", "done", "none"]
	};var alertMessage = exports.alertMessage = function alertMessage() {
	  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
	
	  var defaultOptions = {
	    type: "info",
	    message: "message",
	    closeInSeconds: 5
	
	    // auto correct type
	  };if (ALERT_TYPE_CORRECT[options.type] != null) options.type = ALERT_TYPE_CORRECT[options.type];
	
	  options.icon = DEFAULT_ALERT_ICON_MAP[options.type];
	
	  App.alert((0, _assign2.default)(defaultOptions, options));
	};

/***/ }),
/* 477 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.ModalForm = undefined;
	
	var _ModalForm = __webpack_require__(478);
	
	var _ModalForm2 = _interopRequireDefault(_ModalForm);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.ModalForm = _ModalForm2.default;

/***/ }),
/* 478 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _extends2 = __webpack_require__(313);
	
	var _extends3 = _interopRequireDefault(_extends2);
	
	var _assign = __webpack_require__(314);
	
	var _assign2 = _interopRequireDefault(_assign);
	
	var _getPrototypeOf = __webpack_require__(382);
	
	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);
	
	var _classCallCheck2 = __webpack_require__(386);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _createClass2 = __webpack_require__(387);
	
	var _createClass3 = _interopRequireDefault(_createClass2);
	
	var _possibleConstructorReturn2 = __webpack_require__(388);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(405);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _react = __webpack_require__(25);
	
	var _react2 = _interopRequireDefault(_react);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var ModalForm = function (_Component) {
	  (0, _inherits3.default)(ModalForm, _Component);
	
	  function ModalForm(props) {
	    (0, _classCallCheck3.default)(this, ModalForm);
	
	    var _this = (0, _possibleConstructorReturn3.default)(this, (ModalForm.__proto__ || (0, _getPrototypeOf2.default)(ModalForm)).call(this, props));
	
	    _this.state = {
	      title: "",
	      content: null,
	      data: {},
	      isShown: false,
	      onConfirm: null
	    };
	
	    _this.state = (0, _assign2.default)(_this.state, (0, _extends3.default)({}, props));
	    return _this;
	  }
	
	  (0, _createClass3.default)(ModalForm, [{
	    key: "show",
	    value: function show(options) {
	      $(this.refs.modalDialog).modal("show");
	      this.setState({
	        title: options.title || "Dialog",
	        content: options.content,
	        data: options.data || {},
	        isShown: true,
	        onConfirm: options.onConfirm
	      });
	    }
	  }, {
	    key: "hide",
	    value: function hide() {
	      $(this.refs.modalDialog).modal("hide");
	      this.setState({
	        title: null,
	        content: null,
	        data: null,
	        isShown: false,
	        onConfirm: null
	      });
	    }
	  }, {
	    key: "render",
	    value: function render() {
	      var _this2 = this;
	
	      var _state = this.state,
	          isShown = _state.isShown,
	          content = _state.content,
	          title = _state.title,
	          data = _state.data,
	          onClose = _state.onClose,
	          onConfirm = _state.onConfirm;
	
	
	      return _react2.default.createElement(
	        "div",
	        { ref: "modalDialog", className: "modal fade", tabIndex: "-1", "aria-hidden": "true" },
	        _react2.default.createElement(
	          "div",
	          { className: "modal-dialog" },
	          _react2.default.createElement(
	            "div",
	            { className: "modal-content" },
	            _react2.default.createElement(
	              "div",
	              { className: "modal-header" },
	              _react2.default.createElement("button", { type: "button", className: "close", "data-dismiss": "modal", "aria-hidden": "true", onClick: function onClick(_) {
	                  _this2.hide();
	                } }),
	              _react2.default.createElement(
	                "h4",
	                { className: "modal-title" },
	                title
	              )
	            ),
	            _react2.default.createElement(
	              "div",
	              { className: "modal-body" },
	              _react2.default.createElement(
	                "div",
	                { className: "scroller", "data-always-visible": "1", "data-rail-visible1": "1" },
	                content && content(data)
	              )
	            ),
	            _react2.default.createElement(
	              "div",
	              { className: "modal-footer" },
	              _react2.default.createElement(
	                "button",
	                { type: "button", "data-dismiss": "modal", className: "btn dark btn-outline", onClick: function onClick(_) {
	                    _this2.hide();
	                  } },
	                "Close"
	              ),
	              _react2.default.createElement(
	                "button",
	                { type: "button", className: "btn green", onClick: function onClick(_) {
	                    onConfirm && onConfirm();
	                    _this2.hide();
	                  } },
	                "Save changes"
	              )
	            )
	          )
	        )
	      );
	    }
	  }]);
	  return ModalForm;
	}(_react.Component);
	
	exports.default = ModalForm;

/***/ }),
/* 479 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.actions = exports.fakeLogin = exports.ACTION_LOGIN = undefined;
	
	var _promise = __webpack_require__(342);
	
	var _promise2 = _interopRequireDefault(_promise);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	// ------------------------------------
	// Constants
	// ------------------------------------
	var ACTION_LOGIN = exports.ACTION_LOGIN = 'ACTION_LOGIN';
	
	// ------------------------------------
	// Actions
	// ------------------------------------
	var fakeLogin = exports.fakeLogin = function fakeLogin(username, password, rememberMe) {
	  return function (dispatch, getState) {
	    return new _promise2.default(function (resolve) {
	      setTimeout(function () {
	        dispatch({
	          type: "ACTION_UPDATE_GENERAL_INFO",
	          payload: {
	            accessToken: "fakeToken",
	            displayName: username || "Fake Account"
	          }
	        });
	        resolve();
	      }, 1000);
	    });
	  };
	};
	
	var actions = exports.actions = {
	  fakeLogin: fakeLogin
	};

/***/ }),
/* 480 */
/***/ (function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "a94c34a60995036d7368ac261e9438db.png";

/***/ }),
/* 481 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _HomeContainer = __webpack_require__(482);
	
	var _HomeContainer2 = _interopRequireDefault(_HomeContainer);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	// Sync route definition
	
	exports.default = function (store) {
	  return {
	    path: '',
	    /*  Async getComponent is only invoked when route matches   */
	    getComponent: function getComponent(nextState, cb) {
	      /*  Webpack - use 'require.ensure' to create a split point
	          and embed an async module loader (jsonp) when bundling   */
	      !/* require.ensure */(function (require) {
	
	        /*  Return getComponent   */
	        cb(null, _HomeContainer2.default);
	
	        /* Webpack named bundle   */
	      }(__webpack_require__));
	    }
	  };
	};

/***/ }),
/* 482 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _reactRedux = __webpack_require__(413);
	
	var _HomeView = __webpack_require__(483);
	
	var _HomeView2 = _interopRequireDefault(_HomeView);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/*  Object of action creators (can also be function that returns object).
	    Keys will be passed as props to presentational components. Here we are
	    implementing our wrapper around increment; the component doesn't care   */
	
	var mapDispatchToProps = function mapDispatchToProps(dispatch) {
	    return {};
	};
	
	var mapStateToProps = function mapStateToProps(state) {
	    return {};
	};
	
	/*  Note: mapStateToProps is where you should use `reselect` to create selectors, ie:
	
	    import { createSelector } from 'reselect'
	    const counter = (state) => state.counter
	    const tripleCount = createSelector(counter, (count) => count * 3)
	    const mapStateToProps = (state) => ({
	      counter: tripleCount(state)
	    })
	
	    Selectors can compute derived data, allowing Redux to store the minimal possible state.
	    Selectors are efficient. A selector is not recomputed unless one of its arguments change.
	    Selectors are composable. They can be used as input to other selectors.
	    https://github.com/reactjs/reselect    */
	
	exports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(_HomeView2.default);

/***/ }),
/* 483 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _getPrototypeOf = __webpack_require__(382);
	
	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);
	
	var _classCallCheck2 = __webpack_require__(386);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _createClass2 = __webpack_require__(387);
	
	var _createClass3 = _interopRequireDefault(_createClass2);
	
	var _possibleConstructorReturn2 = __webpack_require__(388);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(405);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _react = __webpack_require__(25);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _Saitama = __webpack_require__(484);
	
	var _Saitama2 = _interopRequireDefault(_Saitama);
	
	var _BaseContainer2 = __webpack_require__(474);
	
	var _BaseContainer3 = _interopRequireDefault(_BaseContainer2);
	
	var _UI = __webpack_require__(485);
	
	var _utils = __webpack_require__(476);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var HomeView = function (_BaseContainer) {
	  (0, _inherits3.default)(HomeView, _BaseContainer);
	
	  function HomeView() {
	    (0, _classCallCheck3.default)(this, HomeView);
	    return (0, _possibleConstructorReturn3.default)(this, (HomeView.__proto__ || (0, _getPrototypeOf2.default)(HomeView)).apply(this, arguments));
	  }
	
	  (0, _createClass3.default)(HomeView, [{
	    key: 'componentWillMount',
	    value: function componentWillMount() {
	      this.setState({
	        title: "Home"
	      });
	    }
	  }, {
	    key: '_renderContent',
	    value: function _renderContent() {
	      var _this2 = this;
	
	      console.log(this.state);
	      return _react2.default.createElement(
	        'div',
	        { className: 'portlet body' },
	        _react2.default.createElement(
	          'div',
	          { className: 'row' },
	          _react2.default.createElement(
	            'div',
	            { className: 'col-xs-2' },
	            _react2.default.createElement(
	              _UI.Button,
	              { onClick: function onClick(_) {
	                  _this2.showLoading(true);
	                  setTimeout(function () {
	                    _this2.showLoading(false);
	                    (0, _utils.alertMessage)();
	                  }, 1000);
	                } },
	              'Show Loading'
	            )
	          ),
	          _react2.default.createElement(
	            'div',
	            { className: 'col-xs-1' },
	            _react2.default.createElement(_UI.Button, {
	              type: 'info',
	              enable: true,
	              icon: 'bullhorn',
	              block: true,
	              onClick: function onClick(_) {
	                _this2.showDialog({
	                  title: "Dialog",
	                  data: {
	                    "name": "TTin"
	                  },
	                  content: function content(data) {
	                    return 'My name is ' + data.name + ', Hello There';
	                  },
	                  onConfirm: function onConfirm() {
	                    (0, _utils.alertMessage)();
	                  }
	                });
	              } })
	          )
	        ),
	        _react2.default.createElement('img', {
	          alt: 'This is a duck, because Redux!',
	          className: 'duck',
	          src: _Saitama2.default,
	          onClick: function onClick(_) {}
	        })
	      );
	    }
	  }]);
	  return HomeView;
	}(_BaseContainer3.default);
	
	exports.default = HomeView;

/***/ }),
/* 484 */
/***/ (function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "06d34af0f67ecbfbd27b0e76dc3ad067.png";

/***/ }),
/* 485 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.Select = exports.RadioGroup = exports.CheckBox = exports.TextInput = exports.Tab = exports.Button = undefined;
	
	var _Button = __webpack_require__(486);
	
	var _Button2 = _interopRequireDefault(_Button);
	
	var _TextInput = __webpack_require__(487);
	
	var _TextInput2 = _interopRequireDefault(_TextInput);
	
	var _CheckBox = __webpack_require__(488);
	
	var _CheckBox2 = _interopRequireDefault(_CheckBox);
	
	var _RadioGroup = __webpack_require__(489);
	
	var _RadioGroup2 = _interopRequireDefault(_RadioGroup);
	
	var _Select = __webpack_require__(490);
	
	var _Select2 = _interopRequireDefault(_Select);
	
	var _Tab = __webpack_require__(491);
	
	var _Tab2 = _interopRequireDefault(_Tab);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.Button = _Button2.default;
	exports.Tab = _Tab2.default;
	exports.TextInput = _TextInput2.default;
	exports.CheckBox = _CheckBox2.default;
	exports.RadioGroup = _RadioGroup2.default;
	exports.Select = _Select2.default;

/***/ }),
/* 486 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _getPrototypeOf = __webpack_require__(382);
	
	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);
	
	var _classCallCheck2 = __webpack_require__(386);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _createClass2 = __webpack_require__(387);
	
	var _createClass3 = _interopRequireDefault(_createClass2);
	
	var _possibleConstructorReturn2 = __webpack_require__(388);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(405);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _react = __webpack_require__(25);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _classnames = __webpack_require__(470);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var Button = function (_Component) {
	  (0, _inherits3.default)(Button, _Component);
	
	  function Button() {
	    (0, _classCallCheck3.default)(this, Button);
	    return (0, _possibleConstructorReturn3.default)(this, (Button.__proto__ || (0, _getPrototypeOf2.default)(Button)).apply(this, arguments));
	  }
	
	  (0, _createClass3.default)(Button, [{
	    key: 'shouldComponentUpdate',
	    value: function shouldComponentUpdate(nextProps, nextState) {
	      return this.props.enable !== nextProps.enable;
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var _props = this.props,
	          type = _props.type,
	          enable = _props.enable,
	          content = _props.content,
	          icon = _props.icon,
	          block = _props.block,
	          _onClick = _props.onClick,
	          children = _props.children;
	
	      var computeStyles = ["btn", "btn-" + type, enable ? "" : "disabled", block ? "" : "btn-block"];
	
	      return _react2.default.createElement(
	        'button',
	        { className: (0, _classnames2.default)(computeStyles), onClick: function onClick(_) {
	            enable && _onClick && _onClick();
	          } },
	        icon && _react2.default.createElement('i', { className: (0, _classnames2.default)(["fa", "fa-" + icon]) }),
	        children
	      );
	    }
	  }]);
	  return Button;
	}(_react.Component);
	
	Button.propTypes = {
	  // Standard Button Type
	  type: _react2.default.PropTypes.oneOf(['default', 'primary', 'success', 'info', 'link']),
	
	  // Button Icon (fa-*)
	  icon: _react2.default.PropTypes.string,
	
	  // Enable/Disable
	  enable: _react2.default.PropTypes.bool,
	
	  // Css-Block Display style or not
	  block: _react2.default.PropTypes.bool,
	
	  // OnClick handler
	  onClick: _react2.default.PropTypes.func
	};
	
	
	Button.defaultProps = {
	  type: "default",
	  // icon: "fa-user",
	  enable: true
	};
	
	exports.default = Button;

/***/ }),
/* 487 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _getPrototypeOf = __webpack_require__(382);
	
	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);
	
	var _classCallCheck2 = __webpack_require__(386);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _createClass2 = __webpack_require__(387);
	
	var _createClass3 = _interopRequireDefault(_createClass2);
	
	var _possibleConstructorReturn2 = __webpack_require__(388);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(405);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _react = __webpack_require__(25);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _classnames = __webpack_require__(470);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var TextInput = function (_Component) {
	  (0, _inherits3.default)(TextInput, _Component);
	
	  function TextInput() {
	    var _ref;
	
	    var _temp, _this, _ret;
	
	    (0, _classCallCheck3.default)(this, TextInput);
	
	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }
	
	    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = TextInput.__proto__ || (0, _getPrototypeOf2.default)(TextInput)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
	      value: "",
	      error: false //["", "success", "warning", "error"]
	    }, _this._onChange = function (value) {
	      var onValueChange = _this.props.onValueChange;
	
	      //Todo: Validation, Auto binding
	
	      _this.setState({
	        value: value
	      });
	
	      onValueChange && onValueChange(value);
	    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
	  }
	
	  (0, _createClass3.default)(TextInput, [{
	    key: 'componentWillMount',
	    value: function componentWillMount() {
	      this.setState({
	        _id: "Input_" + Date.now(),
	        value: this.props.value
	      });
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var _this2 = this;
	
	      var _state = this.state,
	          error = _state.error,
	          value = _state.value,
	          _id = _state._id;
	      var _props = this.props,
	          type = _props.type,
	          multi = _props.multi,
	          enable = _props.enable,
	          icon = _props.icon,
	          helpText = _props.helpText,
	          placeHolder = _props.placeHolder;
	
	      var InputTag = multi ? "textarea" : "input";
	
	      //form-md-floating-label
	      return _react2.default.createElement(
	        'div',
	        { className: (0, _classnames2.default)(["form-group form-md-line-input", error ? "has-error" : ""]) },
	        _react2.default.createElement(
	          'div',
	          { className: icon ? "input-icon right" : '' },
	          _react2.default.createElement(InputTag, { type: type,
	            id: _id,
	            className: 'form-control',
	            readOnly: !enable,
	            value: value || "",
	            onChange: function onChange(event) {
	              _this2._onChange(event.target.value);
	            }
	          }),
	          placeHolder && _react2.default.createElement(
	            'label',
	            { htmlFor: _id },
	            placeHolder
	          ),
	          helpText && _react2.default.createElement(
	            'span',
	            { className: 'help-block' },
	            helpText
	          ),
	          icon && _react2.default.createElement('i', { className: (0, _classnames2.default)(["fa", "fa-" + icon]) })
	        )
	      );
	    }
	  }]);
	  return TextInput;
	}(_react.Component);
	
	TextInput.propTypes = {
	  // Multi
	  multi: _react2.default.PropTypes.bool,
	
	  // Input Type
	  type: _react2.default.PropTypes.string,
	
	  // Placeholder text
	  placeHolder: _react2.default.PropTypes.string,
	
	  //Help text
	  helpText: _react2.default.PropTypes.string,
	
	  //icon
	  icon: _react2.default.PropTypes.string,
	
	  //enable
	  enable: _react2.default.PropTypes.bool,
	
	  // OnValueChange handler
	  onValueChange: _react2.default.PropTypes.func
	};
	
	
	TextInput.defaultProps = {
	  enable: true,
	  type: "text"
	};
	
	exports.default = TextInput;

/***/ }),
/* 488 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _getPrototypeOf = __webpack_require__(382);
	
	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);
	
	var _classCallCheck2 = __webpack_require__(386);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _createClass2 = __webpack_require__(387);
	
	var _createClass3 = _interopRequireDefault(_createClass2);
	
	var _possibleConstructorReturn2 = __webpack_require__(388);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(405);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _react = __webpack_require__(25);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _classnames = __webpack_require__(470);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var CheckBox = function (_Component) {
	  (0, _inherits3.default)(CheckBox, _Component);
	
	  function CheckBox() {
	    var _ref;
	
	    var _temp, _this, _ret;
	
	    (0, _classCallCheck3.default)(this, CheckBox);
	
	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }
	
	    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = CheckBox.__proto__ || (0, _getPrototypeOf2.default)(CheckBox)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
	      value: 0,
	      error: false //["", "success", "warning", "error"]
	    }, _this._onChange = function (value) {
	      var onValueChange = _this.props.onValueChange;
	
	      //Todo: Validation, Auto binding
	
	      _this.setState({
	        value: value
	      });
	
	      onValueChange && onValueChange(value);
	    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
	  }
	
	  (0, _createClass3.default)(CheckBox, [{
	    key: 'componentWillMount',
	    value: function componentWillMount() {
	      this.setState({
	        _id: "Input_" + Date.now(),
	        value: this.props.value
	      });
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var _this2 = this;
	
	      var _state = this.state,
	          error = _state.error,
	          value = _state.value,
	          _id = _state._id;
	      var _props = this.props,
	          enable = _props.enable,
	          placeHolder = _props.placeHolder;
	      // form-md-floating-label
	
	      return _react2.default.createElement(
	        'div',
	        { className: (0, _classnames2.default)(["md-checkbox", error ? "has-error" : ""]) },
	        _react2.default.createElement(
	          'div',
	          null,
	          _react2.default.createElement('input', { type: 'checkbox',
	            id: _id,
	            className: 'md-check',
	            disabled: !enable,
	            value: value ? 1 : 0,
	            onClick: function onClick(event) {
	              _this2._onChange(event.target.checked ? 1 : 0);
	            }
	          }),
	          _react2.default.createElement(
	            'label',
	            { htmlFor: _id },
	            _react2.default.createElement('span', { className: 'inc' }),
	            _react2.default.createElement('span', { className: 'check' }),
	            _react2.default.createElement('span', { className: 'box' }),
	            ' ',
	            placeHolder
	          )
	        )
	      );
	    }
	  }]);
	  return CheckBox;
	}(_react.Component);
	
	CheckBox.propTypes = {
	  // Placeholder text
	  placeHolder: _react2.default.PropTypes.string,
	
	  // OnValueChange handler
	  onValueChange: _react2.default.PropTypes.func
	};
	
	
	CheckBox.defaultProps = {
	  enable: 1
	};
	
	exports.default = CheckBox;

/***/ }),
/* 489 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _getPrototypeOf = __webpack_require__(382);
	
	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);
	
	var _classCallCheck2 = __webpack_require__(386);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _createClass2 = __webpack_require__(387);
	
	var _createClass3 = _interopRequireDefault(_createClass2);
	
	var _possibleConstructorReturn2 = __webpack_require__(388);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(405);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _react = __webpack_require__(25);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _classnames = __webpack_require__(470);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var RadioGroup = function (_Component) {
	  (0, _inherits3.default)(RadioGroup, _Component);
	
	  function RadioGroup() {
	    var _ref;
	
	    var _temp, _this, _ret;
	
	    (0, _classCallCheck3.default)(this, RadioGroup);
	
	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }
	
	    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = RadioGroup.__proto__ || (0, _getPrototypeOf2.default)(RadioGroup)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
	      value: "",
	      error: false //["", "success", "warning", "error"]
	    }, _this._onChange = function (value) {
	      var onValueChange = _this.props.onValueChange;
	
	      //Todo: Validation, Auto binding
	
	      _this.setState({
	        value: value
	      });
	
	      onValueChange && onValueChange(value);
	    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
	  }
	
	  (0, _createClass3.default)(RadioGroup, [{
	    key: 'componentWillMount',
	    value: function componentWillMount() {
	      this.setState({
	        _id: "Input_" + Date.now(),
	        value: this.props.value
	      });
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var _this2 = this;
	
	      var _state = this.state,
	          error = _state.error,
	          value = _state.value,
	          _id = _state._id;
	      var _props = this.props,
	          enable = _props.enable,
	          options = _props.options,
	          inline = _props.inline,
	          placeHolder = _props.placeHolder;
	      // form-md-floating-label
	
	      return _react2.default.createElement(
	        'div',
	        { className: (0, _classnames2.default)(["form-group form-md-radios", error ? "has-error" : ""]) },
	        _react2.default.createElement(
	          'label',
	          null,
	          placeHolder
	        ),
	        _react2.default.createElement(
	          'div',
	          { className: inline ? "md-radio-inline" : "md-radio-list" },
	          options && options.map(function (itm, i) {
	            return _react2.default.createElement(
	              'div',
	              { key: i, className: 'md-radio' },
	              _react2.default.createElement('input', {
	                type: 'radio',
	                id: _id + i,
	                checked: itm.value == _this2.state.value,
	                className: 'md-radiobtn',
	                onClick: function onClick(event) {
	                  _this2._onChange(itm.value);
	                }
	              }),
	              _react2.default.createElement(
	                'label',
	                { htmlFor: _id + i },
	                _react2.default.createElement('span', { className: 'inc' }),
	                _react2.default.createElement('span', { className: 'check' }),
	                _react2.default.createElement('span', { className: 'box' }),
	                ' ',
	                itm.title,
	                ' '
	              )
	            );
	          })
	        )
	      );
	    }
	  }]);
	  return RadioGroup;
	}(_react.Component);
	
	RadioGroup.propTypes = {
	  // Placeholder text
	  placeHolder: _react2.default.PropTypes.string,
	
	  // SelectedValue
	  options: _react2.default.PropTypes.arrayOf(_react2.default.PropTypes.shape({
	    title: _react2.default.PropTypes.string,
	    value: _react2.default.PropTypes.string
	  })),
	
	  // Inline display
	  inline: _react2.default.PropTypes.bool,
	
	  // OnValueChange handler
	  onValueChange: _react2.default.PropTypes.func
	};
	
	
	RadioGroup.defaultProps = {
	  enable: true
	
	};
	
	exports.default = RadioGroup;

/***/ }),
/* 490 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _defineProperty2 = __webpack_require__(337);
	
	var _defineProperty3 = _interopRequireDefault(_defineProperty2);
	
	var _getPrototypeOf = __webpack_require__(382);
	
	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);
	
	var _classCallCheck2 = __webpack_require__(386);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _createClass2 = __webpack_require__(387);
	
	var _createClass3 = _interopRequireDefault(_createClass2);
	
	var _possibleConstructorReturn2 = __webpack_require__(388);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(405);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _react = __webpack_require__(25);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _classnames = __webpack_require__(470);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var Select = function (_Component) {
	  (0, _inherits3.default)(Select, _Component);
	
	  function Select() {
	    var _ref;
	
	    var _temp, _this, _ret;
	
	    (0, _classCallCheck3.default)(this, Select);
	
	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }
	
	    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = Select.__proto__ || (0, _getPrototypeOf2.default)(Select)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
	      value: "",
	      error: false //["", "success", "warning", "error"]
	    }, _this._onChange = function (value) {
	      var onValueChange = _this.props.onValueChange;
	
	      //Todo: Validation, Auto binding
	
	      console.log("Select", value);
	      _this.setState({
	        value: value
	      });
	
	      onValueChange && onValueChange(value);
	    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
	  }
	
	  (0, _createClass3.default)(Select, [{
	    key: 'componentWillMount',
	    value: function componentWillMount() {
	      this.setState({
	        _id: "Input_" + Date.now(),
	        value: this.props.value
	      });
	    }
	  }, {
	    key: 'componentDidMount',
	    value: function componentDidMount() {
	      var _this2 = this;
	
	      $(this.refs.selectBox).select2({
	        placeholder: this.props.placeholder
	      });
	
	      $(this.refs.selectBox).on('change', function (e) {
	        _this2._onChange($(_this2.refs.selectBox).val());
	      });
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var _React$createElement;
	
	      var _state = this.state,
	          error = _state.error,
	          value = _state.value,
	          _id = _state._id;
	      var _props = this.props,
	          enable = _props.enable,
	          options = _props.options,
	          multi = _props.multi,
	          placeHolder = _props.placeHolder;
	      // form-md-floating-label
	
	      return _react2.default.createElement(
	        'div',
	        { className: 'form-group' },
	        _react2.default.createElement(
	          'label',
	          { htmlFor: _id },
	          placeHolder,
	          ' : '
	        ),
	        _react2.default.createElement(
	          'select',
	          (_React$createElement = {
	            ref: 'selectBox',
	            multiple: multi ? "multiple" : "",
	            id: _id,
	            value: this.state.value,
	            className: 'form-control select2'
	          }, (0, _defineProperty3.default)(_React$createElement, 'value', value || ""), (0, _defineProperty3.default)(_React$createElement, 'onChange', function onChange(e) {
	            // this._onChange(e.target.value)
	          }), _React$createElement),
	          _react2.default.createElement(
	            'option',
	            { value: 0 },
	            '--- None ---'
	          ),
	          options && options.map(function (itm, i) {
	            return _react2.default.createElement(
	              'option',
	              { key: i, value: itm.value },
	              itm.title
	            );
	          })
	        )
	      );
	    }
	  }]);
	  return Select;
	}(_react.Component);
	
	Select.propTypes = {
	  // Placeholder text
	  placeHolder: _react2.default.PropTypes.string,
	
	  // SelectedValue
	  options: _react2.default.PropTypes.arrayOf(_react2.default.PropTypes.shape({
	    title: _react2.default.PropTypes.string,
	    value: _react2.default.PropTypes.string
	  })),
	
	  // Multi select
	  multi: _react2.default.PropTypes.bool,
	
	  // OnValueChange handler
	  onValueChange: _react2.default.PropTypes.func
	};
	
	
	Select.defaultProps = {
	  enable: true
	
	};
	
	exports.default = Select;

/***/ }),
/* 491 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _extends2 = __webpack_require__(313);
	
	var _extends3 = _interopRequireDefault(_extends2);
	
	var _getPrototypeOf = __webpack_require__(382);
	
	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);
	
	var _classCallCheck2 = __webpack_require__(386);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _createClass2 = __webpack_require__(387);
	
	var _createClass3 = _interopRequireDefault(_createClass2);
	
	var _possibleConstructorReturn2 = __webpack_require__(388);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(405);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _react = __webpack_require__(25);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _classnames = __webpack_require__(470);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/* @TabTitle
	*/
	var TabTitle = function (_Component) {
	  (0, _inherits3.default)(TabTitle, _Component);
	
	  function TabTitle() {
	    (0, _classCallCheck3.default)(this, TabTitle);
	    return (0, _possibleConstructorReturn3.default)(this, (TabTitle.__proto__ || (0, _getPrototypeOf2.default)(TabTitle)).apply(this, arguments));
	  }
	
	  (0, _createClass3.default)(TabTitle, [{
	    key: 'render',
	    value: function render() {
	      var _props = this.props,
	          active = _props.active,
	          tabId = _props.tabId,
	          title = _props.title,
	          onActiveChange = _props.onActiveChange;
	
	
	      return _react2.default.createElement(
	        'li',
	        { className: active ? "active" : "" },
	        _react2.default.createElement(
	          'a',
	          { href: tabId, 'data-toggle': 'tab', onClick: function onClick(_) {
	              onActiveChange && onActiveChange(tabId);
	            } },
	          ' ',
	          title,
	          ' '
	        )
	      );
	    }
	  }]);
	  return TabTitle;
	}(_react.Component);
	
	/* @TabPanel
	*/
	
	
	var TabPanel = function (_Component2) {
	  (0, _inherits3.default)(TabPanel, _Component2);
	
	  function TabPanel() {
	    (0, _classCallCheck3.default)(this, TabPanel);
	    return (0, _possibleConstructorReturn3.default)(this, (TabPanel.__proto__ || (0, _getPrototypeOf2.default)(TabPanel)).apply(this, arguments));
	  }
	
	  (0, _createClass3.default)(TabPanel, [{
	    key: 'render',
	    value: function render() {
	      var _props2 = this.props,
	          active = _props2.active,
	          tabId = _props2.tabId,
	          render = _props2.render;
	
	      return _react2.default.createElement(
	        'div',
	        { className: (0, _classnames2.default)(["tab-pane", active ? "active" : ""]), id: tabId },
	        render && render()
	      );
	    }
	  }]);
	  return TabPanel;
	}(_react.Component);
	
	/* @Tab
	*/
	
	
	var Tab = function (_Component3) {
	  (0, _inherits3.default)(Tab, _Component3);
	
	  function Tab() {
	    var _ref;
	
	    var _temp, _this3, _ret;
	
	    (0, _classCallCheck3.default)(this, Tab);
	
	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }
	
	    return _ret = (_temp = (_this3 = (0, _possibleConstructorReturn3.default)(this, (_ref = Tab.__proto__ || (0, _getPrototypeOf2.default)(Tab)).call.apply(_ref, [this].concat(args))), _this3), _this3.state = {
	      activeIndex: 0
	    }, _this3._onActiveChange = function (index) {
	      console.log("state change", index);
	      _this3.setState({
	        activeIndex: index
	      });
	    }, _temp), (0, _possibleConstructorReturn3.default)(_this3, _ret);
	  }
	
	  (0, _createClass3.default)(Tab, [{
	    key: 'componentWillMount',
	    value: function componentWillMount() {
	      this.setState((0, _extends3.default)({}, this.props));
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var _this4 = this;
	
	      var tabs = this.props.tabs;
	
	      var activeItem = tabs[this.state.activeIndex];
	      return _react2.default.createElement(
	        'div',
	        { className: 'tabbable-line' },
	        _react2.default.createElement(
	          'ul',
	          { className: 'nav nav-tabs ' },
	          tabs && tabs.map(function (itm, i) {
	            return _react2.default.createElement(TabTitle, (0, _extends3.default)({ key: i,
	              tabId: i,
	              onActiveChange: _this4._onActiveChange,
	              active: i == _this4.state.activeIndex
	            }, itm));
	          })
	        ),
	        _react2.default.createElement(
	          'div',
	          { className: 'tab-content' },
	          activeItem && _react2.default.createElement(TabPanel, (0, _extends3.default)({ tabId: this.state.activeIndex }, activeItem, { active: true }))
	        )
	      );
	    }
	  }]);
	  return Tab;
	}(_react.Component);
	
	Tab.propTypes = {
	
	  // Active index
	  activeIndex: _react2.default.PropTypes.number,
	
	  // Tab Data
	  tabs: _react2.default.PropTypes.arrayOf(_react2.default.PropTypes.shape({
	    title: _react2.default.PropTypes.string,
	    render: _react2.default.PropTypes.func
	  }))
	};
	
	
	Tab.defaultProps = {};
	
	exports.default = Tab;

/***/ }),
/* 492 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _Tab = __webpack_require__(493);
	
	var _Tab2 = _interopRequireDefault(_Tab);
	
	var _Table = __webpack_require__(500);
	
	var _Table2 = _interopRequireDefault(_Table);
	
	var _Counter = __webpack_require__(532);
	
	var _Counter2 = _interopRequireDefault(_Counter);
	
	var _BlankTemp = __webpack_require__(535);
	
	var _BlankTemp2 = _interopRequireDefault(_BlankTemp);
	
	var _SampleCRUD = __webpack_require__(543);
	
	var _SampleCRUD2 = _interopRequireDefault(_SampleCRUD);
	
	var _CcaPlants = __webpack_require__(549);
	
	var _CcaPlants2 = _interopRequireDefault(_CcaPlants);
	
	var _CcaLines = __webpack_require__(558);
	
	var _CcaLines2 = _interopRequireDefault(_CcaLines);
	
	var _CcaPrinters = __webpack_require__(563);
	
	var _CcaPrinters2 = _interopRequireDefault(_CcaPrinters);
	
	var _CcaScanners = __webpack_require__(568);
	
	var _CcaScanners2 = _interopRequireDefault(_CcaScanners);
	
	var _CcaItems = __webpack_require__(573);
	
	var _CcaItems2 = _interopRequireDefault(_CcaItems);
	
	var _CcaProcessOrders = __webpack_require__(578);
	
	var _CcaProcessOrders2 = _interopRequireDefault(_CcaProcessOrders);
	
	var _CcaDevices = __webpack_require__(583);
	
	var _CcaDevices2 = _interopRequireDefault(_CcaDevices);
	
	var _CcaSettings = __webpack_require__(588);
	
	var _CcaSettings2 = _interopRequireDefault(_CcaSettings);
	
	var _ManualPrinting = __webpack_require__(593);
	
	var _ManualPrinting2 = _interopRequireDefault(_ManualPrinting);
	
	var _PartialPalletPrinting = __webpack_require__(598);
	
	var _PartialPalletPrinting2 = _interopRequireDefault(_PartialPalletPrinting);
	
	var _RepackPrinting = __webpack_require__(603);
	
	var _RepackPrinting2 = _interopRequireDefault(_RepackPrinting);
	
	var _ReworkPrinting = __webpack_require__(608);
	
	var _ReworkPrinting2 = _interopRequireDefault(_ReworkPrinting);
	
	var _PalleteReport = __webpack_require__(613);
	
	var _PalleteReport2 = _interopRequireDefault(_PalleteReport);
	
	var _Lpa = __webpack_require__(624);
	
	var _Lpa2 = _interopRequireDefault(_Lpa);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	//import MasterRoles from './MasterRoles'
	//import MasterUsers from './MasterUsers'
	
	//{append_include_here}
	exports.default = [_Counter2.default, _Tab2.default, _Table2.default, _BlankTemp2.default, _SampleCRUD2.default,
	//{append_module_here}
	_CcaPlants2.default, _CcaLines2.default, _CcaPrinters2.default, _CcaScanners2.default, _CcaItems2.default, _CcaProcessOrders2.default,
	//MasterRoles,
	//MasterUsers,
	_CcaDevices2.default, _CcaSettings2.default, _ManualPrinting2.default, _PartialPalletPrinting2.default, _RepackPrinting2.default, _ReworkPrinting2.default, _PalleteReport2.default, _Lpa2.default]; /**
	                                                                                                                                                                                                     *
	                                                                                                                                                                                                     * Auto Generated file
	                                                                                                                                                                                                     *
	                                                                                                                                                                                                     */

/***/ }),
/* 493 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _TabContainer = __webpack_require__(494);
	
	var _TabContainer2 = _interopRequireDefault(_TabContainer);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	// Sync route definition
	
	exports.default = function (store) {
	  return {
	    path: 'tabs',
	    /*  Async getComponent is only invoked when route matches   */
	    getComponent: function getComponent(nextState, cb) {
	      /*  Webpack - use 'require.ensure' to create a split point
	          and embed an async module loader (jsonp) when bundling   */
	      !/* require.ensure */(function (require) {
	
	        /*  Return getComponent   */
	        cb(null, _TabContainer2.default);
	
	        /* Webpack named bundle   */
	      }(__webpack_require__));
	    }
	  };
	};

/***/ }),
/* 494 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _reactRedux = __webpack_require__(413);
	
	var _TabView = __webpack_require__(495);
	
	var _TabView2 = _interopRequireDefault(_TabView);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/*  Object of action creators (can also be function that returns object).
	    Keys will be passed as props to presentational components. Here we are
	    implementing our wrapper around increment; the component doesn't care   */
	
	var mapDispatchToProps = function mapDispatchToProps(dispatch) {
	    return {};
	};
	
	var mapStateToProps = function mapStateToProps(state) {
	    return {};
	};
	
	/*  Note: mapStateToProps is where you should use `reselect` to create selectors, ie:
	
	    import { createSelector } from 'reselect'
	    const counter = (state) => state.counter
	    const tripleCount = createSelector(counter, (count) => count * 3)
	    const mapStateToProps = (state) => ({
	      counter: tripleCount(state)
	    })
	
	    Selectors can compute derived data, allowing Redux to store the minimal possible state.
	    Selectors are efficient. A selector is not recomputed unless one of its arguments change.
	    Selectors are composable. They can be used as input to other selectors.
	    https://github.com/reactjs/reselect    */
	
	exports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(_TabView2.default);

/***/ }),
/* 495 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _extends2 = __webpack_require__(313);
	
	var _extends3 = _interopRequireDefault(_extends2);
	
	var _stringify = __webpack_require__(496);
	
	var _stringify2 = _interopRequireDefault(_stringify);
	
	var _getPrototypeOf = __webpack_require__(382);
	
	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);
	
	var _classCallCheck2 = __webpack_require__(386);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _createClass2 = __webpack_require__(387);
	
	var _createClass3 = _interopRequireDefault(_createClass2);
	
	var _possibleConstructorReturn2 = __webpack_require__(388);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(405);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _react = __webpack_require__(25);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _BaseContainer2 = __webpack_require__(474);
	
	var _BaseContainer3 = _interopRequireDefault(_BaseContainer2);
	
	var _UI = __webpack_require__(485);
	
	var _DataFormBackup = __webpack_require__(498);
	
	var _DataFormBackup2 = _interopRequireDefault(_DataFormBackup);
	
	var _utils = __webpack_require__(476);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var TABS_DATA = [{
	  title: "Basic UI Comps",
	  render: function render() {
	    return _react2.default.createElement(
	      'h3',
	      null,
	      ' default tab1 '
	    );
	  }
	}, {
	  title: "Form Binding",
	  render: function render() {
	    return _react2.default.createElement(
	      'h3',
	      null,
	      ' default tab2 '
	    );
	  }
	}];
	
	var TabView = function (_BaseContainer) {
	  (0, _inherits3.default)(TabView, _BaseContainer);
	
	  function TabView() {
	    (0, _classCallCheck3.default)(this, TabView);
	    return (0, _possibleConstructorReturn3.default)(this, (TabView.__proto__ || (0, _getPrototypeOf2.default)(TabView)).apply(this, arguments));
	  }
	
	  (0, _createClass3.default)(TabView, [{
	    key: 'componentWillMount',
	    value: function componentWillMount() {
	      var _this2 = this;
	
	      this.setState({
	        title: "Tab & UI Components",
	        name: ""
	      });
	
	      // Switch contex for render methods
	      TABS_DATA[0].render = function () {
	        return _this2._renderTab1();
	      };
	      TABS_DATA[1].render = function () {
	        return _this2._renderTab2();
	      };
	    }
	  }, {
	    key: '_renderContent',
	    value: function _renderContent() {
	      return _react2.default.createElement(
	        'div',
	        { className: 'portlet body' },
	        _react2.default.createElement(
	          'div',
	          { className: 'row' },
	          _react2.default.createElement(_UI.Tab, { tabs: TABS_DATA })
	        )
	      );
	    }
	
	    //--------------------------------------------------------------------//
	    //  Tab Content Renderer
	    //--------------------------------------------------------------------//
	
	  }, {
	    key: '_renderTab1',
	    value: function _renderTab1() {
	      var _this3 = this;
	
	      var _state = this.state,
	          name = _state.name,
	          gen = _state.gen;
	
	
	      return _react2.default.createElement(
	        'div',
	        null,
	        _react2.default.createElement(
	          'h3',
	          null,
	          'My Name Is: ',
	          name
	        ),
	        _react2.default.createElement(
	          'div',
	          { className: 'row' },
	          _react2.default.createElement(
	            'div',
	            { className: 'col-sm-2' },
	            _react2.default.createElement(_UI.TextInput, {
	              placeHolder: 'Id',
	              helpText: 'Input your description here....',
	              value: '01',
	              enable: false
	            })
	          ),
	          _react2.default.createElement(
	            'div',
	            { className: 'col-sm-2' },
	            _react2.default.createElement(_UI.TextInput, {
	              icon: 'envelope-o',
	              placeHolder: 'Name',
	              helpText: 'Input your name here....',
	              onValueChange: function onValueChange(val) {
	                _this3.setState({
	                  name: val
	                });
	              }
	            })
	          ),
	          _react2.default.createElement(
	            'div',
	            { className: 'col-sm-2' },
	            _react2.default.createElement(_UI.TextInput, {
	              multi: true,
	              placeHolder: 'Description',
	              helpText: 'Input your description here....'
	            })
	          ),
	          _react2.default.createElement(
	            'div',
	            { className: 'col-sm-2' },
	            _react2.default.createElement(_UI.CheckBox, {
	              placeHolder: 'Is SuperMan'
	            })
	          ),
	          _react2.default.createElement(
	            'div',
	            { className: 'col-sm-2' },
	            _react2.default.createElement(_UI.RadioGroup, {
	              placeHolder: 'Sex',
	              options: [{ title: "Male", value: "male" }, { title: "Female", value: "female" }]
	            })
	          )
	        ),
	        _react2.default.createElement(
	          'div',
	          { className: 'row' },
	          _react2.default.createElement(
	            'div',
	            { className: 'col-sm-2' },
	            _react2.default.createElement(_UI.Select, {
	              placeHolder: 'Role',
	              value: 'user',
	              options: [{ title: "User", value: "user" }, { title: "Supervisor", value: "supervisor" }, { title: "Admin", value: "admin" }] })
	          ),
	          _react2.default.createElement(
	            'div',
	            { className: 'col-sm-2' },
	            _react2.default.createElement(_UI.Select, {
	              placeHolder: 'Country',
	              value: ["vn"],
	              multi: true,
	              options: [{ title: "VN", value: "vn" }, { title: "US", value: "us" }, { title: "Singapore", value: "singapore" }] })
	          )
	        )
	      );
	    }
	  }, {
	    key: '_renderTab2',
	    value: function _renderTab2() {
	      var item = {
	        username: "tintatoi",
	        password: "",
	        server: "S1",
	        remember: false
	      };
	
	      return _react2.default.createElement(
	        'div',
	        null,
	        _react2.default.createElement(_DataFormBackup2.default, {
	          title: 'Data Binding Sample',
	          hasCancel: true,
	          item: item,
	          bodyRender: this.fromBodyRender,
	          onSubmit: function onSubmit(itm) {
	            (0, _utils.alertMessage)({ message: (0, _stringify2.default)(itm) });
	          },
	          onCancel: function onCancel(e) {
	            alert("cancel");
	          }
	        })
	      );
	    }
	  }, {
	    key: 'fromBodyRender',
	    value: function fromBodyRender(options) {
	      var item = options.item,
	          binding = options.binding;
	
	      return _react2.default.createElement(
	        'div',
	        { className: 'row' },
	        _react2.default.createElement(
	          'div',
	          { className: 'col-sm-4' },
	          _react2.default.createElement(_UI.TextInput, (0, _extends3.default)({
	            placeHolder: 'User Name',
	            helpText: 'Input your name here....'
	          }, binding("username")))
	        ),
	        _react2.default.createElement(
	          'div',
	          { className: 'col-sm-4' },
	          _react2.default.createElement(_UI.TextInput, (0, _extends3.default)({
	            type: 'password',
	            placeHolder: 'Password',
	            helpText: 'Password here....'
	          }, binding("password")))
	        ),
	        _react2.default.createElement(
	          'div',
	          { className: 'col-sm-8' },
	          _react2.default.createElement(_UI.Select, (0, _extends3.default)({
	            placeHolder: 'Server',
	            options: [{ title: "Server 1", value: "S1" }, { title: "Server 2", value: "S2" }, { title: "Server 3", value: "S3" }]
	          }, binding("server")))
	        ),
	        _react2.default.createElement(
	          'div',
	          { className: 'col-sm-8' },
	          _react2.default.createElement(_UI.CheckBox, (0, _extends3.default)({
	            placeHolder: 'Remember'
	          }, binding("remember")))
	        )
	      );
	    }
	  }]);
	  return TabView;
	}(_BaseContainer3.default);
	
	exports.default = TabView;

/***/ }),
/* 496 */
/***/ (function(module, exports, __webpack_require__) {

	module.exports = { "default": __webpack_require__(497), __esModule: true };

/***/ }),
/* 497 */
/***/ (function(module, exports, __webpack_require__) {

	var core = __webpack_require__(7);
	var $JSON = core.JSON || (core.JSON = { stringify: JSON.stringify });
	module.exports = function stringify(it) { // eslint-disable-line no-unused-vars
	  return $JSON.stringify.apply($JSON, arguments);
	};


/***/ }),
/* 498 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _DataFormBackup = __webpack_require__(499);
	
	var _DataFormBackup2 = _interopRequireDefault(_DataFormBackup);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = _DataFormBackup2.default;

/***/ }),
/* 499 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _defineProperty2 = __webpack_require__(337);
	
	var _defineProperty3 = _interopRequireDefault(_defineProperty2);
	
	var _extends3 = __webpack_require__(313);
	
	var _extends4 = _interopRequireDefault(_extends3);
	
	var _getPrototypeOf = __webpack_require__(382);
	
	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);
	
	var _classCallCheck2 = __webpack_require__(386);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _createClass2 = __webpack_require__(387);
	
	var _createClass3 = _interopRequireDefault(_createClass2);
	
	var _possibleConstructorReturn2 = __webpack_require__(388);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(405);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _react = __webpack_require__(25);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _classnames = __webpack_require__(470);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var DataForm = function (_Component) {
	  (0, _inherits3.default)(DataForm, _Component);
	
	  function DataForm() {
	    var _ref;
	
	    var _temp, _this, _ret;
	
	    (0, _classCallCheck3.default)(this, DataForm);
	
	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }
	
	    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = DataForm.__proto__ || (0, _getPrototypeOf2.default)(DataForm)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
	      value: "",
	      error: false //["", "success", "warning", "error"]
	    }, _this._mapOnChange = function (key) {
	      return {
	        onValueChange: function onValueChange(val) {
	          var item = _this.state.item;
	
	          _this.setState({
	            item: (0, _extends4.default)({}, item, (0, _defineProperty3.default)({}, key, val))
	          });
	        }
	      };
	    }, _this._mapValue = function (key) {
	      var item = _this.state.item;
	
	      return item[key] || "";
	    }, _this._binding = function (key) {
	      return (0, _extends4.default)({
	        value: _this._mapValue(key)
	      }, _this._mapOnChange(key));
	    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
	  }
	
	  (0, _createClass3.default)(DataForm, [{
	    key: 'componentWillMount',
	    value: function componentWillMount() {
	      this.setState((0, _extends4.default)({
	        _id: "Form_" + Date.now()
	      }, this.props));
	    }
	  }, {
	    key: 'componentDidMount',
	    value: function componentDidMount() {}
	  }, {
	    key: 'render',
	    value: function render() {
	      var _props = this.props,
	          bodyRender = _props.bodyRender,
	          title = _props.title,
	          hasSubmit = _props.hasSubmit,
	          hasCancel = _props.hasCancel,
	          onSubmit = _props.onSubmit,
	          onCancel = _props.onCancel;
	      var item = this.state.item;
	
	      return _react2.default.createElement(
	        'div',
	        { className: 'portlet light bordered' },
	        _react2.default.createElement(
	          'div',
	          { className: 'portlet-title' },
	          _react2.default.createElement(
	            'div',
	            { className: 'caption font-red-sunglo' },
	            _react2.default.createElement('i', { className: 'icon-settings font-red-sunglo' }),
	            _react2.default.createElement(
	              'span',
	              { className: 'caption-subject bold uppercase' },
	              ' ',
	              title || ""
	            )
	          )
	        ),
	        _react2.default.createElement(
	          'div',
	          { className: 'portlet-body form' },
	          _react2.default.createElement(
	            'form',
	            { role: 'form' },
	            _react2.default.createElement(
	              'div',
	              { className: 'form-body' },
	              bodyRender && bodyRender({
	                item: item,
	                binding: this._binding
	              })
	            ),
	            _react2.default.createElement(
	              'div',
	              { className: 'form-actions noborder' },
	              hasSubmit && _react2.default.createElement(
	                'button',
	                {
	                  type: 'button',
	                  className: 'btn blue',
	                  onClick: function onClick(e) {
	                    onSubmit && onSubmit(item);
	                  } },
	                'Submit'
	              ),
	              hasCancel && _react2.default.createElement(
	                'button',
	                {
	                  type: 'button',
	                  className: 'btn default',
	                  onClick: function onClick(e) {
	                    onCancel && onCancel();
	                  } },
	                'Cancel'
	              )
	            )
	          )
	        )
	      );
	    }
	  }]);
	  return DataForm;
	}(_react.Component);
	
	DataForm.propTypes = {
	  // Item
	  item: _react2.default.PropTypes.object,
	
	  // body
	  bodyRender: _react2.default.PropTypes.func,
	
	  // onSubmit handler
	  onSubmit: _react2.default.PropTypes.func,
	
	  // onCancel handler
	  onCancel: _react2.default.PropTypes.func
	};
	
	
	DataForm.defaultProps = {
	  enable: true,
	  hasSubmit: true,
	  hasCancel: true
	};
	
	exports.default = DataForm;

/***/ }),
/* 500 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _TableContainer = __webpack_require__(501);
	
	var _TableContainer2 = _interopRequireDefault(_TableContainer);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	// Sync route definition
	
	exports.default = function (store) {
	  return {
	    path: 'table',
	    /*  Async getComponent is only invoked when route matches   */
	    getComponent: function getComponent(nextState, cb) {
	      /*  Webpack - use 'require.ensure' to create a split point
	          and embed an async module loader (jsonp) when bundling   */
	      !/* require.ensure */(function (require) {
	
	        /*  Return getComponent   */
	        cb(null, _TableContainer2.default);
	
	        /* Webpack named bundle   */
	      }(__webpack_require__));
	    }
	  };
	};

/***/ }),
/* 501 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _reactRedux = __webpack_require__(413);
	
	var _TableView = __webpack_require__(502);
	
	var _TableView2 = _interopRequireDefault(_TableView);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/*  Object of action creators (can also be function that returns object).
	    Keys will be passed as props to presentational components. Here we are
	    implementing our wrapper around increment; the component doesn't care   */
	
	var mapDispatchToProps = function mapDispatchToProps(dispatch) {
	    return {};
	};
	
	var mapStateToProps = function mapStateToProps(state) {
	    return {};
	};
	
	/*  Note: mapStateToProps is where you should use `reselect` to create selectors, ie:
	
	    import { createSelector } from 'reselect'
	    const counter = (state) => state.counter
	    const tripleCount = createSelector(counter, (count) => count * 3)
	    const mapStateToProps = (state) => ({
	      counter: tripleCount(state)
	    })
	
	    Selectors can compute derived data, allowing Redux to store the minimal possible state.
	    Selectors are efficient. A selector is not recomputed unless one of its arguments change.
	    Selectors are composable. They can be used as input to other selectors.
	    https://github.com/reactjs/reselect    */
	
	exports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(_TableView2.default);

/***/ }),
/* 502 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _getPrototypeOf = __webpack_require__(382);
	
	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);
	
	var _classCallCheck2 = __webpack_require__(386);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _createClass2 = __webpack_require__(387);
	
	var _createClass3 = _interopRequireDefault(_createClass2);
	
	var _possibleConstructorReturn2 = __webpack_require__(388);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(405);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _react = __webpack_require__(25);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _BaseContainer2 = __webpack_require__(474);
	
	var _BaseContainer3 = _interopRequireDefault(_BaseContainer2);
	
	var _Table = __webpack_require__(503);
	
	var _Table2 = _interopRequireDefault(_Table);
	
	var _UI = __webpack_require__(485);
	
	var _utils = __webpack_require__(476);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var FAKE_DATA = [{ "username": "userA", "password": "" }, { "username": "userB", "password": "" }, { "username": "userC", "password": "" }, { "username": "userD", "password": "" }, { "username": "userE", "password": "" }, { "username": "userF", "password": "" }, { "username": "userG", "password": "" }, { "username": "userH", "password": "" }];
	
	var TableView = function (_BaseContainer) {
	  (0, _inherits3.default)(TableView, _BaseContainer);
	
	  function TableView() {
	    var _ref;
	
	    var _temp, _this, _ret;
	
	    (0, _classCallCheck3.default)(this, TableView);
	
	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }
	
	    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = TableView.__proto__ || (0, _getPrototypeOf2.default)(TableView)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
	      header: [{
	        title: "Username",
	        prop: "username"
	      }, {
	        title: "Password",
	        prop: "password"
	      }, {
	        title: "Action"
	      }],
	      data: FAKE_DATA
	    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
	  }
	
	  (0, _createClass3.default)(TableView, [{
	    key: 'componentWillMount',
	    value: function componentWillMount() {
	      this.setState({
	        title: "Table View"
	      });
	    }
	  }, {
	    key: '_renderContent',
	    value: function _renderContent() {
	      console.log(this.state);
	      return _react2.default.createElement(
	        'div',
	        { className: 'portlet body' },
	        _react2.default.createElement(_Table2.default, {
	          searchableProperties: ["username"],
	          hasTopBar: true,
	          headers: this.state.header,
	          data: this.state.data,
	          rowRender: this._renderRow,
	          onAddNewHandler: this.onAddNewClick.bind(this)
	        })
	      );
	    }
	  }, {
	    key: 'onAddNewClick',
	    value: function onAddNewClick() {
	      var newData = this.state.data.slice(0);
	      newData.push({ "username": "time_" + Date.now(), "password": "" });
	
	      this.setState({
	        data: newData
	      });
	    }
	  }, {
	    key: '_renderRow',
	    value: function _renderRow(itm, i) {
	      return _react2.default.createElement(
	        'tr',
	        { key: i, className: 'odd gradeX' },
	        _react2.default.createElement(
	          'td',
	          null,
	          itm.username
	        ),
	        _react2.default.createElement(
	          'td',
	          null,
	          itm.password
	        ),
	        _react2.default.createElement(
	          'td',
	          null,
	          _react2.default.createElement(
	            'div',
	            { className: 'btn-group' },
	            _react2.default.createElement(
	              'button',
	              { className: 'btn btn-xs green dropdown-toggle', type: 'button', 'data-toggle': 'dropdown', 'aria-expanded': 'false' },
	              ' Actions',
	              _react2.default.createElement('i', { className: 'fa fa-angle-down' })
	            ),
	            _react2.default.createElement(
	              'ul',
	              { className: 'dropdown-menu pull-left', role: 'menu' },
	              _react2.default.createElement(
	                'li',
	                null,
	                _react2.default.createElement(
	                  'a',
	                  { href: 'javascript:;' },
	                  _react2.default.createElement('i', { className: 'icon-docs' }),
	                  ' New Post '
	                )
	              ),
	              _react2.default.createElement(
	                'li',
	                null,
	                _react2.default.createElement(
	                  'a',
	                  { href: 'javascript:;' },
	                  _react2.default.createElement('i', { className: 'icon-tag' }),
	                  ' New Comment '
	                )
	              ),
	              _react2.default.createElement(
	                'li',
	                null,
	                _react2.default.createElement(
	                  'a',
	                  { href: 'javascript:;' },
	                  _react2.default.createElement('i', { className: 'icon-user' }),
	                  ' New User '
	                )
	              ),
	              _react2.default.createElement(
	                'li',
	                { className: 'divider' },
	                ' '
	              ),
	              _react2.default.createElement(
	                'li',
	                null,
	                _react2.default.createElement(
	                  'a',
	                  { href: 'javascript:;' },
	                  _react2.default.createElement('i', { className: 'icon-flag' }),
	                  ' Comments',
	                  _react2.default.createElement(
	                    'span',
	                    { className: 'badge badge-success' },
	                    '4'
	                  )
	                )
	              )
	            )
	          )
	        )
	      );
	    }
	  }]);
	  return TableView;
	}(_BaseContainer3.default);
	
	exports.default = TableView;

/***/ }),
/* 503 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _Table = __webpack_require__(504);
	
	var _Table2 = _interopRequireDefault(_Table);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = _Table2.default;

/***/ }),
/* 504 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _extends2 = __webpack_require__(313);
	
	var _extends3 = _interopRequireDefault(_extends2);
	
	var _getPrototypeOf = __webpack_require__(382);
	
	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);
	
	var _classCallCheck2 = __webpack_require__(386);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _createClass2 = __webpack_require__(387);
	
	var _createClass3 = _interopRequireDefault(_createClass2);
	
	var _possibleConstructorReturn2 = __webpack_require__(388);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(405);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _react = __webpack_require__(25);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _debounce = __webpack_require__(505);
	
	var _debounce2 = _interopRequireDefault(_debounce);
	
	var _classnames = __webpack_require__(470);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	var _text = __webpack_require__(506);
	
	var _TableTop = __webpack_require__(507);
	
	var _TableTop2 = _interopRequireDefault(_TableTop);
	
	var _TableHeader = __webpack_require__(529);
	
	var _TableHeader2 = _interopRequireDefault(_TableHeader);
	
	var _TableOptions = __webpack_require__(530);
	
	var _TableOptions2 = _interopRequireDefault(_TableOptions);
	
	var _TablePagging = __webpack_require__(531);
	
	var _TablePagging2 = _interopRequireDefault(_TablePagging);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/* @DataTable
	*/
	var Table = function (_Component) {
	  (0, _inherits3.default)(Table, _Component);
	
	  function Table() {
	    var _ref;
	
	    var _temp, _this, _ret;
	
	    (0, _classCallCheck3.default)(this, Table);
	
	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }
	
	    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = Table.__proto__ || (0, _getPrototypeOf2.default)(Table)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
	      itemPerPage: 20,
	      pageIndex: 0,
	      filter: "",
	      order: 1,
	      selectProp: null,
	      filterDataLength: 0
	    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
	  }
	
	  (0, _createClass3.default)(Table, [{
	    key: 'componentWillReceiveProps',
	    value: function componentWillReceiveProps(nextProps) {
	      if (this.props.data != nextProps.data) {
	        console.log("reload...");
	        this._filterData(nextProps.data);
	      }
	    }
	  }, {
	    key: 'componentWillMount',
	    value: function componentWillMount() {
	      this.setState((0, _extends3.default)({
	        _id: "Table_" + Date.now()
	      }, this.props));
	    }
	  }, {
	    key: 'componentDidMount',
	    value: function componentDidMount() {
	      this._filterData();
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var _this2 = this;
	
	      var _props = this.props,
	          data = _props.data,
	          rowRender = _props.rowRender,
	          headers = _props.headers,
	          onAddNewHandler = _props.onAddNewHandler,
	          hasCheckbox = _props.hasCheckbox,
	          hasTopBar = _props.hasTopBar,
	          searchableProperties = _props.searchableProperties;
	      var _state = this.state,
	          renderData = _state.renderData,
	          itemPerPage = _state.itemPerPage,
	          filter = _state.filter,
	          pageIndex = _state.pageIndex;
	
	
	      return _react2.default.createElement(
	        'div',
	        null,
	        hasTopBar && _react2.default.createElement(_TableTop2.default, { onAddNewHandler: onAddNewHandler }),
	        _react2.default.createElement(_TableOptions2.default, {
	          hasSearch: searchableProperties.length > 0,
	          filter: filter,
	          itemPerPage: itemPerPage,
	          itemPerPageChange: function itemPerPageChange(e) {
	            _this2.setState({
	              itemPerPage: +e
	            }, function (_) {
	
	              _this2._filterData();
	            });
	          },
	          searchHandler: function searchHandler(e) {
	
	            // Using Debounce to optimize performance
	            _this2.setState({
	              filter: e,
	              pageIndex: 0
	            }, (0, _debounce2.default)(function (_) {
	              _this2._filterData();
	            }, 200));
	          }
	        }),
	        _react2.default.createElement(
	          'div',
	          { className: 'table-responsive' },
	          _react2.default.createElement(
	            'table',
	            { className: 'dataTable table table-striped table-bordered table-hover table-checkable order-column',
	              ref: 'dataTable' },
	            _react2.default.createElement(_TableHeader2.default, {
	              headers: headers,
	              hasCheckbox: hasCheckbox,
	              handleSelect: function handleSelect(column, order) {
	                _this2.setState({
	                  selectProp: column,
	                  order: order
	                }, function (_) {
	                  _this2._filterData();
	                });
	              } }),
	            _react2.default.createElement(
	              'tbody',
	              null,
	              renderData && renderData.map(function (itm, i) {
	                return rowRender(itm, i);
	              })
	            )
	          )
	        ),
	        _react2.default.createElement(_TablePagging2.default, {
	          filter: filter,
	          filterTotalItem: this.state.filterDataLength || 0,
	          totalItems: data.length,
	          itemPerPage: itemPerPage,
	          pageIndex: pageIndex,
	          pageIndexHandler: function pageIndexHandler(e) {
	            _this2.setState({
	              pageIndex: e
	            }, function (_) {
	              _this2._filterData();
	            });
	          }
	        })
	      );
	    }
	  }, {
	    key: '_filterData',
	    value: function _filterData(dataSource) {
	      dataSource = dataSource || this.props.data;
	      var _state2 = this.state,
	          filter = _state2.filter,
	          selectProp = _state2.selectProp,
	          order = _state2.order;
	      var searchableProperties = this.props.searchableProperties;
	
	      // Filter
	
	      if (filter != "" && searchableProperties.length > 0) {
	        var searchFilter = (0, _text.makeFuzzyFilter)(filter.toLowerCase(), searchableProperties);
	        dataSource = dataSource.filter(function (itm) {
	          return searchFilter(itm);
	        });
	
	        this.setState({
	          filterDataLength: dataSource.length
	        });
	      }
	
	      // Sort
	      if (selectProp != null) dataSource = dataSource.sort((0, _text.makeRowCompare)(selectProp, order > 0 ? 1 : -1));
	
	      // Pagging
	      var _state3 = this.state,
	          itemPerPage = _state3.itemPerPage,
	          pageIndex = _state3.pageIndex;
	
	      if (this.state.itemPerPage > 0) dataSource = dataSource.slice(pageIndex * itemPerPage, pageIndex * itemPerPage + itemPerPage);else dataSource = dataSource.slice(0);
	
	      this.setState({
	        renderData: dataSource
	      });
	    }
	  }]);
	  return Table;
	}(_react.Component);
	
	Table.propTypes = {
	
	  searchableProperties: _react2.default.PropTypes.array,
	
	  // Top bar enable (Add New and Tools)
	  hasTopBar: _react2.default.PropTypes.bool,
	
	  // add new handler
	  onAddNewHandler: _react2.default.PropTypes.func,
	
	  // data
	  data: _react2.default.PropTypes.array,
	
	  // RowRender
	  rowRender: _react2.default.PropTypes.func,
	
	  // Has checkbox
	  hasCheckbox: _react2.default.PropTypes.bool,
	
	  // HeaderRender
	  headers: _react2.default.PropTypes.array
	};
	
	
	Table.defaultProps = {
	  enable: true,
	  searchableProperties: []
	};
	
	exports.default = Table;

/***/ }),
/* 505 */
/***/ (function(module, exports) {

	/**
	 * Returns a function, that, as long as it continues to be invoked, will not
	 * be triggered. The function will be called after it stops being called for
	 * N milliseconds. If `immediate` is passed, trigger the function on the
	 * leading edge, instead of the trailing. The function also has a property 'clear' 
	 * that is a function which will clear the timer to prevent previously scheduled executions. 
	 *
	 * @source underscore.js
	 * @see http://unscriptable.com/2009/03/20/debouncing-javascript-methods/
	 * @param {Function} function to wrap
	 * @param {Number} timeout in ms (`100`)
	 * @param {Boolean} whether to execute at the beginning (`false`)
	 * @api public
	 */
	function debounce(func, wait, immediate){
	  var timeout, args, context, timestamp, result;
	  if (null == wait) wait = 100;
	
	  function later() {
	    var last = Date.now() - timestamp;
	
	    if (last < wait && last >= 0) {
	      timeout = setTimeout(later, wait - last);
	    } else {
	      timeout = null;
	      if (!immediate) {
	        result = func.apply(context, args);
	        context = args = null;
	      }
	    }
	  };
	
	  var debounced = function(){
	    context = this;
	    args = arguments;
	    timestamp = Date.now();
	    var callNow = immediate && !timeout;
	    if (!timeout) timeout = setTimeout(later, wait);
	    if (callNow) {
	      result = func.apply(context, args);
	      context = args = null;
	    }
	
	    return result;
	  };
	
	  debounced.clear = function() {
	    if (timeout) {
	      clearTimeout(timeout);
	      timeout = null;
	    }
	  };
	  
	  debounced.flush = function() {
	    if (timeout) {
	      result = func.apply(context, args);
	      context = args = null;
	      
	      clearTimeout(timeout);
	      timeout = null;
	    }
	  };
	
	  return debounced;
	};
	
	// Adds compatibility for ES modules
	debounce.debounce = debounce;
	
	module.exports = debounce;


/***/ }),
/* 506 */
/***/ (function(module, exports) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	var fuzzysearch = exports.fuzzysearch = function fuzzysearch(needle, haystack) {
	    var hlen = haystack.length;
	    var nlen = needle.length;
	    if (nlen > hlen) {
	        return false;
	    }
	    if (nlen === hlen) {
	        return needle === haystack;
	    }
	    outer: for (var i = 0, j = 0; i < nlen; i++) {
	        var nch = needle.charCodeAt(i);
	        while (j < hlen) {
	            if (haystack.charCodeAt(j++) === nch) {
	                continue outer;
	            }
	        }
	        return false;
	    }
	    return true;
	};
	
	var makeFuzzyFilter = exports.makeFuzzyFilter = function makeFuzzyFilter(searchText, searchableProperties, propertiesMapping) {
	    if (searchableProperties.length > 0 && searchText && searchText.length > 0) {
	        return function (it) {
	            for (var i = 0; i < searchableProperties.length; ++i) {
	                var property = searchableProperties[i];
	                var mapping = propertiesMapping && propertiesMapping[property];
	                var value = mapping ? mapping[it[property]] : it[property];
	                if (fuzzysearch(searchText, String(value).toLowerCase())) {
	                    return true;
	                }
	            }
	
	            return false;
	        };
	    }
	
	    return function () {
	        return true;
	    };
	};
	
	var makeRowCompare = exports.makeRowCompare = function makeRowCompare(property, direction, propertiesMapping) {
	    return function (a, b) {
	        var mapping = propertiesMapping && propertiesMapping[property];
	        var left = mapping ? mapping[a[property]] : a[property];
	        var right = mapping ? mapping[b[property]] : b[property];
	
	        if (isNaN(left) || isNaN(right)) {
	            return direction * String(left).localeCompare(String(right));
	        }
	
	        return direction * (left - right);
	    };
	};

/***/ }),
/* 507 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _getPrototypeOf = __webpack_require__(382);
	
	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);
	
	var _classCallCheck2 = __webpack_require__(386);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _createClass2 = __webpack_require__(387);
	
	var _createClass3 = _interopRequireDefault(_createClass2);
	
	var _possibleConstructorReturn2 = __webpack_require__(388);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(405);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _react = __webpack_require__(25);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _Pagination = __webpack_require__(508);
	
	var _Pagination2 = _interopRequireDefault(_Pagination);
	
	var _classnames = __webpack_require__(470);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	var _text = __webpack_require__(506);
	
	var _reactRouterDom = __webpack_require__(512);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/* @Table Top Button
	  AddNew, Actions
	*/
	var TableTop = function (_Component) {
	  (0, _inherits3.default)(TableTop, _Component);
	
	  // start construct button add and view
	  function TableTop() {
	    (0, _classCallCheck3.default)(this, TableTop);
	
	    var _this = (0, _possibleConstructorReturn3.default)(this, (TableTop.__proto__ || (0, _getPrototypeOf2.default)(TableTop)).call(this));
	
	    _this.addButton = _this.addButton.bind(_this);
	    _this.viewButton = _this.viewButton.bind(_this);
	    _this.state = {
	      isHidden: false,
	      isLoading: true
	    };
	    return _this;
	  }
	
	  (0, _createClass3.default)(TableTop, [{
	    key: 'addButton',
	    value: function addButton() {
	      //alert('Data add tampil');
	      this.setState(function (prevState) {
	        return {
	          isHidden: !prevState.isHidden
	        };
	      });
	      //document.getElementById("btnAdd").style.display = 'none';
	    }
	  }, {
	    key: 'viewButton',
	    value: function viewButton() {
	      //alert('Data view tampil');
	      this.setState(function (prevState) {
	        return {
	          isHidden: !prevState.isHidden
	        };
	      });
	      //document.getElementById("btnAdd").style.display = '';
	    }
	    // start construct button add and view
	
	  }, {
	    key: 'render',
	    value: function render() {
	      var onAddNewHandler = this.props.onAddNewHandler;
	
	
	      return _react2.default.createElement(
	        'div',
	        { className: 'table-toolbar' },
	        _react2.default.createElement(
	          'div',
	          { className: 'row' },
	          _react2.default.createElement(
	            'div',
	            { className: 'col-md-6' },
	            _react2.default.createElement(
	              'div',
	              { className: 'btn-group' },
	              _react2.default.createElement(
	                _reactRouterDom.Link,
	                { to: '/Create', className: 'btn sbold green', id: 'btnAdd', onClick: this.addButton },
	                'ADD NEW',
	                _react2.default.createElement('i', { className: 'fa fa-plus' })
	              ),
	              this.state.isHidden && _react2.default.createElement(
	                _reactRouterDom.Link,
	                { to: '/View', className: 'btn sbold blue', onClick: this.viewButton, id: 'btnView' },
	                'VIEW DATA',
	                _react2.default.createElement('i', { className: 'fa fa-list-alt ' })
	              )
	            )
	          ),
	          _react2.default.createElement(
	            'div',
	            { className: 'col-md-6' },
	            _react2.default.createElement(
	              'div',
	              { className: 'btn-group pull-right' },
	              _react2.default.createElement(
	                'button',
	                { className: 'btn green  btn-outline dropdown-toggle', 'data-toggle': 'dropdown' },
	                'Tools',
	                _react2.default.createElement('i', { className: 'fa fa-angle-down' })
	              ),
	              _react2.default.createElement(
	                'ul',
	                { className: 'dropdown-menu pull-right' },
	                _react2.default.createElement(
	                  'li',
	                  null,
	                  _react2.default.createElement(
	                    'a',
	                    { href: 'javascript:;' },
	                    _react2.default.createElement('i', { className: 'fa fa-print' }),
	                    ' Print '
	                  )
	                ),
	                _react2.default.createElement(
	                  'li',
	                  null,
	                  _react2.default.createElement(
	                    'a',
	                    { href: 'javascript:;' },
	                    _react2.default.createElement('i', { className: 'fa fa-file-pdf-o' }),
	                    ' Save as PDF '
	                  )
	                ),
	                _react2.default.createElement(
	                  'li',
	                  null,
	                  _react2.default.createElement(
	                    'a',
	                    { href: 'javascript:;' },
	                    _react2.default.createElement('i', { className: 'fa fa-file-excel-o' }),
	                    ' Export to Excel '
	                  )
	                )
	              )
	            )
	          )
	        )
	      );
	    }
	  }]);
	  return TableTop;
	}(_react.Component);
	
	TableTop.propTypes = {
	
	  // add new handler
	  onAddNewHandler: _react2.default.PropTypes.func
	};
	exports.default = TableTop;

/***/ }),
/* 508 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _Pagination = __webpack_require__(509);
	
	var _Pagination2 = _interopRequireDefault(_Pagination);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = _Pagination2.default; // Source Code From: https://github.com/vayser/react-js-pagination

/***/ }),
/* 509 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _getPrototypeOf = __webpack_require__(382);
	
	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);
	
	var _classCallCheck2 = __webpack_require__(386);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _createClass2 = __webpack_require__(387);
	
	var _createClass3 = _interopRequireDefault(_createClass2);
	
	var _possibleConstructorReturn2 = __webpack_require__(388);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(405);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _react = __webpack_require__(25);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _paginator = __webpack_require__(510);
	
	var _paginator2 = _interopRequireDefault(_paginator);
	
	var _Page = __webpack_require__(511);
	
	var _Page2 = _interopRequireDefault(_Page);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var Pagination = function (_React$Component) {
	    (0, _inherits3.default)(Pagination, _React$Component);
	
	    function Pagination() {
	        (0, _classCallCheck3.default)(this, Pagination);
	        return (0, _possibleConstructorReturn3.default)(this, (Pagination.__proto__ || (0, _getPrototypeOf2.default)(Pagination)).apply(this, arguments));
	    }
	
	    (0, _createClass3.default)(Pagination, [{
	        key: "buildPages",
	        value: function buildPages() {
	            var pages = [];
	            var _props = this.props,
	                itemsCountPerPage = _props.itemsCountPerPage,
	                pageRangeDisplayed = _props.pageRangeDisplayed,
	                activePage = _props.activePage,
	                prevPageText = _props.prevPageText,
	                nextPageText = _props.nextPageText,
	                firstPageText = _props.firstPageText,
	                lastPageText = _props.lastPageText,
	                totalItemsCount = _props.totalItemsCount;
	
	
	            var paginationInfo = new _paginator2.default(itemsCountPerPage, pageRangeDisplayed).build(totalItemsCount, activePage);
	
	            if (paginationInfo.first_page !== paginationInfo.last_page) {
	                for (var i = paginationInfo.first_page; i <= paginationInfo.last_page; i++) {
	                    pages.push(_react2.default.createElement(_Page2.default, {
	                        isActive: i === activePage,
	                        key: i,
	                        pageNumber: i,
	                        onClick: this.props.onChange
	                    }));
	                }
	            }
	
	            paginationInfo.has_previous_page && pages.unshift(_react2.default.createElement(_Page2.default, {
	                isActive: false,
	                key: "prev" + paginationInfo.previous_page,
	                pageNumber: paginationInfo.previous_page,
	                onClick: this.props.onChange,
	                pageText: prevPageText
	            }));
	
	            paginationInfo.first_page > 1 && pages.unshift(_react2.default.createElement(_Page2.default, {
	                isActive: false,
	                key: 1,
	                pageNumber: 1,
	                onClick: this.props.onChange,
	                pageText: firstPageText
	            }));
	
	            paginationInfo.has_next_page && pages.push(_react2.default.createElement(_Page2.default, {
	                isActive: false,
	                key: "next" + paginationInfo.next_page,
	                pageNumber: paginationInfo.next_page,
	                onClick: this.props.onChange,
	                pageText: nextPageText
	            }));
	
	            paginationInfo.last_page !== paginationInfo.total_pages && pages.push(_react2.default.createElement(_Page2.default, {
	                isActive: false,
	                key: paginationInfo.total_pages,
	                pageNumber: paginationInfo.total_pages,
	                onClick: this.props.onChange,
	                pageText: lastPageText
	            }));
	
	            return pages;
	        }
	    }, {
	        key: "render",
	        value: function render() {
	            var pages = this.buildPages();
	            return _react2.default.createElement(
	                "ul",
	                { className: this.props.innerClass },
	                pages
	            );
	        }
	    }]);
	    return Pagination;
	}(_react2.default.Component);
	
	Pagination.propTypes = {
	    totalItemsCount: _react.PropTypes.number.isRequired,
	    onChange: _react.PropTypes.func.isRequired,
	    activePage: _react.PropTypes.number,
	    pageRangeDisplayed: _react.PropTypes.number,
	    itemsCountPerPage: _react.PropTypes.number,
	    prevPageText: _react.PropTypes.oneOfType([_react.PropTypes.string, _react.PropTypes.element]),
	    nextPageText: _react.PropTypes.oneOfType([_react.PropTypes.string, _react.PropTypes.element]),
	    lastPageText: _react.PropTypes.oneOfType([_react.PropTypes.string, _react.PropTypes.element]),
	    firstPageText: _react.PropTypes.oneOfType([_react.PropTypes.string, _react.PropTypes.element]),
	    innerClass: _react.PropTypes.string
	};
	Pagination.defaultProps = {
	    itemsCountPerPage: 10,
	    pageRangeDisplayed: 5,
	    activePage: 1,
	    prevPageText: "⟨",
	    firstPageText: "«",
	    nextPageText: "⟩",
	    lastPageText: "»",
	    innerClass: "pagination"
	};
	exports.default = Pagination;

/***/ }),
/* 510 */
/***/ (function(module, exports) {

	module.exports = Paginator;
	
	// Paginator constructor
	//
	// `per_page` is the number of results per page, `length` is the number of
	// pages to display. They default to `25` and `10` respectively.
	function Paginator(per_page, length) {
	  // You really should be calling this with `new Paginator`, but WHATEVER.
	  if (!(this instanceof Paginator)) {
	    return new Paginator(per_page, length);
	  }
	
	  // Woo, defaults!
	  this.per_page = per_page || 25;
	  this.length = length || 10;
	}
	
	// Build an object with all the necessary information for outputting pagination
	// controls.
	//
	// (new Paginator(paginator.build(100, 2)
	Paginator.prototype.build = function(total_results, current_page) {
	  // We want the number of pages, rounded up to the nearest page.
	  var total_pages = Math.ceil(total_results / this.per_page);
	
	  // Ensure both total_results and current_page are treated as Numbers
	  total_results = parseInt(total_results, 10);
	  current_page  = parseInt(current_page, 10) || 1;
	
	  // Obviously we can't be on a negative or 0 page.
	  if (current_page < 1) { current_page = 1; }
	  // If the user has done something like /page/99999 we want to clamp that back
	  // down.
	  if (current_page > total_pages) { current_page = total_pages; }
	
	  // This is the first page to be displayed as a numbered link.
	  var first_page = Math.max(1, current_page - Math.floor(this.length / 2));
	
	  // And here's the last page to be displayed specifically.
	  var last_page = Math.min(total_pages, current_page + Math.floor(this.length / 2));
	
	  // This is triggered if we're at or near one of the extremes; we won't have
	  // enough page links. We need to adjust our bounds accordingly.
	  if (last_page - first_page + 1 < this.length) {
	    if (current_page < (total_pages / 2)) {
	      last_page = Math.min(total_pages, last_page + (this.length - (last_page - first_page)));
	    } else {
	      first_page = Math.max(1, first_page - (this.length - (last_page - first_page)));
	    }
	  }
	
	  // This can be triggered if the user wants an odd number of pages.
	  if (last_page - first_page + 1 > this.length) {
	    // We want to move towards whatever extreme we're closest to at the time.
	    if (current_page > (total_pages / 2)) {
	      first_page++;
	    } else {
	      last_page--;
	    }
	  }
	
	  // First result on the page. This, along with the field below, can be used to
	  // do "showing x to y of z results" style things.
	  var first_result = this.per_page * (current_page - 1);
	  if (first_result < 0) { first_result = 0; }
	
	  // Last result on the page.
	  var last_result = (this.per_page * current_page) - 1;
	  if (last_result < 0) { last_result = 0; }
	  if (last_result > Math.max(total_results - 1, 0)) { last_result = Math.max(total_results - 1, 0); }
	
	  // GIMME THAT OBJECT
	  return {
	    total_pages: total_pages,
	    pages: Math.min(last_page - first_page + 1, total_pages),
	    current_page: current_page,
	    first_page: first_page,
	    last_page: last_page,
	    previous_page: current_page - 1,
	    next_page: current_page + 1,
	    has_previous_page: current_page > 1,
	    has_next_page: current_page < total_pages,
	    total_results: total_results,
	    results: Math.min(last_result - first_result + 1, total_results),
	    first_result: first_result,
	    last_result: last_result,
	  };
	};


/***/ }),
/* 511 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _getPrototypeOf = __webpack_require__(382);
	
	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);
	
	var _classCallCheck2 = __webpack_require__(386);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _createClass2 = __webpack_require__(387);
	
	var _createClass3 = _interopRequireDefault(_createClass2);
	
	var _possibleConstructorReturn2 = __webpack_require__(388);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(405);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _react = __webpack_require__(25);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _classnames = __webpack_require__(470);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var Page = function (_Component) {
	    (0, _inherits3.default)(Page, _Component);
	
	    function Page() {
	        (0, _classCallCheck3.default)(this, Page);
	        return (0, _possibleConstructorReturn3.default)(this, (Page.__proto__ || (0, _getPrototypeOf2.default)(Page)).apply(this, arguments));
	    }
	
	    (0, _createClass3.default)(Page, [{
	        key: "render",
	        value: function render() {
	            var _this2 = this;
	
	            var text = this.props.pageText || this.props.pageNumber;
	
	            if (_react2.default.isValidElement(text)) {
	                return text;
	            }
	
	            return _react2.default.createElement(
	                "li",
	                { className: (0, _classnames2.default)({ "active": this.props.isActive }) },
	                _react2.default.createElement(
	                    "a",
	                    { onClick: function onClick(e) {
	                            e.preventDefault();
	                            _this2.props.onClick(_this2.props.pageNumber);
	                        }, href: "#" },
	                    text
	                )
	            );
	        }
	    }]);
	    return Page;
	}(_react.Component);
	
	Page.propTypes = {
	    pageText: _react.PropTypes.oneOfType([_react.PropTypes.string, _react.PropTypes.element]),
	    pageNumber: _react.PropTypes.number.isRequired,
	    onClick: _react.PropTypes.func.isRequired,
	    isActive: _react.PropTypes.bool.isRequired
	};
	exports.default = Page;

/***/ }),
/* 512 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	if (false) {
	  module.exports = require("./cjs/react-router-dom.min.js");
	} else {
	  module.exports = __webpack_require__(513);
	}


/***/ }),
/* 513 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	function _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }
	
	var reactRouter = __webpack_require__(514);
	var React = _interopDefault(__webpack_require__(25));
	var history = __webpack_require__(516);
	var PropTypes = _interopDefault(__webpack_require__(415));
	var warning = _interopDefault(__webpack_require__(522));
	var invariant = _interopDefault(__webpack_require__(523));
	
	function _extends() {
	  _extends = Object.assign || function (target) {
	    for (var i = 1; i < arguments.length; i++) {
	      var source = arguments[i];
	
	      for (var key in source) {
	        if (Object.prototype.hasOwnProperty.call(source, key)) {
	          target[key] = source[key];
	        }
	      }
	    }
	
	    return target;
	  };
	
	  return _extends.apply(this, arguments);
	}
	
	function _inheritsLoose(subClass, superClass) {
	  subClass.prototype = Object.create(superClass.prototype);
	  subClass.prototype.constructor = subClass;
	  subClass.__proto__ = superClass;
	}
	
	function _objectWithoutPropertiesLoose(source, excluded) {
	  if (source == null) return {};
	  var target = {};
	  var sourceKeys = Object.keys(source);
	  var key, i;
	
	  for (i = 0; i < sourceKeys.length; i++) {
	    key = sourceKeys[i];
	    if (excluded.indexOf(key) >= 0) continue;
	    target[key] = source[key];
	  }
	
	  return target;
	}
	
	/**
	 * The public API for a <Router> that uses HTML5 history.
	 */
	
	var BrowserRouter =
	/*#__PURE__*/
	function (_React$Component) {
	  _inheritsLoose(BrowserRouter, _React$Component);
	
	  function BrowserRouter() {
	    var _this;
	
	    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }
	
	    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;
	    _this.history = history.createBrowserHistory(_this.props);
	    return _this;
	  }
	
	  var _proto = BrowserRouter.prototype;
	
	  _proto.render = function render() {
	    return React.createElement(reactRouter.Router, {
	      history: this.history,
	      children: this.props.children
	    });
	  };
	
	  return BrowserRouter;
	}(React.Component);
	
	{
	  BrowserRouter.propTypes = {
	    basename: PropTypes.string,
	    children: PropTypes.node,
	    forceRefresh: PropTypes.bool,
	    getUserConfirmation: PropTypes.func,
	    keyLength: PropTypes.number
	  };
	
	  BrowserRouter.prototype.componentDidMount = function () {
	     warning(!this.props.history, "<BrowserRouter> ignores the history prop. To use a custom history, " + "use `import { Router }` instead of `import { BrowserRouter as Router }`.") ;
	  };
	}
	
	/**
	 * The public API for a <Router> that uses window.location.hash.
	 */
	
	var HashRouter =
	/*#__PURE__*/
	function (_React$Component) {
	  _inheritsLoose(HashRouter, _React$Component);
	
	  function HashRouter() {
	    var _this;
	
	    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }
	
	    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;
	    _this.history = history.createHashHistory(_this.props);
	    return _this;
	  }
	
	  var _proto = HashRouter.prototype;
	
	  _proto.render = function render() {
	    return React.createElement(reactRouter.Router, {
	      history: this.history,
	      children: this.props.children
	    });
	  };
	
	  return HashRouter;
	}(React.Component);
	
	{
	  HashRouter.propTypes = {
	    basename: PropTypes.string,
	    children: PropTypes.node,
	    getUserConfirmation: PropTypes.func,
	    hashType: PropTypes.oneOf(["hashbang", "noslash", "slash"])
	  };
	
	  HashRouter.prototype.componentDidMount = function () {
	     warning(!this.props.history, "<HashRouter> ignores the history prop. To use a custom history, " + "use `import { Router }` instead of `import { HashRouter as Router }`.") ;
	  };
	}
	
	var resolveToLocation = function resolveToLocation(to, currentLocation) {
	  return typeof to === "function" ? to(currentLocation) : to;
	};
	var normalizeToLocation = function normalizeToLocation(to, currentLocation) {
	  return typeof to === "string" ? history.createLocation(to, null, null, currentLocation) : to;
	};
	
	var forwardRefShim = function forwardRefShim(C) {
	  return C;
	};
	
	var forwardRef = React.forwardRef;
	
	if (typeof forwardRef === "undefined") {
	  forwardRef = forwardRefShim;
	}
	
	function isModifiedEvent(event) {
	  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);
	}
	
	var LinkAnchor = forwardRef(function (_ref, forwardedRef) {
	  var innerRef = _ref.innerRef,
	      navigate = _ref.navigate,
	      _onClick = _ref.onClick,
	      rest = _objectWithoutPropertiesLoose(_ref, ["innerRef", "navigate", "onClick"]);
	
	  var target = rest.target;
	
	  var props = _extends({}, rest, {
	    onClick: function onClick(event) {
	      try {
	        if (_onClick) _onClick(event);
	      } catch (ex) {
	        event.preventDefault();
	        throw ex;
	      }
	
	      if (!event.defaultPrevented && // onClick prevented default
	      event.button === 0 && ( // ignore everything but left clicks
	      !target || target === "_self") && // let browser handle "target=_blank" etc.
	      !isModifiedEvent(event) // ignore clicks with modifier keys
	      ) {
	          event.preventDefault();
	          navigate();
	        }
	    }
	  }); // React 15 compat
	
	
	  if (forwardRefShim !== forwardRef) {
	    props.ref = forwardedRef || innerRef;
	  } else {
	    props.ref = innerRef;
	  }
	
	  return React.createElement("a", props);
	});
	
	{
	  LinkAnchor.displayName = "LinkAnchor";
	}
	/**
	 * The public API for rendering a history-aware <a>.
	 */
	
	
	var Link = forwardRef(function (_ref2, forwardedRef) {
	  var _ref2$component = _ref2.component,
	      component = _ref2$component === void 0 ? LinkAnchor : _ref2$component,
	      replace = _ref2.replace,
	      to = _ref2.to,
	      innerRef = _ref2.innerRef,
	      rest = _objectWithoutPropertiesLoose(_ref2, ["component", "replace", "to", "innerRef"]);
	
	  return React.createElement(reactRouter.__RouterContext.Consumer, null, function (context) {
	    !context ?  invariant(false, "You should not use <Link> outside a <Router>")  : void 0;
	    var history = context.history;
	    var location = normalizeToLocation(resolveToLocation(to, context.location), context.location);
	    var href = location ? history.createHref(location) : "";
	
	    var props = _extends({}, rest, {
	      href: href,
	      navigate: function navigate() {
	        var location = resolveToLocation(to, context.location);
	        var method = replace ? history.replace : history.push;
	        method(location);
	      }
	    }); // React 15 compat
	
	
	    if (forwardRefShim !== forwardRef) {
	      props.ref = forwardedRef || innerRef;
	    } else {
	      props.innerRef = innerRef;
	    }
	
	    return React.createElement(component, props);
	  });
	});
	
	{
	  var toType = PropTypes.oneOfType([PropTypes.string, PropTypes.object, PropTypes.func]);
	  var refType = PropTypes.oneOfType([PropTypes.string, PropTypes.func, PropTypes.shape({
	    current: PropTypes.any
	  })]);
	  Link.displayName = "Link";
	  Link.propTypes = {
	    innerRef: refType,
	    onClick: PropTypes.func,
	    replace: PropTypes.bool,
	    target: PropTypes.string,
	    to: toType.isRequired
	  };
	}
	
	var forwardRefShim$1 = function forwardRefShim(C) {
	  return C;
	};
	
	var forwardRef$1 = React.forwardRef;
	
	if (typeof forwardRef$1 === "undefined") {
	  forwardRef$1 = forwardRefShim$1;
	}
	
	function joinClassnames() {
	  for (var _len = arguments.length, classnames = new Array(_len), _key = 0; _key < _len; _key++) {
	    classnames[_key] = arguments[_key];
	  }
	
	  return classnames.filter(function (i) {
	    return i;
	  }).join(" ");
	}
	/**
	 * A <Link> wrapper that knows if it's "active" or not.
	 */
	
	
	var NavLink = forwardRef$1(function (_ref, forwardedRef) {
	  var _ref$ariaCurrent = _ref["aria-current"],
	      ariaCurrent = _ref$ariaCurrent === void 0 ? "page" : _ref$ariaCurrent,
	      _ref$activeClassName = _ref.activeClassName,
	      activeClassName = _ref$activeClassName === void 0 ? "active" : _ref$activeClassName,
	      activeStyle = _ref.activeStyle,
	      classNameProp = _ref.className,
	      exact = _ref.exact,
	      isActiveProp = _ref.isActive,
	      locationProp = _ref.location,
	      strict = _ref.strict,
	      styleProp = _ref.style,
	      to = _ref.to,
	      innerRef = _ref.innerRef,
	      rest = _objectWithoutPropertiesLoose(_ref, ["aria-current", "activeClassName", "activeStyle", "className", "exact", "isActive", "location", "strict", "style", "to", "innerRef"]);
	
	  return React.createElement(reactRouter.__RouterContext.Consumer, null, function (context) {
	    !context ?  invariant(false, "You should not use <NavLink> outside a <Router>")  : void 0;
	    var currentLocation = locationProp || context.location;
	    var toLocation = normalizeToLocation(resolveToLocation(to, currentLocation), currentLocation);
	    var path = toLocation.pathname; // Regex taken from: https://github.com/pillarjs/path-to-regexp/blob/master/index.js#L202
	
	    var escapedPath = path && path.replace(/([.+*?=^!:${}()[\]|/\\])/g, "\\$1");
	    var match = escapedPath ? reactRouter.matchPath(currentLocation.pathname, {
	      path: escapedPath,
	      exact: exact,
	      strict: strict
	    }) : null;
	    var isActive = !!(isActiveProp ? isActiveProp(match, currentLocation) : match);
	    var className = isActive ? joinClassnames(classNameProp, activeClassName) : classNameProp;
	    var style = isActive ? _extends({}, styleProp, {}, activeStyle) : styleProp;
	
	    var props = _extends({
	      "aria-current": isActive && ariaCurrent || null,
	      className: className,
	      style: style,
	      to: toLocation
	    }, rest); // React 15 compat
	
	
	    if (forwardRefShim$1 !== forwardRef$1) {
	      props.ref = forwardedRef || innerRef;
	    } else {
	      props.innerRef = innerRef;
	    }
	
	    return React.createElement(Link, props);
	  });
	});
	
	{
	  NavLink.displayName = "NavLink";
	  var ariaCurrentType = PropTypes.oneOf(["page", "step", "location", "date", "time", "true"]);
	  NavLink.propTypes = _extends({}, Link.propTypes, {
	    "aria-current": ariaCurrentType,
	    activeClassName: PropTypes.string,
	    activeStyle: PropTypes.object,
	    className: PropTypes.string,
	    exact: PropTypes.bool,
	    isActive: PropTypes.func,
	    location: PropTypes.object,
	    strict: PropTypes.bool,
	    style: PropTypes.object
	  });
	}
	
	Object.keys(reactRouter).forEach(function (k) {
	  if (k !== 'default') Object.defineProperty(exports, k, {
	    enumerable: true,
	    get: function () {
	      return reactRouter[k];
	    }
	  });
	});
	exports.BrowserRouter = BrowserRouter;
	exports.HashRouter = HashRouter;
	exports.Link = Link;
	exports.NavLink = NavLink;
	//# sourceMappingURL=react-router-dom.js.map


/***/ }),
/* 514 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	if (false) {
	  module.exports = require("./cjs/react-router.min.js");
	} else {
	  module.exports = __webpack_require__(515);
	}


/***/ }),
/* 515 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	function _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }
	
	var React = _interopDefault(__webpack_require__(25));
	var PropTypes = _interopDefault(__webpack_require__(415));
	var history = __webpack_require__(516);
	var warning = _interopDefault(__webpack_require__(522));
	var createContext = _interopDefault(__webpack_require__(524));
	var invariant = _interopDefault(__webpack_require__(523));
	var pathToRegexp = _interopDefault(__webpack_require__(527));
	var reactIs = __webpack_require__(55);
	var hoistStatics = _interopDefault(__webpack_require__(421));
	
	function _extends() {
	  _extends = Object.assign || function (target) {
	    for (var i = 1; i < arguments.length; i++) {
	      var source = arguments[i];
	
	      for (var key in source) {
	        if (Object.prototype.hasOwnProperty.call(source, key)) {
	          target[key] = source[key];
	        }
	      }
	    }
	
	    return target;
	  };
	
	  return _extends.apply(this, arguments);
	}
	
	function _inheritsLoose(subClass, superClass) {
	  subClass.prototype = Object.create(superClass.prototype);
	  subClass.prototype.constructor = subClass;
	  subClass.__proto__ = superClass;
	}
	
	function _objectWithoutPropertiesLoose(source, excluded) {
	  if (source == null) return {};
	  var target = {};
	  var sourceKeys = Object.keys(source);
	  var key, i;
	
	  for (i = 0; i < sourceKeys.length; i++) {
	    key = sourceKeys[i];
	    if (excluded.indexOf(key) >= 0) continue;
	    target[key] = source[key];
	  }
	
	  return target;
	}
	
	// TODO: Replace with React.createContext once we can assume React 16+
	
	var createNamedContext = function createNamedContext(name) {
	  var context = createContext();
	  context.displayName = name;
	  return context;
	};
	
	var context =
	/*#__PURE__*/
	createNamedContext("Router");
	
	/**
	 * The public API for putting history on context.
	 */
	
	var Router =
	/*#__PURE__*/
	function (_React$Component) {
	  _inheritsLoose(Router, _React$Component);
	
	  Router.computeRootMatch = function computeRootMatch(pathname) {
	    return {
	      path: "/",
	      url: "/",
	      params: {},
	      isExact: pathname === "/"
	    };
	  };
	
	  function Router(props) {
	    var _this;
	
	    _this = _React$Component.call(this, props) || this;
	    _this.state = {
	      location: props.history.location
	    }; // This is a bit of a hack. We have to start listening for location
	    // changes here in the constructor in case there are any <Redirect>s
	    // on the initial render. If there are, they will replace/push when
	    // they mount and since cDM fires in children before parents, we may
	    // get a new location before the <Router> is mounted.
	
	    _this._isMounted = false;
	    _this._pendingLocation = null;
	
	    if (!props.staticContext) {
	      _this.unlisten = props.history.listen(function (location) {
	        if (_this._isMounted) {
	          _this.setState({
	            location: location
	          });
	        } else {
	          _this._pendingLocation = location;
	        }
	      });
	    }
	
	    return _this;
	  }
	
	  var _proto = Router.prototype;
	
	  _proto.componentDidMount = function componentDidMount() {
	    this._isMounted = true;
	
	    if (this._pendingLocation) {
	      this.setState({
	        location: this._pendingLocation
	      });
	    }
	  };
	
	  _proto.componentWillUnmount = function componentWillUnmount() {
	    if (this.unlisten) this.unlisten();
	  };
	
	  _proto.render = function render() {
	    return React.createElement(context.Provider, {
	      children: this.props.children || null,
	      value: {
	        history: this.props.history,
	        location: this.state.location,
	        match: Router.computeRootMatch(this.state.location.pathname),
	        staticContext: this.props.staticContext
	      }
	    });
	  };
	
	  return Router;
	}(React.Component);
	
	{
	  Router.propTypes = {
	    children: PropTypes.node,
	    history: PropTypes.object.isRequired,
	    staticContext: PropTypes.object
	  };
	
	  Router.prototype.componentDidUpdate = function (prevProps) {
	     warning(prevProps.history === this.props.history, "You cannot change <Router history>") ;
	  };
	}
	
	/**
	 * The public API for a <Router> that stores location in memory.
	 */
	
	var MemoryRouter =
	/*#__PURE__*/
	function (_React$Component) {
	  _inheritsLoose(MemoryRouter, _React$Component);
	
	  function MemoryRouter() {
	    var _this;
	
	    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }
	
	    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;
	    _this.history = history.createMemoryHistory(_this.props);
	    return _this;
	  }
	
	  var _proto = MemoryRouter.prototype;
	
	  _proto.render = function render() {
	    return React.createElement(Router, {
	      history: this.history,
	      children: this.props.children
	    });
	  };
	
	  return MemoryRouter;
	}(React.Component);
	
	{
	  MemoryRouter.propTypes = {
	    initialEntries: PropTypes.array,
	    initialIndex: PropTypes.number,
	    getUserConfirmation: PropTypes.func,
	    keyLength: PropTypes.number,
	    children: PropTypes.node
	  };
	
	  MemoryRouter.prototype.componentDidMount = function () {
	     warning(!this.props.history, "<MemoryRouter> ignores the history prop. To use a custom history, " + "use `import { Router }` instead of `import { MemoryRouter as Router }`.") ;
	  };
	}
	
	var Lifecycle =
	/*#__PURE__*/
	function (_React$Component) {
	  _inheritsLoose(Lifecycle, _React$Component);
	
	  function Lifecycle() {
	    return _React$Component.apply(this, arguments) || this;
	  }
	
	  var _proto = Lifecycle.prototype;
	
	  _proto.componentDidMount = function componentDidMount() {
	    if (this.props.onMount) this.props.onMount.call(this, this);
	  };
	
	  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {
	    if (this.props.onUpdate) this.props.onUpdate.call(this, this, prevProps);
	  };
	
	  _proto.componentWillUnmount = function componentWillUnmount() {
	    if (this.props.onUnmount) this.props.onUnmount.call(this, this);
	  };
	
	  _proto.render = function render() {
	    return null;
	  };
	
	  return Lifecycle;
	}(React.Component);
	
	/**
	 * The public API for prompting the user before navigating away from a screen.
	 */
	
	function Prompt(_ref) {
	  var message = _ref.message,
	      _ref$when = _ref.when,
	      when = _ref$when === void 0 ? true : _ref$when;
	  return React.createElement(context.Consumer, null, function (context) {
	    !context ?  invariant(false, "You should not use <Prompt> outside a <Router>")  : void 0;
	    if (!when || context.staticContext) return null;
	    var method = context.history.block;
	    return React.createElement(Lifecycle, {
	      onMount: function onMount(self) {
	        self.release = method(message);
	      },
	      onUpdate: function onUpdate(self, prevProps) {
	        if (prevProps.message !== message) {
	          self.release();
	          self.release = method(message);
	        }
	      },
	      onUnmount: function onUnmount(self) {
	        self.release();
	      },
	      message: message
	    });
	  });
	}
	
	{
	  var messageType = PropTypes.oneOfType([PropTypes.func, PropTypes.string]);
	  Prompt.propTypes = {
	    when: PropTypes.bool,
	    message: messageType.isRequired
	  };
	}
	
	var cache = {};
	var cacheLimit = 10000;
	var cacheCount = 0;
	
	function compilePath(path) {
	  if (cache[path]) return cache[path];
	  var generator = pathToRegexp.compile(path);
	
	  if (cacheCount < cacheLimit) {
	    cache[path] = generator;
	    cacheCount++;
	  }
	
	  return generator;
	}
	/**
	 * Public API for generating a URL pathname from a path and parameters.
	 */
	
	
	function generatePath(path, params) {
	  if (path === void 0) {
	    path = "/";
	  }
	
	  if (params === void 0) {
	    params = {};
	  }
	
	  return path === "/" ? path : compilePath(path)(params, {
	    pretty: true
	  });
	}
	
	/**
	 * The public API for navigating programmatically with a component.
	 */
	
	function Redirect(_ref) {
	  var computedMatch = _ref.computedMatch,
	      to = _ref.to,
	      _ref$push = _ref.push,
	      push = _ref$push === void 0 ? false : _ref$push;
	  return React.createElement(context.Consumer, null, function (context) {
	    !context ?  invariant(false, "You should not use <Redirect> outside a <Router>")  : void 0;
	    var history$1 = context.history,
	        staticContext = context.staticContext;
	    var method = push ? history$1.push : history$1.replace;
	    var location = history.createLocation(computedMatch ? typeof to === "string" ? generatePath(to, computedMatch.params) : _extends({}, to, {
	      pathname: generatePath(to.pathname, computedMatch.params)
	    }) : to); // When rendering in a static context,
	    // set the new location immediately.
	
	    if (staticContext) {
	      method(location);
	      return null;
	    }
	
	    return React.createElement(Lifecycle, {
	      onMount: function onMount() {
	        method(location);
	      },
	      onUpdate: function onUpdate(self, prevProps) {
	        var prevLocation = history.createLocation(prevProps.to);
	
	        if (!history.locationsAreEqual(prevLocation, _extends({}, location, {
	          key: prevLocation.key
	        }))) {
	          method(location);
	        }
	      },
	      to: to
	    });
	  });
	}
	
	{
	  Redirect.propTypes = {
	    push: PropTypes.bool,
	    from: PropTypes.string,
	    to: PropTypes.oneOfType([PropTypes.string, PropTypes.object]).isRequired
	  };
	}
	
	var cache$1 = {};
	var cacheLimit$1 = 10000;
	var cacheCount$1 = 0;
	
	function compilePath$1(path, options) {
	  var cacheKey = "" + options.end + options.strict + options.sensitive;
	  var pathCache = cache$1[cacheKey] || (cache$1[cacheKey] = {});
	  if (pathCache[path]) return pathCache[path];
	  var keys = [];
	  var regexp = pathToRegexp(path, keys, options);
	  var result = {
	    regexp: regexp,
	    keys: keys
	  };
	
	  if (cacheCount$1 < cacheLimit$1) {
	    pathCache[path] = result;
	    cacheCount$1++;
	  }
	
	  return result;
	}
	/**
	 * Public API for matching a URL pathname to a path.
	 */
	
	
	function matchPath(pathname, options) {
	  if (options === void 0) {
	    options = {};
	  }
	
	  if (typeof options === "string" || Array.isArray(options)) {
	    options = {
	      path: options
	    };
	  }
	
	  var _options = options,
	      path = _options.path,
	      _options$exact = _options.exact,
	      exact = _options$exact === void 0 ? false : _options$exact,
	      _options$strict = _options.strict,
	      strict = _options$strict === void 0 ? false : _options$strict,
	      _options$sensitive = _options.sensitive,
	      sensitive = _options$sensitive === void 0 ? false : _options$sensitive;
	  var paths = [].concat(path);
	  return paths.reduce(function (matched, path) {
	    if (!path && path !== "") return null;
	    if (matched) return matched;
	
	    var _compilePath = compilePath$1(path, {
	      end: exact,
	      strict: strict,
	      sensitive: sensitive
	    }),
	        regexp = _compilePath.regexp,
	        keys = _compilePath.keys;
	
	    var match = regexp.exec(pathname);
	    if (!match) return null;
	    var url = match[0],
	        values = match.slice(1);
	    var isExact = pathname === url;
	    if (exact && !isExact) return null;
	    return {
	      path: path,
	      // the path used to match
	      url: path === "/" && url === "" ? "/" : url,
	      // the matched portion of the URL
	      isExact: isExact,
	      // whether or not we matched exactly
	      params: keys.reduce(function (memo, key, index) {
	        memo[key.name] = values[index];
	        return memo;
	      }, {})
	    };
	  }, null);
	}
	
	function isEmptyChildren(children) {
	  return React.Children.count(children) === 0;
	}
	
	function evalChildrenDev(children, props, path) {
	  var value = children(props);
	   warning(value !== undefined, "You returned `undefined` from the `children` function of " + ("<Route" + (path ? " path=\"" + path + "\"" : "") + ">, but you ") + "should have returned a React element or `null`") ;
	  return value || null;
	}
	/**
	 * The public API for matching a single path and rendering.
	 */
	
	
	var Route =
	/*#__PURE__*/
	function (_React$Component) {
	  _inheritsLoose(Route, _React$Component);
	
	  function Route() {
	    return _React$Component.apply(this, arguments) || this;
	  }
	
	  var _proto = Route.prototype;
	
	  _proto.render = function render() {
	    var _this = this;
	
	    return React.createElement(context.Consumer, null, function (context$1) {
	      !context$1 ?  invariant(false, "You should not use <Route> outside a <Router>")  : void 0;
	      var location = _this.props.location || context$1.location;
	      var match = _this.props.computedMatch ? _this.props.computedMatch // <Switch> already computed the match for us
	      : _this.props.path ? matchPath(location.pathname, _this.props) : context$1.match;
	
	      var props = _extends({}, context$1, {
	        location: location,
	        match: match
	      });
	
	      var _this$props = _this.props,
	          children = _this$props.children,
	          component = _this$props.component,
	          render = _this$props.render; // Preact uses an empty array as children by
	      // default, so use null if that's the case.
	
	      if (Array.isArray(children) && children.length === 0) {
	        children = null;
	      }
	
	      return React.createElement(context.Provider, {
	        value: props
	      }, props.match ? children ? typeof children === "function" ?  evalChildrenDev(children, props, _this.props.path)  : children : component ? React.createElement(component, props) : render ? render(props) : null : typeof children === "function" ?  evalChildrenDev(children, props, _this.props.path)  : null);
	    });
	  };
	
	  return Route;
	}(React.Component);
	
	{
	  Route.propTypes = {
	    children: PropTypes.oneOfType([PropTypes.func, PropTypes.node]),
	    component: function component(props, propName) {
	      if (props[propName] && !reactIs.isValidElementType(props[propName])) {
	        return new Error("Invalid prop 'component' supplied to 'Route': the prop is not a valid React component");
	      }
	    },
	    exact: PropTypes.bool,
	    location: PropTypes.object,
	    path: PropTypes.oneOfType([PropTypes.string, PropTypes.arrayOf(PropTypes.string)]),
	    render: PropTypes.func,
	    sensitive: PropTypes.bool,
	    strict: PropTypes.bool
	  };
	
	  Route.prototype.componentDidMount = function () {
	     warning(!(this.props.children && !isEmptyChildren(this.props.children) && this.props.component), "You should not use <Route component> and <Route children> in the same route; <Route component> will be ignored") ;
	     warning(!(this.props.children && !isEmptyChildren(this.props.children) && this.props.render), "You should not use <Route render> and <Route children> in the same route; <Route render> will be ignored") ;
	     warning(!(this.props.component && this.props.render), "You should not use <Route component> and <Route render> in the same route; <Route render> will be ignored") ;
	  };
	
	  Route.prototype.componentDidUpdate = function (prevProps) {
	     warning(!(this.props.location && !prevProps.location), '<Route> elements should not change from uncontrolled to controlled (or vice versa). You initially used no "location" prop and then provided one on a subsequent render.') ;
	     warning(!(!this.props.location && prevProps.location), '<Route> elements should not change from controlled to uncontrolled (or vice versa). You provided a "location" prop initially but omitted it on a subsequent render.') ;
	  };
	}
	
	function addLeadingSlash(path) {
	  return path.charAt(0) === "/" ? path : "/" + path;
	}
	
	function addBasename(basename, location) {
	  if (!basename) return location;
	  return _extends({}, location, {
	    pathname: addLeadingSlash(basename) + location.pathname
	  });
	}
	
	function stripBasename(basename, location) {
	  if (!basename) return location;
	  var base = addLeadingSlash(basename);
	  if (location.pathname.indexOf(base) !== 0) return location;
	  return _extends({}, location, {
	    pathname: location.pathname.substr(base.length)
	  });
	}
	
	function createURL(location) {
	  return typeof location === "string" ? location : history.createPath(location);
	}
	
	function staticHandler(methodName) {
	  return function () {
	      invariant(false, "You cannot %s with <StaticRouter>", methodName)  ;
	  };
	}
	
	function noop() {}
	/**
	 * The public top-level API for a "static" <Router>, so-called because it
	 * can't actually change the current location. Instead, it just records
	 * location changes in a context object. Useful mainly in testing and
	 * server-rendering scenarios.
	 */
	
	
	var StaticRouter =
	/*#__PURE__*/
	function (_React$Component) {
	  _inheritsLoose(StaticRouter, _React$Component);
	
	  function StaticRouter() {
	    var _this;
	
	    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }
	
	    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;
	
	    _this.handlePush = function (location) {
	      return _this.navigateTo(location, "PUSH");
	    };
	
	    _this.handleReplace = function (location) {
	      return _this.navigateTo(location, "REPLACE");
	    };
	
	    _this.handleListen = function () {
	      return noop;
	    };
	
	    _this.handleBlock = function () {
	      return noop;
	    };
	
	    return _this;
	  }
	
	  var _proto = StaticRouter.prototype;
	
	  _proto.navigateTo = function navigateTo(location, action) {
	    var _this$props = this.props,
	        _this$props$basename = _this$props.basename,
	        basename = _this$props$basename === void 0 ? "" : _this$props$basename,
	        _this$props$context = _this$props.context,
	        context = _this$props$context === void 0 ? {} : _this$props$context;
	    context.action = action;
	    context.location = addBasename(basename, history.createLocation(location));
	    context.url = createURL(context.location);
	  };
	
	  _proto.render = function render() {
	    var _this$props2 = this.props,
	        _this$props2$basename = _this$props2.basename,
	        basename = _this$props2$basename === void 0 ? "" : _this$props2$basename,
	        _this$props2$context = _this$props2.context,
	        context = _this$props2$context === void 0 ? {} : _this$props2$context,
	        _this$props2$location = _this$props2.location,
	        location = _this$props2$location === void 0 ? "/" : _this$props2$location,
	        rest = _objectWithoutPropertiesLoose(_this$props2, ["basename", "context", "location"]);
	
	    var history$1 = {
	      createHref: function createHref(path) {
	        return addLeadingSlash(basename + createURL(path));
	      },
	      action: "POP",
	      location: stripBasename(basename, history.createLocation(location)),
	      push: this.handlePush,
	      replace: this.handleReplace,
	      go: staticHandler("go"),
	      goBack: staticHandler("goBack"),
	      goForward: staticHandler("goForward"),
	      listen: this.handleListen,
	      block: this.handleBlock
	    };
	    return React.createElement(Router, _extends({}, rest, {
	      history: history$1,
	      staticContext: context
	    }));
	  };
	
	  return StaticRouter;
	}(React.Component);
	
	{
	  StaticRouter.propTypes = {
	    basename: PropTypes.string,
	    context: PropTypes.object,
	    location: PropTypes.oneOfType([PropTypes.string, PropTypes.object])
	  };
	
	  StaticRouter.prototype.componentDidMount = function () {
	     warning(!this.props.history, "<StaticRouter> ignores the history prop. To use a custom history, " + "use `import { Router }` instead of `import { StaticRouter as Router }`.") ;
	  };
	}
	
	/**
	 * The public API for rendering the first <Route> that matches.
	 */
	
	var Switch =
	/*#__PURE__*/
	function (_React$Component) {
	  _inheritsLoose(Switch, _React$Component);
	
	  function Switch() {
	    return _React$Component.apply(this, arguments) || this;
	  }
	
	  var _proto = Switch.prototype;
	
	  _proto.render = function render() {
	    var _this = this;
	
	    return React.createElement(context.Consumer, null, function (context) {
	      !context ?  invariant(false, "You should not use <Switch> outside a <Router>")  : void 0;
	      var location = _this.props.location || context.location;
	      var element, match; // We use React.Children.forEach instead of React.Children.toArray().find()
	      // here because toArray adds keys to all child elements and we do not want
	      // to trigger an unmount/remount for two <Route>s that render the same
	      // component at different URLs.
	
	      React.Children.forEach(_this.props.children, function (child) {
	        if (match == null && React.isValidElement(child)) {
	          element = child;
	          var path = child.props.path || child.props.from;
	          match = path ? matchPath(location.pathname, _extends({}, child.props, {
	            path: path
	          })) : context.match;
	        }
	      });
	      return match ? React.cloneElement(element, {
	        location: location,
	        computedMatch: match
	      }) : null;
	    });
	  };
	
	  return Switch;
	}(React.Component);
	
	{
	  Switch.propTypes = {
	    children: PropTypes.node,
	    location: PropTypes.object
	  };
	
	  Switch.prototype.componentDidUpdate = function (prevProps) {
	     warning(!(this.props.location && !prevProps.location), '<Switch> elements should not change from uncontrolled to controlled (or vice versa). You initially used no "location" prop and then provided one on a subsequent render.') ;
	     warning(!(!this.props.location && prevProps.location), '<Switch> elements should not change from controlled to uncontrolled (or vice versa). You provided a "location" prop initially but omitted it on a subsequent render.') ;
	  };
	}
	
	/**
	 * A public higher-order component to access the imperative API
	 */
	
	function withRouter(Component) {
	  var displayName = "withRouter(" + (Component.displayName || Component.name) + ")";
	
	  var C = function C(props) {
	    var wrappedComponentRef = props.wrappedComponentRef,
	        remainingProps = _objectWithoutPropertiesLoose(props, ["wrappedComponentRef"]);
	
	    return React.createElement(context.Consumer, null, function (context) {
	      !context ?  invariant(false, "You should not use <" + displayName + " /> outside a <Router>")  : void 0;
	      return React.createElement(Component, _extends({}, remainingProps, context, {
	        ref: wrappedComponentRef
	      }));
	    });
	  };
	
	  C.displayName = displayName;
	  C.WrappedComponent = Component;
	
	  {
	    C.propTypes = {
	      wrappedComponentRef: PropTypes.oneOfType([PropTypes.string, PropTypes.func, PropTypes.object])
	    };
	  }
	
	  return hoistStatics(C, Component);
	}
	
	var useContext = React.useContext;
	function useHistory() {
	  {
	    !(typeof useContext === "function") ?  invariant(false, "You must use React >= 16.8 in order to use useHistory()")  : void 0;
	  }
	
	  return useContext(context).history;
	}
	function useLocation() {
	  {
	    !(typeof useContext === "function") ?  invariant(false, "You must use React >= 16.8 in order to use useLocation()")  : void 0;
	  }
	
	  return useContext(context).location;
	}
	function useParams() {
	  {
	    !(typeof useContext === "function") ?  invariant(false, "You must use React >= 16.8 in order to use useParams()")  : void 0;
	  }
	
	  var match = useContext(context).match;
	  return match ? match.params : {};
	}
	function useRouteMatch(path) {
	  {
	    !(typeof useContext === "function") ?  invariant(false, "You must use React >= 16.8 in order to use useRouteMatch()")  : void 0;
	  }
	
	  return path ? matchPath(useLocation().pathname, path) : useContext(context).match;
	}
	
	{
	  if (typeof window !== "undefined") {
	    var global = window;
	    var key = "__react_router_build__";
	    var buildNames = {
	      cjs: "CommonJS",
	      esm: "ES modules",
	      umd: "UMD"
	    };
	
	    if (global[key] && global[key] !== "cjs") {
	      var initialBuildName = buildNames[global[key]];
	      var secondaryBuildName = buildNames["cjs"]; // TODO: Add link to article that explains in detail how to avoid
	      // loading 2 different builds.
	
	      throw new Error("You are loading the " + secondaryBuildName + " build of React Router " + ("on a page that is already running the " + initialBuildName + " ") + "build, so things won't work right.");
	    }
	
	    global[key] = "cjs";
	  }
	}
	
	exports.MemoryRouter = MemoryRouter;
	exports.Prompt = Prompt;
	exports.Redirect = Redirect;
	exports.Route = Route;
	exports.Router = Router;
	exports.StaticRouter = StaticRouter;
	exports.Switch = Switch;
	exports.__RouterContext = context;
	exports.generatePath = generatePath;
	exports.matchPath = matchPath;
	exports.useHistory = useHistory;
	exports.useLocation = useLocation;
	exports.useParams = useParams;
	exports.useRouteMatch = useRouteMatch;
	exports.withRouter = withRouter;
	//# sourceMappingURL=react-router.js.map


/***/ }),
/* 516 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	if (false) {
	  module.exports = require('./cjs/history.min.js');
	} else {
	  module.exports = __webpack_require__(517);
	}


/***/ }),
/* 517 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, '__esModule', { value: true });
	
	function _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }
	
	var resolvePathname = _interopDefault(__webpack_require__(518));
	var valueEqual = _interopDefault(__webpack_require__(520));
	var warning = _interopDefault(__webpack_require__(522));
	var invariant = _interopDefault(__webpack_require__(523));
	
	function _extends() {
	  _extends = Object.assign || function (target) {
	    for (var i = 1; i < arguments.length; i++) {
	      var source = arguments[i];
	
	      for (var key in source) {
	        if (Object.prototype.hasOwnProperty.call(source, key)) {
	          target[key] = source[key];
	        }
	      }
	    }
	
	    return target;
	  };
	
	  return _extends.apply(this, arguments);
	}
	
	function addLeadingSlash(path) {
	  return path.charAt(0) === '/' ? path : '/' + path;
	}
	function stripLeadingSlash(path) {
	  return path.charAt(0) === '/' ? path.substr(1) : path;
	}
	function hasBasename(path, prefix) {
	  return path.toLowerCase().indexOf(prefix.toLowerCase()) === 0 && '/?#'.indexOf(path.charAt(prefix.length)) !== -1;
	}
	function stripBasename(path, prefix) {
	  return hasBasename(path, prefix) ? path.substr(prefix.length) : path;
	}
	function stripTrailingSlash(path) {
	  return path.charAt(path.length - 1) === '/' ? path.slice(0, -1) : path;
	}
	function parsePath(path) {
	  var pathname = path || '/';
	  var search = '';
	  var hash = '';
	  var hashIndex = pathname.indexOf('#');
	
	  if (hashIndex !== -1) {
	    hash = pathname.substr(hashIndex);
	    pathname = pathname.substr(0, hashIndex);
	  }
	
	  var searchIndex = pathname.indexOf('?');
	
	  if (searchIndex !== -1) {
	    search = pathname.substr(searchIndex);
	    pathname = pathname.substr(0, searchIndex);
	  }
	
	  return {
	    pathname: pathname,
	    search: search === '?' ? '' : search,
	    hash: hash === '#' ? '' : hash
	  };
	}
	function createPath(location) {
	  var pathname = location.pathname,
	      search = location.search,
	      hash = location.hash;
	  var path = pathname || '/';
	  if (search && search !== '?') path += search.charAt(0) === '?' ? search : "?" + search;
	  if (hash && hash !== '#') path += hash.charAt(0) === '#' ? hash : "#" + hash;
	  return path;
	}
	
	function createLocation(path, state, key, currentLocation) {
	  var location;
	
	  if (typeof path === 'string') {
	    // Two-arg form: push(path, state)
	    location = parsePath(path);
	    location.state = state;
	  } else {
	    // One-arg form: push(location)
	    location = _extends({}, path);
	    if (location.pathname === undefined) location.pathname = '';
	
	    if (location.search) {
	      if (location.search.charAt(0) !== '?') location.search = '?' + location.search;
	    } else {
	      location.search = '';
	    }
	
	    if (location.hash) {
	      if (location.hash.charAt(0) !== '#') location.hash = '#' + location.hash;
	    } else {
	      location.hash = '';
	    }
	
	    if (state !== undefined && location.state === undefined) location.state = state;
	  }
	
	  try {
	    location.pathname = decodeURI(location.pathname);
	  } catch (e) {
	    if (e instanceof URIError) {
	      throw new URIError('Pathname "' + location.pathname + '" could not be decoded. ' + 'This is likely caused by an invalid percent-encoding.');
	    } else {
	      throw e;
	    }
	  }
	
	  if (key) location.key = key;
	
	  if (currentLocation) {
	    // Resolve incomplete/relative pathname relative to current location.
	    if (!location.pathname) {
	      location.pathname = currentLocation.pathname;
	    } else if (location.pathname.charAt(0) !== '/') {
	      location.pathname = resolvePathname(location.pathname, currentLocation.pathname);
	    }
	  } else {
	    // When there is no prior location and pathname is empty, set it to /
	    if (!location.pathname) {
	      location.pathname = '/';
	    }
	  }
	
	  return location;
	}
	function locationsAreEqual(a, b) {
	  return a.pathname === b.pathname && a.search === b.search && a.hash === b.hash && a.key === b.key && valueEqual(a.state, b.state);
	}
	
	function createTransitionManager() {
	  var prompt = null;
	
	  function setPrompt(nextPrompt) {
	    warning(prompt == null, 'A history supports only one prompt at a time');
	    prompt = nextPrompt;
	    return function () {
	      if (prompt === nextPrompt) prompt = null;
	    };
	  }
	
	  function confirmTransitionTo(location, action, getUserConfirmation, callback) {
	    // TODO: If another transition starts while we're still confirming
	    // the previous one, we may end up in a weird state. Figure out the
	    // best way to handle this.
	    if (prompt != null) {
	      var result = typeof prompt === 'function' ? prompt(location, action) : prompt;
	
	      if (typeof result === 'string') {
	        if (typeof getUserConfirmation === 'function') {
	          getUserConfirmation(result, callback);
	        } else {
	          warning(false, 'A history needs a getUserConfirmation function in order to use a prompt message');
	          callback(true);
	        }
	      } else {
	        // Return false from a transition hook to cancel the transition.
	        callback(result !== false);
	      }
	    } else {
	      callback(true);
	    }
	  }
	
	  var listeners = [];
	
	  function appendListener(fn) {
	    var isActive = true;
	
	    function listener() {
	      if (isActive) fn.apply(void 0, arguments);
	    }
	
	    listeners.push(listener);
	    return function () {
	      isActive = false;
	      listeners = listeners.filter(function (item) {
	        return item !== listener;
	      });
	    };
	  }
	
	  function notifyListeners() {
	    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }
	
	    listeners.forEach(function (listener) {
	      return listener.apply(void 0, args);
	    });
	  }
	
	  return {
	    setPrompt: setPrompt,
	    confirmTransitionTo: confirmTransitionTo,
	    appendListener: appendListener,
	    notifyListeners: notifyListeners
	  };
	}
	
	var canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);
	function getConfirmation(message, callback) {
	  callback(window.confirm(message)); // eslint-disable-line no-alert
	}
	/**
	 * Returns true if the HTML5 history API is supported. Taken from Modernizr.
	 *
	 * https://github.com/Modernizr/Modernizr/blob/master/LICENSE
	 * https://github.com/Modernizr/Modernizr/blob/master/feature-detects/history.js
	 * changed to avoid false negatives for Windows Phones: https://github.com/reactjs/react-router/issues/586
	 */
	
	function supportsHistory() {
	  var ua = window.navigator.userAgent;
	  if ((ua.indexOf('Android 2.') !== -1 || ua.indexOf('Android 4.0') !== -1) && ua.indexOf('Mobile Safari') !== -1 && ua.indexOf('Chrome') === -1 && ua.indexOf('Windows Phone') === -1) return false;
	  return window.history && 'pushState' in window.history;
	}
	/**
	 * Returns true if browser fires popstate on hash change.
	 * IE10 and IE11 do not.
	 */
	
	function supportsPopStateOnHashChange() {
	  return window.navigator.userAgent.indexOf('Trident') === -1;
	}
	/**
	 * Returns false if using go(n) with hash history causes a full page reload.
	 */
	
	function supportsGoWithoutReloadUsingHash() {
	  return window.navigator.userAgent.indexOf('Firefox') === -1;
	}
	/**
	 * Returns true if a given popstate event is an extraneous WebKit event.
	 * Accounts for the fact that Chrome on iOS fires real popstate events
	 * containing undefined state when pressing the back button.
	 */
	
	function isExtraneousPopstateEvent(event) {
	  return event.state === undefined && navigator.userAgent.indexOf('CriOS') === -1;
	}
	
	var PopStateEvent = 'popstate';
	var HashChangeEvent = 'hashchange';
	
	function getHistoryState() {
	  try {
	    return window.history.state || {};
	  } catch (e) {
	    // IE 11 sometimes throws when accessing window.history.state
	    // See https://github.com/ReactTraining/history/pull/289
	    return {};
	  }
	}
	/**
	 * Creates a history object that uses the HTML5 history API including
	 * pushState, replaceState, and the popstate event.
	 */
	
	
	function createBrowserHistory(props) {
	  if (props === void 0) {
	    props = {};
	  }
	
	  !canUseDOM ? invariant(false, 'Browser history needs a DOM') : void 0;
	  var globalHistory = window.history;
	  var canUseHistory = supportsHistory();
	  var needsHashChangeListener = !supportsPopStateOnHashChange();
	  var _props = props,
	      _props$forceRefresh = _props.forceRefresh,
	      forceRefresh = _props$forceRefresh === void 0 ? false : _props$forceRefresh,
	      _props$getUserConfirm = _props.getUserConfirmation,
	      getUserConfirmation = _props$getUserConfirm === void 0 ? getConfirmation : _props$getUserConfirm,
	      _props$keyLength = _props.keyLength,
	      keyLength = _props$keyLength === void 0 ? 6 : _props$keyLength;
	  var basename = props.basename ? stripTrailingSlash(addLeadingSlash(props.basename)) : '';
	
	  function getDOMLocation(historyState) {
	    var _ref = historyState || {},
	        key = _ref.key,
	        state = _ref.state;
	
	    var _window$location = window.location,
	        pathname = _window$location.pathname,
	        search = _window$location.search,
	        hash = _window$location.hash;
	    var path = pathname + search + hash;
	    warning(!basename || hasBasename(path, basename), 'You are attempting to use a basename on a page whose URL path does not begin ' + 'with the basename. Expected path "' + path + '" to begin with "' + basename + '".');
	    if (basename) path = stripBasename(path, basename);
	    return createLocation(path, state, key);
	  }
	
	  function createKey() {
	    return Math.random().toString(36).substr(2, keyLength);
	  }
	
	  var transitionManager = createTransitionManager();
	
	  function setState(nextState) {
	    _extends(history, nextState);
	
	    history.length = globalHistory.length;
	    transitionManager.notifyListeners(history.location, history.action);
	  }
	
	  function handlePopState(event) {
	    // Ignore extraneous popstate events in WebKit.
	    if (isExtraneousPopstateEvent(event)) return;
	    handlePop(getDOMLocation(event.state));
	  }
	
	  function handleHashChange() {
	    handlePop(getDOMLocation(getHistoryState()));
	  }
	
	  var forceNextPop = false;
	
	  function handlePop(location) {
	    if (forceNextPop) {
	      forceNextPop = false;
	      setState();
	    } else {
	      var action = 'POP';
	      transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {
	        if (ok) {
	          setState({
	            action: action,
	            location: location
	          });
	        } else {
	          revertPop(location);
	        }
	      });
	    }
	  }
	
	  function revertPop(fromLocation) {
	    var toLocation = history.location; // TODO: We could probably make this more reliable by
	    // keeping a list of keys we've seen in sessionStorage.
	    // Instead, we just default to 0 for keys we don't know.
	
	    var toIndex = allKeys.indexOf(toLocation.key);
	    if (toIndex === -1) toIndex = 0;
	    var fromIndex = allKeys.indexOf(fromLocation.key);
	    if (fromIndex === -1) fromIndex = 0;
	    var delta = toIndex - fromIndex;
	
	    if (delta) {
	      forceNextPop = true;
	      go(delta);
	    }
	  }
	
	  var initialLocation = getDOMLocation(getHistoryState());
	  var allKeys = [initialLocation.key]; // Public interface
	
	  function createHref(location) {
	    return basename + createPath(location);
	  }
	
	  function push(path, state) {
	    warning(!(typeof path === 'object' && path.state !== undefined && state !== undefined), 'You should avoid providing a 2nd state argument to push when the 1st ' + 'argument is a location-like object that already has state; it is ignored');
	    var action = 'PUSH';
	    var location = createLocation(path, state, createKey(), history.location);
	    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {
	      if (!ok) return;
	      var href = createHref(location);
	      var key = location.key,
	          state = location.state;
	
	      if (canUseHistory) {
	        globalHistory.pushState({
	          key: key,
	          state: state
	        }, null, href);
	
	        if (forceRefresh) {
	          window.location.href = href;
	        } else {
	          var prevIndex = allKeys.indexOf(history.location.key);
	          var nextKeys = allKeys.slice(0, prevIndex + 1);
	          nextKeys.push(location.key);
	          allKeys = nextKeys;
	          setState({
	            action: action,
	            location: location
	          });
	        }
	      } else {
	        warning(state === undefined, 'Browser history cannot push state in browsers that do not support HTML5 history');
	        window.location.href = href;
	      }
	    });
	  }
	
	  function replace(path, state) {
	    warning(!(typeof path === 'object' && path.state !== undefined && state !== undefined), 'You should avoid providing a 2nd state argument to replace when the 1st ' + 'argument is a location-like object that already has state; it is ignored');
	    var action = 'REPLACE';
	    var location = createLocation(path, state, createKey(), history.location);
	    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {
	      if (!ok) return;
	      var href = createHref(location);
	      var key = location.key,
	          state = location.state;
	
	      if (canUseHistory) {
	        globalHistory.replaceState({
	          key: key,
	          state: state
	        }, null, href);
	
	        if (forceRefresh) {
	          window.location.replace(href);
	        } else {
	          var prevIndex = allKeys.indexOf(history.location.key);
	          if (prevIndex !== -1) allKeys[prevIndex] = location.key;
	          setState({
	            action: action,
	            location: location
	          });
	        }
	      } else {
	        warning(state === undefined, 'Browser history cannot replace state in browsers that do not support HTML5 history');
	        window.location.replace(href);
	      }
	    });
	  }
	
	  function go(n) {
	    globalHistory.go(n);
	  }
	
	  function goBack() {
	    go(-1);
	  }
	
	  function goForward() {
	    go(1);
	  }
	
	  var listenerCount = 0;
	
	  function checkDOMListeners(delta) {
	    listenerCount += delta;
	
	    if (listenerCount === 1 && delta === 1) {
	      window.addEventListener(PopStateEvent, handlePopState);
	      if (needsHashChangeListener) window.addEventListener(HashChangeEvent, handleHashChange);
	    } else if (listenerCount === 0) {
	      window.removeEventListener(PopStateEvent, handlePopState);
	      if (needsHashChangeListener) window.removeEventListener(HashChangeEvent, handleHashChange);
	    }
	  }
	
	  var isBlocked = false;
	
	  function block(prompt) {
	    if (prompt === void 0) {
	      prompt = false;
	    }
	
	    var unblock = transitionManager.setPrompt(prompt);
	
	    if (!isBlocked) {
	      checkDOMListeners(1);
	      isBlocked = true;
	    }
	
	    return function () {
	      if (isBlocked) {
	        isBlocked = false;
	        checkDOMListeners(-1);
	      }
	
	      return unblock();
	    };
	  }
	
	  function listen(listener) {
	    var unlisten = transitionManager.appendListener(listener);
	    checkDOMListeners(1);
	    return function () {
	      checkDOMListeners(-1);
	      unlisten();
	    };
	  }
	
	  var history = {
	    length: globalHistory.length,
	    action: 'POP',
	    location: initialLocation,
	    createHref: createHref,
	    push: push,
	    replace: replace,
	    go: go,
	    goBack: goBack,
	    goForward: goForward,
	    block: block,
	    listen: listen
	  };
	  return history;
	}
	
	var HashChangeEvent$1 = 'hashchange';
	var HashPathCoders = {
	  hashbang: {
	    encodePath: function encodePath(path) {
	      return path.charAt(0) === '!' ? path : '!/' + stripLeadingSlash(path);
	    },
	    decodePath: function decodePath(path) {
	      return path.charAt(0) === '!' ? path.substr(1) : path;
	    }
	  },
	  noslash: {
	    encodePath: stripLeadingSlash,
	    decodePath: addLeadingSlash
	  },
	  slash: {
	    encodePath: addLeadingSlash,
	    decodePath: addLeadingSlash
	  }
	};
	
	function stripHash(url) {
	  var hashIndex = url.indexOf('#');
	  return hashIndex === -1 ? url : url.slice(0, hashIndex);
	}
	
	function getHashPath() {
	  // We can't use window.location.hash here because it's not
	  // consistent across browsers - Firefox will pre-decode it!
	  var href = window.location.href;
	  var hashIndex = href.indexOf('#');
	  return hashIndex === -1 ? '' : href.substring(hashIndex + 1);
	}
	
	function pushHashPath(path) {
	  window.location.hash = path;
	}
	
	function replaceHashPath(path) {
	  window.location.replace(stripHash(window.location.href) + '#' + path);
	}
	
	function createHashHistory(props) {
	  if (props === void 0) {
	    props = {};
	  }
	
	  !canUseDOM ? invariant(false, 'Hash history needs a DOM') : void 0;
	  var globalHistory = window.history;
	  var canGoWithoutReload = supportsGoWithoutReloadUsingHash();
	  var _props = props,
	      _props$getUserConfirm = _props.getUserConfirmation,
	      getUserConfirmation = _props$getUserConfirm === void 0 ? getConfirmation : _props$getUserConfirm,
	      _props$hashType = _props.hashType,
	      hashType = _props$hashType === void 0 ? 'slash' : _props$hashType;
	  var basename = props.basename ? stripTrailingSlash(addLeadingSlash(props.basename)) : '';
	  var _HashPathCoders$hashT = HashPathCoders[hashType],
	      encodePath = _HashPathCoders$hashT.encodePath,
	      decodePath = _HashPathCoders$hashT.decodePath;
	
	  function getDOMLocation() {
	    var path = decodePath(getHashPath());
	    warning(!basename || hasBasename(path, basename), 'You are attempting to use a basename on a page whose URL path does not begin ' + 'with the basename. Expected path "' + path + '" to begin with "' + basename + '".');
	    if (basename) path = stripBasename(path, basename);
	    return createLocation(path);
	  }
	
	  var transitionManager = createTransitionManager();
	
	  function setState(nextState) {
	    _extends(history, nextState);
	
	    history.length = globalHistory.length;
	    transitionManager.notifyListeners(history.location, history.action);
	  }
	
	  var forceNextPop = false;
	  var ignorePath = null;
	
	  function locationsAreEqual$$1(a, b) {
	    return a.pathname === b.pathname && a.search === b.search && a.hash === b.hash;
	  }
	
	  function handleHashChange() {
	    var path = getHashPath();
	    var encodedPath = encodePath(path);
	
	    if (path !== encodedPath) {
	      // Ensure we always have a properly-encoded hash.
	      replaceHashPath(encodedPath);
	    } else {
	      var location = getDOMLocation();
	      var prevLocation = history.location;
	      if (!forceNextPop && locationsAreEqual$$1(prevLocation, location)) return; // A hashchange doesn't always == location change.
	
	      if (ignorePath === createPath(location)) return; // Ignore this change; we already setState in push/replace.
	
	      ignorePath = null;
	      handlePop(location);
	    }
	  }
	
	  function handlePop(location) {
	    if (forceNextPop) {
	      forceNextPop = false;
	      setState();
	    } else {
	      var action = 'POP';
	      transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {
	        if (ok) {
	          setState({
	            action: action,
	            location: location
	          });
	        } else {
	          revertPop(location);
	        }
	      });
	    }
	  }
	
	  function revertPop(fromLocation) {
	    var toLocation = history.location; // TODO: We could probably make this more reliable by
	    // keeping a list of paths we've seen in sessionStorage.
	    // Instead, we just default to 0 for paths we don't know.
	
	    var toIndex = allPaths.lastIndexOf(createPath(toLocation));
	    if (toIndex === -1) toIndex = 0;
	    var fromIndex = allPaths.lastIndexOf(createPath(fromLocation));
	    if (fromIndex === -1) fromIndex = 0;
	    var delta = toIndex - fromIndex;
	
	    if (delta) {
	      forceNextPop = true;
	      go(delta);
	    }
	  } // Ensure the hash is encoded properly before doing anything else.
	
	
	  var path = getHashPath();
	  var encodedPath = encodePath(path);
	  if (path !== encodedPath) replaceHashPath(encodedPath);
	  var initialLocation = getDOMLocation();
	  var allPaths = [createPath(initialLocation)]; // Public interface
	
	  function createHref(location) {
	    var baseTag = document.querySelector('base');
	    var href = '';
	
	    if (baseTag && baseTag.getAttribute('href')) {
	      href = stripHash(window.location.href);
	    }
	
	    return href + '#' + encodePath(basename + createPath(location));
	  }
	
	  function push(path, state) {
	    warning(state === undefined, 'Hash history cannot push state; it is ignored');
	    var action = 'PUSH';
	    var location = createLocation(path, undefined, undefined, history.location);
	    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {
	      if (!ok) return;
	      var path = createPath(location);
	      var encodedPath = encodePath(basename + path);
	      var hashChanged = getHashPath() !== encodedPath;
	
	      if (hashChanged) {
	        // We cannot tell if a hashchange was caused by a PUSH, so we'd
	        // rather setState here and ignore the hashchange. The caveat here
	        // is that other hash histories in the page will consider it a POP.
	        ignorePath = path;
	        pushHashPath(encodedPath);
	        var prevIndex = allPaths.lastIndexOf(createPath(history.location));
	        var nextPaths = allPaths.slice(0, prevIndex + 1);
	        nextPaths.push(path);
	        allPaths = nextPaths;
	        setState({
	          action: action,
	          location: location
	        });
	      } else {
	        warning(false, 'Hash history cannot PUSH the same path; a new entry will not be added to the history stack');
	        setState();
	      }
	    });
	  }
	
	  function replace(path, state) {
	    warning(state === undefined, 'Hash history cannot replace state; it is ignored');
	    var action = 'REPLACE';
	    var location = createLocation(path, undefined, undefined, history.location);
	    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {
	      if (!ok) return;
	      var path = createPath(location);
	      var encodedPath = encodePath(basename + path);
	      var hashChanged = getHashPath() !== encodedPath;
	
	      if (hashChanged) {
	        // We cannot tell if a hashchange was caused by a REPLACE, so we'd
	        // rather setState here and ignore the hashchange. The caveat here
	        // is that other hash histories in the page will consider it a POP.
	        ignorePath = path;
	        replaceHashPath(encodedPath);
	      }
	
	      var prevIndex = allPaths.indexOf(createPath(history.location));
	      if (prevIndex !== -1) allPaths[prevIndex] = path;
	      setState({
	        action: action,
	        location: location
	      });
	    });
	  }
	
	  function go(n) {
	    warning(canGoWithoutReload, 'Hash history go(n) causes a full page reload in this browser');
	    globalHistory.go(n);
	  }
	
	  function goBack() {
	    go(-1);
	  }
	
	  function goForward() {
	    go(1);
	  }
	
	  var listenerCount = 0;
	
	  function checkDOMListeners(delta) {
	    listenerCount += delta;
	
	    if (listenerCount === 1 && delta === 1) {
	      window.addEventListener(HashChangeEvent$1, handleHashChange);
	    } else if (listenerCount === 0) {
	      window.removeEventListener(HashChangeEvent$1, handleHashChange);
	    }
	  }
	
	  var isBlocked = false;
	
	  function block(prompt) {
	    if (prompt === void 0) {
	      prompt = false;
	    }
	
	    var unblock = transitionManager.setPrompt(prompt);
	
	    if (!isBlocked) {
	      checkDOMListeners(1);
	      isBlocked = true;
	    }
	
	    return function () {
	      if (isBlocked) {
	        isBlocked = false;
	        checkDOMListeners(-1);
	      }
	
	      return unblock();
	    };
	  }
	
	  function listen(listener) {
	    var unlisten = transitionManager.appendListener(listener);
	    checkDOMListeners(1);
	    return function () {
	      checkDOMListeners(-1);
	      unlisten();
	    };
	  }
	
	  var history = {
	    length: globalHistory.length,
	    action: 'POP',
	    location: initialLocation,
	    createHref: createHref,
	    push: push,
	    replace: replace,
	    go: go,
	    goBack: goBack,
	    goForward: goForward,
	    block: block,
	    listen: listen
	  };
	  return history;
	}
	
	function clamp(n, lowerBound, upperBound) {
	  return Math.min(Math.max(n, lowerBound), upperBound);
	}
	/**
	 * Creates a history object that stores locations in memory.
	 */
	
	
	function createMemoryHistory(props) {
	  if (props === void 0) {
	    props = {};
	  }
	
	  var _props = props,
	      getUserConfirmation = _props.getUserConfirmation,
	      _props$initialEntries = _props.initialEntries,
	      initialEntries = _props$initialEntries === void 0 ? ['/'] : _props$initialEntries,
	      _props$initialIndex = _props.initialIndex,
	      initialIndex = _props$initialIndex === void 0 ? 0 : _props$initialIndex,
	      _props$keyLength = _props.keyLength,
	      keyLength = _props$keyLength === void 0 ? 6 : _props$keyLength;
	  var transitionManager = createTransitionManager();
	
	  function setState(nextState) {
	    _extends(history, nextState);
	
	    history.length = history.entries.length;
	    transitionManager.notifyListeners(history.location, history.action);
	  }
	
	  function createKey() {
	    return Math.random().toString(36).substr(2, keyLength);
	  }
	
	  var index = clamp(initialIndex, 0, initialEntries.length - 1);
	  var entries = initialEntries.map(function (entry) {
	    return typeof entry === 'string' ? createLocation(entry, undefined, createKey()) : createLocation(entry, undefined, entry.key || createKey());
	  }); // Public interface
	
	  var createHref = createPath;
	
	  function push(path, state) {
	    warning(!(typeof path === 'object' && path.state !== undefined && state !== undefined), 'You should avoid providing a 2nd state argument to push when the 1st ' + 'argument is a location-like object that already has state; it is ignored');
	    var action = 'PUSH';
	    var location = createLocation(path, state, createKey(), history.location);
	    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {
	      if (!ok) return;
	      var prevIndex = history.index;
	      var nextIndex = prevIndex + 1;
	      var nextEntries = history.entries.slice(0);
	
	      if (nextEntries.length > nextIndex) {
	        nextEntries.splice(nextIndex, nextEntries.length - nextIndex, location);
	      } else {
	        nextEntries.push(location);
	      }
	
	      setState({
	        action: action,
	        location: location,
	        index: nextIndex,
	        entries: nextEntries
	      });
	    });
	  }
	
	  function replace(path, state) {
	    warning(!(typeof path === 'object' && path.state !== undefined && state !== undefined), 'You should avoid providing a 2nd state argument to replace when the 1st ' + 'argument is a location-like object that already has state; it is ignored');
	    var action = 'REPLACE';
	    var location = createLocation(path, state, createKey(), history.location);
	    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {
	      if (!ok) return;
	      history.entries[history.index] = location;
	      setState({
	        action: action,
	        location: location
	      });
	    });
	  }
	
	  function go(n) {
	    var nextIndex = clamp(history.index + n, 0, history.entries.length - 1);
	    var action = 'POP';
	    var location = history.entries[nextIndex];
	    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {
	      if (ok) {
	        setState({
	          action: action,
	          location: location,
	          index: nextIndex
	        });
	      } else {
	        // Mimic the behavior of DOM histories by
	        // causing a render after a cancelled POP.
	        setState();
	      }
	    });
	  }
	
	  function goBack() {
	    go(-1);
	  }
	
	  function goForward() {
	    go(1);
	  }
	
	  function canGo(n) {
	    var nextIndex = history.index + n;
	    return nextIndex >= 0 && nextIndex < history.entries.length;
	  }
	
	  function block(prompt) {
	    if (prompt === void 0) {
	      prompt = false;
	    }
	
	    return transitionManager.setPrompt(prompt);
	  }
	
	  function listen(listener) {
	    return transitionManager.appendListener(listener);
	  }
	
	  var history = {
	    length: entries.length,
	    action: 'POP',
	    location: entries[index],
	    index: index,
	    entries: entries,
	    createHref: createHref,
	    push: push,
	    replace: replace,
	    go: go,
	    goBack: goBack,
	    goForward: goForward,
	    canGo: canGo,
	    block: block,
	    listen: listen
	  };
	  return history;
	}
	
	exports.createBrowserHistory = createBrowserHistory;
	exports.createHashHistory = createHashHistory;
	exports.createMemoryHistory = createMemoryHistory;
	exports.createLocation = createLocation;
	exports.locationsAreEqual = locationsAreEqual;
	exports.parsePath = parsePath;
	exports.createPath = createPath;


/***/ }),
/* 518 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	if (false) {
	  module.exports = require('./cjs/resolve-pathname.min.js');
	} else {
	  module.exports = __webpack_require__(519);
	}


/***/ }),
/* 519 */
/***/ (function(module, exports) {

	'use strict';
	
	function isAbsolute(pathname) {
	  return pathname.charAt(0) === '/';
	}
	
	// About 1.5x faster than the two-arg version of Array#splice()
	function spliceOne(list, index) {
	  for (var i = index, k = i + 1, n = list.length; k < n; i += 1, k += 1) {
	    list[i] = list[k];
	  }
	
	  list.pop();
	}
	
	// This implementation is based heavily on node's url.parse
	function resolvePathname(to, from) {
	  if (from === undefined) from = '';
	
	  var toParts = (to && to.split('/')) || [];
	  var fromParts = (from && from.split('/')) || [];
	
	  var isToAbs = to && isAbsolute(to);
	  var isFromAbs = from && isAbsolute(from);
	  var mustEndAbs = isToAbs || isFromAbs;
	
	  if (to && isAbsolute(to)) {
	    // to is absolute
	    fromParts = toParts;
	  } else if (toParts.length) {
	    // to is relative, drop the filename
	    fromParts.pop();
	    fromParts = fromParts.concat(toParts);
	  }
	
	  if (!fromParts.length) return '/';
	
	  var hasTrailingSlash;
	  if (fromParts.length) {
	    var last = fromParts[fromParts.length - 1];
	    hasTrailingSlash = last === '.' || last === '..' || last === '';
	  } else {
	    hasTrailingSlash = false;
	  }
	
	  var up = 0;
	  for (var i = fromParts.length; i >= 0; i--) {
	    var part = fromParts[i];
	
	    if (part === '.') {
	      spliceOne(fromParts, i);
	    } else if (part === '..') {
	      spliceOne(fromParts, i);
	      up++;
	    } else if (up) {
	      spliceOne(fromParts, i);
	      up--;
	    }
	  }
	
	  if (!mustEndAbs) for (; up--; up) fromParts.unshift('..');
	
	  if (
	    mustEndAbs &&
	    fromParts[0] !== '' &&
	    (!fromParts[0] || !isAbsolute(fromParts[0]))
	  )
	    fromParts.unshift('');
	
	  var result = fromParts.join('/');
	
	  if (hasTrailingSlash && result.substr(-1) !== '/') result += '/';
	
	  return result;
	}
	
	module.exports = resolvePathname;


/***/ }),
/* 520 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	if (false) {
	  module.exports = require('./cjs/value-equal.min.js');
	} else {
	  module.exports = __webpack_require__(521);
	}


/***/ }),
/* 521 */
/***/ (function(module, exports) {

	'use strict';
	
	function valueOf(obj) {
	  return obj.valueOf ? obj.valueOf() : Object.prototype.valueOf.call(obj);
	}
	
	function valueEqual(a, b) {
	  // Test for strict equality first.
	  if (a === b) return true;
	
	  // Otherwise, if either of them == null they are not equal.
	  if (a == null || b == null) return false;
	
	  if (Array.isArray(a)) {
	    return (
	      Array.isArray(b) &&
	      a.length === b.length &&
	      a.every(function(item, index) {
	        return valueEqual(item, b[index]);
	      })
	    );
	  }
	
	  if (typeof a === 'object' || typeof b === 'object') {
	    var aValue = valueOf(a);
	    var bValue = valueOf(b);
	
	    if (aValue !== a || bValue !== b) return valueEqual(aValue, bValue);
	
	    return Object.keys(Object.assign({}, a, b)).every(function(key) {
	      return valueEqual(a[key], b[key]);
	    });
	  }
	
	  return false;
	}
	
	module.exports = valueEqual;


/***/ }),
/* 522 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var isProduction = ("development") === 'production';
	function warning(condition, message) {
	  if (!isProduction) {
	    if (condition) {
	      return;
	    }
	
	    var text = "Warning: " + message;
	
	    if (typeof console !== 'undefined') {
	      console.warn(text);
	    }
	
	    try {
	      throw Error(text);
	    } catch (x) {}
	  }
	}
	
	module.exports = warning;


/***/ }),
/* 523 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", { value: true });
	var isProduction = ("development") === 'production';
	var prefix = 'Invariant failed';
	function invariant(condition, message) {
	    if (condition) {
	        return;
	    }
	    if (isProduction) {
	        throw new Error(prefix);
	    }
	    throw new Error(prefix + ": " + (message || ''));
	}
	exports.default = invariant;


/***/ }),
/* 524 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';function _interopDefault(e){return(e&&(typeof e==='object')&&'default'in e)?e['default']:e}var React=__webpack_require__(25),React__default=_interopDefault(React),_inheritsLoose=_interopDefault(__webpack_require__(525)),PropTypes=_interopDefault(__webpack_require__(415)),gud=_interopDefault(__webpack_require__(526)),warning=_interopDefault(__webpack_require__(522));var MAX_SIGNED_31_BIT_INT = 1073741823;
	
	function objectIs(x, y) {
	  if (x === y) {
	    return x !== 0 || 1 / x === 1 / y;
	  } else {
	    return x !== x && y !== y;
	  }
	}
	
	function createEventEmitter(value) {
	  var handlers = [];
	  return {
	    on: function on(handler) {
	      handlers.push(handler);
	    },
	    off: function off(handler) {
	      handlers = handlers.filter(function (h) {
	        return h !== handler;
	      });
	    },
	    get: function get() {
	      return value;
	    },
	    set: function set(newValue, changedBits) {
	      value = newValue;
	      handlers.forEach(function (handler) {
	        return handler(value, changedBits);
	      });
	    }
	  };
	}
	
	function onlyChild(children) {
	  return Array.isArray(children) ? children[0] : children;
	}
	
	function createReactContext(defaultValue, calculateChangedBits) {
	  var _Provider$childContex, _Consumer$contextType;
	
	  var contextProp = '__create-react-context-' + gud() + '__';
	
	  var Provider =
	  /*#__PURE__*/
	  function (_Component) {
	    _inheritsLoose(Provider, _Component);
	
	    function Provider() {
	      var _this;
	
	      _this = _Component.apply(this, arguments) || this;
	      _this.emitter = createEventEmitter(_this.props.value);
	      return _this;
	    }
	
	    var _proto = Provider.prototype;
	
	    _proto.getChildContext = function getChildContext() {
	      var _ref;
	
	      return _ref = {}, _ref[contextProp] = this.emitter, _ref;
	    };
	
	    _proto.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
	      if (this.props.value !== nextProps.value) {
	        var oldValue = this.props.value;
	        var newValue = nextProps.value;
	        var changedBits;
	
	        if (objectIs(oldValue, newValue)) {
	          changedBits = 0;
	        } else {
	          changedBits = typeof calculateChangedBits === 'function' ? calculateChangedBits(oldValue, newValue) : MAX_SIGNED_31_BIT_INT;
	
	          if (true) {
	            warning((changedBits & MAX_SIGNED_31_BIT_INT) === changedBits, 'calculateChangedBits: Expected the return value to be a ' + '31-bit integer. Instead received: ' + changedBits);
	          }
	
	          changedBits |= 0;
	
	          if (changedBits !== 0) {
	            this.emitter.set(nextProps.value, changedBits);
	          }
	        }
	      }
	    };
	
	    _proto.render = function render() {
	      return this.props.children;
	    };
	
	    return Provider;
	  }(React.Component);
	
	  Provider.childContextTypes = (_Provider$childContex = {}, _Provider$childContex[contextProp] = PropTypes.object.isRequired, _Provider$childContex);
	
	  var Consumer =
	  /*#__PURE__*/
	  function (_Component2) {
	    _inheritsLoose(Consumer, _Component2);
	
	    function Consumer() {
	      var _this2;
	
	      _this2 = _Component2.apply(this, arguments) || this;
	      _this2.state = {
	        value: _this2.getValue()
	      };
	
	      _this2.onUpdate = function (newValue, changedBits) {
	        var observedBits = _this2.observedBits | 0;
	
	        if ((observedBits & changedBits) !== 0) {
	          _this2.setState({
	            value: _this2.getValue()
	          });
	        }
	      };
	
	      return _this2;
	    }
	
	    var _proto2 = Consumer.prototype;
	
	    _proto2.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
	      var observedBits = nextProps.observedBits;
	      this.observedBits = observedBits === undefined || observedBits === null ? MAX_SIGNED_31_BIT_INT : observedBits;
	    };
	
	    _proto2.componentDidMount = function componentDidMount() {
	      if (this.context[contextProp]) {
	        this.context[contextProp].on(this.onUpdate);
	      }
	
	      var observedBits = this.props.observedBits;
	      this.observedBits = observedBits === undefined || observedBits === null ? MAX_SIGNED_31_BIT_INT : observedBits;
	    };
	
	    _proto2.componentWillUnmount = function componentWillUnmount() {
	      if (this.context[contextProp]) {
	        this.context[contextProp].off(this.onUpdate);
	      }
	    };
	
	    _proto2.getValue = function getValue() {
	      if (this.context[contextProp]) {
	        return this.context[contextProp].get();
	      } else {
	        return defaultValue;
	      }
	    };
	
	    _proto2.render = function render() {
	      return onlyChild(this.props.children)(this.state.value);
	    };
	
	    return Consumer;
	  }(React.Component);
	
	  Consumer.contextTypes = (_Consumer$contextType = {}, _Consumer$contextType[contextProp] = PropTypes.object, _Consumer$contextType);
	  return {
	    Provider: Provider,
	    Consumer: Consumer
	  };
	}var index = React__default.createContext || createReactContext;module.exports=index;

/***/ }),
/* 525 */
/***/ (function(module, exports) {

	function _inheritsLoose(subClass, superClass) {
	  subClass.prototype = Object.create(superClass.prototype);
	  subClass.prototype.constructor = subClass;
	  subClass.__proto__ = superClass;
	}
	
	module.exports = _inheritsLoose;

/***/ }),
/* 526 */
/***/ (function(module, exports) {

	/* WEBPACK VAR INJECTION */(function(global) {// @flow
	'use strict';
	
	var key = '__global_unique_id__';
	
	module.exports = function() {
	  return global[key] = (global[key] || 0) + 1;
	};
	
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ }),
/* 527 */
/***/ (function(module, exports, __webpack_require__) {

	var isarray = __webpack_require__(528)
	
	/**
	 * Expose `pathToRegexp`.
	 */
	module.exports = pathToRegexp
	module.exports.parse = parse
	module.exports.compile = compile
	module.exports.tokensToFunction = tokensToFunction
	module.exports.tokensToRegExp = tokensToRegExp
	
	/**
	 * The main path matching regexp utility.
	 *
	 * @type {RegExp}
	 */
	var PATH_REGEXP = new RegExp([
	  // Match escaped characters that would otherwise appear in future matches.
	  // This allows the user to escape special characters that won't transform.
	  '(\\\\.)',
	  // Match Express-style parameters and un-named parameters with a prefix
	  // and optional suffixes. Matches appear as:
	  //
	  // "/:test(\\d+)?" => ["/", "test", "\d+", undefined, "?", undefined]
	  // "/route(\\d+)"  => [undefined, undefined, undefined, "\d+", undefined, undefined]
	  // "/*"            => ["/", undefined, undefined, undefined, undefined, "*"]
	  '([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^\\\\()])+)\\))?|\\(((?:\\\\.|[^\\\\()])+)\\))([+*?])?|(\\*))'
	].join('|'), 'g')
	
	/**
	 * Parse a string for the raw tokens.
	 *
	 * @param  {string}  str
	 * @param  {Object=} options
	 * @return {!Array}
	 */
	function parse (str, options) {
	  var tokens = []
	  var key = 0
	  var index = 0
	  var path = ''
	  var defaultDelimiter = options && options.delimiter || '/'
	  var res
	
	  while ((res = PATH_REGEXP.exec(str)) != null) {
	    var m = res[0]
	    var escaped = res[1]
	    var offset = res.index
	    path += str.slice(index, offset)
	    index = offset + m.length
	
	    // Ignore already escaped sequences.
	    if (escaped) {
	      path += escaped[1]
	      continue
	    }
	
	    var next = str[index]
	    var prefix = res[2]
	    var name = res[3]
	    var capture = res[4]
	    var group = res[5]
	    var modifier = res[6]
	    var asterisk = res[7]
	
	    // Push the current path onto the tokens.
	    if (path) {
	      tokens.push(path)
	      path = ''
	    }
	
	    var partial = prefix != null && next != null && next !== prefix
	    var repeat = modifier === '+' || modifier === '*'
	    var optional = modifier === '?' || modifier === '*'
	    var delimiter = res[2] || defaultDelimiter
	    var pattern = capture || group
	
	    tokens.push({
	      name: name || key++,
	      prefix: prefix || '',
	      delimiter: delimiter,
	      optional: optional,
	      repeat: repeat,
	      partial: partial,
	      asterisk: !!asterisk,
	      pattern: pattern ? escapeGroup(pattern) : (asterisk ? '.*' : '[^' + escapeString(delimiter) + ']+?')
	    })
	  }
	
	  // Match any characters still remaining.
	  if (index < str.length) {
	    path += str.substr(index)
	  }
	
	  // If the path exists, push it onto the end.
	  if (path) {
	    tokens.push(path)
	  }
	
	  return tokens
	}
	
	/**
	 * Compile a string to a template function for the path.
	 *
	 * @param  {string}             str
	 * @param  {Object=}            options
	 * @return {!function(Object=, Object=)}
	 */
	function compile (str, options) {
	  return tokensToFunction(parse(str, options), options)
	}
	
	/**
	 * Prettier encoding of URI path segments.
	 *
	 * @param  {string}
	 * @return {string}
	 */
	function encodeURIComponentPretty (str) {
	  return encodeURI(str).replace(/[\/?#]/g, function (c) {
	    return '%' + c.charCodeAt(0).toString(16).toUpperCase()
	  })
	}
	
	/**
	 * Encode the asterisk parameter. Similar to `pretty`, but allows slashes.
	 *
	 * @param  {string}
	 * @return {string}
	 */
	function encodeAsterisk (str) {
	  return encodeURI(str).replace(/[?#]/g, function (c) {
	    return '%' + c.charCodeAt(0).toString(16).toUpperCase()
	  })
	}
	
	/**
	 * Expose a method for transforming tokens into the path function.
	 */
	function tokensToFunction (tokens, options) {
	  // Compile all the tokens into regexps.
	  var matches = new Array(tokens.length)
	
	  // Compile all the patterns before compilation.
	  for (var i = 0; i < tokens.length; i++) {
	    if (typeof tokens[i] === 'object') {
	      matches[i] = new RegExp('^(?:' + tokens[i].pattern + ')$', flags(options))
	    }
	  }
	
	  return function (obj, opts) {
	    var path = ''
	    var data = obj || {}
	    var options = opts || {}
	    var encode = options.pretty ? encodeURIComponentPretty : encodeURIComponent
	
	    for (var i = 0; i < tokens.length; i++) {
	      var token = tokens[i]
	
	      if (typeof token === 'string') {
	        path += token
	
	        continue
	      }
	
	      var value = data[token.name]
	      var segment
	
	      if (value == null) {
	        if (token.optional) {
	          // Prepend partial segment prefixes.
	          if (token.partial) {
	            path += token.prefix
	          }
	
	          continue
	        } else {
	          throw new TypeError('Expected "' + token.name + '" to be defined')
	        }
	      }
	
	      if (isarray(value)) {
	        if (!token.repeat) {
	          throw new TypeError('Expected "' + token.name + '" to not repeat, but received `' + JSON.stringify(value) + '`')
	        }
	
	        if (value.length === 0) {
	          if (token.optional) {
	            continue
	          } else {
	            throw new TypeError('Expected "' + token.name + '" to not be empty')
	          }
	        }
	
	        for (var j = 0; j < value.length; j++) {
	          segment = encode(value[j])
	
	          if (!matches[i].test(segment)) {
	            throw new TypeError('Expected all "' + token.name + '" to match "' + token.pattern + '", but received `' + JSON.stringify(segment) + '`')
	          }
	
	          path += (j === 0 ? token.prefix : token.delimiter) + segment
	        }
	
	        continue
	      }
	
	      segment = token.asterisk ? encodeAsterisk(value) : encode(value)
	
	      if (!matches[i].test(segment)) {
	        throw new TypeError('Expected "' + token.name + '" to match "' + token.pattern + '", but received "' + segment + '"')
	      }
	
	      path += token.prefix + segment
	    }
	
	    return path
	  }
	}
	
	/**
	 * Escape a regular expression string.
	 *
	 * @param  {string} str
	 * @return {string}
	 */
	function escapeString (str) {
	  return str.replace(/([.+*?=^!:${}()[\]|\/\\])/g, '\\$1')
	}
	
	/**
	 * Escape the capturing group by escaping special characters and meaning.
	 *
	 * @param  {string} group
	 * @return {string}
	 */
	function escapeGroup (group) {
	  return group.replace(/([=!:$\/()])/g, '\\$1')
	}
	
	/**
	 * Attach the keys as a property of the regexp.
	 *
	 * @param  {!RegExp} re
	 * @param  {Array}   keys
	 * @return {!RegExp}
	 */
	function attachKeys (re, keys) {
	  re.keys = keys
	  return re
	}
	
	/**
	 * Get the flags for a regexp from the options.
	 *
	 * @param  {Object} options
	 * @return {string}
	 */
	function flags (options) {
	  return options && options.sensitive ? '' : 'i'
	}
	
	/**
	 * Pull out keys from a regexp.
	 *
	 * @param  {!RegExp} path
	 * @param  {!Array}  keys
	 * @return {!RegExp}
	 */
	function regexpToRegexp (path, keys) {
	  // Use a negative lookahead to match only capturing groups.
	  var groups = path.source.match(/\((?!\?)/g)
	
	  if (groups) {
	    for (var i = 0; i < groups.length; i++) {
	      keys.push({
	        name: i,
	        prefix: null,
	        delimiter: null,
	        optional: false,
	        repeat: false,
	        partial: false,
	        asterisk: false,
	        pattern: null
	      })
	    }
	  }
	
	  return attachKeys(path, keys)
	}
	
	/**
	 * Transform an array into a regexp.
	 *
	 * @param  {!Array}  path
	 * @param  {Array}   keys
	 * @param  {!Object} options
	 * @return {!RegExp}
	 */
	function arrayToRegexp (path, keys, options) {
	  var parts = []
	
	  for (var i = 0; i < path.length; i++) {
	    parts.push(pathToRegexp(path[i], keys, options).source)
	  }
	
	  var regexp = new RegExp('(?:' + parts.join('|') + ')', flags(options))
	
	  return attachKeys(regexp, keys)
	}
	
	/**
	 * Create a path regexp from string input.
	 *
	 * @param  {string}  path
	 * @param  {!Array}  keys
	 * @param  {!Object} options
	 * @return {!RegExp}
	 */
	function stringToRegexp (path, keys, options) {
	  return tokensToRegExp(parse(path, options), keys, options)
	}
	
	/**
	 * Expose a function for taking tokens and returning a RegExp.
	 *
	 * @param  {!Array}          tokens
	 * @param  {(Array|Object)=} keys
	 * @param  {Object=}         options
	 * @return {!RegExp}
	 */
	function tokensToRegExp (tokens, keys, options) {
	  if (!isarray(keys)) {
	    options = /** @type {!Object} */ (keys || options)
	    keys = []
	  }
	
	  options = options || {}
	
	  var strict = options.strict
	  var end = options.end !== false
	  var route = ''
	
	  // Iterate over the tokens and create our regexp string.
	  for (var i = 0; i < tokens.length; i++) {
	    var token = tokens[i]
	
	    if (typeof token === 'string') {
	      route += escapeString(token)
	    } else {
	      var prefix = escapeString(token.prefix)
	      var capture = '(?:' + token.pattern + ')'
	
	      keys.push(token)
	
	      if (token.repeat) {
	        capture += '(?:' + prefix + capture + ')*'
	      }
	
	      if (token.optional) {
	        if (!token.partial) {
	          capture = '(?:' + prefix + '(' + capture + '))?'
	        } else {
	          capture = prefix + '(' + capture + ')?'
	        }
	      } else {
	        capture = prefix + '(' + capture + ')'
	      }
	
	      route += capture
	    }
	  }
	
	  var delimiter = escapeString(options.delimiter || '/')
	  var endsWithDelimiter = route.slice(-delimiter.length) === delimiter
	
	  // In non-strict mode we allow a slash at the end of match. If the path to
	  // match already ends with a slash, we remove it for consistency. The slash
	  // is valid at the end of a path match, not in the middle. This is important
	  // in non-ending mode, where "/test/" shouldn't match "/test//route".
	  if (!strict) {
	    route = (endsWithDelimiter ? route.slice(0, -delimiter.length) : route) + '(?:' + delimiter + '(?=$))?'
	  }
	
	  if (end) {
	    route += '$'
	  } else {
	    // In non-ending mode, we need the capturing groups to match as much as
	    // possible by using a positive lookahead to the end or next path segment.
	    route += strict && endsWithDelimiter ? '' : '(?=' + delimiter + '|$)'
	  }
	
	  return attachKeys(new RegExp('^' + route, flags(options)), keys)
	}
	
	/**
	 * Normalize the given path string, returning a regular expression.
	 *
	 * An empty array can be passed in for the keys, which will hold the
	 * placeholder key descriptions. For example, using `/user/:id`, `keys` will
	 * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.
	 *
	 * @param  {(string|RegExp|Array)} path
	 * @param  {(Array|Object)=}       keys
	 * @param  {Object=}               options
	 * @return {!RegExp}
	 */
	function pathToRegexp (path, keys, options) {
	  if (!isarray(keys)) {
	    options = /** @type {!Object} */ (keys || options)
	    keys = []
	  }
	
	  options = options || {}
	
	  if (path instanceof RegExp) {
	    return regexpToRegexp(path, /** @type {!Array} */ (keys))
	  }
	
	  if (isarray(path)) {
	    return arrayToRegexp(/** @type {!Array} */ (path), /** @type {!Array} */ (keys), options)
	  }
	
	  return stringToRegexp(/** @type {string} */ (path), /** @type {!Array} */ (keys), options)
	}


/***/ }),
/* 528 */
/***/ (function(module, exports) {

	module.exports = Array.isArray || function (arr) {
	  return Object.prototype.toString.call(arr) == '[object Array]';
	};


/***/ }),
/* 529 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _getPrototypeOf = __webpack_require__(382);
	
	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);
	
	var _classCallCheck2 = __webpack_require__(386);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _createClass2 = __webpack_require__(387);
	
	var _createClass3 = _interopRequireDefault(_createClass2);
	
	var _possibleConstructorReturn2 = __webpack_require__(388);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(405);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _react = __webpack_require__(25);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _Pagination = __webpack_require__(508);
	
	var _Pagination2 = _interopRequireDefault(_Pagination);
	
	var _classnames = __webpack_require__(470);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	var _text = __webpack_require__(506);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/* @Table Header
	
	*/
	var TableHeader = function (_Component) {
	  (0, _inherits3.default)(TableHeader, _Component);
	
	  function TableHeader() {
	    var _ref;
	
	    var _temp, _this, _ret;
	
	    (0, _classCallCheck3.default)(this, TableHeader);
	
	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }
	
	    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = TableHeader.__proto__ || (0, _getPrototypeOf2.default)(TableHeader)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
	      selectedIndex: -1,
	      order: 1
	    }, _this.SORT_MAPPING = ["sorting_desc", "sorting_asc"], _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
	  }
	
	  (0, _createClass3.default)(TableHeader, [{
	    key: 'render',
	    value: function render() {
	      var _this2 = this;
	
	      var _props = this.props,
	          headers = _props.headers,
	          hasCheckbox = _props.hasCheckbox,
	          handleSelect = _props.handleSelect;
	      var _state = this.state,
	          selectedIndex = _state.selectedIndex,
	          order = _state.order;
	
	      return _react2.default.createElement(
	        'thead',
	        null,
	        _react2.default.createElement(
	          'tr',
	          null,
	          hasCheckbox && _react2.default.createElement(
	            'th',
	            null,
	            _react2.default.createElement(
	              'label',
	              { className: 'mt-checkbox mt-checkbox-single mt-checkbox-outline' },
	              _react2.default.createElement('input', { type: 'checkbox', className: 'group-checkable', 'data-set': '#sample_1 .checkboxes' }),
	              _react2.default.createElement('span', null)
	            )
	          ),
	          headers && headers.map(function (itm, i) {
	            return _react2.default.createElement(
	              'th',
	              {
	                className: selectedIndex == i ? _this2.SORT_MAPPING[order] : "",
	                onClick: function onClick(_) {
	                  if (itm.prop == null) return;
	
	                  var order = _this2.state.order;
	                  if (selectedIndex == i) {
	                    order = (order + 1) % 2;
	                  } else {
	                    order = 1;
	                  }
	
	                  _this2.setState({
	                    selectedIndex: i,
	                    order: order
	                  }, function (_) {
	                    handleSelect && handleSelect(itm.prop, order);
	                  });
	                },
	                key: i },
	              itm.title
	            );
	          })
	        )
	      );
	    }
	  }]);
	  return TableHeader;
	}(_react.Component);
	
	TableHeader.propTypes = {
	
	  // Has checkbox
	  hasCheckbox: _react2.default.PropTypes.bool,
	
	  // HeaderRender
	  headers: _react2.default.PropTypes.array,
	
	  // Handle Select
	  handleSelect: _react2.default.PropTypes.func
	};
	exports.default = TableHeader;

/***/ }),
/* 530 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _getPrototypeOf = __webpack_require__(382);
	
	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);
	
	var _classCallCheck2 = __webpack_require__(386);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _createClass2 = __webpack_require__(387);
	
	var _createClass3 = _interopRequireDefault(_createClass2);
	
	var _possibleConstructorReturn2 = __webpack_require__(388);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(405);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _react = __webpack_require__(25);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _Pagination = __webpack_require__(508);
	
	var _Pagination2 = _interopRequireDefault(_Pagination);
	
	var _classnames = __webpack_require__(470);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	var _text = __webpack_require__(506);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/* @TableOptions
	  Search, Filter Options
	*/
	var TableOptions = function (_Component) {
	  (0, _inherits3.default)(TableOptions, _Component);
	
	  function TableOptions() {
	    (0, _classCallCheck3.default)(this, TableOptions);
	    return (0, _possibleConstructorReturn3.default)(this, (TableOptions.__proto__ || (0, _getPrototypeOf2.default)(TableOptions)).apply(this, arguments));
	  }
	
	  (0, _createClass3.default)(TableOptions, [{
	    key: 'render',
	    value: function render() {
	      var _props = this.props,
	          itemPerPage = _props.itemPerPage,
	          filter = _props.filter,
	          itemPerPageChange = _props.itemPerPageChange,
	          searchHandler = _props.searchHandler,
	          hasSearch = _props.hasSearch;
	
	      return _react2.default.createElement(
	        'div',
	        { className: 'row' },
	        _react2.default.createElement(
	          'div',
	          { className: 'col-md-6 col-sm-6' },
	          _react2.default.createElement(
	            'div',
	            { className: 'dataTables_length', id: 'sample_1_length' },
	            _react2.default.createElement(
	              'label',
	              null,
	              'Show \xA0',
	              _react2.default.createElement(
	                'select',
	                {
	                  value: itemPerPage,
	                  onChange: function onChange(e) {
	                    itemPerPageChange && itemPerPageChange(e.target.value);
	                  },
	                  name: 'sample_1_length',
	                  'aria-controls': 'sample_1',
	                  className: 'form-control input-sm input-xsmall input-inline' },
	                _react2.default.createElement(
	                  'option',
	                  { value: '5' },
	                  '5'
	                ),
	                _react2.default.createElement(
	                  'option',
	                  { value: '15' },
	                  '15'
	                ),
	                _react2.default.createElement(
	                  'option',
	                  { value: '20' },
	                  '20'
	                ),
	                _react2.default.createElement(
	                  'option',
	                  { value: '-1' },
	                  'All'
	                )
	              )
	            )
	          )
	        ),
	        _react2.default.createElement(
	          'div',
	          { className: 'col-md-6 col-sm-6' },
	          hasSearch && _react2.default.createElement(
	            'div',
	            { id: 'sample_1_filter', className: 'btn-group pull-right' },
	            _react2.default.createElement(
	              'label',
	              null,
	              'Search : \xA0',
	              _react2.default.createElement('input', {
	                type: 'search',
	                className: 'form-control input-sm input-small input-inline',
	                placeholder: '',
	                'aria-controls': 'sample_1',
	                value: filter,
	                onChange: function onChange(e) {
	                  searchHandler && searchHandler(e.target.value);
	                }
	              })
	            )
	          )
	        )
	      );
	    }
	  }]);
	  return TableOptions;
	}(_react.Component);
	
	TableOptions.propTypes = {
	  // Has Search
	  hasSearch: _react2.default.PropTypes.bool,
	
	  // Filter value
	  filter: _react2.default.PropTypes.string,
	
	  // Has itemPerPage
	  itemPerPage: _react2.default.PropTypes.number,
	
	  // itemPerPageChange
	  itemPerPageChange: _react2.default.PropTypes.func,
	
	  // HeaderRender
	  searchHandler: _react2.default.PropTypes.func
	};
	
	
	TableOptions.defaultProps = {
	  itemPerPage: -1
	};
	exports.default = TableOptions;

/***/ }),
/* 531 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _getPrototypeOf = __webpack_require__(382);
	
	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);
	
	var _classCallCheck2 = __webpack_require__(386);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _createClass2 = __webpack_require__(387);
	
	var _createClass3 = _interopRequireDefault(_createClass2);
	
	var _possibleConstructorReturn2 = __webpack_require__(388);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(405);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _react = __webpack_require__(25);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _Pagination = __webpack_require__(508);
	
	var _Pagination2 = _interopRequireDefault(_Pagination);
	
	var _classnames = __webpack_require__(470);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	var _text = __webpack_require__(506);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/* @TablePagging
	  Pagging
	*/
	var TablePagging = function (_Component) {
	  (0, _inherits3.default)(TablePagging, _Component);
	
	  function TablePagging() {
	    (0, _classCallCheck3.default)(this, TablePagging);
	    return (0, _possibleConstructorReturn3.default)(this, (TablePagging.__proto__ || (0, _getPrototypeOf2.default)(TablePagging)).apply(this, arguments));
	  }
	
	  (0, _createClass3.default)(TablePagging, [{
	    key: 'render',
	    value: function render() {
	      var _props = this.props,
	          pageIndex = _props.pageIndex,
	          itemPerPage = _props.itemPerPage,
	          pageIndexHandler = _props.pageIndexHandler,
	          filter = _props.filter,
	          filterTotalItem = _props.filterTotalItem;
	      var totalItems = this.props.totalItems;
	
	
	      if (filter != "") totalItems = filterTotalItem;
	
	      var begin = pageIndex * itemPerPage;
	      var end = itemPerPage > 0 ? Math.min((pageIndex + 1) * itemPerPage - 1, totalItems) : totalItems;
	
	      var maxPage = Math.floor(totalItems / itemPerPage);
	
	      return _react2.default.createElement(
	        'div',
	        { className: 'row' },
	        _react2.default.createElement(
	          'div',
	          { className: 'col-md-5 col-sm-5' },
	          _react2.default.createElement(
	            'div',
	            { className: 'dataTables_info', id: 'sample_1_info', role: 'status', 'aria-live': 'polite' },
	            totalItems > 0 && 'Showing ' + begin + ' to ' + end + ' of ' + totalItems + ' records. ',
	            totalItems <= 0 && 'Not found data. ',
	            filter != "" && '(filter "' + filter + '" from ' + this.props.totalItems + ' total records)'
	          )
	        ),
	        _react2.default.createElement(
	          'div',
	          { className: 'col-md-7 col-sm-7' },
	          itemPerPage > 0 && _react2.default.createElement(
	            'div',
	            { className: 'btn-group pull-right' },
	            _react2.default.createElement(_Pagination2.default, {
	              activePage: pageIndex + 1,
	              itemsCountPerPage: itemPerPage,
	              totalItemsCount: totalItems,
	              pageRangeDisplayed: 5,
	              onChange: function onChange(e) {
	                pageIndexHandler && pageIndexHandler(e - 1);
	              } })
	          )
	        )
	      );
	    }
	  }]);
	  return TablePagging;
	}(_react.Component);
	
	TablePagging.propTypes = {
	  // filter
	  filter: _react2.default.PropTypes.string,
	
	  // filterTotalItem
	  filterTotalItem: _react2.default.PropTypes.number,
	
	  // totalItems
	  totalItems: _react2.default.PropTypes.number,
	
	  // Has itemPerPage
	  itemPerPage: _react2.default.PropTypes.number,
	
	  // pageIndex
	  pageIndex: _react2.default.PropTypes.number,
	
	  // HeaderRender
	  pageIndexHandler: _react2.default.PropTypes.func
	};
	exports.default = TablePagging;

/***/ }),
/* 532 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _CounterContainer = __webpack_require__(533);
	
	var _CounterContainer2 = _interopRequireDefault(_CounterContainer);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = function (store) {
	  return {
	    path: 'counter',
	    /*  Async getComponent is only invoked when route matches   */
	    getComponent: function getComponent(nextState, cb) {
	      /*  Webpack - use 'require.ensure' to create a split point
	          and embed an async module loader (jsonp) when bundling   */
	      !/* require.ensure */(function (require) {
	        /*  Webpack - use require callback to define
	            dependencies for bundling   */
	
	        /*  Return getComponent   */
	        cb(null, _CounterContainer2.default);
	
	        /* Webpack named bundle   */
	      }(__webpack_require__));
	    }
	  };
	};

/***/ }),
/* 533 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _reactRedux = __webpack_require__(413);
	
	var _counter = __webpack_require__(341);
	
	var _CounterView = __webpack_require__(534);
	
	var _CounterView2 = _interopRequireDefault(_CounterView);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/*  Object of action creators (can also be function that returns object).
	    Keys will be passed as props to presentational components. Here we are
	    implementing our wrapper around increment; the component doesn't care   */
	
	var mapDispatchToProps = function mapDispatchToProps(dispatch) {
	  return {
	    increment: function increment() {
	      return dispatch((0, _counter.increment)(1));
	    },
	    doubleAsync: function doubleAsync() {
	      return dispatch((0, _counter.doubleAsync)());
	    },
	    dispatch: dispatch
	  };
	};
	
	var mapStateToProps = function mapStateToProps(state) {
	  return {
	    counter: state.counter
	  };
	};
	
	/*  Note: mapStateToProps is where you should use `reselect` to create selectors, ie:
	
	    import { createSelector } from 'reselect'
	    const counter = (state) => state.counter
	    const tripleCount = createSelector(counter, (count) => count * 3)
	    const mapStateToProps = (state) => ({
	      counter: tripleCount(state)
	    })
	
	    Selectors can compute derived data, allowing Redux to store the minimal possible state.
	    Selectors are efficient. A selector is not recomputed unless one of its arguments change.
	    Selectors are composable. They can be used as input to other selectors.
	    https://github.com/reactjs/reselect    */
	
	exports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(_CounterView2.default);

/***/ }),
/* 534 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.CounterView = undefined;
	
	var _react = __webpack_require__(25);
	
	var _react2 = _interopRequireDefault(_react);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var CounterView = exports.CounterView = function CounterView(props) {
	  return _react2.default.createElement(
	    'div',
	    { style: { margin: '0 auto' } },
	    _react2.default.createElement(
	      'h2',
	      null,
	      'Counter: ',
	      props.counter
	    ),
	    _react2.default.createElement(
	      'button',
	      { className: 'btn btn-default', onClick: props.increment },
	      'Increment'
	    ),
	    ' ',
	    _react2.default.createElement(
	      'button',
	      { className: 'btn btn-default', onClick: props.doubleAsync },
	      'Double (Async)'
	    )
	  );
	};
	
	CounterView.propTypes = {
	  counter: _react2.default.PropTypes.number.isRequired,
	  doubleAsync: _react2.default.PropTypes.func.isRequired,
	  increment: _react2.default.PropTypes.func.isRequired
	};
	exports.default = CounterView;

/***/ }),
/* 535 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _HomeContainer = __webpack_require__(536);
	
	var _HomeContainer2 = _interopRequireDefault(_HomeContainer);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	//import IndexComponent from './components/index.component'
	
	
	// Sync route definition
	
	exports.default = function (store) {
	  return {
	    path: 'blank_temp',
	    /*  Async getComponent is only invoked when route matches   */
	    getComponent: function getComponent(nextState, cb) {
	      /*  Webpack - use 'require.ensure' to create a split point
	          and embed an async module loader (jsonp) when bundling   */
	      !/* require.ensure */(function (require) {
	
	        /*  Return getComponent   */
	        cb(null, _HomeContainer2.default);
	
	        /* Webpack named bundle   */
	      }(__webpack_require__));
	    }
	  };
	};

/***/ }),
/* 536 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _getPrototypeOf = __webpack_require__(382);
	
	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);
	
	var _classCallCheck2 = __webpack_require__(386);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _createClass2 = __webpack_require__(387);
	
	var _createClass3 = _interopRequireDefault(_createClass2);
	
	var _possibleConstructorReturn2 = __webpack_require__(388);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(405);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _react = __webpack_require__(25);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _BaseContainer2 = __webpack_require__(474);
	
	var _BaseContainer3 = _interopRequireDefault(_BaseContainer2);
	
	var _reactRouterDom = __webpack_require__(512);
	
	var _AddForm = __webpack_require__(537);
	
	var _AddForm2 = _interopRequireDefault(_AddForm);
	
	var _EditForm = __webpack_require__(540);
	
	var _EditForm2 = _interopRequireDefault(_EditForm);
	
	var _TableView = __webpack_require__(541);
	
	var _TableView2 = _interopRequireDefault(_TableView);
	
	var _ErrorPage = __webpack_require__(542);
	
	var _ErrorPage2 = _interopRequireDefault(_ErrorPage);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var HomeContainer = function (_BaseContainer) {
	  (0, _inherits3.default)(HomeContainer, _BaseContainer);
	
	  function HomeContainer() {
	    (0, _classCallCheck3.default)(this, HomeContainer);
	    return (0, _possibleConstructorReturn3.default)(this, (HomeContainer.__proto__ || (0, _getPrototypeOf2.default)(HomeContainer)).call(this));
	    //this.Create = this.Create.bind(this);
	    //this.View = this.View.bind(this);
	    //this.Child = this.Child.bind(this);
	    /*this.state = {
	      isHidden: false,
	    } */
	  }
	
	  (0, _createClass3.default)(HomeContainer, [{
	    key: 'componentWillMount',
	    value: function componentWillMount() {
	      this.setState({
	        title: "Plant Area"
	      });
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      return _react2.default.createElement(
	        _reactRouterDom.BrowserRouter,
	        null,
	        _react2.default.createElement(
	          _reactRouterDom.Switch,
	          null,
	          _react2.default.createElement(_reactRouterDom.Route, { exact: true, path: '/Create', component: _AddForm2.default }),
	          _react2.default.createElement(_reactRouterDom.Route, { path: '/Edit/:id', component: _EditForm2.default }),
	          _react2.default.createElement(_reactRouterDom.Route, { path: '/View', component: _TableView2.default }),
	          _react2.default.createElement(_reactRouterDom.Route, { path: '/', component: _TableView2.default }),
	          _react2.default.createElement(_reactRouterDom.Route, { component: _AddForm2.default })
	        )
	      );
	    }
	  }]);
	  return HomeContainer;
	}(_BaseContainer3.default);
	
	exports.default = HomeContainer;

/***/ }),
/* 537 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _extends2 = __webpack_require__(313);
	
	var _extends3 = _interopRequireDefault(_extends2);
	
	var _getPrototypeOf = __webpack_require__(382);
	
	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);
	
	var _classCallCheck2 = __webpack_require__(386);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _createClass2 = __webpack_require__(387);
	
	var _createClass3 = _interopRequireDefault(_createClass2);
	
	var _possibleConstructorReturn2 = __webpack_require__(388);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(405);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _react = __webpack_require__(25);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _BaseContainer2 = __webpack_require__(474);
	
	var _BaseContainer3 = _interopRequireDefault(_BaseContainer2);
	
	var _ApiService = __webpack_require__(438);
	
	var _ApiService2 = _interopRequireDefault(_ApiService);
	
	var _UI = __webpack_require__(485);
	
	var _DataForm = __webpack_require__(538);
	
	var _DataForm2 = _interopRequireDefault(_DataForm);
	
	var _utils = __webpack_require__(476);
	
	var _reactRouterDom = __webpack_require__(512);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	//import View from '../components/TableView';
	
	var TABS_DATA = [];
	
	var AddForm = function (_BaseContainer) {
	  (0, _inherits3.default)(AddForm, _BaseContainer);
	
	  function AddForm() {
	    var _ref;
	
	    var _temp, _this, _ret;
	
	    (0, _classCallCheck3.default)(this, AddForm);
	
	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }
	
	    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = AddForm.__proto__ || (0, _getPrototypeOf2.default)(AddForm)).call.apply(_ref, [this].concat(args))), _this), _this.handleSubmitted = function (_ref2) {
	      var res = _ref2.res,
	          fields = _ref2.fields,
	          form = _ref2.form;
	
	      form.reset(); // resets view
	    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
	  }
	
	  (0, _createClass3.default)(AddForm, [{
	    key: 'componentWillMount',
	
	
	    /*
	    constructor(props){
	      super(props);
	      this.state ={
	        plantDescr: "",
	        plantCode: "",
	        server: "",
	        recCreated: "2015-02-06T09:55:39",
	        recDatetime: "2015-04-22T15:57:32",
	      }
	      this.saveData = this.saveData.bind(this);
	    }
	    
	      saveData = (e) => {
	      e.preventDefault();
	        let data = {
	          plantDescr: this.state.plantDescr, 
	          plantCode: this.state.plantCode, 
	          recCreated: "2015-02-06T09:55:39",
	          recDatetime: "2015-04-22T15:57:32",
	        };
	        ApiService.addCcaPlants(data)
	            .then(res => {
	                this.setState({message : 'Data added successfully.'});
	                this.props.history.push(View);
	            });
	      }
	    */
	
	    value: function componentWillMount() {}
	    /*
	    this.setState({
	      title: "Add Plants",
	      name: ""
	    }) 
	    */
	
	
	    //--------------------------------------------------------------------//
	    //  Form Content Renderer
	    //--------------------------------------------------------------------//
	
	  }, {
	    key: '_renderContent',
	    value: function _renderContent() {
	      var _this2 = this;
	
	      var item = {
	        plantDescr: "",
	        plantCode: "",
	        server: "",
	        recCreated: "2020-02-14T09:55:39",
	        recDatetime: "2020-02-14T15:57:32",
	        remember1: false,
	        remember2: false
	
	        //const [setInputItems] = this.setState(item);
	
	      };return _react2.default.createElement(_DataForm2.default, {
	        title: 'Add Plants',
	        hasCancel: true,
	        item: item,
	        bodyRender: this.fromBodyRender,
	        onSubmit: function onSubmit(itm) {
	          //alertMessage({message: JSON.stringify(itm)})
	          _ApiService2.default.addCcaPlants(itm).then(function (res) {
	            //this.setState({message : 'Data added successfully.'});
	            _this2.props.history.push(View);
	          });
	          (0, _utils.alertMessage)({ message: 'Data added successfully.' });
	        },
	        onCancel: function onCancel(itm) {
	          //alert("cancel")
	          //alert(JSON.stringify(itm))
	          //setInputItems(itm)
	          //document.getElementById("FormInput1").reset();
	          //itm.preventDefault();
	          //this.setState(this.itm);/
	        }
	      });
	    }
	  }, {
	    key: 'fromBodyRender',
	    value: function fromBodyRender(options) {
	      var item = options.item,
	          binding = options.binding;
	
	      return _react2.default.createElement(
	        'div',
	        { className: 'row' },
	        _react2.default.createElement(
	          'div',
	          { className: 'col-xs-3 col-md-5' },
	          _react2.default.createElement(_UI.TextInput, (0, _extends3.default)({
	            placeHolder: 'Plant Name',
	            helpText: ''
	          }, binding("plantDescr")))
	        ),
	        _react2.default.createElement(
	          'div',
	          { className: 'col-xs-3 col-md-5' },
	          _react2.default.createElement(_UI.TextInput, (0, _extends3.default)({
	            placeHolder: 'Plant Code',
	            helpText: ''
	          }, binding("plantCode")))
	        ),
	        _react2.default.createElement(
	          'div',
	          { className: 'col-sm-4' },
	          _react2.default.createElement(_UI.CheckBox, (0, _extends3.default)({
	            placeHolder: 'GR does not use real-time data'
	          }, binding("remember1")))
	        ),
	        _react2.default.createElement(
	          'div',
	          { className: 'col-xs-6 col-md-2' },
	          _react2.default.createElement(_UI.TextInput, (0, _extends3.default)({
	            placeHolder: 'Second(s)',
	            helpText: ''
	          }, binding("")))
	        ),
	        _react2.default.createElement(
	          'div',
	          { className: 'col-sm-8' },
	          _react2.default.createElement(_UI.CheckBox, (0, _extends3.default)({
	            placeHolder: 'Using EWM System'
	          }, binding("remember2")))
	        )
	      );
	    }
	  }]);
	  return AddForm;
	}(_BaseContainer3.default);
	
	exports.default = AddForm;

/***/ }),
/* 538 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _DataForm = __webpack_require__(539);
	
	var _DataForm2 = _interopRequireDefault(_DataForm);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = _DataForm2.default;

/***/ }),
/* 539 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _defineProperty2 = __webpack_require__(337);
	
	var _defineProperty3 = _interopRequireDefault(_defineProperty2);
	
	var _extends3 = __webpack_require__(313);
	
	var _extends4 = _interopRequireDefault(_extends3);
	
	var _getPrototypeOf = __webpack_require__(382);
	
	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);
	
	var _classCallCheck2 = __webpack_require__(386);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _createClass2 = __webpack_require__(387);
	
	var _createClass3 = _interopRequireDefault(_createClass2);
	
	var _possibleConstructorReturn2 = __webpack_require__(388);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(405);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _react = __webpack_require__(25);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _classnames = __webpack_require__(470);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	var _reactRouterDom = __webpack_require__(512);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var DataForm = function (_Component) {
	  (0, _inherits3.default)(DataForm, _Component);
	
	  function DataForm() {
	    var _ref;
	
	    var _temp, _this, _ret;
	
	    (0, _classCallCheck3.default)(this, DataForm);
	
	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }
	
	    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = DataForm.__proto__ || (0, _getPrototypeOf2.default)(DataForm)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
	      value: "",
	      error: false //["", "success", "warning", "error"]
	    }, _this._mapOnChange = function (key) {
	      return {
	        onValueChange: function onValueChange(val) {
	          var item = _this.state.item;
	
	          _this.setState({
	            item: (0, _extends4.default)({}, item, (0, _defineProperty3.default)({}, key, val))
	          });
	        }
	      };
	    }, _this._mapValue = function (key) {
	      var item = _this.state.item;
	
	      return item[key] || "";
	    }, _this._binding = function (key) {
	      return (0, _extends4.default)({
	        value: _this._mapValue(key)
	      }, _this._mapOnChange(key));
	    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
	  }
	
	  (0, _createClass3.default)(DataForm, [{
	    key: 'componentWillMount',
	    value: function componentWillMount() {
	      this.setState((0, _extends4.default)({
	        _id: "Form_" + Date.now()
	      }, this.props));
	    }
	  }, {
	    key: 'componentDidMount',
	    value: function componentDidMount() {}
	  }, {
	    key: 'render',
	    value: function render() {
	      var _props = this.props,
	          bodyRender = _props.bodyRender,
	          title = _props.title,
	          hasSubmit = _props.hasSubmit,
	          hasCancel = _props.hasCancel,
	          onSubmit = _props.onSubmit,
	          onCancel = _props.onCancel;
	      var item = this.state.item;
	
	      return _react2.default.createElement(
	        'div',
	        { className: 'portlet light bordered' },
	        _react2.default.createElement(
	          'div',
	          { className: 'portlet-title' },
	          _react2.default.createElement(
	            'div',
	            null,
	            _react2.default.createElement(
	              _reactRouterDom.Link,
	              { to: '/View', className: 'btn sbold blue', id: 'btnView' },
	              'VIEW DATA',
	              _react2.default.createElement('i', { className: 'fa fa-list-alt ' })
	            )
	          ),
	          _react2.default.createElement(
	            'div',
	            { className: 'caption font-red-sunglo' },
	            _react2.default.createElement('i', { className: 'icon-settings font-red-sunglo' }),
	            _react2.default.createElement(
	              'span',
	              { className: 'caption-subject bold uppercase' },
	              ' ',
	              title || ""
	            )
	          )
	        ),
	        _react2.default.createElement(
	          'div',
	          { className: 'portlet-body form' },
	          _react2.default.createElement(
	            'form',
	            { role: 'form', id: 'FormInput1' },
	            _react2.default.createElement(
	              'div',
	              { className: 'form-body' },
	              bodyRender && bodyRender({
	                item: item,
	                binding: this._binding
	              })
	            ),
	            _react2.default.createElement(
	              'div',
	              { className: 'form-actions noborder' },
	              hasSubmit && _react2.default.createElement(
	                'button',
	                {
	                  type: 'button',
	                  className: 'btn blue',
	                  onClick: function onClick(e) {
	                    onSubmit && onSubmit(item);
	                  } },
	                'Submit'
	              ),
	              hasCancel && _react2.default.createElement(
	                'button',
	                {
	                  type: 'button',
	                  className: 'btn default',
	                  onClick: function onClick(e) {
	                    onCancel && onCancel(item);
	                  } },
	                'Cancel'
	              )
	            )
	          )
	        )
	      );
	    }
	  }]);
	  return DataForm;
	}(_react.Component);
	
	DataForm.propTypes = {
	  // Item
	  item: _react2.default.PropTypes.object,
	
	  // body
	  bodyRender: _react2.default.PropTypes.func,
	
	  // onSubmit handler
	  onSubmit: _react2.default.PropTypes.func,
	
	  // onCancel handler
	  onCancel: _react2.default.PropTypes.func
	};
	
	
	DataForm.defaultProps = {
	  enable: true,
	  hasSubmit: true,
	  hasCancel: true
	};
	
	exports.default = DataForm;

/***/ }),
/* 540 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _extends2 = __webpack_require__(313);
	
	var _extends3 = _interopRequireDefault(_extends2);
	
	var _stringify = __webpack_require__(496);
	
	var _stringify2 = _interopRequireDefault(_stringify);
	
	var _getPrototypeOf = __webpack_require__(382);
	
	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);
	
	var _classCallCheck2 = __webpack_require__(386);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _createClass2 = __webpack_require__(387);
	
	var _createClass3 = _interopRequireDefault(_createClass2);
	
	var _possibleConstructorReturn2 = __webpack_require__(388);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(405);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _react = __webpack_require__(25);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _BaseContainer2 = __webpack_require__(474);
	
	var _BaseContainer3 = _interopRequireDefault(_BaseContainer2);
	
	var _ApiService = __webpack_require__(438);
	
	var _ApiService2 = _interopRequireDefault(_ApiService);
	
	var _UI = __webpack_require__(485);
	
	var _DataForm = __webpack_require__(538);
	
	var _DataForm2 = _interopRequireDefault(_DataForm);
	
	var _utils = __webpack_require__(476);
	
	var _reactRouterDom = __webpack_require__(512);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	//import View from '../components/TableView';
	
	var TABS_DATA = [];
	
	var AddForm = function (_BaseContainer) {
	  (0, _inherits3.default)(AddForm, _BaseContainer);
	
	  function AddForm() {
	    (0, _classCallCheck3.default)(this, AddForm);
	    return (0, _possibleConstructorReturn3.default)(this, (AddForm.__proto__ || (0, _getPrototypeOf2.default)(AddForm)).apply(this, arguments));
	  }
	
	  (0, _createClass3.default)(AddForm, [{
	    key: 'componentWillMount',
	
	    /*
	    constructor(props){
	      super(props);
	      this.state ={
	        plantDescr: "",
	        plantCode: "",
	        server: "",
	        recCreated: "2015-02-06T09:55:39",
	        recDatetime: "2015-04-22T15:57:32",
	      }
	      this.saveData = this.saveData.bind(this);
	    }
	    
	      saveData = (e) => {
	      e.preventDefault();
	        let data = {
	          plantDescr: this.state.plantDescr, 
	          plantCode: this.state.plantCode, 
	          recCreated: "2015-02-06T09:55:39",
	          recDatetime: "2015-04-22T15:57:32",
	        };
	        ApiService.addCcaPlants(data)
	            .then(res => {
	                this.setState({message : 'Data added successfully.'});
	                this.props.history.push(View);
	            });
	      }
	    */
	
	    value: function componentWillMount() {}
	    /*
	    this.setState({
	      title: "Add Plants",
	      name: ""
	    }) 
	    */
	
	
	    //--------------------------------------------------------------------//
	    //  Form Content Renderer
	    //--------------------------------------------------------------------//
	
	  }, {
	    key: '_renderContent',
	    value: function _renderContent() {
	      var _this2 = this;
	
	      var item = {
	        plantDescr: "",
	        plantCode: "",
	        server: "",
	        recCreated: "2020-02-14T09:55:39",
	        recDatetime: "2020-02-14T15:57:32",
	        remember1: false,
	        remember2: false
	      };
	
	      return _react2.default.createElement(_DataForm2.default, {
	        title: 'Add Plants',
	        hasCancel: true,
	        item: item,
	        bodyRender: this.fromBodyRender,
	        onSubmit: function onSubmit(itm) {
	          //alertMessage({message: JSON.stringify(itm)})
	          _ApiService2.default.addCcaPlants(itm).then(function (res) {
	            //this.setState({message : 'Data added successfully.'});
	            _this2.props.history.push(View);
	          });
	          (0, _utils.alertMessage)({ message: 'Data added successfully.' });
	        },
	        onCancel: function onCancel(e) {
	          //alert("cancel")
	          alert((0, _stringify2.default)(e));
	          /*
	          for (var key in item ) {
	            item[key] = null;
	          } */
	        }
	      });
	    }
	  }, {
	    key: 'fromBodyRender',
	    value: function fromBodyRender(options) {
	      var item = options.item,
	          binding = options.binding;
	
	      return _react2.default.createElement(
	        'div',
	        { className: 'row' },
	        _react2.default.createElement(
	          'div',
	          { className: 'col-xs-3 col-md-5' },
	          _react2.default.createElement(_UI.TextInput, (0, _extends3.default)({
	            placeHolder: 'Plant Name',
	            helpText: ''
	          }, binding("plantDescr")))
	        ),
	        _react2.default.createElement(
	          'div',
	          { className: 'col-xs-3 col-md-5' },
	          _react2.default.createElement(_UI.TextInput, (0, _extends3.default)({
	            placeHolder: 'Plant Code',
	            helpText: ''
	          }, binding("plantCode")))
	        ),
	        _react2.default.createElement(
	          'div',
	          { className: 'col-sm-4' },
	          _react2.default.createElement(_UI.CheckBox, (0, _extends3.default)({
	            placeHolder: 'GR does not use real-time data'
	          }, binding("remember1")))
	        ),
	        _react2.default.createElement(
	          'div',
	          { className: 'col-xs-6 col-md-2' },
	          _react2.default.createElement(_UI.TextInput, (0, _extends3.default)({
	            placeHolder: 'Second(s)',
	            helpText: ''
	          }, binding("")))
	        ),
	        _react2.default.createElement(
	          'div',
	          { className: 'col-sm-8' },
	          _react2.default.createElement(_UI.CheckBox, (0, _extends3.default)({
	            placeHolder: 'Using EWM System'
	          }, binding("remember2")))
	        )
	      );
	    }
	  }]);
	  return AddForm;
	}(_BaseContainer3.default);
	
	exports.default = AddForm;

/***/ }),
/* 541 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _getPrototypeOf = __webpack_require__(382);
	
	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);
	
	var _classCallCheck2 = __webpack_require__(386);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _createClass2 = __webpack_require__(387);
	
	var _createClass3 = _interopRequireDefault(_createClass2);
	
	var _possibleConstructorReturn2 = __webpack_require__(388);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(405);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _react = __webpack_require__(25);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _BaseContainer2 = __webpack_require__(474);
	
	var _BaseContainer3 = _interopRequireDefault(_BaseContainer2);
	
	var _Table = __webpack_require__(503);
	
	var _Table2 = _interopRequireDefault(_Table);
	
	var _ApiService = __webpack_require__(438);
	
	var _ApiService2 = _interopRequireDefault(_ApiService);
	
	var _utils = __webpack_require__(476);
	
	var _reactRouterDom = __webpack_require__(512);
	
	var _EditForm = __webpack_require__(540);
	
	var _EditForm2 = _interopRequireDefault(_EditForm);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	//const TABLE_DATA = []
	
	//import axios from 'axios'
	//import cors from 'cors'
	// Add the component for AddForm 08 Feb 2020
	//import {Tab, TextInput, CheckBox, RadioGroup, Select} from '../../../components/UI'
	var data = [];
	//import {Button} from '../../../components/UI'
	
	var TableView = function (_BaseContainer) {
	  (0, _inherits3.default)(TableView, _BaseContainer);
	
	  function TableView() {
	    var _ref;
	
	    var _temp, _this, _ret;
	
	    (0, _classCallCheck3.default)(this, TableView);
	
	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }
	
	    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = TableView.__proto__ || (0, _getPrototypeOf2.default)(TableView)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
	      header: [{
	        title: "#",
	        prop: "no"
	      }, {
	        title: "Plant Area",
	        prop: "plantDescr"
	      }, {
	        title: "Plant Code",
	        prop: "plantCode"
	      }, {
	        title: "Action"
	      }],
	      data: data
	    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
	  }
	
	  (0, _createClass3.default)(TableView, [{
	    key: 'componentWillMount',
	    value: function componentWillMount() {
	      var _this2 = this;
	
	      /*
	      this.setState({
	        title: "Data Plant Area"
	      })
	      
	      const apiUrl = './api/CcaPlants';
	        fetch(apiUrl)
	          .then(res => res.json())
	          .then(
	            (result) => {
	              this.setState({
	                data: result
	                //TABLE_DATA: result
	              });
	            },
	            (error) => {
	              this.setState({ error });
	            }
	          )
	        this.showLoading(true)
	          setTimeout(() => {
	            this.showLoading(false)
	          }, 500);
	          */
	
	      _ApiService2.default.fetchCcaPlants().then(function (response) {
	        _this2.setState({
	          data: response.data
	        });
	      });
	      this.showLoading(true);
	      setTimeout(function () {
	        _this2.showLoading(false);
	      }, 500);
	    }
	  }, {
	    key: '_renderContent',
	    value: function _renderContent() {
	      console.log(this.state);
	      return _react2.default.createElement(_Table2.default, {
	        searchableProperties: ["plantDescr", "plantCode"],
	        hasTopBar: true,
	        headers: this.state.header,
	        data: this.state.data,
	        rowRender: this._renderRow,
	        onAddNewHandler: this.onAddNewClick.bind(this)
	      });
	    }
	
	    /*
	    hiddenContent(e) {
	      //document.getElementById("divTable").style.display = "none";
	      document.getElementById("btnAdd").style.display = 'none';
	      document.getElementById("divTable").innerHTML = '<div></div>';
	    }
	    */
	
	  }, {
	    key: 'onAddNewClick',
	    value: function onAddNewClick() {
	      this.setState({
	        title: "Add Plant Area"
	      });
	    }
	  }, {
	    key: '_renderRow',
	    value: function _renderRow(itm, i) {
	      return _react2.default.createElement(
	        'tr',
	        { key: i, className: 'odd gradeX' },
	        _react2.default.createElement(
	          'td',
	          null,
	          i + 1
	        ),
	        _react2.default.createElement(
	          'td',
	          null,
	          itm.plantDescr
	        ),
	        _react2.default.createElement(
	          'td',
	          null,
	          itm.plantCode
	        ),
	        _react2.default.createElement(
	          'td',
	          null,
	          _react2.default.createElement(
	            'div',
	            { className: 'btn-group' },
	            _react2.default.createElement(
	              'button',
	              { className: 'btn btn-xs green dropdown-toggle', type: 'button', 'data-toggle': 'dropdown', 'aria-expanded': 'false' },
	              ' Actions',
	              _react2.default.createElement('i', { className: 'fa fa-angle-down' })
	            ),
	            _react2.default.createElement(
	              'ul',
	              { className: 'dropdown-menu pull-left', role: 'menu' },
	              _react2.default.createElement(
	                'li',
	                null,
	                _react2.default.createElement(
	                  'a',
	                  { href: 'javascript:;' },
	                  _react2.default.createElement('i', { className: 'icon-flag' }),
	                  ' Area Name',
	                  _react2.default.createElement(
	                    'span',
	                    { className: 'badge badge-success' },
	                    '4'
	                  )
	                )
	              ),
	              _react2.default.createElement(
	                'li',
	                null,
	                _react2.default.createElement(
	                  'a',
	                  { href: 'javascript:;' },
	                  _react2.default.createElement('i', { className: 'glyphicon glyphicon-tags' }),
	                  ' Area Code '
	                )
	              ),
	              _react2.default.createElement(
	                'li',
	                { className: 'divider' },
	                ' '
	              ),
	              _react2.default.createElement(
	                'li',
	                null,
	                _react2.default.createElement(
	                  'a',
	                  { href: 'javascript:;' },
	                  _react2.default.createElement('i', { className: 'glyphicon glyphicon-trash' }),
	                  ' Delete '
	                )
	              )
	            )
	          )
	        )
	      );
	    }
	  }]);
	  return TableView;
	}(_BaseContainer3.default);
	
	exports.default = TableView;

/***/ }),
/* 542 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _react = __webpack_require__(25);
	
	var _react2 = _interopRequireDefault(_react);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var Error = function Error() {
	  return _react2.default.createElement(
	    'div',
	    null,
	    _react2.default.createElement(
	      'p',
	      null,
	      'Error: Page does not exist!'
	    )
	  );
	};
	
	exports.default = Error;

/***/ }),
/* 543 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _HomeContainer = __webpack_require__(544);
	
	var _HomeContainer2 = _interopRequireDefault(_HomeContainer);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	//import IndexComponent from './components/index.component'
	
	
	// Sync route definition
	
	exports.default = function (store) {
	  return {
	    path: 'sample_crud',
	    /*  Async getComponent is only invoked when route matches   */
	    getComponent: function getComponent(nextState, cb) {
	      /*  Webpack - use 'require.ensure' to create a split point
	          and embed an async module loader (jsonp) when bundling   */
	      !/* require.ensure */(function (require) {
	
	        /*  Return getComponent   */
	        cb(null, _HomeContainer2.default);
	
	        /* Webpack named bundle   */
	      }(__webpack_require__));
	    }
	  };
	};

/***/ }),
/* 544 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _getPrototypeOf = __webpack_require__(382);
	
	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);
	
	var _classCallCheck2 = __webpack_require__(386);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _createClass2 = __webpack_require__(387);
	
	var _createClass3 = _interopRequireDefault(_createClass2);
	
	var _possibleConstructorReturn2 = __webpack_require__(388);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(405);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _reactRedux = __webpack_require__(413);
	
	var _react = __webpack_require__(25);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactRouterDom = __webpack_require__(512);
	
	var _create = __webpack_require__(545);
	
	var _create2 = _interopRequireDefault(_create);
	
	var _edit = __webpack_require__(546);
	
	var _edit2 = _interopRequireDefault(_edit);
	
	var _index = __webpack_require__(547);
	
	var _index2 = _interopRequireDefault(_index);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var HomeContainer = function (_Component) {
	  (0, _inherits3.default)(HomeContainer, _Component);
	
	  function HomeContainer() {
	    (0, _classCallCheck3.default)(this, HomeContainer);
	    return (0, _possibleConstructorReturn3.default)(this, (HomeContainer.__proto__ || (0, _getPrototypeOf2.default)(HomeContainer)).apply(this, arguments));
	  }
	
	  (0, _createClass3.default)(HomeContainer, [{
	    key: 'render',
	    value: function render() {
	      return _react2.default.createElement(
	        _reactRouterDom.BrowserRouter,
	        null,
	        _react2.default.createElement(
	          'div',
	          { className: 'container' },
	          _react2.default.createElement(
	            'nav',
	            { className: 'navbar navbar-expand-lg navbar-light bg-light' },
	            _react2.default.createElement(
	              _reactRouterDom.Link,
	              { to: '/', className: 'navbar-brand' },
	              'CRUD Example'
	            ),
	            _react2.default.createElement(
	              'div',
	              { className: 'collapse navbar-collapse', id: 'navbarSupportedContent' },
	              _react2.default.createElement(
	                'ul',
	                { className: 'navbar-nav mr-auto' },
	                _react2.default.createElement(
	                  'li',
	                  { className: 'nav-item' },
	                  _react2.default.createElement(
	                    _reactRouterDom.Link,
	                    { to: '/', className: 'nav-link' },
	                    'Home'
	                  )
	                ),
	                _react2.default.createElement(
	                  'li',
	                  { className: 'nav-item' },
	                  _react2.default.createElement(
	                    _reactRouterDom.Link,
	                    { to: '/create', className: 'nav-link' },
	                    'Create'
	                  )
	                ),
	                _react2.default.createElement(
	                  'li',
	                  { className: 'nav-item' },
	                  _react2.default.createElement(
	                    _reactRouterDom.Link,
	                    { to: '/index', className: 'nav-link' },
	                    'Index'
	                  )
	                )
	              )
	            )
	          ),
	          _react2.default.createElement(
	            _reactRouterDom.Switch,
	            null,
	            _react2.default.createElement(_reactRouterDom.Route, { exact: true, path: '/create', component: _create2.default }),
	            _react2.default.createElement(_reactRouterDom.Route, { path: '/edit/:id', component: _edit2.default }),
	            _react2.default.createElement(_reactRouterDom.Route, { path: '/index', component: _index2.default })
	          )
	        )
	      );
	    }
	  }]);
	  return HomeContainer;
	}(_react.Component);
	
	/*  Object of action creators (can also be function that returns object).
	    Keys will be passed as props to presentational components. Here we are
	    implementing our wrapper around increment; the component doesn't care   */
	
	/*
	const mapDispatchToProps = (dispatch) => ({
	})
	
	const mapStateToProps = (state) => ({
	})
	*/
	
	/*  Note: mapStateToProps is where you should use `reselect` to create selectors, ie:
	
	    import { createSelector } from 'reselect'
	    const counter = (state) => state.counter
	    const tripleCount = createSelector(counter, (count) => count * 3)
	    const mapStateToProps = (state) => ({
	      counter: tripleCount(state)
	    })
	
	    Selectors can compute derived data, allowing Redux to store the minimal possible state.
	    Selectors are efficient. A selector is not recomputed unless one of its arguments change.
	    Selectors are composable. They can be used as input to other selectors.
	    https://github.com/reactjs/reselect    */
	
	//export default connect(mapStateToProps, mapDispatchToProps)(TableView)
	
	//import TableView from '../components/TableView'
	
	
	exports.default = HomeContainer;

/***/ }),
/* 545 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _getPrototypeOf = __webpack_require__(382);
	
	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);
	
	var _classCallCheck2 = __webpack_require__(386);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _createClass2 = __webpack_require__(387);
	
	var _createClass3 = _interopRequireDefault(_createClass2);
	
	var _possibleConstructorReturn2 = __webpack_require__(388);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(405);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _react = __webpack_require__(25);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _axios = __webpack_require__(439);
	
	var _axios2 = _interopRequireDefault(_axios);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var Create = function (_Component) {
	  (0, _inherits3.default)(Create, _Component);
	
	  function Create(props) {
	    (0, _classCallCheck3.default)(this, Create);
	
	    var _this = (0, _possibleConstructorReturn3.default)(this, (Create.__proto__ || (0, _getPrototypeOf2.default)(Create)).call(this, props));
	
	    _this.onChangePlantDescr = _this.onChangePlantDescr.bind(_this);
	    _this.onChangePlantCode = _this.onChangePlantCode.bind(_this);
	    _this.onChangeRecCreated = _this.onChangeRecCreated.bind(_this);
	    _this.onChangeRecDateTime = _this.onChangeRecDateTime.bind(_this);
	    _this.onSubmit = _this.onSubmit.bind(_this);
	
	    _this.state = {
	      plantDescr: '',
	      plantCode: '',
	      recCreated: '',
	      recDatetime: ''
	    };
	    return _this;
	  }
	
	  (0, _createClass3.default)(Create, [{
	    key: 'onChangePlantDescr',
	    value: function onChangePlantDescr(e) {
	      this.setState({
	        plantDescr: e.target.value
	      });
	    }
	  }, {
	    key: 'onChangePlantCode',
	    value: function onChangePlantCode(e) {
	      this.setState({
	        plantCode: e.target.value
	      });
	    }
	  }, {
	    key: 'onChangeRecCreated',
	    value: function onChangeRecCreated(e) {
	      this.setState({
	        recCreated: e.target.value
	      });
	    }
	  }, {
	    key: 'onChangeRecDateTime',
	    value: function onChangeRecDateTime(e) {
	      this.setState({
	        recDatetime: e.target.value
	      });
	    }
	  }, {
	    key: 'onSubmit',
	    value: function onSubmit(e) {
	      e.preventDefault();
	      var obj = {
	        plantDescr: this.state.plantDescr,
	        plantCode: this.state.plantCode,
	        recCreated: '2020-02-12 11:35:00.000',
	        recDatetime: '2020-02-12 11:37:30.000'
	      };
	      _axios2.default.post('http://localhost:5000/api/CcaPlants', obj).then(function (res) {
	        return console.log(res.data);
	      });
	
	      this.setState({
	        plantDescr: '',
	        plantCode: '',
	        recCreated: '',
	        recDatetime: ''
	      });
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      return _react2.default.createElement(
	        'div',
	        { style: { marginTop: 10 } },
	        _react2.default.createElement(
	          'form',
	          { onSubmit: this.onSubmit },
	          _react2.default.createElement(
	            'div',
	            { className: 'form-group' },
	            _react2.default.createElement(
	              'label',
	              null,
	              'Plant Name:  '
	            ),
	            _react2.default.createElement('input', {
	              type: 'text',
	              className: 'form-control',
	              value: this.state.plantDescr,
	              onChange: this.onChangePlantDescr
	            })
	          ),
	          _react2.default.createElement(
	            'div',
	            { className: 'form-group' },
	            _react2.default.createElement(
	              'label',
	              null,
	              'Plant Code: '
	            ),
	            _react2.default.createElement('input', { type: 'text',
	              className: 'form-control',
	              value: this.state.plantCode,
	              onChange: this.onChangePlantCode
	            })
	          ),
	          _react2.default.createElement(
	            'div',
	            { className: 'form-group' },
	            _react2.default.createElement('input', { type: 'submit',
	              value: 'Add Data',
	              className: 'btn btn-primary' })
	          )
	        )
	      );
	    }
	  }]);
	  return Create;
	}(_react.Component);
	
	exports.default = Create;

/***/ }),
/* 546 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _getPrototypeOf = __webpack_require__(382);
	
	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);
	
	var _classCallCheck2 = __webpack_require__(386);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _createClass2 = __webpack_require__(387);
	
	var _createClass3 = _interopRequireDefault(_createClass2);
	
	var _possibleConstructorReturn2 = __webpack_require__(388);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(405);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _react = __webpack_require__(25);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _axios = __webpack_require__(439);
	
	var _axios2 = _interopRequireDefault(_axios);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var proxyurl = "https://cors-anywhere.herokuapp.com/";
	_axios2.default.defaults.headers.get['Content-Type'] = 'application/x-www-form-urlencoded';
	
	//alert(Date.now());
	
	var Edit = function (_Component) {
	    (0, _inherits3.default)(Edit, _Component);
	
	    function Edit(props) {
	        (0, _classCallCheck3.default)(this, Edit);
	
	        var _this = (0, _possibleConstructorReturn3.default)(this, (Edit.__proto__ || (0, _getPrototypeOf2.default)(Edit)).call(this, props));
	
	        _this.onChangePlantDescr = _this.onChangePlantDescr.bind(_this);
	        _this.onChangePlantCode = _this.onChangePlantCode.bind(_this);
	        _this.onChangeRecCreated = _this.onChangeRecCreated.bind(_this);
	        _this.onSubmit = _this.onSubmit.bind(_this);
	
	        _this.state = {
	            plantDescr: '',
	            plantCode: '',
	            recCreated: ''
	        };
	        return _this;
	    }
	
	    (0, _createClass3.default)(Edit, [{
	        key: 'componentDidMount',
	        value: function componentDidMount() {
	            var _this2 = this;
	
	            //axios.get('http://localhost:5000/api/CcaPlants/'+this.props.match.params.id)
	            _axios2.default.get('http://localhost:5000/api/CcaPlants/18').then(function (response) {
	                _this2.setState({
	                    plantDescr: response.data.plantDescr,
	                    plantCode: response.data.plantCode,
	                    recCreated: response.data.recCreated });
	            }).catch(function (error) {
	                console.log(error);
	            });
	        }
	    }, {
	        key: 'onChangePlantDescr',
	        value: function onChangePlantDescr(e) {
	            this.setState({
	                plantDescr: e.target.value
	            });
	        }
	    }, {
	        key: 'onChangePlantCode',
	        value: function onChangePlantCode(e) {
	            this.setState({
	                plantCode: e.target.value
	            });
	        }
	    }, {
	        key: 'onChangeRecCreated',
	        value: function onChangeRecCreated(e) {
	            this.setState({
	                recCreated: e.target.value
	            });
	        }
	    }, {
	        key: 'onSubmit',
	        value: function onSubmit(e) {
	            e.preventDefault();
	            var obj = {
	                plantId: this.props.match.params.id,
	                plantDescr: this.state.plantDescr,
	                plantCode: this.state.plantCode,
	                recCreated: '2016-07-12T14:58:25',
	                recDatetime: '2019-11-29T17:22:38'
	            };
	            /* axios.put('http://localhost:5000/api/CcaPlants/'+this.props.match.params.id, obj)
	                .then(res => console.log(res.data)); */
	
	            var options = {
	                method: 'PUT',
	                url: 'http://localhost:5000/api/CcaPlants/18',
	                headers: { 'X-Requested-With': 'XMLHttpRequest' },
	                data: {
	                    "plantId": "18",
	                    "plantDescr": "Test 2xx",
	                    "plantCode": "54321",
	                    "recCreated": "2020-02-10T21:56:54",
	                    "recDatetime": "2020-02-10T21:56:56"
	                },
	                timeout: 1000,
	                responseType: 'json', // default
	                responseEncoding: 'utf8', // default
	                xsrfCookieName: 'XSRF-TOKEN', // default
	                xsrfHeaderName: 'X-XSRF-TOKEN', // default
	                proxy: {
	                    host: '127.0.0.1',
	                    port: 5000
	                    /* auth: {
	                      username: 'mikeymike',
	                      password: 'rapunz3l'
	                    } */
	                },
	                transformRequest: [function (data, headers, proxy) {
	                    // transform the data
	
	                    return data;
	                }]
	            };
	
	            // send the request
	            _axios2.default.put(options);
	
	            /* const url = 'http://localhost:5000/api/CcaPlants/18';
	            axios.put((url,{crossDomain : true}), obj)
	                .then(res => console.log(res.data));  */
	            //const {plantId, plantDescr, plantCode, recCreated, recDatetime} = this.state.contact;
	            /* const formData = new FormData();
	              formData.append('plantId', this.props.match.params.id);
	            formData.append('plantDescr', this.state.plantDescr);
	            formData.append('plantCode', this.state.plantCode);
	            formData.append('recCreated', '2016-07-12T14:58:25');
	            formData.append('recDatetime', '2019-11-29T17:22:38');
	            const url = 'http://localhost:5000/api/CcaPlants/'+this.props.match.params.id;
	            axios({
	                method: 'PUT',
	                url,
	                data: formData,
	                config: {
	                    headers: {
	                        'Content-Type': 'multipart/form-data',
	                    }
	                }
	            })
	            .then(resp => {
	                console.log('Submission response', resp);
	            })
	            .catch(err => console.error(err)); */
	
	            /*
	            const url = 'http://localhost:5000/api/CcaPlants/'+this.props.match.params.id;
	            fetch(proxyurl + url, {
	              method: 'PUT',
	              headers: {'Content-Type':'application/json'},
	              body: {
	                plantId: this.props.match.params.id,
	                plantDescr: this.state.plantDescr,
	                plantCode: this.state.plantCode,
	                recCreated: '2016-07-12T14:58:25',
	                recDatetime: '2019-11-29T17:22:38'
	              }
	            }); */
	            /*
	            var http = new XMLHttpRequest();
	            var url = 'http://localhost:5000/api/CcaPlants/'+this.props.match.params.id;
	            var params = 'plantDescr='+this.state.plantDescr+'&plantCode='+this.state.plantCode;
	            http.open('PUT', url, true);
	              //Send the proper header information along with the request
	            http.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');
	              http.onreadystatechange = function() {//Call a function when the state changes.
	                if(http.readyState == 4 && http.status == 200) {
	                    alert(http.responseText);
	                }
	            }
	            http.send(params);
	            */
	            /*
	            var params =  'plantId='+this.props.match.params.id+
	                          '&plantDescr='+this.state.plantDescr+
	                          '&plantCode='+this.state.plantCode+
	                          '&recCreated='+this.state.recCreated+
	                          '&recDatetime=2019-11-29T17:22:38';
	              var xhr = window.XMLHttpRequest ? new XMLHttpRequest() : new ActiveXObject("Microsoft.XMLHTTP");
	            xhr.open('PUT', 'http://localhost:5000/api/CcaPlants/'+this.props.match.params.id);
	            xhr.onreadystatechange = function() {
	                if (xhr.readyState>3 && xhr.status==200) { success(xhr.responseText); }
	            };
	            xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');
	            xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');
	            xhr.send(params);
	            //return xhr;
	            */
	
	            // go to link after submit
	            //this.props.history.push('../sample_crud');
	        }
	    }, {
	        key: 'render',
	        value: function render() {
	            return _react2.default.createElement(
	                'div',
	                { style: { marginTop: 10 } },
	                _react2.default.createElement(
	                    'form',
	                    { onSubmit: this.onSubmit },
	                    _react2.default.createElement(
	                        'div',
	                        { className: 'form-group' },
	                        _react2.default.createElement(
	                            'label',
	                            null,
	                            'Plant Name :  '
	                        ),
	                        _react2.default.createElement('input', {
	                            type: 'text',
	                            className: 'form-control',
	                            value: this.state.plantDescr,
	                            onChange: this.onChangePlantDescr
	                        })
	                    ),
	                    _react2.default.createElement(
	                        'div',
	                        { className: 'form-group' },
	                        _react2.default.createElement(
	                            'label',
	                            null,
	                            'Plant Code : '
	                        ),
	                        _react2.default.createElement('input', { type: 'text',
	                            className: 'form-control',
	                            value: this.state.plantCode,
	                            onChange: this.onChangePlantCode
	                        })
	                    ),
	                    _react2.default.createElement(
	                        'div',
	                        { className: 'form-group' },
	                        _react2.default.createElement('input', { type: 'submit',
	                            value: 'Update Data',
	                            className: 'btn btn-primary' })
	                    )
	                )
	            );
	        }
	    }]);
	    return Edit;
	}(_react.Component);
	
	exports.default = Edit;

/***/ }),
/* 547 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _getPrototypeOf = __webpack_require__(382);
	
	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);
	
	var _classCallCheck2 = __webpack_require__(386);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _createClass2 = __webpack_require__(387);
	
	var _createClass3 = _interopRequireDefault(_createClass2);
	
	var _possibleConstructorReturn2 = __webpack_require__(388);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(405);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _react = __webpack_require__(25);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _axios = __webpack_require__(439);
	
	var _axios2 = _interopRequireDefault(_axios);
	
	var _TableRow = __webpack_require__(548);
	
	var _TableRow2 = _interopRequireDefault(_TableRow);
	
	var _Table = __webpack_require__(503);
	
	var _Table2 = _interopRequireDefault(_Table);
	
	var _UI = __webpack_require__(485);
	
	var _utils = __webpack_require__(476);
	
	var _DataForm = __webpack_require__(538);
	
	var _DataForm2 = _interopRequireDefault(_DataForm);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	_axios2.default.defaults.headers.get['Content-Type'] = 'application/x-www-form-urlencoded';
	//var cca_plants = [];
	//export default class Index extends Component {
	//class Index extends BaseContainer {
	
	var Index = function (_Component) {
	  (0, _inherits3.default)(Index, _Component);
	
	  function Index(props) {
	    (0, _classCallCheck3.default)(this, Index);
	
	    var _this = (0, _possibleConstructorReturn3.default)(this, (Index.__proto__ || (0, _getPrototypeOf2.default)(Index)).call(this, props));
	
	    _this.state = {
	      cca_plants: []
	    };
	    return _this;
	  }
	
	  (0, _createClass3.default)(Index, [{
	    key: 'componentDidMount',
	    value: function componentDidMount() {
	      var _this2 = this;
	
	      /* axios.get('http://localhost:5000/api/CcaPlants')
	        .then(response => {
	          this.setState({ cca_plants: response.data });
	        })
	        .catch(function (error) {
	          console.log(error);
	        }) */
	      _axios2.default.get('http://localhost:5000/api/CcaPlants').then(function (response) {
	        _this2.setState({
	          cca_plants: response.data
	        });
	      }).catch(function (error) {
	        console.log(error);
	      });
	    }
	  }, {
	    key: 'tabRow',
	    value: function tabRow() {
	      return this.state.cca_plants.map(function (object, i) {
	        return _react2.default.createElement(_TableRow2.default, { obj: object, key: i });
	      });
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      return _react2.default.createElement(
	        'div',
	        null,
	        'CCA Plants List',
	        _react2.default.createElement(
	          'table',
	          { className: 'table table-striped', style: { marginTop: 20 } },
	          _react2.default.createElement(
	            'thead',
	            null,
	            _react2.default.createElement(
	              'tr',
	              null,
	              _react2.default.createElement(
	                'th',
	                null,
	                'Plant ID'
	              ),
	              _react2.default.createElement(
	                'th',
	                null,
	                'Plant Name'
	              ),
	              _react2.default.createElement(
	                'th',
	                null,
	                'Plant Code'
	              ),
	              _react2.default.createElement(
	                'th',
	                null,
	                'Created'
	              ),
	              _react2.default.createElement(
	                'th',
	                { colSpan: '2' },
	                'Action'
	              )
	            )
	          ),
	          _react2.default.createElement(
	            'tbody',
	            null,
	            this.tabRow()
	          )
	        )
	      );
	    }
	  }]);
	  return Index;
	}(_react.Component);
	
	exports.default = Index;

/***/ }),
/* 548 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _getPrototypeOf = __webpack_require__(382);
	
	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);
	
	var _classCallCheck2 = __webpack_require__(386);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _createClass2 = __webpack_require__(387);
	
	var _createClass3 = _interopRequireDefault(_createClass2);
	
	var _possibleConstructorReturn2 = __webpack_require__(388);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(405);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _react = __webpack_require__(25);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactRouterDom = __webpack_require__(512);
	
	var _axios = __webpack_require__(439);
	
	var _axios2 = _interopRequireDefault(_axios);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var TableRow = function (_Component) {
	  (0, _inherits3.default)(TableRow, _Component);
	
	  function TableRow(props) {
	    (0, _classCallCheck3.default)(this, TableRow);
	
	    var _this = (0, _possibleConstructorReturn3.default)(this, (TableRow.__proto__ || (0, _getPrototypeOf2.default)(TableRow)).call(this, props));
	
	    _this.delete = _this.delete.bind(_this);
	    return _this;
	  }
	
	  (0, _createClass3.default)(TableRow, [{
	    key: 'delete',
	    value: function _delete() {
	      /* axios.get('http://localhost:5000/api/CcaPlants/'+this.props.obj.plantId)
	          .then(console.log('Deleted'))
	          .catch(err => console.log(err)) */
	      var params = 'plantId=' + this.props.obj.plantId + '&plantDescr=' + this.props.obj.plantDescr + '&plantCode=' + this.props.obj.plantCode + '&recCreated=' + this.props.obj.recCreated + '&recDatetime=2019-11-29T17:22:38';
	
	      var xhr = window.XMLHttpRequest ? new XMLHttpRequest() : new ActiveXObject("Microsoft.XMLHTTP");
	      xhr.open('DEL', '/CcaPlants/' + this.props.obj.plantId);
	      xhr.onreadystatechange = function () {
	        if (xhr.readyState > 3 && xhr.status == 200) {
	          success(xhr.responseText);
	        }
	      };
	      xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');
	      xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');
	      xhr.send(params);
	    }
	
	    //alert("Ini data :"+this.props.obj._id);
	
	  }, {
	    key: 'render',
	    value: function render() {
	      return _react2.default.createElement(
	        'tr',
	        null,
	        _react2.default.createElement(
	          'td',
	          null,
	          this.props.obj.plantId
	        ),
	        _react2.default.createElement(
	          'td',
	          null,
	          this.props.obj.plantDescr
	        ),
	        _react2.default.createElement(
	          'td',
	          null,
	          this.props.obj.plantCode
	        ),
	        _react2.default.createElement(
	          'td',
	          null,
	          this.props.obj.recCreated
	        ),
	        _react2.default.createElement(
	          'td',
	          null,
	          _react2.default.createElement(
	            _reactRouterDom.Link,
	            { to: "./edit/" + this.props.obj.plantId, className: 'btn btn-primary' },
	            'Edit'
	          )
	        ),
	        _react2.default.createElement(
	          'td',
	          null,
	          _react2.default.createElement(
	            'button',
	            { onClick: this.delete, className: 'btn btn-danger' },
	            'Delete'
	          )
	        )
	      );
	    }
	  }]);
	  return TableRow;
	}(_react.Component);
	
	exports.default = TableRow;

/***/ }),
/* 549 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _HomeContainer = __webpack_require__(550);
	
	var _HomeContainer2 = _interopRequireDefault(_HomeContainer);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	// Sync route definition
	
	exports.default = function (store) {
	  return {
	    path: 'cca_plants',
	    /*  Async getComponent is only invoked when route matches   */
	    getComponent: function getComponent(nextState, cb) {
	      /*  Webpack - use 'require.ensure' to create a split point
	          and embed an async module loader (jsonp) when bundling   */
	      !/* require.ensure */(function (require) {
	
	        /*  Return getComponent   */
	        cb(null, _HomeContainer2.default);
	
	        /* Webpack named bundle   */
	      }(__webpack_require__));
	    }
	  };
	};

/***/ }),
/* 550 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _getPrototypeOf = __webpack_require__(382);
	
	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);
	
	var _classCallCheck2 = __webpack_require__(386);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _createClass2 = __webpack_require__(387);
	
	var _createClass3 = _interopRequireDefault(_createClass2);
	
	var _possibleConstructorReturn2 = __webpack_require__(388);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(405);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _react = __webpack_require__(25);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _BaseContainer2 = __webpack_require__(474);
	
	var _BaseContainer3 = _interopRequireDefault(_BaseContainer2);
	
	var _reactRouterDom = __webpack_require__(512);
	
	var _AddForm = __webpack_require__(551);
	
	var _AddForm2 = _interopRequireDefault(_AddForm);
	
	var _EditForm = __webpack_require__(552);
	
	var _EditForm2 = _interopRequireDefault(_EditForm);
	
	var _TableView = __webpack_require__(557);
	
	var _TableView2 = _interopRequireDefault(_TableView);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var HomeContainer = function (_BaseContainer) {
	  (0, _inherits3.default)(HomeContainer, _BaseContainer);
	
	  function HomeContainer() {
	    (0, _classCallCheck3.default)(this, HomeContainer);
	    return (0, _possibleConstructorReturn3.default)(this, (HomeContainer.__proto__ || (0, _getPrototypeOf2.default)(HomeContainer)).call(this));
	  }
	
	  (0, _createClass3.default)(HomeContainer, [{
	    key: 'componentWillMount',
	    value: function componentWillMount() {
	      this.setState({
	        title: "Plant Area"
	      });
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      return _react2.default.createElement(
	        _reactRouterDom.BrowserRouter,
	        null,
	        _react2.default.createElement(
	          _reactRouterDom.Switch,
	          null,
	          _react2.default.createElement(_reactRouterDom.Route, { exact: true, path: '/Create', component: _AddForm2.default }),
	          _react2.default.createElement(_reactRouterDom.Route, { path: '/Edit/:id', component: _EditForm2.default }),
	          _react2.default.createElement(_reactRouterDom.Route, { path: '/View', component: _TableView2.default }),
	          _react2.default.createElement(_reactRouterDom.Route, { path: '/', component: _TableView2.default }),
	          _react2.default.createElement(_reactRouterDom.Route, { component: _AddForm2.default })
	        )
	      );
	    }
	  }]);
	  return HomeContainer;
	}(_BaseContainer3.default);
	
	exports.default = HomeContainer;

/***/ }),
/* 551 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _extends2 = __webpack_require__(313);
	
	var _extends3 = _interopRequireDefault(_extends2);
	
	var _getPrototypeOf = __webpack_require__(382);
	
	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);
	
	var _classCallCheck2 = __webpack_require__(386);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _createClass2 = __webpack_require__(387);
	
	var _createClass3 = _interopRequireDefault(_createClass2);
	
	var _possibleConstructorReturn2 = __webpack_require__(388);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(405);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _react = __webpack_require__(25);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _BaseContainer2 = __webpack_require__(474);
	
	var _BaseContainer3 = _interopRequireDefault(_BaseContainer2);
	
	var _ApiService = __webpack_require__(438);
	
	var _ApiService2 = _interopRequireDefault(_ApiService);
	
	var _UI = __webpack_require__(485);
	
	var _DataForm = __webpack_require__(538);
	
	var _DataForm2 = _interopRequireDefault(_DataForm);
	
	var _utils = __webpack_require__(476);
	
	var _reactRouterDom = __webpack_require__(512);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var TABS_DATA = [];
	var dateStr = "";
	var date = new Date();
	var plant_id = "";
	
	var AddForm = function (_BaseContainer) {
	  (0, _inherits3.default)(AddForm, _BaseContainer);
	
	  function AddForm(props) {
	    (0, _classCallCheck3.default)(this, AddForm);
	
	    var _this = (0, _possibleConstructorReturn3.default)(this, (AddForm.__proto__ || (0, _getPrototypeOf2.default)(AddForm)).call(this, props));
	
	    _this.fromBodyRender = _this.fromBodyRender.bind(_this);
	    _this.fromSubmit = _this.fromSubmit.bind(_this);
	    _this.state = {
	      isLoading: true
	    };
	    return _this;
	  }
	
	  (0, _createClass3.default)(AddForm, [{
	    key: 'componentWillMount',
	    value: function componentWillMount() {
	      this.setState({
	        title: "Plant Area"
	      });
	      dateStr = date.getFullYear() + "-" + ("00" + (date.getMonth() + 1)).slice(-2) + "-" + ("00" + date.getDate()).slice(-2) + "T" + ("00" + date.getHours()).slice(-2) + ":" + ("00" + date.getMinutes()).slice(-2) + ":" + ("00" + date.getSeconds()).slice(-2);
	      //alert(dateStr)
	    }
	
	    //--------------------------------------------------------------------//
	    //  Form Content Renderer
	    //--------------------------------------------------------------------//
	
	  }, {
	    key: '_renderContent',
	    value: function _renderContent() {
	      var _this2 = this;
	
	      var item = {
	        plantDescr: "",
	        plantCode: "",
	        grInterval: 0,
	        isInterval: 0,
	        useEwm: 0,
	        recCreated: dateStr,
	        recDatetime: dateStr
	      };
	
	      return _react2.default.createElement(_DataForm2.default, {
	        title: 'Add Plants',
	        hasCancel: true,
	        item: item,
	        bodyRender: this.fromBodyRender,
	        onSubmit: function onSubmit(itm) {
	          //var stsIns = false;
	          // insert cca_plants
	          _ApiService2.default.addCcaPlants(itm).then(function (res) {
	            if (!res) throw new Error(res.status);else _this2.fromSubmit(itm);
	            //console.log(JSON.stringify(itm));
	            //console.log(JSON.stringify(itm.plantId));
	            (0, _utils.alertMessage)({ message: 'Data ' + itm.plantDescr + ' added successfully.' });
	          }).catch(function (error) {
	            console.log('error: ' + error);
	            _ApiService2.default.fetchCcaPlantsLast().then(function (res) {
	              res.data.map(function (val) {
	                _ApiService2.default.deleteCcaPlants(val.plantId);
	              });
	            });
	            (0, _utils.alertMessage)({ message: 'Data ' + itm.plantDescr + ' added successfully.' });
	          });
	        },
	        onCancel: function onCancel(itm) {
	          alert("Data reset");
	        }
	      });
	    }
	  }, {
	    key: 'fromSubmit',
	    value: function fromSubmit(itm) {
	      // select cca_plants get last plantId
	      var isInterval = '' + itm.isInterval;
	      //var useWms = ''+itm.useWms;
	      var useEwm = '' + itm.useEwm;
	      var grInterval = parseInt(itm.grInterval);
	      _ApiService2.default.fetchCcaPlantsLast().then(function (res) {
	        res.data.map(function (val) {
	          // check and insert cca_plant_realtime
	          //ApiService.deleteCcaPlantRealtimes(val.plantId);
	          _ApiService2.default.addCcaPlantRealtimes({
	            "plantId": val.plantId,
	            "isInterval": isInterval,
	            "grInterval": grInterval
	          });
	
	          // check and insert cca_plant_wms
	          //ApiService.deleteCcaPlantWms(val.plantId);
	          _ApiService2.default.addCCcaPlantWms({
	            "plantId": val.plantId,
	            "useWms": useEwm
	          });
	
	          // check and insert cca_plant_ewm
	          //ApiService.deleteCcaPlantEwms(val.plantId);
	          _ApiService2.default.addCcaPlantEwms({
	            "plantId": val.plantId,
	            "useEwm": useEwm
	          });
	        });
	      });
	    }
	  }, {
	    key: 'fromBodyRender',
	    value: function fromBodyRender(options) {
	      var item = options.item,
	          binding = options.binding;
	
	      return _react2.default.createElement(
	        'div',
	        { className: 'row' },
	        _react2.default.createElement(
	          'div',
	          { className: 'col-6 col-sm-9' },
	          _react2.default.createElement(_UI.TextInput, (0, _extends3.default)({
	            placeHolder: 'Plant Name',
	            helpText: 'Plant Name'
	          }, binding("plantDescr")))
	        ),
	        _react2.default.createElement(
	          'div',
	          { className: 'col-6 col-sm-9' },
	          _react2.default.createElement(_UI.TextInput, (0, _extends3.default)({
	            placeHolder: 'Plant Code',
	            helpText: 'Plant Code'
	          }, binding("plantCode")))
	        ),
	        _react2.default.createElement(
	          'div',
	          { className: 'col-sm-4' },
	          _react2.default.createElement(_UI.CheckBox, (0, _extends3.default)({
	            placeHolder: 'GR does not use real-time data'
	          }, binding("isInterval")))
	        ),
	        _react2.default.createElement(
	          'div',
	          { className: 'col-xs-6 col-md-2' },
	          _react2.default.createElement(_UI.TextInput, (0, _extends3.default)({
	            placeHolder: 'Second(s)',
	            helpText: 'Number'
	          }, binding("grInterval")))
	        ),
	        _react2.default.createElement(
	          'div',
	          { className: 'col-sm-8' },
	          _react2.default.createElement(_UI.CheckBox, (0, _extends3.default)({
	            placeHolder: 'Using EWM System'
	          }, binding("useEwm")))
	        )
	      );
	    }
	  }]);
	  return AddForm;
	}(_BaseContainer3.default);
	
	exports.default = AddForm;

/***/ }),
/* 552 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _extends2 = __webpack_require__(313);
	
	var _extends3 = _interopRequireDefault(_extends2);
	
	var _regenerator = __webpack_require__(553);
	
	var _regenerator2 = _interopRequireDefault(_regenerator);
	
	var _asyncToGenerator2 = __webpack_require__(556);
	
	var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);
	
	var _getPrototypeOf = __webpack_require__(382);
	
	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);
	
	var _classCallCheck2 = __webpack_require__(386);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _createClass2 = __webpack_require__(387);
	
	var _createClass3 = _interopRequireDefault(_createClass2);
	
	var _possibleConstructorReturn2 = __webpack_require__(388);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(405);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _react = __webpack_require__(25);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _BaseContainer2 = __webpack_require__(474);
	
	var _BaseContainer3 = _interopRequireDefault(_BaseContainer2);
	
	var _ApiService = __webpack_require__(438);
	
	var _ApiService2 = _interopRequireDefault(_ApiService);
	
	var _UI = __webpack_require__(485);
	
	var _DataForm = __webpack_require__(538);
	
	var _DataForm2 = _interopRequireDefault(_DataForm);
	
	var _utils = __webpack_require__(476);
	
	var _reactRouterDom = __webpack_require__(512);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var dateStr = "";
	var date = new Date();
	var key_id = "";
	
	var EditForm = function (_BaseContainer) {
	  (0, _inherits3.default)(EditForm, _BaseContainer);
	
	  function EditForm(props) {
	    (0, _classCallCheck3.default)(this, EditForm);
	
	    var _this = (0, _possibleConstructorReturn3.default)(this, (EditForm.__proto__ || (0, _getPrototypeOf2.default)(EditForm)).call(this, props));
	
	    _this.fromBodyRender = _this.fromBodyRender.bind(_this);
	    _this.fromSubmit = _this.fromSubmit.bind(_this);
	    _this.state = {
	      dataState: null,
	      plantId: '',
	      plantDescr: '',
	      plantCode: '',
	      isInterval: '',
	      grInterval: '',
	      useWms: '',
	      useEwm: '',
	      recCreated: '',
	      recDatetime: '',
	      isLoading: true
	    };
	    return _this;
	  }
	
	  (0, _createClass3.default)(EditForm, [{
	    key: 'componentDidMount',
	    value: function () {
	      var _ref = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee() {
	        var _this2 = this;
	
	        var url, urlParams, idVal;
	        return _regenerator2.default.wrap(function _callee$(_context) {
	          while (1) {
	            switch (_context.prev = _context.next) {
	              case 0:
	                //componentWillMount() {
	                dateStr = date.getFullYear() + "-" + ("00" + (date.getMonth() + 1)).slice(-2) + "-" + ("00" + date.getDate()).slice(-2) + "T" + ("00" + date.getHours()).slice(-2) + ":" + ("00" + date.getMinutes()).slice(-2) + ":" + ("00" + date.getSeconds()).slice(-2);
	                //alert(dateStr)
	
	                url = window.location.search;
	                urlParams = new URLSearchParams(url);
	                idVal = urlParams.get('id');
	
	                key_id = idVal;
	                console.log(key_id);
	
	                _context.prev = 6;
	                _context.next = 9;
	                return _ApiService2.default.fetchGetCcaPlantbyId(key_id).then(function (response) {
	                  _this2.setState({
	                    dataState: response.data
	                  });
	                });
	
	              case 9:
	                //console.log(this.state.dataState);
	                if (this.state.dataState !== null) {
	                  {
	                    this.state.dataState.map(function (item) {
	                      _this2.setState({
	                        plantId: '' + item.plantId,
	                        plantDescr: '' + item.plantDescr,
	                        plantCode: '' + item.plantCode,
	                        isInterval: '' + item.isInterval,
	                        grInterval: '' + item.grInterval,
	                        useWms: '' + item.useWms,
	                        useEwm: '' + item.useEwm,
	                        recCreated: dateStr,
	                        recDatetime: dateStr
	                      });
	                    });
	                  }
	                }
	                _context.next = 15;
	                break;
	
	              case 12:
	                _context.prev = 12;
	                _context.t0 = _context['catch'](6);
	
	                console.log("Error fetching data-----------", _context.t0);
	
	              case 15:
	              case 'end':
	                return _context.stop();
	            }
	          }
	        }, _callee, this, [[6, 12]]);
	      }));
	
	      function componentDidMount() {
	        return _ref.apply(this, arguments);
	      }
	
	      return componentDidMount;
	    }()
	
	    //--------------------------------------------------------------------//
	    //  Form Content Renderer
	    //--------------------------------------------------------------------//
	
	  }, {
	    key: '_renderContent',
	    value: function _renderContent() {
	      var _this3 = this;
	
	      if (this.state.plantDescr) {
	        var paramsId = parseInt(key_id, 10); // 10 Decimal
	        var item = {
	          plantId: paramsId,
	          plantDescr: this.state.plantDescr,
	          plantCode: this.state.plantCode,
	          grInterval: this.state.grInterval,
	          isInterval: this.state.isInterval,
	          useWms: this.state.useWms,
	          useEwm: this.state.useEwm,
	          recCreated: this.state.recCreated,
	          recDatetime: this.state.recDatetime
	        };
	        console.log(this.state.plantDescr);
	
	        return _react2.default.createElement(_DataForm2.default, {
	          title: 'Edit Plants',
	          hasCancel: true,
	          item: item,
	          bodyRender: this.fromBodyRender,
	          onSubmit: function onSubmit(itm) {
	            // insert cca_plants
	            _ApiService2.default.editCcaPlants(itm.plantId, itm).then(function (res) {
	              if (!res) throw new Error(res.status);else _this3.fromSubmit(itm);
	              _this3.props.history.push("/View");
	              (0, _utils.alertMessage)({ message: 'Data ' + itm.plantDescr + ' update successfully.' });
	            });
	            //console.log(JSON.stringify(itm));
	            //console.log(JSON.stringify(itm.plantId));
	          },
	          onCancel: function onCancel(itm) {
	            alert("Data reset");
	          }
	        });
	      }
	    }
	  }, {
	    key: 'fromSubmit',
	    value: function fromSubmit(itm) {
	      // select cca_plants get last plantId
	      var isInterval = '' + itm.isInterval;
	      var useWms = '' + itm.useWms;
	      var useEwm = '' + itm.useEwm;
	      var grInterval = parseInt(itm.grInterval);
	      _ApiService2.default.fetchCcaPlantsLast().then(function (res) {
	        res.data.map(function (val) {
	          // check and insert cca_plant_realtime
	          _ApiService2.default.deleteCcaPlantRealtimes(val.plantId);
	          _ApiService2.default.addCcaPlantRealtimes({
	            "plantId": val.plantId,
	            "isInterval": isInterval,
	            "grInterval": grInterval
	          });
	
	          // check and insert cca_plant_wms
	          _ApiService2.default.deleteCcaPlantWms(val.plantId);
	          _ApiService2.default.addCCcaPlantWms({
	            "plantId": val.plantId,
	            "useWms": useWms
	          });
	
	          // check and insert cca_plant_ewm
	          _ApiService2.default.deleteCcaPlantEwms(val.plantId);
	          _ApiService2.default.addCcaPlantEwms({
	            "plantId": val.plantId,
	            "useEwm": useEwm
	          });
	        });
	      });
	    }
	  }, {
	    key: 'fromBodyRender',
	    value: function fromBodyRender(options) {
	      var item = options.item,
	          binding = options.binding;
	
	      return _react2.default.createElement(
	        'div',
	        { className: 'row' },
	        _react2.default.createElement(
	          'div',
	          { className: 'col-xs-3 col-md-5' },
	          _react2.default.createElement(_UI.TextInput, (0, _extends3.default)({
	            placeHolder: 'Plant Name',
	            helpText: 'Plant Name'
	          }, binding("plantDescr")))
	        ),
	        _react2.default.createElement(
	          'div',
	          { className: 'col-xs-3 col-md-5' },
	          _react2.default.createElement(_UI.TextInput, (0, _extends3.default)({
	            placeHolder: 'Plant Code',
	            helpText: 'Plant Code'
	          }, binding("plantCode")))
	        ),
	        _react2.default.createElement(
	          'div',
	          { className: 'col-sm-4' },
	          _react2.default.createElement(_UI.CheckBox, (0, _extends3.default)({
	            placeHolder: 'GR does not use real-time data'
	          }, binding("isInterval")))
	        ),
	        _react2.default.createElement(
	          'div',
	          { className: 'col-xs-6 col-md-2' },
	          _react2.default.createElement(_UI.TextInput, (0, _extends3.default)({
	            placeHolder: 'Second(s)',
	            helpText: 'Number'
	          }, binding("grInterval")))
	        ),
	        _react2.default.createElement(
	          'div',
	          { className: 'col-sm-8' },
	          _react2.default.createElement(_UI.CheckBox, (0, _extends3.default)({
	            placeHolder: 'Using EWM System'
	          }, binding("useEwm")))
	        )
	      );
	    }
	  }]);
	  return EditForm;
	}(_BaseContainer3.default);
	
	exports.default = EditForm;

/***/ }),
/* 553 */
/***/ (function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(554);


/***/ }),
/* 554 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2014-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 */
	
	// This method of obtaining a reference to the global object needs to be
	// kept identical to the way it is obtained in runtime.js
	var g = (function() { return this })() || Function("return this")();
	
	// Use `getOwnPropertyNames` because not all browsers support calling
	// `hasOwnProperty` on the global `self` object in a worker. See #183.
	var hadRuntime = g.regeneratorRuntime &&
	  Object.getOwnPropertyNames(g).indexOf("regeneratorRuntime") >= 0;
	
	// Save the old regeneratorRuntime in case it needs to be restored later.
	var oldRuntime = hadRuntime && g.regeneratorRuntime;
	
	// Force reevalutation of runtime.js.
	g.regeneratorRuntime = undefined;
	
	module.exports = __webpack_require__(555);
	
	if (hadRuntime) {
	  // Restore the original runtime.
	  g.regeneratorRuntime = oldRuntime;
	} else {
	  // Remove the global property added by runtime.js.
	  try {
	    delete g.regeneratorRuntime;
	  } catch(e) {
	    g.regeneratorRuntime = undefined;
	  }
	}


/***/ }),
/* 555 */
/***/ (function(module, exports) {

	/**
	 * Copyright (c) 2014-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 */
	
	!(function(global) {
	  "use strict";
	
	  var Op = Object.prototype;
	  var hasOwn = Op.hasOwnProperty;
	  var undefined; // More compressible than void 0.
	  var $Symbol = typeof Symbol === "function" ? Symbol : {};
	  var iteratorSymbol = $Symbol.iterator || "@@iterator";
	  var asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator";
	  var toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag";
	
	  var inModule = typeof module === "object";
	  var runtime = global.regeneratorRuntime;
	  if (runtime) {
	    if (inModule) {
	      // If regeneratorRuntime is defined globally and we're in a module,
	      // make the exports object identical to regeneratorRuntime.
	      module.exports = runtime;
	    }
	    // Don't bother evaluating the rest of this file if the runtime was
	    // already defined globally.
	    return;
	  }
	
	  // Define the runtime globally (as expected by generated code) as either
	  // module.exports (if we're in a module) or a new, empty object.
	  runtime = global.regeneratorRuntime = inModule ? module.exports : {};
	
	  function wrap(innerFn, outerFn, self, tryLocsList) {
	    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.
	    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;
	    var generator = Object.create(protoGenerator.prototype);
	    var context = new Context(tryLocsList || []);
	
	    // The ._invoke method unifies the implementations of the .next,
	    // .throw, and .return methods.
	    generator._invoke = makeInvokeMethod(innerFn, self, context);
	
	    return generator;
	  }
	  runtime.wrap = wrap;
	
	  // Try/catch helper to minimize deoptimizations. Returns a completion
	  // record like context.tryEntries[i].completion. This interface could
	  // have been (and was previously) designed to take a closure to be
	  // invoked without arguments, but in all the cases we care about we
	  // already have an existing method we want to call, so there's no need
	  // to create a new function object. We can even get away with assuming
	  // the method takes exactly one argument, since that happens to be true
	  // in every case, so we don't have to touch the arguments object. The
	  // only additional allocation required is the completion record, which
	  // has a stable shape and so hopefully should be cheap to allocate.
	  function tryCatch(fn, obj, arg) {
	    try {
	      return { type: "normal", arg: fn.call(obj, arg) };
	    } catch (err) {
	      return { type: "throw", arg: err };
	    }
	  }
	
	  var GenStateSuspendedStart = "suspendedStart";
	  var GenStateSuspendedYield = "suspendedYield";
	  var GenStateExecuting = "executing";
	  var GenStateCompleted = "completed";
	
	  // Returning this object from the innerFn has the same effect as
	  // breaking out of the dispatch switch statement.
	  var ContinueSentinel = {};
	
	  // Dummy constructor functions that we use as the .constructor and
	  // .constructor.prototype properties for functions that return Generator
	  // objects. For full spec compliance, you may wish to configure your
	  // minifier not to mangle the names of these two functions.
	  function Generator() {}
	  function GeneratorFunction() {}
	  function GeneratorFunctionPrototype() {}
	
	  // This is a polyfill for %IteratorPrototype% for environments that
	  // don't natively support it.
	  var IteratorPrototype = {};
	  IteratorPrototype[iteratorSymbol] = function () {
	    return this;
	  };
	
	  var getProto = Object.getPrototypeOf;
	  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));
	  if (NativeIteratorPrototype &&
	      NativeIteratorPrototype !== Op &&
	      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {
	    // This environment has a native %IteratorPrototype%; use it instead
	    // of the polyfill.
	    IteratorPrototype = NativeIteratorPrototype;
	  }
	
	  var Gp = GeneratorFunctionPrototype.prototype =
	    Generator.prototype = Object.create(IteratorPrototype);
	  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;
	  GeneratorFunctionPrototype.constructor = GeneratorFunction;
	  GeneratorFunctionPrototype[toStringTagSymbol] =
	    GeneratorFunction.displayName = "GeneratorFunction";
	
	  // Helper for defining the .next, .throw, and .return methods of the
	  // Iterator interface in terms of a single ._invoke method.
	  function defineIteratorMethods(prototype) {
	    ["next", "throw", "return"].forEach(function(method) {
	      prototype[method] = function(arg) {
	        return this._invoke(method, arg);
	      };
	    });
	  }
	
	  runtime.isGeneratorFunction = function(genFun) {
	    var ctor = typeof genFun === "function" && genFun.constructor;
	    return ctor
	      ? ctor === GeneratorFunction ||
	        // For the native GeneratorFunction constructor, the best we can
	        // do is to check its .name property.
	        (ctor.displayName || ctor.name) === "GeneratorFunction"
	      : false;
	  };
	
	  runtime.mark = function(genFun) {
	    if (Object.setPrototypeOf) {
	      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);
	    } else {
	      genFun.__proto__ = GeneratorFunctionPrototype;
	      if (!(toStringTagSymbol in genFun)) {
	        genFun[toStringTagSymbol] = "GeneratorFunction";
	      }
	    }
	    genFun.prototype = Object.create(Gp);
	    return genFun;
	  };
	
	  // Within the body of any async function, `await x` is transformed to
	  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test
	  // `hasOwn.call(value, "__await")` to determine if the yielded value is
	  // meant to be awaited.
	  runtime.awrap = function(arg) {
	    return { __await: arg };
	  };
	
	  function AsyncIterator(generator) {
	    function invoke(method, arg, resolve, reject) {
	      var record = tryCatch(generator[method], generator, arg);
	      if (record.type === "throw") {
	        reject(record.arg);
	      } else {
	        var result = record.arg;
	        var value = result.value;
	        if (value &&
	            typeof value === "object" &&
	            hasOwn.call(value, "__await")) {
	          return Promise.resolve(value.__await).then(function(value) {
	            invoke("next", value, resolve, reject);
	          }, function(err) {
	            invoke("throw", err, resolve, reject);
	          });
	        }
	
	        return Promise.resolve(value).then(function(unwrapped) {
	          // When a yielded Promise is resolved, its final value becomes
	          // the .value of the Promise<{value,done}> result for the
	          // current iteration. If the Promise is rejected, however, the
	          // result for this iteration will be rejected with the same
	          // reason. Note that rejections of yielded Promises are not
	          // thrown back into the generator function, as is the case
	          // when an awaited Promise is rejected. This difference in
	          // behavior between yield and await is important, because it
	          // allows the consumer to decide what to do with the yielded
	          // rejection (swallow it and continue, manually .throw it back
	          // into the generator, abandon iteration, whatever). With
	          // await, by contrast, there is no opportunity to examine the
	          // rejection reason outside the generator function, so the
	          // only option is to throw it from the await expression, and
	          // let the generator function handle the exception.
	          result.value = unwrapped;
	          resolve(result);
	        }, reject);
	      }
	    }
	
	    var previousPromise;
	
	    function enqueue(method, arg) {
	      function callInvokeWithMethodAndArg() {
	        return new Promise(function(resolve, reject) {
	          invoke(method, arg, resolve, reject);
	        });
	      }
	
	      return previousPromise =
	        // If enqueue has been called before, then we want to wait until
	        // all previous Promises have been resolved before calling invoke,
	        // so that results are always delivered in the correct order. If
	        // enqueue has not been called before, then it is important to
	        // call invoke immediately, without waiting on a callback to fire,
	        // so that the async generator function has the opportunity to do
	        // any necessary setup in a predictable way. This predictability
	        // is why the Promise constructor synchronously invokes its
	        // executor callback, and why async functions synchronously
	        // execute code before the first await. Since we implement simple
	        // async functions in terms of async generators, it is especially
	        // important to get this right, even though it requires care.
	        previousPromise ? previousPromise.then(
	          callInvokeWithMethodAndArg,
	          // Avoid propagating failures to Promises returned by later
	          // invocations of the iterator.
	          callInvokeWithMethodAndArg
	        ) : callInvokeWithMethodAndArg();
	    }
	
	    // Define the unified helper method that is used to implement .next,
	    // .throw, and .return (see defineIteratorMethods).
	    this._invoke = enqueue;
	  }
	
	  defineIteratorMethods(AsyncIterator.prototype);
	  AsyncIterator.prototype[asyncIteratorSymbol] = function () {
	    return this;
	  };
	  runtime.AsyncIterator = AsyncIterator;
	
	  // Note that simple async functions are implemented on top of
	  // AsyncIterator objects; they just return a Promise for the value of
	  // the final result produced by the iterator.
	  runtime.async = function(innerFn, outerFn, self, tryLocsList) {
	    var iter = new AsyncIterator(
	      wrap(innerFn, outerFn, self, tryLocsList)
	    );
	
	    return runtime.isGeneratorFunction(outerFn)
	      ? iter // If outerFn is a generator, return the full iterator.
	      : iter.next().then(function(result) {
	          return result.done ? result.value : iter.next();
	        });
	  };
	
	  function makeInvokeMethod(innerFn, self, context) {
	    var state = GenStateSuspendedStart;
	
	    return function invoke(method, arg) {
	      if (state === GenStateExecuting) {
	        throw new Error("Generator is already running");
	      }
	
	      if (state === GenStateCompleted) {
	        if (method === "throw") {
	          throw arg;
	        }
	
	        // Be forgiving, per 25.3.3.3.3 of the spec:
	        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume
	        return doneResult();
	      }
	
	      context.method = method;
	      context.arg = arg;
	
	      while (true) {
	        var delegate = context.delegate;
	        if (delegate) {
	          var delegateResult = maybeInvokeDelegate(delegate, context);
	          if (delegateResult) {
	            if (delegateResult === ContinueSentinel) continue;
	            return delegateResult;
	          }
	        }
	
	        if (context.method === "next") {
	          // Setting context._sent for legacy support of Babel's
	          // function.sent implementation.
	          context.sent = context._sent = context.arg;
	
	        } else if (context.method === "throw") {
	          if (state === GenStateSuspendedStart) {
	            state = GenStateCompleted;
	            throw context.arg;
	          }
	
	          context.dispatchException(context.arg);
	
	        } else if (context.method === "return") {
	          context.abrupt("return", context.arg);
	        }
	
	        state = GenStateExecuting;
	
	        var record = tryCatch(innerFn, self, context);
	        if (record.type === "normal") {
	          // If an exception is thrown from innerFn, we leave state ===
	          // GenStateExecuting and loop back for another invocation.
	          state = context.done
	            ? GenStateCompleted
	            : GenStateSuspendedYield;
	
	          if (record.arg === ContinueSentinel) {
	            continue;
	          }
	
	          return {
	            value: record.arg,
	            done: context.done
	          };
	
	        } else if (record.type === "throw") {
	          state = GenStateCompleted;
	          // Dispatch the exception by looping back around to the
	          // context.dispatchException(context.arg) call above.
	          context.method = "throw";
	          context.arg = record.arg;
	        }
	      }
	    };
	  }
	
	  // Call delegate.iterator[context.method](context.arg) and handle the
	  // result, either by returning a { value, done } result from the
	  // delegate iterator, or by modifying context.method and context.arg,
	  // setting context.delegate to null, and returning the ContinueSentinel.
	  function maybeInvokeDelegate(delegate, context) {
	    var method = delegate.iterator[context.method];
	    if (method === undefined) {
	      // A .throw or .return when the delegate iterator has no .throw
	      // method always terminates the yield* loop.
	      context.delegate = null;
	
	      if (context.method === "throw") {
	        if (delegate.iterator.return) {
	          // If the delegate iterator has a return method, give it a
	          // chance to clean up.
	          context.method = "return";
	          context.arg = undefined;
	          maybeInvokeDelegate(delegate, context);
	
	          if (context.method === "throw") {
	            // If maybeInvokeDelegate(context) changed context.method from
	            // "return" to "throw", let that override the TypeError below.
	            return ContinueSentinel;
	          }
	        }
	
	        context.method = "throw";
	        context.arg = new TypeError(
	          "The iterator does not provide a 'throw' method");
	      }
	
	      return ContinueSentinel;
	    }
	
	    var record = tryCatch(method, delegate.iterator, context.arg);
	
	    if (record.type === "throw") {
	      context.method = "throw";
	      context.arg = record.arg;
	      context.delegate = null;
	      return ContinueSentinel;
	    }
	
	    var info = record.arg;
	
	    if (! info) {
	      context.method = "throw";
	      context.arg = new TypeError("iterator result is not an object");
	      context.delegate = null;
	      return ContinueSentinel;
	    }
	
	    if (info.done) {
	      // Assign the result of the finished delegate to the temporary
	      // variable specified by delegate.resultName (see delegateYield).
	      context[delegate.resultName] = info.value;
	
	      // Resume execution at the desired location (see delegateYield).
	      context.next = delegate.nextLoc;
	
	      // If context.method was "throw" but the delegate handled the
	      // exception, let the outer generator proceed normally. If
	      // context.method was "next", forget context.arg since it has been
	      // "consumed" by the delegate iterator. If context.method was
	      // "return", allow the original .return call to continue in the
	      // outer generator.
	      if (context.method !== "return") {
	        context.method = "next";
	        context.arg = undefined;
	      }
	
	    } else {
	      // Re-yield the result returned by the delegate method.
	      return info;
	    }
	
	    // The delegate iterator is finished, so forget it and continue with
	    // the outer generator.
	    context.delegate = null;
	    return ContinueSentinel;
	  }
	
	  // Define Generator.prototype.{next,throw,return} in terms of the
	  // unified ._invoke helper method.
	  defineIteratorMethods(Gp);
	
	  Gp[toStringTagSymbol] = "Generator";
	
	  // A Generator should always return itself as the iterator object when the
	  // @@iterator function is called on it. Some browsers' implementations of the
	  // iterator prototype chain incorrectly implement this, causing the Generator
	  // object to not be returned from this call. This ensures that doesn't happen.
	  // See https://github.com/facebook/regenerator/issues/274 for more details.
	  Gp[iteratorSymbol] = function() {
	    return this;
	  };
	
	  Gp.toString = function() {
	    return "[object Generator]";
	  };
	
	  function pushTryEntry(locs) {
	    var entry = { tryLoc: locs[0] };
	
	    if (1 in locs) {
	      entry.catchLoc = locs[1];
	    }
	
	    if (2 in locs) {
	      entry.finallyLoc = locs[2];
	      entry.afterLoc = locs[3];
	    }
	
	    this.tryEntries.push(entry);
	  }
	
	  function resetTryEntry(entry) {
	    var record = entry.completion || {};
	    record.type = "normal";
	    delete record.arg;
	    entry.completion = record;
	  }
	
	  function Context(tryLocsList) {
	    // The root entry object (effectively a try statement without a catch
	    // or a finally block) gives us a place to store values thrown from
	    // locations where there is no enclosing try statement.
	    this.tryEntries = [{ tryLoc: "root" }];
	    tryLocsList.forEach(pushTryEntry, this);
	    this.reset(true);
	  }
	
	  runtime.keys = function(object) {
	    var keys = [];
	    for (var key in object) {
	      keys.push(key);
	    }
	    keys.reverse();
	
	    // Rather than returning an object with a next method, we keep
	    // things simple and return the next function itself.
	    return function next() {
	      while (keys.length) {
	        var key = keys.pop();
	        if (key in object) {
	          next.value = key;
	          next.done = false;
	          return next;
	        }
	      }
	
	      // To avoid creating an additional object, we just hang the .value
	      // and .done properties off the next function object itself. This
	      // also ensures that the minifier will not anonymize the function.
	      next.done = true;
	      return next;
	    };
	  };
	
	  function values(iterable) {
	    if (iterable) {
	      var iteratorMethod = iterable[iteratorSymbol];
	      if (iteratorMethod) {
	        return iteratorMethod.call(iterable);
	      }
	
	      if (typeof iterable.next === "function") {
	        return iterable;
	      }
	
	      if (!isNaN(iterable.length)) {
	        var i = -1, next = function next() {
	          while (++i < iterable.length) {
	            if (hasOwn.call(iterable, i)) {
	              next.value = iterable[i];
	              next.done = false;
	              return next;
	            }
	          }
	
	          next.value = undefined;
	          next.done = true;
	
	          return next;
	        };
	
	        return next.next = next;
	      }
	    }
	
	    // Return an iterator with no values.
	    return { next: doneResult };
	  }
	  runtime.values = values;
	
	  function doneResult() {
	    return { value: undefined, done: true };
	  }
	
	  Context.prototype = {
	    constructor: Context,
	
	    reset: function(skipTempReset) {
	      this.prev = 0;
	      this.next = 0;
	      // Resetting context._sent for legacy support of Babel's
	      // function.sent implementation.
	      this.sent = this._sent = undefined;
	      this.done = false;
	      this.delegate = null;
	
	      this.method = "next";
	      this.arg = undefined;
	
	      this.tryEntries.forEach(resetTryEntry);
	
	      if (!skipTempReset) {
	        for (var name in this) {
	          // Not sure about the optimal order of these conditions:
	          if (name.charAt(0) === "t" &&
	              hasOwn.call(this, name) &&
	              !isNaN(+name.slice(1))) {
	            this[name] = undefined;
	          }
	        }
	      }
	    },
	
	    stop: function() {
	      this.done = true;
	
	      var rootEntry = this.tryEntries[0];
	      var rootRecord = rootEntry.completion;
	      if (rootRecord.type === "throw") {
	        throw rootRecord.arg;
	      }
	
	      return this.rval;
	    },
	
	    dispatchException: function(exception) {
	      if (this.done) {
	        throw exception;
	      }
	
	      var context = this;
	      function handle(loc, caught) {
	        record.type = "throw";
	        record.arg = exception;
	        context.next = loc;
	
	        if (caught) {
	          // If the dispatched exception was caught by a catch block,
	          // then let that catch block handle the exception normally.
	          context.method = "next";
	          context.arg = undefined;
	        }
	
	        return !! caught;
	      }
	
	      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
	        var entry = this.tryEntries[i];
	        var record = entry.completion;
	
	        if (entry.tryLoc === "root") {
	          // Exception thrown outside of any try block that could handle
	          // it, so set the completion value of the entire function to
	          // throw the exception.
	          return handle("end");
	        }
	
	        if (entry.tryLoc <= this.prev) {
	          var hasCatch = hasOwn.call(entry, "catchLoc");
	          var hasFinally = hasOwn.call(entry, "finallyLoc");
	
	          if (hasCatch && hasFinally) {
	            if (this.prev < entry.catchLoc) {
	              return handle(entry.catchLoc, true);
	            } else if (this.prev < entry.finallyLoc) {
	              return handle(entry.finallyLoc);
	            }
	
	          } else if (hasCatch) {
	            if (this.prev < entry.catchLoc) {
	              return handle(entry.catchLoc, true);
	            }
	
	          } else if (hasFinally) {
	            if (this.prev < entry.finallyLoc) {
	              return handle(entry.finallyLoc);
	            }
	
	          } else {
	            throw new Error("try statement without catch or finally");
	          }
	        }
	      }
	    },
	
	    abrupt: function(type, arg) {
	      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
	        var entry = this.tryEntries[i];
	        if (entry.tryLoc <= this.prev &&
	            hasOwn.call(entry, "finallyLoc") &&
	            this.prev < entry.finallyLoc) {
	          var finallyEntry = entry;
	          break;
	        }
	      }
	
	      if (finallyEntry &&
	          (type === "break" ||
	           type === "continue") &&
	          finallyEntry.tryLoc <= arg &&
	          arg <= finallyEntry.finallyLoc) {
	        // Ignore the finally entry if control is not jumping to a
	        // location outside the try/catch block.
	        finallyEntry = null;
	      }
	
	      var record = finallyEntry ? finallyEntry.completion : {};
	      record.type = type;
	      record.arg = arg;
	
	      if (finallyEntry) {
	        this.method = "next";
	        this.next = finallyEntry.finallyLoc;
	        return ContinueSentinel;
	      }
	
	      return this.complete(record);
	    },
	
	    complete: function(record, afterLoc) {
	      if (record.type === "throw") {
	        throw record.arg;
	      }
	
	      if (record.type === "break" ||
	          record.type === "continue") {
	        this.next = record.arg;
	      } else if (record.type === "return") {
	        this.rval = this.arg = record.arg;
	        this.method = "return";
	        this.next = "end";
	      } else if (record.type === "normal" && afterLoc) {
	        this.next = afterLoc;
	      }
	
	      return ContinueSentinel;
	    },
	
	    finish: function(finallyLoc) {
	      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
	        var entry = this.tryEntries[i];
	        if (entry.finallyLoc === finallyLoc) {
	          this.complete(entry.completion, entry.afterLoc);
	          resetTryEntry(entry);
	          return ContinueSentinel;
	        }
	      }
	    },
	
	    "catch": function(tryLoc) {
	      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
	        var entry = this.tryEntries[i];
	        if (entry.tryLoc === tryLoc) {
	          var record = entry.completion;
	          if (record.type === "throw") {
	            var thrown = record.arg;
	            resetTryEntry(entry);
	          }
	          return thrown;
	        }
	      }
	
	      // The context.catch method must only be called with a location
	      // argument that corresponds to a known catch block.
	      throw new Error("illegal catch attempt");
	    },
	
	    delegateYield: function(iterable, resultName, nextLoc) {
	      this.delegate = {
	        iterator: values(iterable),
	        resultName: resultName,
	        nextLoc: nextLoc
	      };
	
	      if (this.method === "next") {
	        // Deliberately forget the last sent value so that we don't
	        // accidentally pass it on to the delegate.
	        this.arg = undefined;
	      }
	
	      return ContinueSentinel;
	    }
	  };
	})(
	  // In sloppy mode, unbound `this` refers to the global object, fallback to
	  // Function constructor if we're in global strict mode. That is sadly a form
	  // of indirect eval which violates Content Security Policy.
	  (function() { return this })() || Function("return this")()
	);


/***/ }),
/* 556 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	exports.__esModule = true;
	
	var _promise = __webpack_require__(342);
	
	var _promise2 = _interopRequireDefault(_promise);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = function (fn) {
	  return function () {
	    var gen = fn.apply(this, arguments);
	    return new _promise2.default(function (resolve, reject) {
	      function step(key, arg) {
	        try {
	          var info = gen[key](arg);
	          var value = info.value;
	        } catch (error) {
	          reject(error);
	          return;
	        }
	
	        if (info.done) {
	          resolve(value);
	        } else {
	          return _promise2.default.resolve(value).then(function (value) {
	            step("next", value);
	          }, function (err) {
	            step("throw", err);
	          });
	        }
	      }
	
	      return step("next");
	    });
	  };
	};

/***/ }),
/* 557 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _getPrototypeOf = __webpack_require__(382);
	
	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);
	
	var _classCallCheck2 = __webpack_require__(386);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _createClass2 = __webpack_require__(387);
	
	var _createClass3 = _interopRequireDefault(_createClass2);
	
	var _possibleConstructorReturn2 = __webpack_require__(388);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(405);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _react = __webpack_require__(25);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _BaseContainer2 = __webpack_require__(474);
	
	var _BaseContainer3 = _interopRequireDefault(_BaseContainer2);
	
	var _Table = __webpack_require__(503);
	
	var _Table2 = _interopRequireDefault(_Table);
	
	var _ApiService = __webpack_require__(438);
	
	var _ApiService2 = _interopRequireDefault(_ApiService);
	
	var _utils = __webpack_require__(476);
	
	var _reactRouterDom = __webpack_require__(512);
	
	var _EditForm = __webpack_require__(552);
	
	var _EditForm2 = _interopRequireDefault(_EditForm);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	//const TABLE_DATA = []
	var data = [];
	
	var TableView = function (_BaseContainer) {
	  (0, _inherits3.default)(TableView, _BaseContainer);
	
	  function TableView() {
	    var _ref;
	
	    var _temp, _this, _ret;
	
	    (0, _classCallCheck3.default)(this, TableView);
	
	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }
	
	    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = TableView.__proto__ || (0, _getPrototypeOf2.default)(TableView)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
	      header: [{
	        title: "#",
	        prop: "no"
	      }, {
	        title: "Plant Area",
	        prop: "plantDescr"
	      }, {
	        title: "Plant Code",
	        prop: "plantCode"
	      }, {
	        title: "Action"
	      }],
	      data: data
	
	      /* handleClick(value) {
	        alert('Click happened' + i);
	      } */
	
	    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
	  }
	
	  (0, _createClass3.default)(TableView, [{
	    key: 'onClick',
	    value: function onClick(i) {
	      alert('Click happened' + i);
	    }
	  }, {
	    key: 'componentWillMount',
	    value: function componentWillMount() {
	      var _this2 = this;
	
	      this.setState({
	        title: "Plant Area"
	      });
	      _ApiService2.default.fetchCcaPlants().then(function (response) {
	        _this2.setState({
	          data: response.data
	        });
	      });
	      this.showLoading(true);
	      setTimeout(function () {
	        _this2.showLoading(false);
	      }, 500);
	
	      if (data == null || data == undefined) {
	        this.showLoading(true);
	      } else {
	        setTimeout(function () {
	          _this2.showLoading(false);
	        }, 500);
	      }
	    }
	  }, {
	    key: '_renderContent',
	    value: function _renderContent() {
	      console.log(this.state);
	      return _react2.default.createElement(
	        'div',
	        { className: 'portlet body' },
	        _react2.default.createElement(_Table2.default, {
	          searchableProperties: ["plantDescr", "plantCode"],
	          hasTopBar: true,
	          headers: this.state.header,
	          data: this.state.data,
	          rowRender: this._renderRow,
	          onAddNewHandler: this.onAddNewClick.bind(this)
	        })
	      );
	    }
	  }, {
	    key: 'onAddNewClick',
	    value: function onAddNewClick() {
	      alert('OK');
	    }
	  }, {
	    key: '_renderRow',
	    value: function _renderRow(itm, i) {
	      return _react2.default.createElement(
	        'tr',
	        { key: i, className: 'odd gradeX' },
	        _react2.default.createElement(
	          'td',
	          null,
	          i + 1
	        ),
	        _react2.default.createElement(
	          'td',
	          null,
	          itm.plantDescr
	        ),
	        _react2.default.createElement(
	          'td',
	          null,
	          itm.plantCode
	        ),
	        _react2.default.createElement(
	          'td',
	          null,
	          _react2.default.createElement(
	            'div',
	            { className: 'btn-group' },
	            _react2.default.createElement(
	              'button',
	              { className: 'btn btn-xs green dropdown-toggle', type: 'button', 'data-toggle': 'dropdown', 'aria-expanded': 'false' },
	              ' Actions',
	              _react2.default.createElement('i', { className: 'fa fa-angle-down' })
	            ),
	            _react2.default.createElement(
	              'ul',
	              { className: 'dropdown-menu pull-left', role: 'menu' },
	              _react2.default.createElement(
	                'li',
	                null,
	                _react2.default.createElement(
	                  'a',
	                  { href: 'javascript:;' },
	                  _react2.default.createElement('i', { className: 'icon-flag' }),
	                  ' Area Name',
	                  _react2.default.createElement(
	                    'span',
	                    { className: 'badge badge-success' },
	                    '4'
	                  )
	                )
	              ),
	              _react2.default.createElement(
	                'li',
	                null,
	                _react2.default.createElement(
	                  'a',
	                  { href: 'javascript:;' },
	                  _react2.default.createElement('i', { className: 'glyphicon glyphicon-tags' }),
	                  ' Area Code '
	                )
	              ),
	              _react2.default.createElement(
	                'li',
	                { className: 'divider' },
	                ' '
	              ),
	              _react2.default.createElement(
	                'li',
	                null,
	                _react2.default.createElement(
	                  _reactRouterDom.Link,
	                  { to: '/Edit/Find?id=' + itm.plantId, id: 'btnEdit' },
	                  _react2.default.createElement('i', { className: 'glyphicon glyphicon-pencil' }),
	                  ' Edit '
	                )
	              ),
	              _react2.default.createElement(
	                'li',
	                null,
	                _react2.default.createElement(
	                  'a',
	                  { onClick: function onClick(e) {
	                      return handleClick(itm.plantId);
	                    } },
	                  _react2.default.createElement('i', { className: 'glyphicon glyphicon-trash' }),
	                  ' Delete '
	                )
	              )
	            )
	          )
	        )
	      );
	    }
	  }]);
	  return TableView;
	}(_BaseContainer3.default);
	
	function handleClick(val) {
	  var _this3 = this;
	
	  //alert(e)
	  var result = confirm("Are you sure...?");
	  if (result) {
	    _ApiService2.default.deleteCcaPlants(val);
	    _ApiService2.default.deleteCcaPlantRealtimes(val);
	    _ApiService2.default.deleteCcaPlantWms(val);
	    _ApiService2.default.deleteCcaPlantEwms(val).then(function (response) {
	      _this3.props.history.push("/View");
	      (0, _utils.alertMessage)({ message: 'Data ' + response.data.plantDescr + ' deleted successfully' });
	    });
	  }
	}
	
	exports.default = TableView;

/***/ }),
/* 558 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _HomeContainer = __webpack_require__(559);
	
	var _HomeContainer2 = _interopRequireDefault(_HomeContainer);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	// Sync route definition
	
	exports.default = function (store) {
	  return {
	    path: 'cca_lines',
	    /*  Async getComponent is only invoked when route matches   */
	    getComponent: function getComponent(nextState, cb) {
	      /*  Webpack - use 'require.ensure' to create a split point
	          and embed an async module loader (jsonp) when bundling   */
	      !/* require.ensure */(function (require) {
	
	        /*  Return getComponent   */
	        cb(null, _HomeContainer2.default);
	
	        /* Webpack named bundle   */
	      }(__webpack_require__));
	    }
	  };
	};

/***/ }),
/* 559 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _getPrototypeOf = __webpack_require__(382);
	
	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);
	
	var _classCallCheck2 = __webpack_require__(386);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _createClass2 = __webpack_require__(387);
	
	var _createClass3 = _interopRequireDefault(_createClass2);
	
	var _possibleConstructorReturn2 = __webpack_require__(388);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(405);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _react = __webpack_require__(25);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _BaseContainer2 = __webpack_require__(474);
	
	var _BaseContainer3 = _interopRequireDefault(_BaseContainer2);
	
	var _reactRouterDom = __webpack_require__(512);
	
	var _AddForm = __webpack_require__(560);
	
	var _AddForm2 = _interopRequireDefault(_AddForm);
	
	var _EditForm = __webpack_require__(561);
	
	var _EditForm2 = _interopRequireDefault(_EditForm);
	
	var _TableView = __webpack_require__(562);
	
	var _TableView2 = _interopRequireDefault(_TableView);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var HomeContainer = function (_BaseContainer) {
	  (0, _inherits3.default)(HomeContainer, _BaseContainer);
	
	  function HomeContainer() {
	    (0, _classCallCheck3.default)(this, HomeContainer);
	    return (0, _possibleConstructorReturn3.default)(this, (HomeContainer.__proto__ || (0, _getPrototypeOf2.default)(HomeContainer)).call(this));
	  }
	
	  (0, _createClass3.default)(HomeContainer, [{
	    key: 'componentWillMount',
	    value: function componentWillMount() {
	      this.setState({
	        title: "Lines"
	      });
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      return _react2.default.createElement(
	        _reactRouterDom.BrowserRouter,
	        null,
	        _react2.default.createElement(
	          _reactRouterDom.Switch,
	          null,
	          _react2.default.createElement(_reactRouterDom.Route, { exact: true, path: '/Create', component: _AddForm2.default }),
	          _react2.default.createElement(_reactRouterDom.Route, { path: '/Edit/:id', component: _EditForm2.default }),
	          _react2.default.createElement(_reactRouterDom.Route, { path: '/View', component: _TableView2.default }),
	          _react2.default.createElement(_reactRouterDom.Route, { path: '/', component: _TableView2.default }),
	          _react2.default.createElement(_reactRouterDom.Route, { component: _AddForm2.default })
	        )
	      );
	    }
	  }]);
	  return HomeContainer;
	}(_BaseContainer3.default);
	
	exports.default = HomeContainer;

/***/ }),
/* 560 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _extends2 = __webpack_require__(313);
	
	var _extends3 = _interopRequireDefault(_extends2);
	
	var _stringify = __webpack_require__(496);
	
	var _stringify2 = _interopRequireDefault(_stringify);
	
	var _regenerator = __webpack_require__(553);
	
	var _regenerator2 = _interopRequireDefault(_regenerator);
	
	var _asyncToGenerator2 = __webpack_require__(556);
	
	var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);
	
	var _getPrototypeOf = __webpack_require__(382);
	
	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);
	
	var _classCallCheck2 = __webpack_require__(386);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _createClass2 = __webpack_require__(387);
	
	var _createClass3 = _interopRequireDefault(_createClass2);
	
	var _possibleConstructorReturn2 = __webpack_require__(388);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(405);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _react = __webpack_require__(25);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _propTypes = __webpack_require__(415);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _BaseContainer2 = __webpack_require__(474);
	
	var _BaseContainer3 = _interopRequireDefault(_BaseContainer2);
	
	var _ApiService = __webpack_require__(438);
	
	var _ApiService2 = _interopRequireDefault(_ApiService);
	
	var _UI = __webpack_require__(485);
	
	var _DataForm = __webpack_require__(538);
	
	var _DataForm2 = _interopRequireDefault(_DataForm);
	
	var _utils = __webpack_require__(476);
	
	var _reactRouterDom = __webpack_require__(512);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var dateStr = "";
	var date = new Date();
	
	var AddForm = function (_BaseContainer) {
	  (0, _inherits3.default)(AddForm, _BaseContainer);
	
	  function AddForm(props) {
	    (0, _classCallCheck3.default)(this, AddForm);
	
	    var _this = (0, _possibleConstructorReturn3.default)(this, (AddForm.__proto__ || (0, _getPrototypeOf2.default)(AddForm)).call(this, props));
	
	    _this.fromBodyRender = _this.fromBodyRender.bind(_this);
	    _this.fromSubmit = _this.fromSubmit.bind(_this);
	    _this.state = {
	      dataState: '',
	      arrArea: [],
	      arrOnPrinter: [],
	      arrOffPrinter: [],
	      isLoading: true
	    };
	    return _this;
	  }
	
	  (0, _createClass3.default)(AddForm, [{
	    key: 'componentWillMount',
	    value: function componentWillMount() {
	      this.setState({
	        title: "Lines"
	      });
	      dateStr = date.getFullYear() + "-" + ("00" + (date.getMonth() + 1)).slice(-2) + "-" + ("00" + date.getDate()).slice(-2) + "T" + ("00" + date.getHours()).slice(-2) + ":" + ("00" + date.getMinutes()).slice(-2) + ":" + ("00" + date.getSeconds()).slice(-2);
	      //alert(dateStr)
	    }
	  }, {
	    key: 'componentDidMount',
	    value: function () {
	      var _ref = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee() {
	        var _this2 = this;
	
	        return _regenerator2.default.wrap(function _callee$(_context) {
	          while (1) {
	            switch (_context.prev = _context.next) {
	              case 0:
	                _context.prev = 0;
	                _context.next = 3;
	                return _ApiService2.default.fetchCcaPlants().then(function (response) {
	                  _this2.setState({
	                    arrArea: response.data
	                  });
	                });
	
	              case 3:
	                _context.next = 5;
	                return _ApiService2.default.fetchCcaOnlinePrinters().then(function (response) {
	                  _this2.setState({
	                    arrOnPrinter: response.data
	                  });
	                });
	
	              case 5:
	                _context.next = 7;
	                return _ApiService2.default.fetchCcaOfflinePrinters().then(function (response) {
	                  _this2.setState({
	                    arrOffPrinter: response.data
	                  });
	                });
	
	              case 7:
	                _context.next = 12;
	                break;
	
	              case 9:
	                _context.prev = 9;
	                _context.t0 = _context['catch'](0);
	
	                console.log("Error fetching data-----------", _context.t0);
	
	              case 12:
	              case 'end':
	                return _context.stop();
	            }
	          }
	        }, _callee, this, [[0, 9]]);
	      }));
	
	      function componentDidMount() {
	        return _ref.apply(this, arguments);
	      }
	
	      return componentDidMount;
	    }()
	
	    //--------------------------------------------------------------------//
	    //  Form Content Renderer
	    //--------------------------------------------------------------------//
	
	  }, {
	    key: '_renderContent',
	    value: function _renderContent() {
	      var _this3 = this;
	
	      var item = {
	        lineName: "",
	        lineCode: "",
	        recCreated: dateStr,
	        recDatetime: dateStr,
	        plantArea: 0,
	        onLinePrinter: 1,
	        offLinePrinter: 1,
	        isRepack: "",
	        ssccCode: ""
	      };
	
	      return _react2.default.createElement(_DataForm2.default, {
	        title: 'Add Lines',
	        hasCancel: true,
	        item: item,
	        bodyRender: this.fromBodyRender,
	        onSubmit: function onSubmit(itm) {
	          console.log(itm);
	          // insert cca_lines
	          _ApiService2.default.addCcaLines(itm).then(function (res) {
	            if (!res) throw new Error(res.status);else _this3.fromSubmit(itm);
	            //console.log(JSON.stringify(itm.plantId));
	            (0, _utils.alertMessage)({ message: 'Data ' + itm.lineName + ' added successfully.' });
	          });
	        },
	        onCancel: function onCancel(itm) {}
	      });
	    }
	  }, {
	    key: 'fromSubmit',
	    value: function fromSubmit(itm) {
	      // select cca_plants get last lineId
	      var isRepack = '' + itm.isRepack;
	      var ssccCode = '' + itm.ssccCode;
	      var plantId = parseInt(itm.plantArea);
	      _ApiService2.default.fetchCcaLinesLast().then(function (res) {
	        res.data.map(function (val) {
	          // check and insert cca_plant_line
	          //ApiService.deleteCcaPlantLines(val.lineId);
	          _ApiService2.default.addCcaPlantLines({
	            "plantId": plantId,
	            "lineId": val.lineId
	          });
	
	          // check and insert cca_line_repack
	          //ApiService.deleteCcaLineRepacks(val.lineId);
	          _ApiService2.default.addCcaLineRepacks({
	            "lineId": val.lineId,
	            "isRepack": isRepack,
	            "ssccCode": ssccCode
	          });
	          console.log((0, _stringify2.default)(val));
	        });
	      });
	    }
	  }, {
	    key: 'fromBodyRender',
	    value: function fromBodyRender(options) {
	      //const plantArea = arrArea;
	      var selArea = [];
	      {
	        this.state.arrArea.map(function (item) {
	          selArea.push({ title: item.plantDescr, value: item.plantId });
	        });
	      }
	      var selOnPrinter = [];
	      {
	        this.state.arrOnPrinter.map(function (item) {
	          selOnPrinter.push({ title: item.printerName, value: item.printerId });
	        });
	      }
	      var selOffPrinter = [];
	      {
	        this.state.arrOffPrinter.map(function (item) {
	          selOffPrinter.push({ title: item.printerName, value: item.printerId });
	        });
	      }
	      var item = options.item,
	          binding = options.binding;
	
	      return _react2.default.createElement(
	        'div',
	        { className: 'row' },
	        _react2.default.createElement(
	          'div',
	          { className: 'col-md-8' },
	          _react2.default.createElement(_UI.Select, (0, _extends3.default)({
	            placeHolder: 'Plant Area',
	            options: selArea
	          }, binding("plantArea")))
	        ),
	        _react2.default.createElement(
	          'div',
	          { className: 'col-md-8' },
	          _react2.default.createElement(_UI.TextInput, (0, _extends3.default)({
	            placeHolder: 'Line Name',
	            helpText: 'Line Name'
	          }, binding("lineName")))
	        ),
	        _react2.default.createElement(
	          'div',
	          { className: 'col-md-8' },
	          _react2.default.createElement(_UI.TextInput, (0, _extends3.default)({
	            placeHolder: 'Line Code',
	            helpText: 'Line Code'
	          }, binding("lineCode")))
	        ),
	        _react2.default.createElement(
	          'div',
	          { className: 'col-md-8' },
	          _react2.default.createElement(_UI.Select, (0, _extends3.default)({
	            placeHolder: 'Online Printer',
	            options: selOnPrinter
	          }, binding("onLinePrinter")))
	        ),
	        _react2.default.createElement(
	          'div',
	          { className: 'col-md-8' },
	          _react2.default.createElement(_UI.Select, (0, _extends3.default)({
	            placeHolder: 'Offline Printer',
	            options: selOffPrinter
	          }, binding("offLinePrinter")))
	        ),
	        _react2.default.createElement(
	          'div',
	          { className: 'col-sm-8' },
	          _react2.default.createElement(_UI.CheckBox, (0, _extends3.default)({
	            placeHolder: 'Repack'
	          }, binding("isRepack")))
	        ),
	        _react2.default.createElement(
	          'div',
	          { className: 'col-xs-6 col-md-2' },
	          _react2.default.createElement(_UI.TextInput, (0, _extends3.default)({
	            placeHolder: 'Repack SSCC Code',
	            helpText: 'Number'
	          }, binding("ssccCode")))
	        )
	      );
	    }
	  }]);
	  return AddForm;
	}(_BaseContainer3.default);
	
	exports.default = AddForm;

/***/ }),
/* 561 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _extends2 = __webpack_require__(313);
	
	var _extends3 = _interopRequireDefault(_extends2);
	
	var _regenerator = __webpack_require__(553);
	
	var _regenerator2 = _interopRequireDefault(_regenerator);
	
	var _asyncToGenerator2 = __webpack_require__(556);
	
	var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);
	
	var _getPrototypeOf = __webpack_require__(382);
	
	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);
	
	var _classCallCheck2 = __webpack_require__(386);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _createClass2 = __webpack_require__(387);
	
	var _createClass3 = _interopRequireDefault(_createClass2);
	
	var _possibleConstructorReturn2 = __webpack_require__(388);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(405);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _react = __webpack_require__(25);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _propTypes = __webpack_require__(415);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _BaseContainer2 = __webpack_require__(474);
	
	var _BaseContainer3 = _interopRequireDefault(_BaseContainer2);
	
	var _ApiService = __webpack_require__(438);
	
	var _ApiService2 = _interopRequireDefault(_ApiService);
	
	var _UI = __webpack_require__(485);
	
	var _DataForm = __webpack_require__(538);
	
	var _DataForm2 = _interopRequireDefault(_DataForm);
	
	var _utils = __webpack_require__(476);
	
	var _reactRouterDom = __webpack_require__(512);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var dateStr = "";
	var date = new Date();
	var key_id = "";
	
	var EditForm = function (_BaseContainer) {
	  (0, _inherits3.default)(EditForm, _BaseContainer);
	
	  function EditForm(props) {
	    (0, _classCallCheck3.default)(this, EditForm);
	
	    var _this = (0, _possibleConstructorReturn3.default)(this, (EditForm.__proto__ || (0, _getPrototypeOf2.default)(EditForm)).call(this, props));
	
	    _this.fromBodyRender = _this.fromBodyRender.bind(_this);
	    _this.fromSubmit = _this.fromSubmit.bind(_this);
	    _this.state = {
	      dataState: null,
	      arrArea: [],
	      arrOnPrinter: [],
	      arrOffPrinter: [],
	      plantId: '',
	      plantDescr: '',
	      plantCode: '',
	      plantArea: '',
	      lineId: '',
	      lineCode: '',
	      lineName: '',
	      isRepack: '',
	      ssccCode: '',
	      isLoading: true
	    };
	    return _this;
	  }
	
	  (0, _createClass3.default)(EditForm, [{
	    key: 'componentWillMount',
	    value: function componentWillMount() {
	      this.setState({
	        title: "Lines"
	      });
	      dateStr = date.getFullYear() + "-" + ("00" + (date.getMonth() + 1)).slice(-2) + "-" + ("00" + date.getDate()).slice(-2) + "T" + ("00" + date.getHours()).slice(-2) + ":" + ("00" + date.getMinutes()).slice(-2) + ":" + ("00" + date.getSeconds()).slice(-2);
	      //alert(dateStr)
	      var url = window.location.search;
	      var urlParams = new URLSearchParams(url);
	      var idVal = urlParams.get('id');
	      key_id = idVal;
	    }
	  }, {
	    key: 'componentDidMount',
	    value: function () {
	      var _ref = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee() {
	        var _this2 = this;
	
	        return _regenerator2.default.wrap(function _callee$(_context) {
	          while (1) {
	            switch (_context.prev = _context.next) {
	              case 0:
	                _context.prev = 0;
	                _context.next = 3;
	                return _ApiService2.default.fetchCcaLinesById(key_id).then(function (response) {
	                  _this2.setState({
	                    dataState: response.data
	                  });
	                });
	
	              case 3:
	                //console.log(this.state.dataState);
	                if (this.state.dataState !== null) {
	                  {
	                    this.state.dataState.map(function (item) {
	                      _this2.setState({
	                        plantId: '' + item.plantId,
	                        plantDescr: '' + item.plantDescr,
	                        plantCode: '' + item.plantCode,
	                        plantArea: '' + item.plantArea,
	                        lineId: '' + item.lineId,
	                        lineCode: '' + item.lineCode,
	                        lineName: '' + item.lineName,
	                        isRepack: '' + item.isRepack,
	                        ssccCode: '' + item.ssccCode
	                      });
	                    });
	                  }
	                }
	
	                _context.next = 6;
	                return _ApiService2.default.fetchCcaPlants().then(function (response) {
	                  _this2.setState({
	                    arrArea: response.data
	                  });
	                });
	
	              case 6:
	                _context.next = 8;
	                return _ApiService2.default.fetchCcaOnlinePrinters().then(function (response) {
	                  _this2.setState({
	                    arrOnPrinter: response.data
	                  });
	                });
	
	              case 8:
	                _context.next = 10;
	                return _ApiService2.default.fetchCcaOfflinePrinters().then(function (response) {
	                  _this2.setState({
	                    arrOffPrinter: response.data
	                  });
	                });
	
	              case 10:
	                _context.next = 15;
	                break;
	
	              case 12:
	                _context.prev = 12;
	                _context.t0 = _context['catch'](0);
	
	                console.log("Error fetching data-----------", _context.t0);
	
	              case 15:
	              case 'end':
	                return _context.stop();
	            }
	          }
	        }, _callee, this, [[0, 12]]);
	      }));
	
	      function componentDidMount() {
	        return _ref.apply(this, arguments);
	      }
	
	      return componentDidMount;
	    }()
	
	    //--------------------------------------------------------------------//
	    //  Form Content Renderer
	    //--------------------------------------------------------------------//
	
	  }, {
	    key: '_renderContent',
	    value: function _renderContent() {
	      var _this3 = this;
	
	      if (this.state.lineName) {
	        var paramsId = parseInt(key_id, 10); // 10 Decimal
	        var item = {
	          lineId: paramsId,
	          lineName: this.state.lineName,
	          lineCode: this.state.lineCode,
	          recCreated: dateStr,
	          recDatetime: dateStr,
	          plantArea: this.state.plantArea,
	          onLinePrinter: 1,
	          offLinePrinter: 1,
	          isRepack: this.state.isRepack,
	          ssccCode: this.state.ssccCode
	        };
	
	        return _react2.default.createElement(_DataForm2.default, {
	          title: 'Add Lines',
	          hasCancel: true,
	          item: item,
	          bodyRender: this.fromBodyRender,
	          onSubmit: function onSubmit(itm) {
	            console.log(itm);
	
	            // delete table
	            _ApiService2.default.deleteCcaPlantLines(paramsId);
	            _ApiService2.default.deleteCcaLineRepacks(paramsId);
	            // insert cca_lines
	            _ApiService2.default.editCcaLines(paramsId, itm).then(function (res) {
	              if (!res) throw new Error(res.status);else _this3.fromSubmit(itm);
	              //console.log(JSON.stringify(itm.plantId));
	              _this3.props.history.push("/View");
	              (0, _utils.alertMessage)({ message: 'Data ' + itm.lineName + ' update successfully.' });
	            });
	          },
	          onCancel: function onCancel(itm) {}
	        });
	      }
	    }
	  }, {
	    key: 'fromSubmit',
	    value: function fromSubmit(itm) {
	      // select cca_plants get last lineId
	      var isRepack = '' + itm.isRepack;
	      var ssccCode = '' + itm.ssccCode;
	      var plantId = parseInt(itm.plantArea);
	      var lineId = parseInt(itm.lineId);
	
	      // check and insert cca_plant_line
	      _ApiService2.default.addCcaPlantLines({
	        "plantId": plantId,
	        "lineId": lineId
	      });
	
	      // check and insert cca_line_repack
	      _ApiService2.default.addCcaLineRepacks({
	        "lineId": lineId,
	        "isRepack": isRepack,
	        "ssccCode": ssccCode
	      });
	      //console.log(JSON.stringify(val));
	    }
	  }, {
	    key: 'fromBodyRender',
	    value: function fromBodyRender(options) {
	      //const plantArea = arrArea;
	      var selArea = [];
	      {
	        this.state.arrArea.map(function (item) {
	          selArea.push({ title: item.plantDescr, value: item.plantId });
	        });
	      }
	      var selOnPrinter = [];
	      {
	        this.state.arrOnPrinter.map(function (item) {
	          selOnPrinter.push({ title: item.printerName, value: item.printerId });
	        });
	      }
	      var selOffPrinter = [];
	      {
	        this.state.arrOffPrinter.map(function (item) {
	          selOffPrinter.push({ title: item.printerName, value: item.printerId });
	        });
	      }
	      var item = options.item,
	          binding = options.binding;
	
	      return _react2.default.createElement(
	        'div',
	        { className: 'row' },
	        _react2.default.createElement(
	          'div',
	          { className: 'col-md-8' },
	          _react2.default.createElement(_UI.Select, (0, _extends3.default)({
	            placeHolder: 'Plant Area',
	            options: selArea
	          }, binding("plantArea")))
	        ),
	        _react2.default.createElement(
	          'div',
	          { className: 'col-md-8' },
	          _react2.default.createElement(_UI.TextInput, (0, _extends3.default)({
	            placeHolder: 'Line Name',
	            helpText: 'Line Name'
	          }, binding("lineName")))
	        ),
	        _react2.default.createElement(
	          'div',
	          { className: 'col-md-8' },
	          _react2.default.createElement(_UI.TextInput, (0, _extends3.default)({
	            placeHolder: 'Line Code',
	            helpText: 'Line Code'
	          }, binding("lineCode")))
	        ),
	        _react2.default.createElement(
	          'div',
	          { className: 'col-md-8' },
	          _react2.default.createElement(_UI.Select, (0, _extends3.default)({
	            placeHolder: 'Online Printer',
	            options: selOnPrinter
	          }, binding("onLinePrinter")))
	        ),
	        _react2.default.createElement(
	          'div',
	          { className: 'col-md-8' },
	          _react2.default.createElement(_UI.Select, (0, _extends3.default)({
	            placeHolder: 'Offline Printer',
	            options: selOffPrinter
	          }, binding("offLinePrinter")))
	        ),
	        _react2.default.createElement(
	          'div',
	          { className: 'col-sm-8' },
	          _react2.default.createElement(_UI.CheckBox, (0, _extends3.default)({
	            placeHolder: 'Repack'
	          }, binding("isRepack")))
	        ),
	        _react2.default.createElement(
	          'div',
	          { className: 'col-xs-6 col-md-2' },
	          _react2.default.createElement(_UI.TextInput, (0, _extends3.default)({
	            placeHolder: 'Repack SSCC Code',
	            helpText: 'Number'
	          }, binding("ssccCode")))
	        )
	      );
	    }
	  }]);
	  return EditForm;
	}(_BaseContainer3.default);
	
	exports.default = EditForm;

/***/ }),
/* 562 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _getPrototypeOf = __webpack_require__(382);
	
	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);
	
	var _classCallCheck2 = __webpack_require__(386);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _createClass2 = __webpack_require__(387);
	
	var _createClass3 = _interopRequireDefault(_createClass2);
	
	var _possibleConstructorReturn2 = __webpack_require__(388);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(405);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _react = __webpack_require__(25);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _BaseContainer2 = __webpack_require__(474);
	
	var _BaseContainer3 = _interopRequireDefault(_BaseContainer2);
	
	var _Table = __webpack_require__(503);
	
	var _Table2 = _interopRequireDefault(_Table);
	
	var _ApiService = __webpack_require__(438);
	
	var _ApiService2 = _interopRequireDefault(_ApiService);
	
	var _utils = __webpack_require__(476);
	
	var _reactRouterDom = __webpack_require__(512);
	
	var _EditForm = __webpack_require__(561);
	
	var _EditForm2 = _interopRequireDefault(_EditForm);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	//const TABLE_DATA = []
	var data = [];
	
	var TableView = function (_BaseContainer) {
	  (0, _inherits3.default)(TableView, _BaseContainer);
	
	  function TableView() {
	    var _ref;
	
	    var _temp, _this, _ret;
	
	    (0, _classCallCheck3.default)(this, TableView);
	
	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }
	
	    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = TableView.__proto__ || (0, _getPrototypeOf2.default)(TableView)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
	      header: [{
	        title: "#",
	        prop: "no"
	      }, {
	        title: "Line Name",
	        prop: "lineName"
	      }, {
	        title: "Plant Area",
	        prop: "plantArea"
	      }, {
	        title: "Line Code",
	        prop: "lineCode"
	      }, {
	        title: "Repack",
	        prop: "isRepack"
	      }, {
	        title: "RP SSCC Code",
	        prop: "ssccCode"
	      }, {
	        title: "Action"
	      }],
	      data: data
	    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
	  }
	
	  (0, _createClass3.default)(TableView, [{
	    key: 'componentWillMount',
	    value: function componentWillMount() {
	      var _this2 = this;
	
	      this.setState({
	        title: "Lines"
	      });
	      _ApiService2.default.fetchCcaLines().then(function (response) {
	        _this2.setState({
	          data: response.data
	        });
	      });
	      this.showLoading(true);
	      setTimeout(function () {
	        _this2.showLoading(false);
	      }, 500);
	    }
	  }, {
	    key: '_renderContent',
	    value: function _renderContent() {
	      console.log(this.state);
	      return _react2.default.createElement(
	        'div',
	        { className: 'portlet body' },
	        _react2.default.createElement(_Table2.default, {
	          searchableProperties: ["lineName", "plantArea", "lineCode"],
	          hasTopBar: true,
	          headers: this.state.header,
	          data: this.state.data,
	          rowRender: this._renderRow,
	          onAddNewHandler: this.onAddNewClick.bind(this)
	        })
	      );
	    }
	  }, {
	    key: 'onAddNewClick',
	    value: function onAddNewClick() {}
	  }, {
	    key: '_renderRow',
	    value: function _renderRow(itm, i) {
	      return _react2.default.createElement(
	        'tr',
	        { key: i, className: 'odd gradeX' },
	        _react2.default.createElement(
	          'td',
	          null,
	          i + 1
	        ),
	        _react2.default.createElement(
	          'td',
	          null,
	          itm.lineName
	        ),
	        _react2.default.createElement(
	          'td',
	          null,
	          itm.plantArea
	        ),
	        _react2.default.createElement(
	          'td',
	          null,
	          itm.lineCode
	        ),
	        _react2.default.createElement(
	          'td',
	          null,
	          function () {
	            if (itm.isRepack == "1") {
	              return _react2.default.createElement(
	                'div',
	                null,
	                'Y'
	              );
	            } else {
	              return _react2.default.createElement(
	                'div',
	                null,
	                'N'
	              );
	            }
	          }()
	        ),
	        _react2.default.createElement(
	          'td',
	          null,
	          function () {
	            if (itm.ssccCode !== null) {
	              return _react2.default.createElement(
	                'div',
	                null,
	                itm.ssccCode
	              );
	            } else {
	              return _react2.default.createElement(
	                'div',
	                null,
	                '-'
	              );
	            }
	          }()
	        ),
	        _react2.default.createElement(
	          'td',
	          null,
	          _react2.default.createElement(
	            'div',
	            { className: 'btn-group' },
	            _react2.default.createElement(
	              'button',
	              { className: 'btn btn-xs green dropdown-toggle', type: 'button', 'data-toggle': 'dropdown', 'aria-expanded': 'false' },
	              ' Actions',
	              _react2.default.createElement('i', { className: 'fa fa-angle-down' })
	            ),
	            _react2.default.createElement(
	              'ul',
	              { className: 'dropdown-menu pull-left', role: 'menu' },
	              _react2.default.createElement(
	                'li',
	                null,
	                _react2.default.createElement(
	                  'a',
	                  { href: 'javascript:;' },
	                  _react2.default.createElement('i', { className: 'icon-flag' }),
	                  ' Area Name',
	                  _react2.default.createElement(
	                    'span',
	                    { className: 'badge badge-success' },
	                    '4'
	                  )
	                )
	              ),
	              _react2.default.createElement(
	                'li',
	                null,
	                _react2.default.createElement(
	                  'a',
	                  { href: 'javascript:;' },
	                  _react2.default.createElement('i', { className: 'glyphicon glyphicon-tags' }),
	                  ' Area Code '
	                )
	              ),
	              _react2.default.createElement(
	                'li',
	                { className: 'divider' },
	                ' '
	              ),
	              _react2.default.createElement(
	                'li',
	                null,
	                _react2.default.createElement(
	                  _reactRouterDom.Link,
	                  { to: '/Edit/Find?id=' + itm.lineId, id: 'btnEdit' },
	                  _react2.default.createElement('i', { className: 'glyphicon glyphicon-pencil' }),
	                  ' Edit '
	                )
	              ),
	              _react2.default.createElement(
	                'li',
	                null,
	                _react2.default.createElement(
	                  'a',
	                  { onClick: function onClick(e) {
	                      return handleClick(itm.lineId);
	                    } },
	                  _react2.default.createElement('i', { className: 'glyphicon glyphicon-trash' }),
	                  ' Delete '
	                )
	              )
	            )
	          )
	        )
	      );
	    }
	  }]);
	  return TableView;
	}(_BaseContainer3.default);
	
	function handleClick(val) {
	  var _this3 = this;
	
	  var result = confirm("Are you sure...?");
	  if (result) {
	    _ApiService2.default.deleteCcaPlantLines(val);
	    _ApiService2.default.deleteCcaLinePrinters(val);
	    _ApiService2.default.deleteCcaLineScanners(val);
	    _ApiService2.default.deleteCcaLineRepacks(val);
	    _ApiService2.default.deleteCcaLines(val).then(function (response) {
	      _this3.props.history.push("/View");
	      (0, _utils.alertMessage)({ message: 'Data ' + response.data.plantArea + ' deleted successfully' });
	    });
	  }
	}
	
	exports.default = TableView;

/***/ }),
/* 563 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _HomeContainer = __webpack_require__(564);
	
	var _HomeContainer2 = _interopRequireDefault(_HomeContainer);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	// Sync route definition
	
	exports.default = function (store) {
	  return {
	    path: 'cca_printers',
	    /*  Async getComponent is only invoked when route matches   */
	    getComponent: function getComponent(nextState, cb) {
	      /*  Webpack - use 'require.ensure' to create a split point
	          and embed an async module loader (jsonp) when bundling   */
	      !/* require.ensure */(function (require) {
	
	        /*  Return getComponent   */
	        cb(null, _HomeContainer2.default);
	
	        /* Webpack named bundle   */
	      }(__webpack_require__));
	    }
	  };
	};

/***/ }),
/* 564 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _getPrototypeOf = __webpack_require__(382);
	
	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);
	
	var _classCallCheck2 = __webpack_require__(386);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _createClass2 = __webpack_require__(387);
	
	var _createClass3 = _interopRequireDefault(_createClass2);
	
	var _possibleConstructorReturn2 = __webpack_require__(388);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(405);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _react = __webpack_require__(25);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _BaseContainer2 = __webpack_require__(474);
	
	var _BaseContainer3 = _interopRequireDefault(_BaseContainer2);
	
	var _reactRouterDom = __webpack_require__(512);
	
	var _AddForm = __webpack_require__(565);
	
	var _AddForm2 = _interopRequireDefault(_AddForm);
	
	var _EditForm = __webpack_require__(566);
	
	var _EditForm2 = _interopRequireDefault(_EditForm);
	
	var _TableView = __webpack_require__(567);
	
	var _TableView2 = _interopRequireDefault(_TableView);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var HomeContainer = function (_BaseContainer) {
	  (0, _inherits3.default)(HomeContainer, _BaseContainer);
	
	  function HomeContainer() {
	    (0, _classCallCheck3.default)(this, HomeContainer);
	    return (0, _possibleConstructorReturn3.default)(this, (HomeContainer.__proto__ || (0, _getPrototypeOf2.default)(HomeContainer)).call(this));
	  }
	
	  (0, _createClass3.default)(HomeContainer, [{
	    key: 'componentWillMount',
	    value: function componentWillMount() {
	      this.setState({
	        title: "Plant Area"
	      });
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      return _react2.default.createElement(
	        _reactRouterDom.BrowserRouter,
	        null,
	        _react2.default.createElement(
	          _reactRouterDom.Switch,
	          null,
	          _react2.default.createElement(_reactRouterDom.Route, { exact: true, path: '/Create', component: _AddForm2.default }),
	          _react2.default.createElement(_reactRouterDom.Route, { path: '/Edit/:id', component: _EditForm2.default }),
	          _react2.default.createElement(_reactRouterDom.Route, { path: '/View', component: _TableView2.default }),
	          _react2.default.createElement(_reactRouterDom.Route, { path: '/', component: _TableView2.default }),
	          _react2.default.createElement(_reactRouterDom.Route, { component: _AddForm2.default })
	        )
	      );
	    }
	  }]);
	  return HomeContainer;
	}(_BaseContainer3.default);
	
	exports.default = HomeContainer;

/***/ }),
/* 565 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _extends2 = __webpack_require__(313);
	
	var _extends3 = _interopRequireDefault(_extends2);
	
	var _getPrototypeOf = __webpack_require__(382);
	
	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);
	
	var _classCallCheck2 = __webpack_require__(386);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _createClass2 = __webpack_require__(387);
	
	var _createClass3 = _interopRequireDefault(_createClass2);
	
	var _possibleConstructorReturn2 = __webpack_require__(388);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(405);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _react = __webpack_require__(25);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _BaseContainer2 = __webpack_require__(474);
	
	var _BaseContainer3 = _interopRequireDefault(_BaseContainer2);
	
	var _ApiService = __webpack_require__(438);
	
	var _ApiService2 = _interopRequireDefault(_ApiService);
	
	var _UI = __webpack_require__(485);
	
	var _DataForm = __webpack_require__(538);
	
	var _DataForm2 = _interopRequireDefault(_DataForm);
	
	var _utils = __webpack_require__(476);
	
	var _reactRouterDom = __webpack_require__(512);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var TABS_DATA = [];
	var dateStr = "";
	var date = new Date();
	
	var AddForm = function (_BaseContainer) {
	  (0, _inherits3.default)(AddForm, _BaseContainer);
	
	  function AddForm(props) {
	    (0, _classCallCheck3.default)(this, AddForm);
	
	    var _this = (0, _possibleConstructorReturn3.default)(this, (AddForm.__proto__ || (0, _getPrototypeOf2.default)(AddForm)).call(this, props));
	
	    _this.fromBodyRender = _this.fromBodyRender.bind(_this);
	    _this.fromSubmit = _this.fromSubmit.bind(_this);
	    _this.state = {
	      isLoading: true
	    };
	    return _this;
	  }
	
	  (0, _createClass3.default)(AddForm, [{
	    key: 'componentWillMount',
	    value: function componentWillMount() {
	      dateStr = date.getFullYear() + "-" + ("00" + (date.getMonth() + 1)).slice(-2) + "-" + ("00" + date.getDate()).slice(-2) + "T" + ("00" + date.getHours()).slice(-2) + ":" + ("00" + date.getMinutes()).slice(-2) + ":" + ("00" + date.getSeconds()).slice(-2);
	      //alert(dateStr)
	    }
	
	    //--------------------------------------------------------------------//
	    //  Form Content Renderer
	    //--------------------------------------------------------------------//
	
	  }, {
	    key: '_renderContent',
	    value: function _renderContent() {
	      var _this2 = this;
	
	      var item = {
	        printerName: "",
	        printerDescr: "",
	        printerIp: "",
	        printerPort: 0,
	        isOnline: "",
	        recCreated: dateStr,
	        recDatetime: dateStr
	      };
	
	      return _react2.default.createElement(_DataForm2.default, {
	        title: 'Add Printers',
	        hasCancel: true,
	        item: item,
	        bodyRender: this.fromBodyRender,
	        onSubmit: function onSubmit(itm) {
	          console.log(itm);
	          // insert cca_printer
	          var printerPort = parseInt(itm.printerPort);
	          var isOnline = '' + itm.isOnline;
	          _ApiService2.default.addCcaPrinters({
	            printerName: itm.printerName,
	            printerDescr: itm.printerDescr,
	            printerIp: itm.printerIp,
	            printerPort: printerPort,
	            isOnline: isOnline,
	            recCreated: itm.recCreated,
	            recDatetime: itm.recDatetime
	          }).then(function (res) {
	            if (!res) throw new Error(res.status);else _this2.fromSubmit(itm);
	            (0, _utils.alertMessage)({ message: 'Data ' + itm.printerDescr + ' added successfully.' });
	          });
	        },
	        onCancel: function onCancel(itm) {}
	      });
	    }
	  }, {
	    key: 'fromSubmit',
	    value: function fromSubmit(itm) {}
	  }, {
	    key: 'fromBodyRender',
	    value: function fromBodyRender(options) {
	      var item = options.item,
	          binding = options.binding;
	
	      return _react2.default.createElement(
	        'div',
	        { className: 'row' },
	        _react2.default.createElement(
	          'div',
	          { className: 'col-md-8' },
	          _react2.default.createElement(_UI.TextInput, (0, _extends3.default)({
	            placeHolder: 'Printer Name',
	            helpText: ''
	          }, binding("printerName")))
	        ),
	        _react2.default.createElement(
	          'div',
	          { className: 'col-md-8' },
	          _react2.default.createElement(_UI.TextInput, (0, _extends3.default)({
	            placeHolder: 'Printer Description',
	            helpText: ''
	          }, binding("printerDescr")))
	        ),
	        _react2.default.createElement(
	          'div',
	          { className: 'col-md-8' },
	          _react2.default.createElement(_UI.TextInput, (0, _extends3.default)({
	            placeHolder: 'Printer IP',
	            helpText: ''
	          }, binding("printerIp")))
	        ),
	        _react2.default.createElement(
	          'div',
	          { className: 'col-md-8' },
	          _react2.default.createElement(_UI.TextInput, (0, _extends3.default)({
	            placeHolder: 'Printer Port',
	            helpText: ''
	          }, binding("printerPort")))
	        ),
	        _react2.default.createElement(
	          'div',
	          { className: 'col-md-8' },
	          _react2.default.createElement(_UI.CheckBox, (0, _extends3.default)({
	            placeHolder: 'Is Online'
	          }, binding("isOnline")))
	        )
	      );
	    }
	  }]);
	  return AddForm;
	}(_BaseContainer3.default);
	
	exports.default = AddForm;

/***/ }),
/* 566 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _extends2 = __webpack_require__(313);
	
	var _extends3 = _interopRequireDefault(_extends2);
	
	var _regenerator = __webpack_require__(553);
	
	var _regenerator2 = _interopRequireDefault(_regenerator);
	
	var _stringify = __webpack_require__(496);
	
	var _stringify2 = _interopRequireDefault(_stringify);
	
	var _asyncToGenerator2 = __webpack_require__(556);
	
	var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);
	
	var _getPrototypeOf = __webpack_require__(382);
	
	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);
	
	var _classCallCheck2 = __webpack_require__(386);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _createClass2 = __webpack_require__(387);
	
	var _createClass3 = _interopRequireDefault(_createClass2);
	
	var _possibleConstructorReturn2 = __webpack_require__(388);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(405);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _react = __webpack_require__(25);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _BaseContainer2 = __webpack_require__(474);
	
	var _BaseContainer3 = _interopRequireDefault(_BaseContainer2);
	
	var _ApiService = __webpack_require__(438);
	
	var _ApiService2 = _interopRequireDefault(_ApiService);
	
	var _UI = __webpack_require__(485);
	
	var _DataForm = __webpack_require__(538);
	
	var _DataForm2 = _interopRequireDefault(_DataForm);
	
	var _utils = __webpack_require__(476);
	
	var _reactRouterDom = __webpack_require__(512);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var dateStr = "";
	var date = new Date();
	var key_id = "";
	
	var EditForm = function (_BaseContainer) {
	  (0, _inherits3.default)(EditForm, _BaseContainer);
	
	  function EditForm(props) {
	    (0, _classCallCheck3.default)(this, EditForm);
	
	    var _this = (0, _possibleConstructorReturn3.default)(this, (EditForm.__proto__ || (0, _getPrototypeOf2.default)(EditForm)).call(this, props));
	
	    _this.fromBodyRender = _this.fromBodyRender.bind(_this);
	    _this.fromSubmit = _this.fromSubmit.bind(_this);
	    _this.state = {
	      dataState: null,
	      printerId: '',
	      printerName: '',
	      printerDescr: '',
	      printerIp: '',
	      printerPort: '',
	      isOnline: '',
	      recCreated: '',
	      recDatetime: ''
	    };
	    return _this;
	  }
	
	  (0, _createClass3.default)(EditForm, [{
	    key: 'componentDidMount',
	    value: function () {
	      var _ref = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee() {
	        var _this2 = this;
	
	        var url, urlParams, idVal;
	        return _regenerator2.default.wrap(function _callee$(_context) {
	          while (1) {
	            switch (_context.prev = _context.next) {
	              case 0:
	                //componentWillMount() {
	                dateStr = date.getFullYear() + "-" + ("00" + (date.getMonth() + 1)).slice(-2) + "-" + ("00" + date.getDate()).slice(-2) + "T" + ("00" + date.getHours()).slice(-2) + ":" + ("00" + date.getMinutes()).slice(-2) + ":" + ("00" + date.getSeconds()).slice(-2);
	                //alert(dateStr)
	
	                url = window.location.search;
	                urlParams = new URLSearchParams(url);
	                idVal = urlParams.get('id');
	
	                key_id = idVal;
	                console.log(key_id);
	
	                _context.prev = 6;
	                _context.next = 9;
	                return _ApiService2.default.fetchCcaPrintersById(key_id).then(function (response) {
	                  _this2.setState({
	                    dataState: response.data
	                  });
	                });
	
	              case 9:
	                console.log('ini data si state=>' + (0, _stringify2.default)(this.state.dataState));
	                if (this.state.dataState !== null) {
	                  {
	                    this.state.dataState.map(function (item) {
	                      _this2.setState({
	                        printerId: '' + item.printerId,
	                        printerName: '' + item.printerName,
	                        printerDescr: '' + item.printerDescr,
	                        printerIp: '' + item.printerIp,
	                        printerPort: '' + item.printerPort,
	                        isOnline: '' + item.isOnline,
	                        recCreated: dateStr,
	                        recDatetime: dateStr
	                      });
	                    });
	                  }
	                }
	                _context.next = 16;
	                break;
	
	              case 13:
	                _context.prev = 13;
	                _context.t0 = _context['catch'](6);
	
	                console.log("Error fetching data-----------", _context.t0);
	
	              case 16:
	              case 'end':
	                return _context.stop();
	            }
	          }
	        }, _callee, this, [[6, 13]]);
	      }));
	
	      function componentDidMount() {
	        return _ref.apply(this, arguments);
	      }
	
	      return componentDidMount;
	    }()
	
	    //--------------------------------------------------------------------//
	    //  Form Content Renderer
	    //--------------------------------------------------------------------//
	
	  }, {
	    key: '_renderContent',
	    value: function _renderContent() {
	      var _this3 = this;
	
	      if (this.state.printerName) {
	        var paramsId = parseInt(key_id, 10); // 10 Decimal
	        var item = {
	          printerId: paramsId,
	          printerName: this.state.printerName,
	          printerDescr: this.state.printerDescr,
	          isInterval: this.state.isInterval,
	          printerIp: this.state.printerIp,
	          printerPort: this.state.printerPort,
	          isOnline: this.state.isOnline,
	          recCreated: this.state.recCreated,
	          recDatetime: this.state.recDatetime
	        };
	        //console.log(this.state.printerName);
	
	        return _react2.default.createElement(_DataForm2.default, {
	          title: 'Edit Plants',
	          hasCancel: true,
	          item: item,
	          bodyRender: this.fromBodyRender,
	          onSubmit: function onSubmit(itm) {
	            // insert cca_plants
	            var printerId = parseInt(itm.printerId);
	            var printerPort = parseInt(itm.printerPort);
	            var isOnline = '' + itm.isOnline;
	            _ApiService2.default.editCcaPrinters(printerId, {
	              printerId: printerId,
	              printerName: itm.printerName,
	              printerDescr: itm.printerDescr,
	              printerIp: itm.printerIp,
	              printerPort: printerPort,
	              isOnline: isOnline,
	              recCreated: itm.recCreated,
	              recDatetime: itm.recDatetime
	            }).then(function (res) {
	              if (!res) throw new Error(res.status);else _this3.fromSubmit(itm);
	              _this3.props.history.push("/View");
	              (0, _utils.alertMessage)({ message: 'Data ' + itm.printerName + ' update successfully.' });
	            });
	          },
	          onCancel: function onCancel(itm) {
	            alert("Data reset");
	          }
	        });
	      }
	    }
	  }, {
	    key: 'fromSubmit',
	    value: function fromSubmit(itm) {}
	  }, {
	    key: 'fromBodyRender',
	    value: function fromBodyRender(options) {
	      var item = options.item,
	          binding = options.binding;
	
	      return _react2.default.createElement(
	        'div',
	        { className: 'row' },
	        _react2.default.createElement(
	          'div',
	          { className: 'col-md-8' },
	          _react2.default.createElement(_UI.TextInput, (0, _extends3.default)({
	            placeHolder: 'Printer Name',
	            helpText: ''
	          }, binding("printerName")))
	        ),
	        _react2.default.createElement(
	          'div',
	          { className: 'col-md-8' },
	          _react2.default.createElement(_UI.TextInput, (0, _extends3.default)({
	            placeHolder: 'Printer Description',
	            helpText: ''
	          }, binding("printerDescr")))
	        ),
	        _react2.default.createElement(
	          'div',
	          { className: 'col-md-8' },
	          _react2.default.createElement(_UI.TextInput, (0, _extends3.default)({
	            placeHolder: 'Printer IP',
	            helpText: ''
	          }, binding("printerIp")))
	        ),
	        _react2.default.createElement(
	          'div',
	          { className: 'col-md-8' },
	          _react2.default.createElement(_UI.TextInput, (0, _extends3.default)({
	            placeHolder: 'Printer Port',
	            helpText: ''
	          }, binding("printerPort")))
	        ),
	        _react2.default.createElement(
	          'div',
	          { className: 'col-md-8' },
	          _react2.default.createElement(_UI.CheckBox, (0, _extends3.default)({
	            placeHolder: 'Is Online'
	          }, binding("isOnline")))
	        )
	      );
	    }
	  }]);
	  return EditForm;
	}(_BaseContainer3.default);
	
	exports.default = EditForm;

/***/ }),
/* 567 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _getPrototypeOf = __webpack_require__(382);
	
	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);
	
	var _classCallCheck2 = __webpack_require__(386);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _createClass2 = __webpack_require__(387);
	
	var _createClass3 = _interopRequireDefault(_createClass2);
	
	var _possibleConstructorReturn2 = __webpack_require__(388);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(405);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _react = __webpack_require__(25);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _BaseContainer2 = __webpack_require__(474);
	
	var _BaseContainer3 = _interopRequireDefault(_BaseContainer2);
	
	var _Table = __webpack_require__(503);
	
	var _Table2 = _interopRequireDefault(_Table);
	
	var _ApiService = __webpack_require__(438);
	
	var _ApiService2 = _interopRequireDefault(_ApiService);
	
	var _utils = __webpack_require__(476);
	
	var _reactRouterDom = __webpack_require__(512);
	
	var _EditForm = __webpack_require__(566);
	
	var _EditForm2 = _interopRequireDefault(_EditForm);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	//const TABLE_DATA = []
	var data = [];
	
	var TableView = function (_BaseContainer) {
	  (0, _inherits3.default)(TableView, _BaseContainer);
	
	  function TableView() {
	    var _ref;
	
	    var _temp, _this, _ret;
	
	    (0, _classCallCheck3.default)(this, TableView);
	
	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }
	
	    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = TableView.__proto__ || (0, _getPrototypeOf2.default)(TableView)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
	      header: [{
	        title: "#",
	        prop: "no"
	      }, {
	        title: "Printer Name",
	        prop: "printerName"
	      }, {
	        title: "Printer Description",
	        prop: "printerDescr"
	      }, {
	        title: "Printer IP",
	        prop: "printerIp"
	      }, {
	        title: "Printer Port",
	        prop: "printerPort"
	      }, {
	        title: "Action"
	      }],
	      data: data
	    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
	  }
	
	  (0, _createClass3.default)(TableView, [{
	    key: 'componentWillMount',
	    value: function componentWillMount() {
	      var _this2 = this;
	
	      this.setState({
	        title: "Printers"
	      });
	      _ApiService2.default.fetchCcaPrinters().then(function (response) {
	        _this2.setState({
	          data: response.data
	        });
	      });
	      this.showLoading(true);
	      setTimeout(function () {
	        _this2.showLoading(false);
	      }, 500);
	    }
	  }, {
	    key: '_renderContent',
	    value: function _renderContent() {
	      console.log(this.state);
	      return _react2.default.createElement(
	        'div',
	        { className: 'portlet body' },
	        _react2.default.createElement(_Table2.default, {
	          searchableProperties: ["printerName", "printerDescr", "printerIp", "printerPort"],
	          hasTopBar: true,
	          headers: this.state.header,
	          data: this.state.data,
	          rowRender: this._renderRow,
	          onAddNewHandler: this.onAddNewClick.bind(this)
	        })
	      );
	    }
	  }, {
	    key: 'onAddNewClick',
	    value: function onAddNewClick() {
	      var newData = this.state.data.slice(0);
	      newData.push({ "no": "", "printerName": "time_" + Date.now(), "printerDescr": "Printer Description", "printerIp": "Printer Ip", "printerPort": "Printer Port" });
	
	      this.setState({
	        data: newData
	      });
	    }
	  }, {
	    key: '_renderRow',
	    value: function _renderRow(itm, i) {
	      return _react2.default.createElement(
	        'tr',
	        { key: i, className: 'odd gradeX' },
	        _react2.default.createElement(
	          'td',
	          null,
	          i + 1
	        ),
	        _react2.default.createElement(
	          'td',
	          null,
	          itm.printerName
	        ),
	        _react2.default.createElement(
	          'td',
	          null,
	          itm.printerDescr
	        ),
	        _react2.default.createElement(
	          'td',
	          null,
	          itm.printerIp
	        ),
	        _react2.default.createElement(
	          'td',
	          null,
	          itm.printerPort
	        ),
	        _react2.default.createElement(
	          'td',
	          null,
	          _react2.default.createElement(
	            'div',
	            { className: 'btn-group' },
	            _react2.default.createElement(
	              'button',
	              { className: 'btn btn-xs green dropdown-toggle', type: 'button', 'data-toggle': 'dropdown', 'aria-expanded': 'false' },
	              ' Actions',
	              _react2.default.createElement('i', { className: 'fa fa-angle-down' })
	            ),
	            _react2.default.createElement(
	              'ul',
	              { className: 'dropdown-menu pull-left', role: 'menu' },
	              _react2.default.createElement(
	                'li',
	                null,
	                _react2.default.createElement(
	                  'a',
	                  { href: 'javascript:;' },
	                  _react2.default.createElement('i', { className: 'icon-flag' }),
	                  ' Area Name',
	                  _react2.default.createElement(
	                    'span',
	                    { className: 'badge badge-success' },
	                    '4'
	                  )
	                )
	              ),
	              _react2.default.createElement(
	                'li',
	                null,
	                _react2.default.createElement(
	                  'a',
	                  { href: 'javascript:;' },
	                  _react2.default.createElement('i', { className: 'glyphicon glyphicon-tags' }),
	                  ' Area Code '
	                )
	              ),
	              _react2.default.createElement(
	                'li',
	                { className: 'divider' },
	                ' '
	              ),
	              _react2.default.createElement(
	                'li',
	                null,
	                _react2.default.createElement(
	                  _reactRouterDom.Link,
	                  { to: '/Edit/Find?id=' + itm.printerId, id: 'btnEdit' },
	                  _react2.default.createElement('i', { className: 'glyphicon glyphicon-pencil' }),
	                  ' Edit '
	                )
	              ),
	              _react2.default.createElement(
	                'li',
	                null,
	                _react2.default.createElement(
	                  'a',
	                  { onClick: function onClick(e) {
	                      return handleClick(itm.printerId);
	                    } },
	                  _react2.default.createElement('i', { className: 'glyphicon glyphicon-trash' }),
	                  ' Delete '
	                )
	              )
	            )
	          )
	        )
	      );
	    }
	  }]);
	  return TableView;
	}(_BaseContainer3.default);
	
	function handleClick(val) {
	  //alert(e)
	  var result = confirm("Are you sure...?");
	  if (result) {
	    _ApiService2.default.deleteCcaPrinters(val).then(function (response) {
	      (0, _utils.alertMessage)({ message: 'Data ' + response.data.printerName + ' deleted successfully' });
	    });
	    _ApiService2.default.deleteCcaLinePrinters(val);
	  }
	}
	
	exports.default = TableView;

/***/ }),
/* 568 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _HomeContainer = __webpack_require__(569);
	
	var _HomeContainer2 = _interopRequireDefault(_HomeContainer);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	// Sync route definition
	
	exports.default = function (store) {
	  return {
	    path: 'cca_scanners',
	    /*  Async getComponent is only invoked when route matches   */
	    getComponent: function getComponent(nextState, cb) {
	      /*  Webpack - use 'require.ensure' to create a split point
	          and embed an async module loader (jsonp) when bundling   */
	      !/* require.ensure */(function (require) {
	
	        /*  Return getComponent   */
	        cb(null, _HomeContainer2.default);
	
	        /* Webpack named bundle   */
	      }(__webpack_require__));
	    }
	  };
	};

/***/ }),
/* 569 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _getPrototypeOf = __webpack_require__(382);
	
	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);
	
	var _classCallCheck2 = __webpack_require__(386);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _createClass2 = __webpack_require__(387);
	
	var _createClass3 = _interopRequireDefault(_createClass2);
	
	var _possibleConstructorReturn2 = __webpack_require__(388);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(405);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _react = __webpack_require__(25);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _BaseContainer2 = __webpack_require__(474);
	
	var _BaseContainer3 = _interopRequireDefault(_BaseContainer2);
	
	var _reactRouterDom = __webpack_require__(512);
	
	var _AddForm = __webpack_require__(570);
	
	var _AddForm2 = _interopRequireDefault(_AddForm);
	
	var _EditForm = __webpack_require__(571);
	
	var _EditForm2 = _interopRequireDefault(_EditForm);
	
	var _TableView = __webpack_require__(572);
	
	var _TableView2 = _interopRequireDefault(_TableView);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var HomeContainer = function (_BaseContainer) {
	  (0, _inherits3.default)(HomeContainer, _BaseContainer);
	
	  function HomeContainer() {
	    (0, _classCallCheck3.default)(this, HomeContainer);
	    return (0, _possibleConstructorReturn3.default)(this, (HomeContainer.__proto__ || (0, _getPrototypeOf2.default)(HomeContainer)).call(this));
	  }
	
	  (0, _createClass3.default)(HomeContainer, [{
	    key: 'componentWillMount',
	    value: function componentWillMount() {
	      this.setState({
	        title: "Lines"
	      });
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      return _react2.default.createElement(
	        _reactRouterDom.BrowserRouter,
	        null,
	        _react2.default.createElement(
	          _reactRouterDom.Switch,
	          null,
	          _react2.default.createElement(_reactRouterDom.Route, { exact: true, path: '/Create', component: _AddForm2.default }),
	          _react2.default.createElement(_reactRouterDom.Route, { path: '/Edit/:id', component: _EditForm2.default }),
	          _react2.default.createElement(_reactRouterDom.Route, { path: '/View', component: _TableView2.default }),
	          _react2.default.createElement(_reactRouterDom.Route, { path: '/', component: _TableView2.default }),
	          _react2.default.createElement(_reactRouterDom.Route, { component: _AddForm2.default })
	        )
	      );
	    }
	  }]);
	  return HomeContainer;
	}(_BaseContainer3.default);
	
	exports.default = HomeContainer;

/***/ }),
/* 570 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _extends2 = __webpack_require__(313);
	
	var _extends3 = _interopRequireDefault(_extends2);
	
	var _stringify = __webpack_require__(496);
	
	var _stringify2 = _interopRequireDefault(_stringify);
	
	var _regenerator = __webpack_require__(553);
	
	var _regenerator2 = _interopRequireDefault(_regenerator);
	
	var _asyncToGenerator2 = __webpack_require__(556);
	
	var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);
	
	var _getPrototypeOf = __webpack_require__(382);
	
	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);
	
	var _classCallCheck2 = __webpack_require__(386);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _createClass2 = __webpack_require__(387);
	
	var _createClass3 = _interopRequireDefault(_createClass2);
	
	var _possibleConstructorReturn2 = __webpack_require__(388);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(405);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _react = __webpack_require__(25);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _BaseContainer2 = __webpack_require__(474);
	
	var _BaseContainer3 = _interopRequireDefault(_BaseContainer2);
	
	var _ApiService = __webpack_require__(438);
	
	var _ApiService2 = _interopRequireDefault(_ApiService);
	
	var _UI = __webpack_require__(485);
	
	var _DataForm = __webpack_require__(538);
	
	var _DataForm2 = _interopRequireDefault(_DataForm);
	
	var _utils = __webpack_require__(476);
	
	var _reactRouterDom = __webpack_require__(512);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var TABS_DATA = [];
	var dateStr = "";
	var date = new Date();
	//var lineId = "";
	//var lineCode = "";
	//const data = [];
	
	var AddForm = function (_BaseContainer) {
	  (0, _inherits3.default)(AddForm, _BaseContainer);
	
	  function AddForm(props) {
	    (0, _classCallCheck3.default)(this, AddForm);
	
	    var _this = (0, _possibleConstructorReturn3.default)(this, (AddForm.__proto__ || (0, _getPrototypeOf2.default)(AddForm)).call(this, props));
	
	    _this.fromBodyRender = _this.fromBodyRender.bind(_this);
	    _this.fromSubmit = _this.fromSubmit.bind(_this);
	    _this.state = {
	      dataState: null,
	      arrLines: [],
	      isLoading: true
	    };
	    return _this;
	  }
	
	  (0, _createClass3.default)(AddForm, [{
	    key: 'componentWillMount',
	    value: function componentWillMount() {
	      this.setState({
	        title: "SICK Scanners"
	      });
	      dateStr = date.getFullYear() + "-" + ("00" + (date.getMonth() + 1)).slice(-2) + "-" + ("00" + date.getDate()).slice(-2) + "T" + ("00" + date.getHours()).slice(-2) + ":" + ("00" + date.getMinutes()).slice(-2) + ":" + ("00" + date.getSeconds()).slice(-2);
	    }
	  }, {
	    key: 'componentDidMount',
	    value: function () {
	      var _ref = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee() {
	        var _this2 = this;
	
	        return _regenerator2.default.wrap(function _callee$(_context) {
	          while (1) {
	            switch (_context.prev = _context.next) {
	              case 0:
	                _context.prev = 0;
	                _context.next = 3;
	                return _ApiService2.default.fetchCcaLines().then(function (response) {
	                  _this2.setState({
	                    arrLines: response.data
	                  });
	                });
	
	              case 3:
	                _context.next = 8;
	                break;
	
	              case 5:
	                _context.prev = 5;
	                _context.t0 = _context['catch'](0);
	
	                console.log("Error fetching data-----------", _context.t0);
	
	              case 8:
	              case 'end':
	                return _context.stop();
	            }
	          }
	        }, _callee, this, [[0, 5]]);
	      }));
	
	      function componentDidMount() {
	        return _ref.apply(this, arguments);
	      }
	
	      return componentDidMount;
	    }()
	
	    //--------------------------------------------------------------------//
	    //  Form Content Renderer
	    //--------------------------------------------------------------------//
	
	  }, {
	    key: '_renderContent',
	    value: function _renderContent() {
	      var _this3 = this;
	
	      var item = {
	        scannerName: "",
	        scannerIp: "",
	        scannerPort: 0,
	        recCreated: dateStr,
	        recDatetime: dateStr,
	        lineId: ''
	      };
	
	      return _react2.default.createElement(_DataForm2.default, {
	        title: 'Add Scanners',
	        hasCancel: true,
	        item: item,
	        bodyRender: this.fromBodyRender,
	        onSubmit: function onSubmit(itm) {
	          console.log(itm);
	          var scannerPortVal = parseInt(itm.scannerPort);
	          _ApiService2.default.addCcaScanners({
	            scannerName: itm.scannerName,
	            scannerIp: itm.scannerIp,
	            scannerPort: scannerPortVal,
	            recCreated: itm.recCreated,
	            recDatetime: itm.recDatetime
	          }).then(function (res) {
	            if (!res) throw new Error(res.status);else _this3.fromSubmit(itm);
	            //console.log(JSON.stringify(itm.plantId));
	            (0, _utils.alertMessage)({ message: 'Data ' + itm.scannerName + ' added successfully.' });
	          });
	        },
	        onCancel: function onCancel(itm) {}
	      });
	    }
	  }, {
	    key: 'fromSubmit',
	    value: function fromSubmit(itm) {
	      console.log(itm);
	      var lineId = parseInt(itm.lineId);
	      _ApiService2.default.fetchCcaScannerLast().then(function (res) {
	        res.data.map(function (val) {
	          // check and insert cca_line_scanners
	          _ApiService2.default.addCcaLineScanners({
	            "lineId": lineId,
	            "scannerId": val.scannerId
	          });
	          console.log((0, _stringify2.default)(val));
	        });
	      });
	    }
	  }, {
	    key: 'fromBodyRender',
	    value: function fromBodyRender(options) {
	      var selLines = [];
	      {
	        this.state.arrLines.map(function (item) {
	          selLines.push({ title: item.lineName, value: item.lineId });
	        });
	      }
	      var item = options.item,
	          binding = options.binding;
	
	      return _react2.default.createElement(
	        'div',
	        { className: 'row' },
	        _react2.default.createElement(
	          'div',
	          { className: 'col-md-8' },
	          _react2.default.createElement(_UI.TextInput, (0, _extends3.default)({
	            placeHolder: 'Scanner Name',
	            helpText: 'Scanner Name'
	          }, binding("scannerName")))
	        ),
	        _react2.default.createElement(
	          'div',
	          { className: 'col-md-8' },
	          _react2.default.createElement(_UI.TextInput, (0, _extends3.default)({
	            placeHolder: 'Scanner IP',
	            helpText: 'Scanner IP'
	          }, binding("scannerIp")))
	        ),
	        _react2.default.createElement(
	          'div',
	          { className: 'col-md-8' },
	          _react2.default.createElement(_UI.TextInput, (0, _extends3.default)({
	            placeHolder: 'Scanner Port',
	            helpText: 'Scanner Port'
	          }, binding("scannerPort")))
	        ),
	        _react2.default.createElement(
	          'div',
	          { className: 'col-md-8' },
	          _react2.default.createElement(_UI.Select, (0, _extends3.default)({
	            placeHolder: 'Line',
	            options: selLines
	          }, binding("lineId")))
	        )
	      );
	    }
	  }]);
	  return AddForm;
	}(_BaseContainer3.default);
	
	exports.default = AddForm;

/***/ }),
/* 571 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _extends2 = __webpack_require__(313);
	
	var _extends3 = _interopRequireDefault(_extends2);
	
	var _regenerator = __webpack_require__(553);
	
	var _regenerator2 = _interopRequireDefault(_regenerator);
	
	var _defineProperty2 = __webpack_require__(337);
	
	var _defineProperty3 = _interopRequireDefault(_defineProperty2);
	
	var _asyncToGenerator2 = __webpack_require__(556);
	
	var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);
	
	var _getPrototypeOf = __webpack_require__(382);
	
	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);
	
	var _classCallCheck2 = __webpack_require__(386);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _createClass2 = __webpack_require__(387);
	
	var _createClass3 = _interopRequireDefault(_createClass2);
	
	var _possibleConstructorReturn2 = __webpack_require__(388);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(405);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _react = __webpack_require__(25);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _BaseContainer2 = __webpack_require__(474);
	
	var _BaseContainer3 = _interopRequireDefault(_BaseContainer2);
	
	var _ApiService = __webpack_require__(438);
	
	var _ApiService2 = _interopRequireDefault(_ApiService);
	
	var _UI = __webpack_require__(485);
	
	var _DataForm = __webpack_require__(538);
	
	var _DataForm2 = _interopRequireDefault(_DataForm);
	
	var _utils = __webpack_require__(476);
	
	var _reactRouterDom = __webpack_require__(512);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var TABS_DATA = [];
	var dateStr = "";
	var date = new Date();
	var key_id = "";
	
	var EditForm = function (_BaseContainer) {
	  (0, _inherits3.default)(EditForm, _BaseContainer);
	
	  function EditForm(props) {
	    (0, _classCallCheck3.default)(this, EditForm);
	
	    var _this = (0, _possibleConstructorReturn3.default)(this, (EditForm.__proto__ || (0, _getPrototypeOf2.default)(EditForm)).call(this, props));
	
	    _this.fromBodyRender = _this.fromBodyRender.bind(_this);
	    _this.fromSubmit = _this.fromSubmit.bind(_this);
	    _this.state = {
	      dataState: null,
	      arrLines: [],
	      scannerId: '',
	      scannerName: '',
	      scannerIp: '',
	      scannerPort: 0,
	      recCreated: '',
	      recDatetime: '',
	      arrLineId: null,
	      lineId: 0,
	      isLoading: true
	    };
	    return _this;
	  }
	
	  (0, _createClass3.default)(EditForm, [{
	    key: 'componentWillMount',
	    value: function componentWillMount() {
	      this.setState({
	        title: "SICK Scanners"
	      });
	      dateStr = date.getFullYear() + "-" + ("00" + (date.getMonth() + 1)).slice(-2) + "-" + ("00" + date.getDate()).slice(-2) + "T" + ("00" + date.getHours()).slice(-2) + ":" + ("00" + date.getMinutes()).slice(-2) + ":" + ("00" + date.getSeconds()).slice(-2);
	
	      var url = window.location.search;
	      var urlParams = new URLSearchParams(url);
	      var idVal = urlParams.get('id');
	      key_id = idVal;
	    }
	  }, {
	    key: 'componentDidMount',
	    value: function () {
	      var _ref = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee() {
	        var _this2 = this;
	
	        return _regenerator2.default.wrap(function _callee$(_context) {
	          while (1) {
	            switch (_context.prev = _context.next) {
	              case 0:
	                _context.prev = 0;
	                _context.next = 3;
	                return _ApiService2.default.fetchCcaLines().then(function (response) {
	                  _this2.setState({
	                    arrLines: response.data
	                  });
	                });
	
	              case 3:
	                _context.next = 5;
	                return _ApiService2.default.fetchCcaLinesById(key_id).then(function (response) {
	                  _this2.setState({
	                    arrLineId: response.data
	                  });
	                });
	
	              case 5:
	                //console.log(this.state.arrLineId);
	                if (this.state.arrLineId !== null) {
	                  {
	                    this.state.arrLineId.map(function (item) {
	                      _this2.setState({
	                        lineId: '' + item.lineId
	                      });
	                    });
	                  }
	                }
	
	                _context.next = 8;
	                return _ApiService2.default.fetchCcaScannersById(key_id).then(function (response) {
	                  _this2.setState({
	                    dataState: response.data
	                  });
	                });
	
	              case 8:
	                //console.log(this.state.dataState);
	                if (this.state.dataState !== null) {
	                  {
	                    this.state.dataState.map(function (item) {
	                      _this2.setState((0, _defineProperty3.default)({
	                        scannerId: '' + item.scannerId,
	                        scannerName: '' + item.scannerName,
	                        scannerIp: '' + item.scannerIp,
	                        scannerPort: '' + item.scannerPort,
	                        recCreated: dateStr
	                      }, 'recCreated', dateStr));
	                    });
	                  }
	                }
	                _context.next = 14;
	                break;
	
	              case 11:
	                _context.prev = 11;
	                _context.t0 = _context['catch'](0);
	
	                console.log("Error fetching data-----------", _context.t0);
	
	              case 14:
	              case 'end':
	                return _context.stop();
	            }
	          }
	        }, _callee, this, [[0, 11]]);
	      }));
	
	      function componentDidMount() {
	        return _ref.apply(this, arguments);
	      }
	
	      return componentDidMount;
	    }()
	
	    //--------------------------------------------------------------------//
	    //  Form Content Renderer
	    //--------------------------------------------------------------------//
	
	  }, {
	    key: '_renderContent',
	    value: function _renderContent() {
	      var _this3 = this;
	
	      if (this.state.scannerName) {
	        var paramsId = parseInt(key_id, 10); // 10 Decimal
	        var lineId = parseInt(this.state.lineId);
	        console.log(this.state.scannerName);
	        var item = {
	          scannerId: paramsId,
	          scannerName: this.state.scannerName,
	          scannerIp: this.state.scannerIp,
	          scannerPort: this.state.scannerPort,
	          recCreated: dateStr,
	          recDatetime: dateStr,
	          lineId: lineId
	        };
	
	        return _react2.default.createElement(_DataForm2.default, {
	          title: 'Add Scanners',
	          hasCancel: true,
	          item: item,
	          bodyRender: this.fromBodyRender,
	          onSubmit: function onSubmit(itm) {
	            console.log(itm);
	            var scannerPort = parseInt(itm.scannerPort);
	            _ApiService2.default.editCcaScanners(paramsId, {
	              scannerId: paramsId,
	              scannerName: itm.scannerName,
	              scannerIp: itm.scannerIp,
	              scannerPort: scannerPort,
	              recCreated: itm.recCreated,
	              recDatetime: itm.recDatetime
	            }).then(function (res) {
	              if (!res) throw new Error(res.status);else _this3.fromSubmit(itm);
	              //console.log(JSON.stringify(itm.plantId));
	              _this3.props.history.push("/View");
	              (0, _utils.alertMessage)({ message: 'Data ' + itm.scannerName + ' update successfully.' });
	            });
	          },
	          onCancel: function onCancel(itm) {}
	        });
	      }
	    }
	  }, {
	    key: 'fromSubmit',
	    value: function fromSubmit(itm) {
	      console.log(itm);
	      var lineId = parseInt(itm.lineId);
	      var scannerId = parseInt(itm.scannerId);
	      _ApiService2.default.deleteCcaSickLineScanners(scannerId);
	      _ApiService2.default.addCcaLineScanners({
	        "lineId": lineId,
	        "scannerId": scannerId
	      });
	    }
	  }, {
	    key: 'fromBodyRender',
	    value: function fromBodyRender(options) {
	      var selLines = [];
	      {
	        this.state.arrLines.map(function (item) {
	          selLines.push({ title: item.lineName, value: item.lineId });
	        });
	      }
	      var item = options.item,
	          binding = options.binding;
	
	      return _react2.default.createElement(
	        'div',
	        { className: 'row' },
	        _react2.default.createElement(
	          'div',
	          { className: 'col-md-8' },
	          _react2.default.createElement(_UI.TextInput, (0, _extends3.default)({
	            placeHolder: 'Scanner Name',
	            helpText: 'Scanner Name'
	          }, binding("scannerName")))
	        ),
	        _react2.default.createElement(
	          'div',
	          { className: 'col-md-8' },
	          _react2.default.createElement(_UI.TextInput, (0, _extends3.default)({
	            placeHolder: 'Scanner IP',
	            helpText: 'Scanner IP'
	          }, binding("scannerIp")))
	        ),
	        _react2.default.createElement(
	          'div',
	          { className: 'col-md-8' },
	          _react2.default.createElement(_UI.TextInput, (0, _extends3.default)({
	            placeHolder: 'Scanner Port',
	            helpText: 'Scanner Port'
	          }, binding("scannerPort")))
	        ),
	        _react2.default.createElement(
	          'div',
	          { className: 'col-md-8' },
	          _react2.default.createElement(_UI.Select, (0, _extends3.default)({
	            placeHolder: 'Line',
	            options: selLines
	          }, binding("lineId")))
	        )
	      );
	    }
	  }]);
	  return EditForm;
	}(_BaseContainer3.default);
	
	exports.default = EditForm;

/***/ }),
/* 572 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _getPrototypeOf = __webpack_require__(382);
	
	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);
	
	var _classCallCheck2 = __webpack_require__(386);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _createClass2 = __webpack_require__(387);
	
	var _createClass3 = _interopRequireDefault(_createClass2);
	
	var _possibleConstructorReturn2 = __webpack_require__(388);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(405);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _react = __webpack_require__(25);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _BaseContainer2 = __webpack_require__(474);
	
	var _BaseContainer3 = _interopRequireDefault(_BaseContainer2);
	
	var _Table = __webpack_require__(503);
	
	var _Table2 = _interopRequireDefault(_Table);
	
	var _ApiService = __webpack_require__(438);
	
	var _ApiService2 = _interopRequireDefault(_ApiService);
	
	var _utils = __webpack_require__(476);
	
	var _reactRouterDom = __webpack_require__(512);
	
	var _EditForm = __webpack_require__(571);
	
	var _EditForm2 = _interopRequireDefault(_EditForm);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	//const TABLE_DATA = []
	var data = [];
	
	var TableView = function (_BaseContainer) {
	  (0, _inherits3.default)(TableView, _BaseContainer);
	
	  function TableView() {
	    var _ref;
	
	    var _temp, _this, _ret;
	
	    (0, _classCallCheck3.default)(this, TableView);
	
	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }
	
	    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = TableView.__proto__ || (0, _getPrototypeOf2.default)(TableView)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
	      header: [{
	        title: "#",
	        prop: "no"
	      }, {
	        title: "Scanner Name",
	        prop: "scannerName"
	      }, {
	        title: "Scanner IP",
	        prop: "scannerIp"
	      }, {
	        title: "Scanner Port",
	        prop: "scannerPort"
	      }, {
	        title: "Action"
	      }],
	      data: data
	    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
	  }
	
	  (0, _createClass3.default)(TableView, [{
	    key: 'componentWillMount',
	    value: function componentWillMount() {
	      var _this2 = this;
	
	      this.setState({
	        title: "SICK Scanners"
	      });
	      _ApiService2.default.fetchCcaScanners().then(function (response) {
	        _this2.setState({
	          data: response.data
	        });
	      });
	      this.showLoading(true);
	      setTimeout(function () {
	        _this2.showLoading(false);
	      }, 500);
	    }
	  }, {
	    key: '_renderContent',
	    value: function _renderContent() {
	      console.log(this.state);
	      return _react2.default.createElement(
	        'div',
	        { className: 'portlet body' },
	        _react2.default.createElement(_Table2.default, {
	          searchableProperties: ["scannerName", "scannerIp", "scannerPort"],
	          hasTopBar: true,
	          headers: this.state.header,
	          data: this.state.data,
	          rowRender: this._renderRow,
	          onAddNewHandler: this.onAddNewClick.bind(this)
	        })
	      );
	    }
	  }, {
	    key: 'onAddNewClick',
	    value: function onAddNewClick() {
	      /* const newData = this.state.data.slice(0)
	      newData.push(
	        {"no": "", "scannerName": "time_" + Date.now(), "": "Scanner IP", "scannerPort": "", "": "Repack", "": "RP SSCC Code"}
	      )
	       this.setState({
	        data: newData
	      }) */
	      alert('Got to Add Data');
	    }
	  }, {
	    key: '_renderRow',
	    value: function _renderRow(itm, i) {
	      return _react2.default.createElement(
	        'tr',
	        { key: i, className: 'odd gradeX' },
	        _react2.default.createElement(
	          'td',
	          null,
	          i + 1
	        ),
	        _react2.default.createElement(
	          'td',
	          null,
	          itm.scannerName
	        ),
	        _react2.default.createElement(
	          'td',
	          null,
	          itm.scannerIp
	        ),
	        _react2.default.createElement(
	          'td',
	          null,
	          itm.scannerPort
	        ),
	        _react2.default.createElement(
	          'td',
	          null,
	          _react2.default.createElement(
	            'div',
	            { className: 'btn-group' },
	            _react2.default.createElement(
	              'button',
	              { className: 'btn btn-xs green dropdown-toggle', type: 'button', 'data-toggle': 'dropdown', 'aria-expanded': 'false' },
	              ' Actions',
	              _react2.default.createElement('i', { className: 'fa fa-angle-down' })
	            ),
	            _react2.default.createElement(
	              'ul',
	              { className: 'dropdown-menu pull-left', role: 'menu' },
	              _react2.default.createElement(
	                'li',
	                null,
	                _react2.default.createElement(
	                  'a',
	                  { href: 'javascript:;' },
	                  _react2.default.createElement('i', { className: 'icon-flag' }),
	                  ' Area Name',
	                  _react2.default.createElement(
	                    'span',
	                    { className: 'badge badge-success' },
	                    '4'
	                  )
	                )
	              ),
	              _react2.default.createElement(
	                'li',
	                null,
	                _react2.default.createElement(
	                  'a',
	                  { href: 'javascript:;' },
	                  _react2.default.createElement('i', { className: 'glyphicon glyphicon-tags' }),
	                  ' Area Code '
	                )
	              ),
	              _react2.default.createElement(
	                'li',
	                { className: 'divider' },
	                ' '
	              ),
	              _react2.default.createElement(
	                'li',
	                null,
	                _react2.default.createElement(
	                  _reactRouterDom.Link,
	                  { to: '/Edit/Find?id=' + itm.scannerId, id: 'btnEdit' },
	                  _react2.default.createElement('i', { className: 'glyphicon glyphicon-pencil' }),
	                  ' Edit '
	                )
	              ),
	              _react2.default.createElement(
	                'li',
	                null,
	                _react2.default.createElement(
	                  'a',
	                  { onClick: function onClick(e) {
	                      return handleClick(itm.scannerId);
	                    } },
	                  _react2.default.createElement('i', { className: 'glyphicon glyphicon-trash' }),
	                  ' Delete '
	                )
	              )
	            )
	          )
	        )
	      );
	    }
	  }]);
	  return TableView;
	}(_BaseContainer3.default);
	
	function handleClick(val) {
	  var _this3 = this;
	
	  //alert(e)
	  var result = confirm("Are you sure...?");
	  if (result) {
	    _ApiService2.default.deleteCcaSickLineScanners(val);
	    _ApiService2.default.deleteCcaScanners(val).then(function (response) {
	      _this3.props.history.push("/View");
	      (0, _utils.alertMessage)({ message: 'Data ' + response.data.scannerName + ' deleted successfully' });
	    });
	  }
	}
	
	exports.default = TableView;

/***/ }),
/* 573 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _HomeContainer = __webpack_require__(574);
	
	var _HomeContainer2 = _interopRequireDefault(_HomeContainer);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	// Sync route definition
	
	exports.default = function (store) {
	  return {
	    path: 'cca_items',
	    /*  Async getComponent is only invoked when route matches   */
	    getComponent: function getComponent(nextState, cb) {
	      /*  Webpack - use 'require.ensure' to create a split point
	          and embed an async module loader (jsonp) when bundling   */
	      !/* require.ensure */(function (require) {
	
	        /*  Return getComponent   */
	        cb(null, _HomeContainer2.default);
	
	        /* Webpack named bundle   */
	      }(__webpack_require__));
	    }
	  };
	};

/***/ }),
/* 574 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _getPrototypeOf = __webpack_require__(382);
	
	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);
	
	var _classCallCheck2 = __webpack_require__(386);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _createClass2 = __webpack_require__(387);
	
	var _createClass3 = _interopRequireDefault(_createClass2);
	
	var _possibleConstructorReturn2 = __webpack_require__(388);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(405);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _react = __webpack_require__(25);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _BaseContainer2 = __webpack_require__(474);
	
	var _BaseContainer3 = _interopRequireDefault(_BaseContainer2);
	
	var _reactRouterDom = __webpack_require__(512);
	
	var _AddForm = __webpack_require__(575);
	
	var _AddForm2 = _interopRequireDefault(_AddForm);
	
	var _EditForm = __webpack_require__(576);
	
	var _EditForm2 = _interopRequireDefault(_EditForm);
	
	var _TableView = __webpack_require__(577);
	
	var _TableView2 = _interopRequireDefault(_TableView);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var HomeContainer = function (_BaseContainer) {
	  (0, _inherits3.default)(HomeContainer, _BaseContainer);
	
	  function HomeContainer() {
	    (0, _classCallCheck3.default)(this, HomeContainer);
	    return (0, _possibleConstructorReturn3.default)(this, (HomeContainer.__proto__ || (0, _getPrototypeOf2.default)(HomeContainer)).call(this));
	  }
	
	  (0, _createClass3.default)(HomeContainer, [{
	    key: 'componentWillMount',
	    value: function componentWillMount() {
	      this.setState({
	        title: "Lines"
	      });
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      return _react2.default.createElement(
	        _reactRouterDom.BrowserRouter,
	        null,
	        _react2.default.createElement(
	          _reactRouterDom.Switch,
	          null,
	          _react2.default.createElement(_reactRouterDom.Route, { exact: true, path: '/Create', component: _AddForm2.default }),
	          _react2.default.createElement(_reactRouterDom.Route, { path: '/Edit/:id', component: _EditForm2.default }),
	          _react2.default.createElement(_reactRouterDom.Route, { path: '/View', component: _TableView2.default }),
	          _react2.default.createElement(_reactRouterDom.Route, { path: '/', component: _TableView2.default }),
	          _react2.default.createElement(_reactRouterDom.Route, { component: _AddForm2.default })
	        )
	      );
	    }
	  }]);
	  return HomeContainer;
	}(_BaseContainer3.default);
	
	exports.default = HomeContainer;

/***/ }),
/* 575 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _extends2 = __webpack_require__(313);
	
	var _extends3 = _interopRequireDefault(_extends2);
	
	var _getPrototypeOf = __webpack_require__(382);
	
	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);
	
	var _classCallCheck2 = __webpack_require__(386);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _createClass2 = __webpack_require__(387);
	
	var _createClass3 = _interopRequireDefault(_createClass2);
	
	var _possibleConstructorReturn2 = __webpack_require__(388);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(405);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _react = __webpack_require__(25);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _BaseContainer2 = __webpack_require__(474);
	
	var _BaseContainer3 = _interopRequireDefault(_BaseContainer2);
	
	var _ApiService = __webpack_require__(438);
	
	var _ApiService2 = _interopRequireDefault(_ApiService);
	
	var _UI = __webpack_require__(485);
	
	var _DataForm = __webpack_require__(538);
	
	var _DataForm2 = _interopRequireDefault(_DataForm);
	
	var _utils = __webpack_require__(476);
	
	var _reactRouterDom = __webpack_require__(512);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var TABS_DATA = [];
	var dateStr = "";
	var date = new Date();
	
	var AddForm = function (_BaseContainer) {
	  (0, _inherits3.default)(AddForm, _BaseContainer);
	
	  function AddForm(props) {
	    (0, _classCallCheck3.default)(this, AddForm);
	
	    var _this = (0, _possibleConstructorReturn3.default)(this, (AddForm.__proto__ || (0, _getPrototypeOf2.default)(AddForm)).call(this, props));
	
	    _this.fromBodyRender = _this.fromBodyRender.bind(_this);
	    _this.fromSubmit = _this.fromSubmit.bind(_this);
	    _this.state = {
	      isLoading: true
	    };
	    return _this;
	  }
	
	  (0, _createClass3.default)(AddForm, [{
	    key: 'componentWillMount',
	    value: function componentWillMount() {
	      this.setState({
	        title: "Materials"
	      });
	      dateStr = date.getFullYear() + "-" + ("00" + (date.getMonth() + 1)).slice(-2) + "-" + ("00" + date.getDate()).slice(-2) + "T" + ("00" + date.getHours()).slice(-2) + ":" + ("00" + date.getMinutes()).slice(-2) + ":" + ("00" + date.getSeconds()).slice(-2);
	      //alert(dateStr)
	    }
	
	    //--------------------------------------------------------------------//
	    //  Form Content Renderer
	    //--------------------------------------------------------------------//
	
	  }, {
	    key: '_renderContent',
	    value: function _renderContent() {
	      var item = {
	        plantDescr: "",
	        plantCode: "",
	        grInterval: 0,
	        isInterval: 0,
	        useEwm: 0,
	        recCreated: dateStr,
	        recDatetime: dateStr
	      };
	
	      return _react2.default.createElement(_DataForm2.default, {
	        title: 'Import CSV',
	        hasCancel: true,
	        item: item,
	        bodyRender: this.fromBodyRender,
	        onSubmit: function onSubmit(itm) {},
	        onCancel: function onCancel(itm) {
	          alert("Data reset");
	        }
	      });
	    }
	  }, {
	    key: 'fromSubmit',
	    value: function fromSubmit(itm) {}
	  }, {
	    key: 'fromBodyRender',
	    value: function fromBodyRender(options) {
	      var item = options.item,
	          binding = options.binding;
	
	      return _react2.default.createElement(
	        'div',
	        { className: 'row' },
	        _react2.default.createElement(
	          'div',
	          { className: 'col-6 col-sm-9' },
	          _react2.default.createElement(_UI.TextInput, (0, _extends3.default)({
	            placeHolder: 'CSV File',
	            helpText: 'Choose File',
	            type: 'file'
	          }, binding("file")))
	        )
	      );
	    }
	  }]);
	  return AddForm;
	}(_BaseContainer3.default);
	
	exports.default = AddForm;

/***/ }),
/* 576 */
/***/ (function(module, exports) {

	"use strict";

/***/ }),
/* 577 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _getPrototypeOf = __webpack_require__(382);
	
	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);
	
	var _classCallCheck2 = __webpack_require__(386);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _createClass2 = __webpack_require__(387);
	
	var _createClass3 = _interopRequireDefault(_createClass2);
	
	var _possibleConstructorReturn2 = __webpack_require__(388);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(405);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _react = __webpack_require__(25);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _BaseContainer2 = __webpack_require__(474);
	
	var _BaseContainer3 = _interopRequireDefault(_BaseContainer2);
	
	var _Table = __webpack_require__(503);
	
	var _Table2 = _interopRequireDefault(_Table);
	
	var _ApiService = __webpack_require__(438);
	
	var _ApiService2 = _interopRequireDefault(_ApiService);
	
	var _utils = __webpack_require__(476);
	
	var _reactRouterDom = __webpack_require__(512);
	
	var _EditForm = __webpack_require__(576);
	
	var _EditForm2 = _interopRequireDefault(_EditForm);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	//const TABLE_DATA = []
	var data = [];
	
	var TableView = function (_BaseContainer) {
	  (0, _inherits3.default)(TableView, _BaseContainer);
	
	  function TableView() {
	    var _ref;
	
	    var _temp, _this, _ret;
	
	    (0, _classCallCheck3.default)(this, TableView);
	
	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }
	
	    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = TableView.__proto__ || (0, _getPrototypeOf2.default)(TableView)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
	      header: [{
	        title: "#",
	        prop: "no"
	      }, {
	        title: "Material Description",
	        prop: "itemName"
	      }, {
	        title: "SKU",
	        prop: "itemSku"
	      }, {
	        title: "Material Number",
	        prop: "itemMaterialNo"
	      }, {
	        title: "Qty per Pallete",
	        prop: "itemPalletQty"
	      }, {
	        title: "Pallete Type",
	        prop: "itemPalletType"
	      }, {
	        title: "Qty per Pallete 2",
	        prop: "itemPalletQty2"
	      }, {
	        title: "Pallete Type 2",
	        prop: "itemPalletType2"
	      }, {
	        title: "Best Before in Days",
	        prop: "itemBestBeforeInDays"
	      }, {
	        title: "Action"
	      }],
	      data: data
	    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
	  }
	
	  (0, _createClass3.default)(TableView, [{
	    key: 'componentWillMount',
	    value: function componentWillMount() {
	      var _this2 = this;
	
	      this.setState({
	        title: "Materials"
	      });
	      _ApiService2.default.fetchCcaItems().then(function (response) {
	        _this2.setState({
	          data: response.data
	        });
	      });
	      this.showLoading(true);
	      setTimeout(function () {
	        _this2.showLoading(false);
	      }, 500);
	    }
	  }, {
	    key: '_renderContent',
	    value: function _renderContent() {
	      console.log(this.state);
	      return _react2.default.createElement(
	        'div',
	        { className: 'portlet body' },
	        _react2.default.createElement(_Table2.default, {
	          searchableProperties: ["itemName", "itemSku", "itemMaterialNo", "itemPalletQty", "itemPalletType", "itemPalletQty2", "itemPalletType2", "itemBestBeforeInDays"],
	          hasTopBar: true,
	          headers: this.state.header,
	          data: this.state.data,
	          rowRender: this._renderRow,
	          onAddNewHandler: this.onAddNewClick.bind(this)
	        })
	      );
	    }
	  }, {
	    key: 'onAddNewClick',
	    value: function onAddNewClick() {
	      /* const newData = this.state.data.slice(0)
	      newData.push(
	        {"no": "", "scannerName": "time_" + Date.now(), "": "SKU", "scannerPort": "", "": "Repack", "": "RP SSCC Code"}
	      )
	       this.setState({
	        data: newData
	      }) */
	      alert('Got to Add Data');
	    }
	  }, {
	    key: '_renderRow',
	    value: function _renderRow(itm, i) {
	      return _react2.default.createElement(
	        'tr',
	        { key: i, className: 'odd gradeX' },
	        _react2.default.createElement(
	          'td',
	          null,
	          i + 1
	        ),
	        _react2.default.createElement(
	          'td',
	          null,
	          itm.itemName
	        ),
	        _react2.default.createElement(
	          'td',
	          null,
	          itm.itemSku
	        ),
	        _react2.default.createElement(
	          'td',
	          null,
	          itm.itemMaterialNo
	        ),
	        _react2.default.createElement(
	          'td',
	          null,
	          itm.itemPalletQty
	        ),
	        _react2.default.createElement(
	          'td',
	          null,
	          itm.itemPalletType
	        ),
	        _react2.default.createElement(
	          'td',
	          null,
	          itm.itemPalletQty2
	        ),
	        _react2.default.createElement(
	          'td',
	          null,
	          itm.itemPalletType2
	        ),
	        _react2.default.createElement(
	          'td',
	          null,
	          itm.itemBestBeforeInDays
	        ),
	        _react2.default.createElement(
	          'td',
	          null,
	          _react2.default.createElement(
	            'div',
	            { className: 'btn-group' },
	            _react2.default.createElement(
	              'button',
	              { className: 'btn btn-xs green dropdown-toggle', type: 'button', 'data-toggle': 'dropdown', 'aria-expanded': 'false' },
	              ' Actions',
	              _react2.default.createElement('i', { className: 'fa fa-angle-down' })
	            ),
	            _react2.default.createElement(
	              'ul',
	              { className: 'dropdown-menu pull-left', role: 'menu' },
	              _react2.default.createElement(
	                'li',
	                null,
	                _react2.default.createElement(
	                  'a',
	                  { href: 'javascript:;' },
	                  _react2.default.createElement('i', { className: 'icon-flag' }),
	                  ' Area Name',
	                  _react2.default.createElement(
	                    'span',
	                    { className: 'badge badge-success' },
	                    '4'
	                  )
	                )
	              ),
	              _react2.default.createElement(
	                'li',
	                null,
	                _react2.default.createElement(
	                  'a',
	                  { href: 'javascript:;' },
	                  _react2.default.createElement('i', { className: 'glyphicon glyphicon-tags' }),
	                  ' Area Code '
	                )
	              ),
	              _react2.default.createElement(
	                'li',
	                { className: 'divider' },
	                ' '
	              ),
	              _react2.default.createElement(
	                'li',
	                null,
	                _react2.default.createElement(
	                  'a',
	                  { href: 'javascript:;' },
	                  _react2.default.createElement('i', { className: 'glyphicon glyphicon-trash' }),
	                  ' Delete '
	                )
	              )
	            )
	          )
	        )
	      );
	    }
	  }]);
	  return TableView;
	}(_BaseContainer3.default);
	
	exports.default = TableView;

/***/ }),
/* 578 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _HomeContainer = __webpack_require__(579);
	
	var _HomeContainer2 = _interopRequireDefault(_HomeContainer);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	// Sync route definition
	
	exports.default = function (store) {
	  return {
	    path: 'cca_process_orders',
	    /*  Async getComponent is only invoked when route matches   */
	    getComponent: function getComponent(nextState, cb) {
	      /*  Webpack - use 'require.ensure' to create a split point
	          and embed an async module loader (jsonp) when bundling   */
	      !/* require.ensure */(function (require) {
	
	        /*  Return getComponent   */
	        cb(null, _HomeContainer2.default);
	
	        /* Webpack named bundle   */
	      }(__webpack_require__));
	    }
	  };
	};

/***/ }),
/* 579 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _getPrototypeOf = __webpack_require__(382);
	
	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);
	
	var _classCallCheck2 = __webpack_require__(386);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _createClass2 = __webpack_require__(387);
	
	var _createClass3 = _interopRequireDefault(_createClass2);
	
	var _possibleConstructorReturn2 = __webpack_require__(388);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(405);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _react = __webpack_require__(25);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _BaseContainer2 = __webpack_require__(474);
	
	var _BaseContainer3 = _interopRequireDefault(_BaseContainer2);
	
	var _reactRouterDom = __webpack_require__(512);
	
	var _AddForm = __webpack_require__(580);
	
	var _AddForm2 = _interopRequireDefault(_AddForm);
	
	var _EditForm = __webpack_require__(581);
	
	var _EditForm2 = _interopRequireDefault(_EditForm);
	
	var _TableView = __webpack_require__(582);
	
	var _TableView2 = _interopRequireDefault(_TableView);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var HomeContainer = function (_BaseContainer) {
	  (0, _inherits3.default)(HomeContainer, _BaseContainer);
	
	  function HomeContainer() {
	    (0, _classCallCheck3.default)(this, HomeContainer);
	    return (0, _possibleConstructorReturn3.default)(this, (HomeContainer.__proto__ || (0, _getPrototypeOf2.default)(HomeContainer)).call(this));
	  }
	
	  (0, _createClass3.default)(HomeContainer, [{
	    key: 'componentWillMount',
	    value: function componentWillMount() {
	      this.setState({
	        title: "Plant Area"
	      });
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      return _react2.default.createElement(
	        _reactRouterDom.BrowserRouter,
	        null,
	        _react2.default.createElement(
	          _reactRouterDom.Switch,
	          null,
	          _react2.default.createElement(_reactRouterDom.Route, { exact: true, path: '/Create', component: _AddForm2.default }),
	          _react2.default.createElement(_reactRouterDom.Route, { path: '/Edit/:id', component: _EditForm2.default }),
	          _react2.default.createElement(_reactRouterDom.Route, { path: '/View', component: _TableView2.default }),
	          _react2.default.createElement(_reactRouterDom.Route, { path: '/', component: _TableView2.default }),
	          _react2.default.createElement(_reactRouterDom.Route, { component: _AddForm2.default })
	        )
	      );
	    }
	  }]);
	  return HomeContainer;
	}(_BaseContainer3.default);
	
	exports.default = HomeContainer;

/***/ }),
/* 580 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _extends2 = __webpack_require__(313);
	
	var _extends3 = _interopRequireDefault(_extends2);
	
	var _getPrototypeOf = __webpack_require__(382);
	
	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);
	
	var _classCallCheck2 = __webpack_require__(386);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _createClass2 = __webpack_require__(387);
	
	var _createClass3 = _interopRequireDefault(_createClass2);
	
	var _possibleConstructorReturn2 = __webpack_require__(388);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(405);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _react = __webpack_require__(25);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _BaseContainer2 = __webpack_require__(474);
	
	var _BaseContainer3 = _interopRequireDefault(_BaseContainer2);
	
	var _ApiService = __webpack_require__(438);
	
	var _ApiService2 = _interopRequireDefault(_ApiService);
	
	var _UI = __webpack_require__(485);
	
	var _DataForm = __webpack_require__(538);
	
	var _DataForm2 = _interopRequireDefault(_DataForm);
	
	var _utils = __webpack_require__(476);
	
	var _reactRouterDom = __webpack_require__(512);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var TABS_DATA = [];
	var dateStr = "";
	var date = new Date();
	
	var AddForm = function (_BaseContainer) {
	  (0, _inherits3.default)(AddForm, _BaseContainer);
	
	  function AddForm() {
	    var _ref;
	
	    var _temp, _this, _ret;
	
	    (0, _classCallCheck3.default)(this, AddForm);
	
	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }
	
	    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = AddForm.__proto__ || (0, _getPrototypeOf2.default)(AddForm)).call.apply(_ref, [this].concat(args))), _this), _this.handleSubmitted = function (_ref2) {
	      var res = _ref2.res,
	          fields = _ref2.fields,
	          form = _ref2.form;
	
	      form.reset(); // resets view
	    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
	  }
	
	  (0, _createClass3.default)(AddForm, [{
	    key: 'componentWillMount',
	    value: function componentWillMount() {
	      dateStr = date.getFullYear() + "-" + ("00" + (date.getMonth() + 1)).slice(-2) + "-" + ("00" + date.getDate()).slice(-2) + "T" + ("00" + date.getHours()).slice(-2) + ":" + ("00" + date.getMinutes()).slice(-2) + ":" + ("00" + date.getSeconds()).slice(-2);
	      //alert(dateStr)
	    }
	
	    //--------------------------------------------------------------------//
	    //  Form Content Renderer
	    //--------------------------------------------------------------------//
	
	  }, {
	    key: '_renderContent',
	    value: function _renderContent() {
	      var item = {
	        plantDescr: "",
	        plantCode: "",
	        server: "",
	        recCreated: dateStr,
	        recDatetime: dateStr
	      };
	
	      return _react2.default.createElement(_DataForm2.default, {
	        title: 'Add Plants',
	        hasCancel: true,
	        item: item,
	        bodyRender: this.fromBodyRender,
	        onSubmit: function onSubmit(itm) {
	          _ApiService2.default.addCcaPlants(itm).then(function (res) {
	            //this.props.history.push(View)
	          });
	          (0, _utils.alertMessage)({ message: 'Data added successfully.' });
	        },
	        onCancel: function onCancel(itm) {}
	      });
	    }
	  }, {
	    key: 'fromBodyRender',
	    value: function fromBodyRender(options) {
	      var item = options.item,
	          binding = options.binding;
	
	      return _react2.default.createElement(
	        'div',
	        { className: 'row' },
	        _react2.default.createElement(
	          'div',
	          { className: 'col-xs-3 col-md-5' },
	          _react2.default.createElement(_UI.TextInput, (0, _extends3.default)({
	            placeHolder: 'Plant Name',
	            helpText: ''
	          }, binding("plantDescr")))
	        ),
	        _react2.default.createElement(
	          'div',
	          { className: 'col-xs-3 col-md-5' },
	          _react2.default.createElement(_UI.TextInput, (0, _extends3.default)({
	            placeHolder: 'Plant Code',
	            helpText: ''
	          }, binding("plantCode")))
	        ),
	        _react2.default.createElement(
	          'div',
	          { className: 'col-sm-4' },
	          _react2.default.createElement(_UI.CheckBox, (0, _extends3.default)({
	            placeHolder: 'GR does not use real-time data'
	          }, binding("remember1")))
	        ),
	        _react2.default.createElement(
	          'div',
	          { className: 'col-xs-6 col-md-2' },
	          _react2.default.createElement(_UI.TextInput, (0, _extends3.default)({
	            placeHolder: 'Second(s)',
	            helpText: ''
	          }, binding("")))
	        ),
	        _react2.default.createElement(
	          'div',
	          { className: 'col-sm-8' },
	          _react2.default.createElement(_UI.CheckBox, (0, _extends3.default)({
	            placeHolder: 'Using EWM System'
	          }, binding("remember2")))
	        )
	      );
	    }
	  }]);
	  return AddForm;
	}(_BaseContainer3.default);
	
	exports.default = AddForm;

/***/ }),
/* 581 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _getPrototypeOf = __webpack_require__(382);
	
	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);
	
	var _classCallCheck2 = __webpack_require__(386);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _createClass2 = __webpack_require__(387);
	
	var _createClass3 = _interopRequireDefault(_createClass2);
	
	var _possibleConstructorReturn2 = __webpack_require__(388);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(405);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _react = __webpack_require__(25);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _ApiService = __webpack_require__(438);
	
	var _ApiService2 = _interopRequireDefault(_ApiService);
	
	var _utils = __webpack_require__(476);
	
	var _reactRouterDom = __webpack_require__(512);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var dateStr = "";
	var date = new Date();
	var key_id = 0;
	
	var Edit = function (_Component) {
	  (0, _inherits3.default)(Edit, _Component);
	
	  function Edit(props) {
	    (0, _classCallCheck3.default)(this, Edit);
	
	    var _this = (0, _possibleConstructorReturn3.default)(this, (Edit.__proto__ || (0, _getPrototypeOf2.default)(Edit)).call(this, props));
	
	    _this.onChangeScannerName = _this.onChangeScannerName.bind(_this);
	    _this.onChangeScannerIP = _this.onChangeScannerIP.bind(_this);
	    _this.onChangeScannerPORT = _this.onChangeScannerPORT.bind(_this);
	    _this.onSubmit = _this.onSubmit.bind(_this);
	
	    _this.state = {
	      scannerId: '',
	      scannerName: '',
	      scannerIp: '',
	      scannerPort: ''
	    };
	    return _this;
	  }
	
	  (0, _createClass3.default)(Edit, [{
	    key: 'componentDidMount',
	    value: function componentDidMount() {
	      var _this2 = this;
	
	      dateStr = date.getFullYear() + "-" + ("00" + (date.getMonth() + 1)).slice(-2) + "-" + ("00" + date.getDate()).slice(-2) + "T" + ("00" + date.getHours()).slice(-2) + ":" + ("00" + date.getMinutes()).slice(-2) + ":" + ("00" + date.getSeconds()).slice(-2);
	
	      var url = window.location.search;
	      var urlParams = new URLSearchParams(url);
	      var idVal = urlParams.get('id');
	      key_id = idVal;
	
	      _ApiService2.default.fetchCcaScannersById(key_id).then(function (response) {
	        _this2.setState({
	          scannerId: response.data.scannerId,
	          scannerName: response.data.scannerName,
	          scannerIp: response.data.scannerIp,
	          scannerPort: response.data.scannerPort
	        });
	      }).catch(function (error) {
	        console.log(error);
	      });
	    }
	  }, {
	    key: 'onChangeScannerName',
	    value: function onChangeScannerName(e) {
	      this.setState({
	        scannerName: e.target.value
	      });
	    }
	  }, {
	    key: 'onChangeScannerIP',
	    value: function onChangeScannerIP(e) {
	      this.setState({
	        scannerIp: e.target.value
	      });
	    }
	  }, {
	    key: 'onChangeScannerPORT',
	    value: function onChangeScannerPORT(e) {
	      this.setState({
	        scannerPort: e.target.value
	      });
	    }
	  }, {
	    key: 'onSubmit',
	    value: function onSubmit(e) {
	      var _this3 = this;
	
	      e.preventDefault();
	      var paramsId = parseInt(key_id, 10); // 10 Decimal
	      var obj = {
	        scannerId: paramsId, //this.props.match.params.id,
	        scannerName: this.state.scannerName,
	        scannerIp: this.state.scannerIp,
	        scannerPort: this.state.scannerPort,
	        recCreated: dateStr,
	        recDatetime: dateStr
	      };
	      console.log(obj);
	      _ApiService2.default.editCcaScanners(paramsId, obj).then(function (res) {
	        //this.props.history.push(View)
	        _this3.props.history.push("/View");
	      });
	      (0, _utils.alertMessage)({ message: 'Data added successfully.' });
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      return _react2.default.createElement(
	        'div',
	        { className: 'portlet light bordered' },
	        _react2.default.createElement(
	          'div',
	          { className: 'portlet-title' },
	          _react2.default.createElement(
	            _reactRouterDom.Link,
	            { to: '/View', className: 'btn sbold blue', id: 'btnView' },
	            'VIEW DATA',
	            _react2.default.createElement('i', { className: 'fa fa-list-alt ' })
	          ),
	          _react2.default.createElement('br', null),
	          _react2.default.createElement(
	            'div',
	            { className: 'caption font-red-sunglo' },
	            _react2.default.createElement('i', { className: 'icon-settings font-red-sunglo' }),
	            _react2.default.createElement(
	              'span',
	              { className: 'caption-subject bold uppercase' },
	              'Edit Printers'
	            )
	          )
	        ),
	        _react2.default.createElement(
	          'div',
	          { className: 'portlet-body form' },
	          _react2.default.createElement(
	            'form',
	            { onSubmit: this.onSubmit },
	            _react2.default.createElement(
	              'div',
	              { className: 'form-group' },
	              _react2.default.createElement(
	                'div',
	                { className: 'row' },
	                _react2.default.createElement(
	                  'div',
	                  { className: 'col-xs-3 col-md-5' },
	                  _react2.default.createElement(
	                    'div',
	                    { className: 'form-group form-md-line-input' },
	                    _react2.default.createElement(
	                      'label',
	                      null,
	                      'Scanner Name :  '
	                    ),
	                    _react2.default.createElement('input', {
	                      type: 'text',
	                      className: 'form-control',
	                      value: this.state.scannerName,
	                      onChange: this.onChangeScannerName
	                    })
	                  )
	                ),
	                _react2.default.createElement(
	                  'div',
	                  { className: 'col-xs-3 col-md-5' },
	                  _react2.default.createElement(
	                    'div',
	                    { className: 'form-group form-md-line-input' },
	                    _react2.default.createElement(
	                      'label',
	                      null,
	                      'Scanner IP : '
	                    ),
	                    _react2.default.createElement('input', { type: 'text',
	                      className: 'form-control',
	                      value: this.state.scannerIp,
	                      onChange: this.onChangeScannerIP
	                    })
	                  )
	                ),
	                _react2.default.createElement(
	                  'div',
	                  { className: 'col-xs-3 col-md-5' },
	                  _react2.default.createElement(
	                    'div',
	                    { className: 'form-group form-md-line-input' },
	                    _react2.default.createElement(
	                      'label',
	                      null,
	                      'Scanner Port : '
	                    ),
	                    _react2.default.createElement('input', { type: 'text',
	                      className: 'form-control',
	                      value: this.state.scannerPort,
	                      onChange: this.onChangeScannerPORT
	                    })
	                  )
	                ),
	                _react2.default.createElement(
	                  'div',
	                  { className: 'col-sm-12' },
	                  _react2.default.createElement(
	                    'div',
	                    { className: 'form-actions noborder' },
	                    _react2.default.createElement('input', { type: 'submit',
	                      value: 'Update',
	                      className: 'btn blue' })
	                  )
	                )
	              )
	            )
	          )
	        )
	      );
	    }
	  }]);
	  return Edit;
	}(_react.Component);
	
	exports.default = Edit;

/***/ }),
/* 582 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _getPrototypeOf = __webpack_require__(382);
	
	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);
	
	var _classCallCheck2 = __webpack_require__(386);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _createClass2 = __webpack_require__(387);
	
	var _createClass3 = _interopRequireDefault(_createClass2);
	
	var _possibleConstructorReturn2 = __webpack_require__(388);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(405);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _react = __webpack_require__(25);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _BaseContainer2 = __webpack_require__(474);
	
	var _BaseContainer3 = _interopRequireDefault(_BaseContainer2);
	
	var _Table = __webpack_require__(503);
	
	var _Table2 = _interopRequireDefault(_Table);
	
	var _ApiService = __webpack_require__(438);
	
	var _ApiService2 = _interopRequireDefault(_ApiService);
	
	var _utils = __webpack_require__(476);
	
	var _reactRouterDom = __webpack_require__(512);
	
	var _EditForm = __webpack_require__(581);
	
	var _EditForm2 = _interopRequireDefault(_EditForm);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	//const TABLE_DATA = []
	var data = [];
	
	var TableView = function (_BaseContainer) {
	  (0, _inherits3.default)(TableView, _BaseContainer);
	
	  function TableView(props) {
	    (0, _classCallCheck3.default)(this, TableView);
	
	    var _this = (0, _possibleConstructorReturn3.default)(this, (TableView.__proto__ || (0, _getPrototypeOf2.default)(TableView)).call(this, props));
	
	    _this.state = {
	      header: [{
	        title: "#",
	        prop: "no"
	      }, {
	        title: "Production Order",
	        prop: "itemMaterialNo"
	      }, {
	        title: "Order Type",
	        prop: "plantCode"
	      }, {
	        title: "Material",
	        prop: "plantCode"
	      }, {
	        title: "Material Description",
	        prop: "plantCode"
	      }, {
	        title: "SKU",
	        prop: "plantCode"
	      }, {
	        title: "Expected Prod. Date",
	        prop: "plantCode"
	      }, {
	        title: "Expected Case",
	        prop: "plantCode"
	      }, {
	        title: "Expected Pallete",
	        prop: "plantCode"
	      }, {
	        title: "Status",
	        prop: "plantCode"
	      }, {
	        title: "Line",
	        prop: "plantCode"
	      }, {
	        title: "Action"
	      }],
	      data: data
	    };
	
	    _this.handleClick = _this.handleClick.bind(_this);
	    return _this;
	  }
	
	  (0, _createClass3.default)(TableView, [{
	    key: 'handleClick',
	    value: function handleClick(i) {
	      alert('Click happened' + i);
	    }
	  }, {
	    key: 'onClick',
	    value: function onClick(i) {
	      alert('Click happened' + i);
	    }
	  }, {
	    key: 'componentWillMount',
	    value: function componentWillMount() {
	      var _this2 = this;
	
	      this.setState({
	        title: "Production Orders"
	      });
	      _ApiService2.default.fetchCcaProcessOrders().then(function (response) {
	        _this2.setState({
	          data: response.data
	        });
	      });
	      this.showLoading(true);
	      setTimeout(function () {
	        _this2.showLoading(false);
	      }, 500);
	
	      if (data == null || data == undefined) {
	        this.showLoading(true);
	      } else {
	        setTimeout(function () {
	          _this2.showLoading(false);
	        }, 500);
	      }
	    }
	  }, {
	    key: '_renderContent',
	    value: function _renderContent() {
	      console.log(this.state);
	      return _react2.default.createElement(
	        'div',
	        { className: 'portlet body' },
	        _react2.default.createElement(_Table2.default, {
	          searchableProperties: ["plantDescr", "plantCode"],
	          hasTopBar: true,
	          headers: this.state.header,
	          data: this.state.data,
	          rowRender: this._renderRow,
	          onAddNewHandler: this.onAddNewClick.bind(this)
	        })
	      );
	    }
	  }, {
	    key: 'onAddNewClick',
	    value: function onAddNewClick() {
	      alert('OK');
	    }
	  }, {
	    key: '_renderRow',
	    value: function _renderRow(itm, i) {
	      var _this3 = this;
	
	      return _react2.default.createElement(
	        'tr',
	        { key: i, className: 'odd gradeX' },
	        _react2.default.createElement(
	          'td',
	          null,
	          i + 1
	        ),
	        _react2.default.createElement('td', null),
	        _react2.default.createElement('td', null),
	        _react2.default.createElement('td', null),
	        _react2.default.createElement('td', null),
	        _react2.default.createElement('td', null),
	        _react2.default.createElement(
	          'td',
	          null,
	          itm.expectedProdDate
	        ),
	        _react2.default.createElement(
	          'td',
	          null,
	          itm.expectedCase
	        ),
	        _react2.default.createElement(
	          'td',
	          null,
	          itm.expectedPallets
	        ),
	        _react2.default.createElement(
	          'td',
	          null,
	          'EOL'
	        ),
	        _react2.default.createElement(
	          'td',
	          null,
	          '-'
	        ),
	        _react2.default.createElement(
	          'td',
	          null,
	          _react2.default.createElement(
	            'div',
	            { className: 'btn-group' },
	            _react2.default.createElement(
	              'button',
	              { className: 'btn btn-xs green dropdown-toggle', type: 'button', 'data-toggle': 'dropdown', 'aria-expanded': 'false' },
	              ' Actions',
	              _react2.default.createElement('i', { className: 'fa fa-angle-down' })
	            ),
	            _react2.default.createElement(
	              'ul',
	              { className: 'dropdown-menu pull-left', role: 'menu' },
	              _react2.default.createElement(
	                'li',
	                null,
	                _react2.default.createElement(
	                  'a',
	                  { href: 'javascript:;' },
	                  _react2.default.createElement('i', { className: 'icon-flag' }),
	                  ' Area Name',
	                  _react2.default.createElement(
	                    'span',
	                    { className: 'badge badge-success' },
	                    '4'
	                  )
	                )
	              ),
	              _react2.default.createElement(
	                'li',
	                null,
	                _react2.default.createElement(
	                  'a',
	                  { href: 'javascript:;' },
	                  _react2.default.createElement('i', { className: 'glyphicon glyphicon-tags' }),
	                  ' Area Code '
	                )
	              ),
	              _react2.default.createElement(
	                'li',
	                { className: 'divider' },
	                ' '
	              ),
	              _react2.default.createElement(
	                'li',
	                null,
	                _react2.default.createElement(
	                  'button',
	                  { onClick: function onClick() {
	                      return _this3.handleClick(i);
	                    } },
	                  _react2.default.createElement('i', { className: 'glyphicon glyphicon-trash' }),
	                  ' Delete '
	                )
	              )
	            )
	          )
	        )
	      );
	    }
	  }]);
	  return TableView;
	}(_BaseContainer3.default);
	
	function handleClick(val) {
	  //alert(e)
	  var result = confirm("Are you sure...?");
	  if (result) {
	    _ApiService2.default.deleteCcaProcessOrders(val).then(function (response) {
	      (0, _utils.alertMessage)({ message: 'Data ' + response.data.scannerName + ' deleted successfully' });
	    });
	  }
	}
	
	exports.default = TableView;

/***/ }),
/* 583 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _HomeContainer = __webpack_require__(584);
	
	var _HomeContainer2 = _interopRequireDefault(_HomeContainer);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	// Sync route definition
	
	exports.default = function (store) {
	  return {
	    path: 'cca_devices',
	    /*  Async getComponent is only invoked when route matches   */
	    getComponent: function getComponent(nextState, cb) {
	      /*  Webpack - use 'require.ensure' to create a split point
	          and embed an async module loader (jsonp) when bundling   */
	      !/* require.ensure */(function (require) {
	
	        /*  Return getComponent   */
	        cb(null, _HomeContainer2.default);
	
	        /* Webpack named bundle   */
	      }(__webpack_require__));
	    }
	  };
	};

/***/ }),
/* 584 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _getPrototypeOf = __webpack_require__(382);
	
	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);
	
	var _classCallCheck2 = __webpack_require__(386);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _createClass2 = __webpack_require__(387);
	
	var _createClass3 = _interopRequireDefault(_createClass2);
	
	var _possibleConstructorReturn2 = __webpack_require__(388);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(405);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _react = __webpack_require__(25);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _BaseContainer2 = __webpack_require__(474);
	
	var _BaseContainer3 = _interopRequireDefault(_BaseContainer2);
	
	var _reactRouterDom = __webpack_require__(512);
	
	var _AddForm = __webpack_require__(585);
	
	var _AddForm2 = _interopRequireDefault(_AddForm);
	
	var _EditForm = __webpack_require__(586);
	
	var _EditForm2 = _interopRequireDefault(_EditForm);
	
	var _TableView = __webpack_require__(587);
	
	var _TableView2 = _interopRequireDefault(_TableView);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var HomeContainer = function (_BaseContainer) {
	  (0, _inherits3.default)(HomeContainer, _BaseContainer);
	
	  function HomeContainer() {
	    (0, _classCallCheck3.default)(this, HomeContainer);
	    return (0, _possibleConstructorReturn3.default)(this, (HomeContainer.__proto__ || (0, _getPrototypeOf2.default)(HomeContainer)).call(this));
	  }
	
	  (0, _createClass3.default)(HomeContainer, [{
	    key: 'componentWillMount',
	    value: function componentWillMount() {
	      this.setState({
	        title: "Lines"
	      });
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      return _react2.default.createElement(
	        _reactRouterDom.BrowserRouter,
	        null,
	        _react2.default.createElement(
	          _reactRouterDom.Switch,
	          null,
	          _react2.default.createElement(_reactRouterDom.Route, { exact: true, path: '/Create', component: _AddForm2.default }),
	          _react2.default.createElement(_reactRouterDom.Route, { path: '/Edit/:id', component: _EditForm2.default }),
	          _react2.default.createElement(_reactRouterDom.Route, { path: '/View', component: _TableView2.default }),
	          _react2.default.createElement(_reactRouterDom.Route, { path: '/', component: _TableView2.default }),
	          _react2.default.createElement(_reactRouterDom.Route, { component: _AddForm2.default })
	        )
	      );
	    }
	  }]);
	  return HomeContainer;
	}(_BaseContainer3.default);
	
	exports.default = HomeContainer;

/***/ }),
/* 585 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _extends2 = __webpack_require__(313);
	
	var _extends3 = _interopRequireDefault(_extends2);
	
	var _getPrototypeOf = __webpack_require__(382);
	
	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);
	
	var _classCallCheck2 = __webpack_require__(386);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _createClass2 = __webpack_require__(387);
	
	var _createClass3 = _interopRequireDefault(_createClass2);
	
	var _possibleConstructorReturn2 = __webpack_require__(388);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(405);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _react = __webpack_require__(25);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _BaseContainer2 = __webpack_require__(474);
	
	var _BaseContainer3 = _interopRequireDefault(_BaseContainer2);
	
	var _ApiService = __webpack_require__(438);
	
	var _ApiService2 = _interopRequireDefault(_ApiService);
	
	var _UI = __webpack_require__(485);
	
	var _DataForm = __webpack_require__(538);
	
	var _DataForm2 = _interopRequireDefault(_DataForm);
	
	var _utils = __webpack_require__(476);
	
	var _reactRouterDom = __webpack_require__(512);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var TABS_DATA = [];
	var dateStr = "";
	var date = new Date();
	
	var AddForm = function (_BaseContainer) {
	  (0, _inherits3.default)(AddForm, _BaseContainer);
	
	  function AddForm() {
	    var _ref;
	
	    var _temp, _this, _ret;
	
	    (0, _classCallCheck3.default)(this, AddForm);
	
	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }
	
	    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = AddForm.__proto__ || (0, _getPrototypeOf2.default)(AddForm)).call.apply(_ref, [this].concat(args))), _this), _this.handleSubmitted = function (_ref2) {
	      var res = _ref2.res,
	          fields = _ref2.fields,
	          form = _ref2.form;
	
	      form.reset(); // resets view
	    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
	  }
	
	  (0, _createClass3.default)(AddForm, [{
	    key: 'componentWillMount',
	    value: function componentWillMount() {
	      dateStr = date.getFullYear() + "-" + ("00" + (date.getMonth() + 1)).slice(-2) + "-" + ("00" + date.getDate()).slice(-2) + "T" + ("00" + date.getHours()).slice(-2) + ":" + ("00" + date.getMinutes()).slice(-2) + ":" + ("00" + date.getSeconds()).slice(-2);
	    }
	
	    //--------------------------------------------------------------------//
	    //  Form Content Renderer
	    //--------------------------------------------------------------------//
	
	  }, {
	    key: '_renderContent',
	    value: function _renderContent() {
	      var item = {
	        lineName: "",
	        lineCode: "",
	        server: "",
	        recCreated: dateStr,
	        recDatetime: dateStr
	      };
	
	      return _react2.default.createElement(_DataForm2.default, {
	        title: 'Add Material',
	        hasCancel: true,
	        item: item,
	        bodyRender: this.fromBodyRender,
	        onSubmit: function onSubmit(itm) {
	          _ApiService2.default.addCcaItems(itm).then(function (res) {
	            //this.props.history.push(View)
	          });
	          (0, _utils.alertMessage)({ message: 'Data added successfully.' });
	        },
	        onCancel: function onCancel(itm) {}
	      });
	    }
	  }, {
	    key: 'fromBodyRender',
	    value: function fromBodyRender(options) {
	      var item = options.item,
	          binding = options.binding;
	
	      return _react2.default.createElement(
	        'div',
	        { className: 'row' },
	        _react2.default.createElement(
	          'div',
	          { className: 'col-md-8' },
	          _react2.default.createElement(_UI.FileUpload, (0, _extends3.default)({
	            placeHolder: 'CSV File',
	            helpText: 'CSV File'
	          }, binding("csvFile")))
	        )
	      );
	    }
	  }]);
	  return AddForm;
	}(_BaseContainer3.default);
	
	exports.default = AddForm;

/***/ }),
/* 586 */
/***/ (function(module, exports) {

	"use strict";

/***/ }),
/* 587 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _getPrototypeOf = __webpack_require__(382);
	
	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);
	
	var _classCallCheck2 = __webpack_require__(386);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _createClass2 = __webpack_require__(387);
	
	var _createClass3 = _interopRequireDefault(_createClass2);
	
	var _possibleConstructorReturn2 = __webpack_require__(388);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(405);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _react = __webpack_require__(25);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _BaseContainer2 = __webpack_require__(474);
	
	var _BaseContainer3 = _interopRequireDefault(_BaseContainer2);
	
	var _Table = __webpack_require__(503);
	
	var _Table2 = _interopRequireDefault(_Table);
	
	var _ApiService = __webpack_require__(438);
	
	var _ApiService2 = _interopRequireDefault(_ApiService);
	
	var _utils = __webpack_require__(476);
	
	var _reactRouterDom = __webpack_require__(512);
	
	var _EditForm = __webpack_require__(586);
	
	var _EditForm2 = _interopRequireDefault(_EditForm);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	//const TABLE_DATA = []
	var data = [];
	
	var TableView = function (_BaseContainer) {
	  (0, _inherits3.default)(TableView, _BaseContainer);
	
	  function TableView() {
	    var _ref;
	
	    var _temp, _this, _ret;
	
	    (0, _classCallCheck3.default)(this, TableView);
	
	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }
	
	    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = TableView.__proto__ || (0, _getPrototypeOf2.default)(TableView)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
	      header: [{
	        title: "#",
	        prop: "no"
	      }, {
	        title: "Device Name",
	        prop: "deviceName"
	      }, {
	        title: "Device Model",
	        prop: "deviceModel"
	      }, {
	        title: "Device GUID",
	        prop: "deviceGuid"
	      }, {
	        title: "Device IMEI",
	        prop: "deviceImei"
	      }, {
	        title: "Device Serial",
	        prop: "deviceSerial"
	      }, {
	        title: "Action"
	      }],
	      data: data
	    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
	  }
	
	  (0, _createClass3.default)(TableView, [{
	    key: 'componentWillMount',
	    value: function componentWillMount() {
	      var _this2 = this;
	
	      this.setState({
	        title: "Devices"
	      });
	      _ApiService2.default.fetchCcaDevices().then(function (response) {
	        _this2.setState({
	          data: response.data
	        });
	      });
	      this.showLoading(true);
	      setTimeout(function () {
	        _this2.showLoading(false);
	      }, 500);
	    }
	  }, {
	    key: '_renderContent',
	    value: function _renderContent() {
	      console.log(this.state);
	      return _react2.default.createElement(
	        'div',
	        { className: 'portlet body' },
	        _react2.default.createElement(_Table2.default, {
	          searchableProperties: ["scannerName", "scannerIp", "scannerPort"],
	          hasTopBar: true,
	          headers: this.state.header,
	          data: this.state.data,
	          rowRender: this._renderRow,
	          onAddNewHandler: this.onAddNewClick.bind(this)
	        })
	      );
	    }
	  }, {
	    key: 'onAddNewClick',
	    value: function onAddNewClick() {}
	  }, {
	    key: '_renderRow',
	    value: function _renderRow(itm, i) {
	      return _react2.default.createElement(
	        'tr',
	        { key: i, className: 'odd gradeX' },
	        _react2.default.createElement(
	          'td',
	          null,
	          i + 1
	        ),
	        _react2.default.createElement(
	          'td',
	          null,
	          itm.deviceName
	        ),
	        _react2.default.createElement(
	          'td',
	          null,
	          itm.deviceModel
	        ),
	        _react2.default.createElement(
	          'td',
	          null,
	          itm.deviceGuid
	        ),
	        _react2.default.createElement(
	          'td',
	          null,
	          itm.deviceImei
	        ),
	        _react2.default.createElement(
	          'td',
	          null,
	          itm.deviceSerial
	        ),
	        _react2.default.createElement(
	          'td',
	          null,
	          _react2.default.createElement(
	            'div',
	            { className: 'btn-group' },
	            _react2.default.createElement(
	              'button',
	              { className: 'btn btn-xs green dropdown-toggle', type: 'button', 'data-toggle': 'dropdown', 'aria-expanded': 'false' },
	              ' Actions',
	              _react2.default.createElement('i', { className: 'fa fa-angle-down' })
	            ),
	            _react2.default.createElement(
	              'ul',
	              { className: 'dropdown-menu pull-left', role: 'menu' },
	              _react2.default.createElement(
	                'li',
	                null,
	                _react2.default.createElement(
	                  'a',
	                  { href: 'javascript:;' },
	                  _react2.default.createElement('i', { className: 'icon-flag' }),
	                  ' Device Name',
	                  _react2.default.createElement(
	                    'span',
	                    { className: 'badge badge-success' },
	                    '4'
	                  )
	                )
	              ),
	              _react2.default.createElement(
	                'li',
	                null,
	                _react2.default.createElement(
	                  'a',
	                  { href: 'javascript:;' },
	                  _react2.default.createElement('i', { className: 'glyphicon glyphicon-tags' }),
	                  ' Area Code '
	                )
	              ),
	              _react2.default.createElement(
	                'li',
	                { className: 'divider' },
	                ' '
	              ),
	              _react2.default.createElement(
	                'li',
	                null,
	                _react2.default.createElement(
	                  'a',
	                  { href: 'javascript:;' },
	                  _react2.default.createElement('i', { className: 'glyphicon glyphicon-trash' }),
	                  ' Delete '
	                )
	              )
	            )
	          )
	        )
	      );
	    }
	  }]);
	  return TableView;
	}(_BaseContainer3.default);
	
	exports.default = TableView;

/***/ }),
/* 588 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _HomeContainer = __webpack_require__(589);
	
	var _HomeContainer2 = _interopRequireDefault(_HomeContainer);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	// Sync route definition
	
	exports.default = function (store) {
	  return {
	    path: 'cca_settings',
	    /*  Async getComponent is only invoked when route matches   */
	    getComponent: function getComponent(nextState, cb) {
	      /*  Webpack - use 'require.ensure' to create a split point
	          and embed an async module loader (jsonp) when bundling   */
	      !/* require.ensure */(function (require) {
	
	        /*  Return getComponent   */
	        cb(null, _HomeContainer2.default);
	
	        /* Webpack named bundle   */
	      }(__webpack_require__));
	    }
	  };
	};

/***/ }),
/* 589 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _getPrototypeOf = __webpack_require__(382);
	
	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);
	
	var _classCallCheck2 = __webpack_require__(386);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _createClass2 = __webpack_require__(387);
	
	var _createClass3 = _interopRequireDefault(_createClass2);
	
	var _possibleConstructorReturn2 = __webpack_require__(388);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(405);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _react = __webpack_require__(25);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _BaseContainer2 = __webpack_require__(474);
	
	var _BaseContainer3 = _interopRequireDefault(_BaseContainer2);
	
	var _reactRouterDom = __webpack_require__(512);
	
	var _AddForm = __webpack_require__(590);
	
	var _AddForm2 = _interopRequireDefault(_AddForm);
	
	var _EditForm = __webpack_require__(591);
	
	var _EditForm2 = _interopRequireDefault(_EditForm);
	
	var _TableView = __webpack_require__(592);
	
	var _TableView2 = _interopRequireDefault(_TableView);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var HomeContainer = function (_BaseContainer) {
	  (0, _inherits3.default)(HomeContainer, _BaseContainer);
	
	  function HomeContainer() {
	    (0, _classCallCheck3.default)(this, HomeContainer);
	    return (0, _possibleConstructorReturn3.default)(this, (HomeContainer.__proto__ || (0, _getPrototypeOf2.default)(HomeContainer)).call(this));
	  }
	
	  (0, _createClass3.default)(HomeContainer, [{
	    key: 'componentWillMount',
	    value: function componentWillMount() {
	      this.setState({
	        title: "Lines"
	      });
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      return _react2.default.createElement(
	        _reactRouterDom.BrowserRouter,
	        null,
	        _react2.default.createElement(
	          _reactRouterDom.Switch,
	          null,
	          _react2.default.createElement(_reactRouterDom.Route, { exact: true, path: '/Create', component: _AddForm2.default }),
	          _react2.default.createElement(_reactRouterDom.Route, { path: '/Edit/:id', component: _EditForm2.default }),
	          _react2.default.createElement(_reactRouterDom.Route, { path: '/View', component: _TableView2.default }),
	          _react2.default.createElement(_reactRouterDom.Route, { path: '/', component: _TableView2.default }),
	          _react2.default.createElement(_reactRouterDom.Route, { component: _AddForm2.default })
	        )
	      );
	    }
	  }]);
	  return HomeContainer;
	}(_BaseContainer3.default);
	
	exports.default = HomeContainer;

/***/ }),
/* 590 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _extends2 = __webpack_require__(313);
	
	var _extends3 = _interopRequireDefault(_extends2);
	
	var _getPrototypeOf = __webpack_require__(382);
	
	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);
	
	var _classCallCheck2 = __webpack_require__(386);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _createClass2 = __webpack_require__(387);
	
	var _createClass3 = _interopRequireDefault(_createClass2);
	
	var _possibleConstructorReturn2 = __webpack_require__(388);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(405);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _react = __webpack_require__(25);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _BaseContainer2 = __webpack_require__(474);
	
	var _BaseContainer3 = _interopRequireDefault(_BaseContainer2);
	
	var _ApiService = __webpack_require__(438);
	
	var _ApiService2 = _interopRequireDefault(_ApiService);
	
	var _UI = __webpack_require__(485);
	
	var _DataForm = __webpack_require__(538);
	
	var _DataForm2 = _interopRequireDefault(_DataForm);
	
	var _utils = __webpack_require__(476);
	
	var _reactRouterDom = __webpack_require__(512);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var TABS_DATA = [];
	var dateStr = "";
	var date = new Date();
	
	var AddForm = function (_BaseContainer) {
	  (0, _inherits3.default)(AddForm, _BaseContainer);
	
	  function AddForm() {
	    var _ref;
	
	    var _temp, _this, _ret;
	
	    (0, _classCallCheck3.default)(this, AddForm);
	
	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }
	
	    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = AddForm.__proto__ || (0, _getPrototypeOf2.default)(AddForm)).call.apply(_ref, [this].concat(args))), _this), _this.handleSubmitted = function (_ref2) {
	      var res = _ref2.res,
	          fields = _ref2.fields,
	          form = _ref2.form;
	
	      form.reset(); // resets view
	    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
	  }
	
	  (0, _createClass3.default)(AddForm, [{
	    key: 'componentWillMount',
	    value: function componentWillMount() {
	      dateStr = date.getFullYear() + "-" + ("00" + (date.getMonth() + 1)).slice(-2) + "-" + ("00" + date.getDate()).slice(-2) + "T" + ("00" + date.getHours()).slice(-2) + ":" + ("00" + date.getMinutes()).slice(-2) + ":" + ("00" + date.getSeconds()).slice(-2);
	    }
	
	    //--------------------------------------------------------------------//
	    //  Form Content Renderer
	    //--------------------------------------------------------------------//
	
	  }, {
	    key: '_renderContent',
	    value: function _renderContent() {
	      var item = {
	        scannerName: "",
	        scannerIp: "",
	        scannerPort: "",
	        recCreated: dateStr,
	        recDatetime: dateStr
	      };
	
	      return _react2.default.createElement(_DataForm2.default, {
	        title: 'Add Scanners',
	        hasCancel: true,
	        item: item,
	        bodyRender: this.fromBodyRender,
	        onSubmit: function onSubmit(itm) {
	          _ApiService2.default.addCcaScanners(itm).then(function (res) {
	            //this.props.history.push(View)
	          });
	          (0, _utils.alertMessage)({ message: 'Data added successfully.' });
	        },
	        onCancel: function onCancel(itm) {}
	      });
	    }
	  }, {
	    key: 'fromBodyRender',
	    value: function fromBodyRender(options) {
	      var item = options.item,
	          binding = options.binding;
	
	      return _react2.default.createElement(
	        'div',
	        { className: 'row' },
	        _react2.default.createElement(
	          'div',
	          { className: 'col-md-8' },
	          _react2.default.createElement(_UI.TextInput, (0, _extends3.default)({
	            placeHolder: 'scanner Name',
	            helpText: 'scanner Name'
	          }, binding("scannerName")))
	        ),
	        _react2.default.createElement(
	          'div',
	          { className: 'col-md-8' },
	          _react2.default.createElement(_UI.TextInput, (0, _extends3.default)({
	            placeHolder: 'Scanner IP',
	            helpText: 'Scanner IP'
	          }, binding("scannerIp")))
	        ),
	        _react2.default.createElement(
	          'div',
	          { className: 'col-md-8' },
	          _react2.default.createElement(_UI.TextInput, (0, _extends3.default)({
	            placeHolder: 'Scanner Port',
	            helpText: 'Scanner Port'
	          }, binding("scannerPort")))
	        ),
	        _react2.default.createElement(
	          'div',
	          { className: 'col-md-8' },
	          _react2.default.createElement(_UI.Select, (0, _extends3.default)({
	            placeHolder: 'Line',
	            options: [{ title: "Line 1", value: "L1" }, { title: "Line 2", value: "L2" }, { title: "Line 3", value: "L3" }]
	          }, binding("line")))
	        )
	      );
	    }
	  }]);
	  return AddForm;
	}(_BaseContainer3.default);
	
	exports.default = AddForm;

/***/ }),
/* 591 */
/***/ (function(module, exports) {

	"use strict";

/***/ }),
/* 592 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _getPrototypeOf = __webpack_require__(382);
	
	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);
	
	var _classCallCheck2 = __webpack_require__(386);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _createClass2 = __webpack_require__(387);
	
	var _createClass3 = _interopRequireDefault(_createClass2);
	
	var _possibleConstructorReturn2 = __webpack_require__(388);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(405);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _react = __webpack_require__(25);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _BaseContainer2 = __webpack_require__(474);
	
	var _BaseContainer3 = _interopRequireDefault(_BaseContainer2);
	
	var _Table = __webpack_require__(503);
	
	var _Table2 = _interopRequireDefault(_Table);
	
	var _ApiService = __webpack_require__(438);
	
	var _ApiService2 = _interopRequireDefault(_ApiService);
	
	var _utils = __webpack_require__(476);
	
	var _reactRouterDom = __webpack_require__(512);
	
	var _EditForm = __webpack_require__(591);
	
	var _EditForm2 = _interopRequireDefault(_EditForm);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	//const TABLE_DATA = []
	var data = [];
	
	var TableView = function (_BaseContainer) {
	  (0, _inherits3.default)(TableView, _BaseContainer);
	
	  function TableView() {
	    var _ref;
	
	    var _temp, _this, _ret;
	
	    (0, _classCallCheck3.default)(this, TableView);
	
	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }
	
	    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = TableView.__proto__ || (0, _getPrototypeOf2.default)(TableView)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
	      header: [{
	        title: "#",
	        prop: "no"
	      }, {
	        title: "Service Name",
	        prop: "option1"
	      }, {
	        title: "Service Conf",
	        prop: "option2"
	      }, {
	        title: "Action"
	      }],
	      data: data
	    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
	  }
	
	  (0, _createClass3.default)(TableView, [{
	    key: 'componentWillMount',
	    value: function componentWillMount() {
	      var _this2 = this;
	
	      this.setState({
	        title: "General Settings"
	      });
	      _ApiService2.default.fetchCcaSettings().then(function (response) {
	        _this2.setState({
	          data: response.data
	        });
	      });
	      this.showLoading(true);
	      setTimeout(function () {
	        _this2.showLoading(false);
	      }, 500);
	    }
	  }, {
	    key: '_renderContent',
	    value: function _renderContent() {
	      console.log(this.state);
	      return _react2.default.createElement(
	        'div',
	        { className: 'portlet body' },
	        _react2.default.createElement(_Table2.default, {
	          searchableProperties: ["option1", "option2"],
	          hasTopBar: true,
	          headers: this.state.header,
	          data: this.state.data,
	          rowRender: this._renderRow,
	          onAddNewHandler: this.onAddNewClick.bind(this)
	        })
	      );
	    }
	  }, {
	    key: 'onAddNewClick',
	    value: function onAddNewClick() {}
	  }, {
	    key: '_renderRow',
	    value: function _renderRow(itm, i) {
	      return _react2.default.createElement(
	        'tr',
	        { key: i, className: 'odd gradeX' },
	        _react2.default.createElement(
	          'td',
	          null,
	          i + 1
	        ),
	        _react2.default.createElement(
	          'td',
	          null,
	          itm.option1
	        ),
	        _react2.default.createElement(
	          'td',
	          null,
	          itm.option2
	        ),
	        _react2.default.createElement(
	          'td',
	          null,
	          _react2.default.createElement(
	            'div',
	            { className: 'btn-group' },
	            _react2.default.createElement(
	              'button',
	              { className: 'btn btn-xs green dropdown-toggle', type: 'button', 'data-toggle': 'dropdown', 'aria-expanded': 'false' },
	              ' Actions',
	              _react2.default.createElement('i', { className: 'fa fa-angle-down' })
	            ),
	            _react2.default.createElement(
	              'ul',
	              { className: 'dropdown-menu pull-left', role: 'menu' },
	              _react2.default.createElement(
	                'li',
	                { className: 'divider' },
	                ' '
	              ),
	              _react2.default.createElement(
	                'li',
	                null,
	                _react2.default.createElement(
	                  'a',
	                  { href: 'javascript:;' },
	                  _react2.default.createElement('i', { className: 'glyphicon glyphicon-pencil' }),
	                  ' Edit '
	                )
	              )
	            )
	          )
	        )
	      );
	    }
	  }]);
	  return TableView;
	}(_BaseContainer3.default);
	
	exports.default = TableView;

/***/ }),
/* 593 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _HomeContainer = __webpack_require__(594);
	
	var _HomeContainer2 = _interopRequireDefault(_HomeContainer);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	// Sync route definition
	
	exports.default = function (store) {
	  return {
	    path: 'manual_printing',
	    /*  Async getComponent is only invoked when route matches   */
	    getComponent: function getComponent(nextState, cb) {
	      /*  Webpack - use 'require.ensure' to create a split point
	          and embed an async module loader (jsonp) when bundling   */
	      !/* require.ensure */(function (require) {
	
	        /*  Return getComponent   */
	        cb(null, _HomeContainer2.default);
	
	        /* Webpack named bundle   */
	      }(__webpack_require__));
	    }
	  };
	};

/***/ }),
/* 594 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _getPrototypeOf = __webpack_require__(382);
	
	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);
	
	var _classCallCheck2 = __webpack_require__(386);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _createClass2 = __webpack_require__(387);
	
	var _createClass3 = _interopRequireDefault(_createClass2);
	
	var _possibleConstructorReturn2 = __webpack_require__(388);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(405);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _react = __webpack_require__(25);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _BaseContainer2 = __webpack_require__(474);
	
	var _BaseContainer3 = _interopRequireDefault(_BaseContainer2);
	
	var _reactRouterDom = __webpack_require__(512);
	
	var _AddForm = __webpack_require__(595);
	
	var _AddForm2 = _interopRequireDefault(_AddForm);
	
	var _EditForm = __webpack_require__(596);
	
	var _EditForm2 = _interopRequireDefault(_EditForm);
	
	var _TableView = __webpack_require__(597);
	
	var _TableView2 = _interopRequireDefault(_TableView);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var HomeContainer = function (_BaseContainer) {
	  (0, _inherits3.default)(HomeContainer, _BaseContainer);
	
	  function HomeContainer() {
	    (0, _classCallCheck3.default)(this, HomeContainer);
	    return (0, _possibleConstructorReturn3.default)(this, (HomeContainer.__proto__ || (0, _getPrototypeOf2.default)(HomeContainer)).call(this));
	  }
	
	  (0, _createClass3.default)(HomeContainer, [{
	    key: 'componentWillMount',
	    value: function componentWillMount() {
	      this.setState({
	        title: "Lines"
	      });
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      return _react2.default.createElement(
	        _reactRouterDom.BrowserRouter,
	        null,
	        _react2.default.createElement(
	          _reactRouterDom.Switch,
	          null,
	          _react2.default.createElement(_reactRouterDom.Route, { exact: true, path: '/Create', component: _AddForm2.default }),
	          _react2.default.createElement(_reactRouterDom.Route, { path: '/Edit/:id', component: _EditForm2.default }),
	          _react2.default.createElement(_reactRouterDom.Route, { path: '/View', component: _TableView2.default }),
	          _react2.default.createElement(_reactRouterDom.Route, { path: '/', component: _AddForm2.default }),
	          _react2.default.createElement(_reactRouterDom.Route, { component: _AddForm2.default })
	        )
	      );
	    }
	  }]);
	  return HomeContainer;
	}(_BaseContainer3.default);
	
	exports.default = HomeContainer;

/***/ }),
/* 595 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _extends2 = __webpack_require__(313);
	
	var _extends3 = _interopRequireDefault(_extends2);
	
	var _stringify = __webpack_require__(496);
	
	var _stringify2 = _interopRequireDefault(_stringify);
	
	var _getPrototypeOf = __webpack_require__(382);
	
	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);
	
	var _classCallCheck2 = __webpack_require__(386);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _createClass2 = __webpack_require__(387);
	
	var _createClass3 = _interopRequireDefault(_createClass2);
	
	var _possibleConstructorReturn2 = __webpack_require__(388);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(405);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _react = __webpack_require__(25);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _propTypes = __webpack_require__(415);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _BaseContainer2 = __webpack_require__(474);
	
	var _BaseContainer3 = _interopRequireDefault(_BaseContainer2);
	
	var _ApiService = __webpack_require__(438);
	
	var _ApiService2 = _interopRequireDefault(_ApiService);
	
	var _UI = __webpack_require__(485);
	
	var _DataForm = __webpack_require__(538);
	
	var _DataForm2 = _interopRequireDefault(_DataForm);
	
	var _utils = __webpack_require__(476);
	
	var _reactRouterDom = __webpack_require__(512);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var TABS_DATA = [];
	var dateStr = "";
	var date = new Date();
	var plant_id = "";
	var plant_name = "";
	
	var arrArea = [];
	_ApiService2.default.fetchCcaPlants().then(function (response) {
	  response.data.map(function (data) {
	    arrArea.push({ title: data.plantDescr, value: data.plantId });
	  });
	});
	
	var arrOnPrinter = [];
	_ApiService2.default.fetchCcaOnlinePrinters().then(function (response) {
	  response.data.map(function (data) {
	    arrOnPrinter.push({ title: data.printerName, value: data.printerId });
	  });
	});
	
	var arrOffPrinter = [];
	_ApiService2.default.fetchCcaOfflinePrinters().then(function (response) {
	  response.data.map(function (data) {
	    arrOffPrinter.push({ title: data.printerName, value: data.printerId });
	  });
	});
	
	var AddForm = function (_BaseContainer) {
	  (0, _inherits3.default)(AddForm, _BaseContainer);
	
	  function AddForm() {
	    (0, _classCallCheck3.default)(this, AddForm);
	    return (0, _possibleConstructorReturn3.default)(this, (AddForm.__proto__ || (0, _getPrototypeOf2.default)(AddForm)).apply(this, arguments));
	  }
	
	  (0, _createClass3.default)(AddForm, [{
	    key: 'componentWillMount',
	    value: function componentWillMount() {
	      dateStr = date.getFullYear() + "-" + ("00" + (date.getMonth() + 1)).slice(-2) + "-" + ("00" + date.getDate()).slice(-2) + "T" + ("00" + date.getHours()).slice(-2) + ":" + ("00" + date.getMinutes()).slice(-2) + ":" + ("00" + date.getSeconds()).slice(-2);
	    }
	
	    //--------------------------------------------------------------------//
	    //  Form Content Renderer
	    //--------------------------------------------------------------------//
	
	  }, {
	    key: '_renderContent',
	    value: function _renderContent() {
	      var item = {
	        lineName: "",
	        lineCode: "",
	        recCreated: dateStr,
	        recDatetime: dateStr,
	        plantArea: 1,
	        onLinePrinter: 1,
	        offLinePrinter: 1,
	        repack: 0
	      };
	
	      return _react2.default.createElement(_DataForm2.default, {
	        title: 'Manual Printing',
	        hasCancel: true,
	        item: item,
	        bodyRender: this.fromBodyRender,
	        onSubmit: function onSubmit(itm) {
	          // insert cca_lines
	          _ApiService2.default.addCcaLines({
	            "lineName": itm.lineName,
	            "lineCode": itm.lineCode,
	            "recCreated": itm.recCreated,
	            "recDatetime": itm.recDatetime
	          }).then(function (res) {
	            //this.props.history.push(View)
	            console.log(res);
	          });
	
	          // select cca_plants get last lineId
	          var onLinePrinter = parseInt(itm.onLinePrinter);
	          var offLinePrinter = parseInt(itm.offLinePrinter);
	          _ApiService2.default.fetchCcaLinesLast().then(function (res) {
	            res.data.map(function (val) {
	              // check and insert cca_plant_line
	              _ApiService2.default.deleteCcaPlantLines(val.lineId);
	              _ApiService2.default.addCcaPlantLines({
	                "plantId": val.plantId,
	                "lineId": val.lineId
	              });
	
	              // check and insert cca_line_printer
	              _ApiService2.default.deleteCcaLinePrinters(val.lineId);
	              _ApiService2.default.addCcaLinePrinters({
	                "lineId": val.lineId,
	                "printerId": onLinePrinter
	              });
	
	              // check and delete cca_line_scanner
	              _ApiService2.default.deleteCcaLineScanners(val.lineId);
	              console.log((0, _stringify2.default)(val));
	            });
	          });
	          console.log((0, _stringify2.default)('ini plantArea =' + itm.plantArea + ' ini onLinePrinter=' + itm.onLinePrinter + ' ini offLinePrinter=' + itm.onLinePrinter));
	          //console.log(JSON.stringify(itm.plantId));
	          (0, _utils.alertMessage)({ message: 'Data ' + itm.lineName + ' added successfully.' });
	        },
	        onCancel: function onCancel(itm) {}
	      });
	    }
	  }, {
	    key: 'fromBodyRender',
	    value: function fromBodyRender(options) {
	      //const plantArea = arrArea;
	      var item = options.item,
	          binding = options.binding;
	
	      return _react2.default.createElement(
	        'div',
	        { className: 'row' },
	        _react2.default.createElement(
	          'div',
	          { className: 'col-md-8' },
	          _react2.default.createElement(_UI.Select, (0, _extends3.default)({
	            placeHolder: 'Line Number',
	            options: arrArea
	          }, binding("plantArea")))
	        ),
	        _react2.default.createElement(
	          'div',
	          { className: 'col-md-8' },
	          _react2.default.createElement(_UI.TextInput, (0, _extends3.default)({
	            placeHolder: 'Production Order',
	            helpText: 'Production Order'
	          }, binding("lineName")))
	        ),
	        _react2.default.createElement(
	          'div',
	          { className: 'col-md-8' },
	          _react2.default.createElement(_UI.Select, (0, _extends3.default)({
	            placeHolder: 'Material Number',
	            options: arrArea
	          }, binding("plantArea")))
	        ),
	        _react2.default.createElement(
	          'div',
	          { className: 'col-md-8' },
	          _react2.default.createElement(_UI.TextInput, (0, _extends3.default)({
	            placeHolder: 'Material Description',
	            helpText: 'Material Description'
	          }, binding("lineName")))
	        ),
	        _react2.default.createElement(
	          'div',
	          { className: 'col-md-8' },
	          _react2.default.createElement(_UI.TextInput, (0, _extends3.default)({
	            placeHolder: 'Best Before Date',
	            helpText: 'Best Before Date'
	          }, binding("lineName")))
	        ),
	        _react2.default.createElement(
	          'div',
	          { className: 'col-md-8' },
	          _react2.default.createElement(_UI.TextInput, (0, _extends3.default)({
	            placeHolder: 'Qty per Pallet',
	            helpText: 'Qty per Pallet'
	          }, binding("lineCode")))
	        ),
	        _react2.default.createElement(
	          'div',
	          { className: 'col-md-8' },
	          _react2.default.createElement(_UI.TextInput, (0, _extends3.default)({
	            placeHolder: 'Number of Labels',
	            helpText: 'Number of Labels'
	          }, binding("lineCode")))
	        ),
	        _react2.default.createElement(
	          'div',
	          { className: 'col-md-8' },
	          _react2.default.createElement(_UI.Select, (0, _extends3.default)({
	            placeHolder: 'Offline Printer',
	            options: arrOnPrinter
	          }, binding("onLinePrinter")))
	        )
	      );
	    }
	  }]);
	  return AddForm;
	}(_BaseContainer3.default);
	
	exports.default = AddForm;

/***/ }),
/* 596 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _getPrototypeOf = __webpack_require__(382);
	
	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);
	
	var _classCallCheck2 = __webpack_require__(386);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _createClass2 = __webpack_require__(387);
	
	var _createClass3 = _interopRequireDefault(_createClass2);
	
	var _possibleConstructorReturn2 = __webpack_require__(388);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(405);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _react = __webpack_require__(25);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _ApiService = __webpack_require__(438);
	
	var _ApiService2 = _interopRequireDefault(_ApiService);
	
	var _utils = __webpack_require__(476);
	
	var _reactRouterDom = __webpack_require__(512);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var dateStr = "";
	var date = new Date();
	var key_id = 0;
	
	var EditForm = function (_Component) {
	  (0, _inherits3.default)(EditForm, _Component);
	
	  function EditForm(props) {
	    (0, _classCallCheck3.default)(this, EditForm);
	
	    var _this = (0, _possibleConstructorReturn3.default)(this, (EditForm.__proto__ || (0, _getPrototypeOf2.default)(EditForm)).call(this, props));
	
	    _this.onChangePlantArea = _this.onChangePlantArea.bind(_this);
	    _this.onChangeLineName = _this.onChangeLineName.bind(_this);
	    _this.onChangeLineCode = _this.onChangeLineCode.bind(_this);
	    /* this.onChangeOnlinePrinter = this.onChangeOnlinePrinter.bind(this);
	    this.onChangeOffLinePrinter = this.onChangeOffLinePrinter.bind(this);
	    this.onChangeRepack = this.onChangeRepack.bind(this);
	    this.onChangeRepackSSCCCode = this.onChangeRepackSSCCCode.bind(this); */
	    _this.onSubmit = _this.onSubmit.bind(_this);
	
	    _this.state = {
	      plantId: '',
	      plantDescr: '',
	      plantCode: '',
	      plantArea: '',
	      lineId: '',
	      lineCode: '',
	      lineName: ''
	    };
	    return _this;
	  }
	
	  (0, _createClass3.default)(EditForm, [{
	    key: 'componentDidMount',
	    value: function componentDidMount() {
	      var _this2 = this;
	
	      dateStr = date.getFullYear() + "-" + ("00" + (date.getMonth() + 1)).slice(-2) + "-" + ("00" + date.getDate()).slice(-2) + "T" + ("00" + date.getHours()).slice(-2) + ":" + ("00" + date.getMinutes()).slice(-2) + ":" + ("00" + date.getSeconds()).slice(-2);
	
	      var url = this.props.location.search;
	      var urlParams = new URLSearchParams(url);
	      var idVal = urlParams.get('id');
	      key_id = idVal;
	
	      _ApiService2.default.fetchCcaLinesById(key_id).then(function (response) {
	        _this2.setState({
	          plantId: response.data.plantId,
	          plantDescr: response.data.plantDescr,
	          plantCode: response.data.plantCode,
	          plantArea: response.data.plantArea,
	          lineId: response.data.lineId,
	          lineCode: response.data.lineCode,
	          lineName: response.data.lineName
	        });
	        console.log(response.data);
	      }).catch(function (error) {
	        console.log(error);
	      });
	    }
	  }, {
	    key: 'onChangePlantArea',
	    value: function onChangePlantArea(e) {
	      this.setState({
	        plantArea: e.target.value
	      });
	    }
	  }, {
	    key: 'onChangeLineName',
	    value: function onChangeLineName(e) {
	      this.setState({
	        lineName: e.target.value
	      });
	    }
	  }, {
	    key: 'onChangeLineCode',
	    value: function onChangeLineCode(e) {
	      this.setState({
	        lineCode: e.target.value
	      });
	    }
	    /* onChangeOnlinePrinter(e) {
	      this.setState({
	        //lineCode: e.target.value
	      })
	    }
	    onChangeOffLinePrinter(e) {
	      this.setState({
	        //lineCode: e.target.value
	      })
	    }
	    onChangeRepack(e) {
	      this.setState({
	        //lineCode: e.target.value
	      })
	    }
	    onChangeRepackSSCCCode(e) {
	      this.setState({
	        //lineCode: e.target.value
	      })
	    } */
	
	  }, {
	    key: 'onSubmit',
	    value: function onSubmit(e) {
	      var _this3 = this;
	
	      e.preventDefault();
	      var paramsId = parseInt(key_id, 10); // 10 Decimal
	      var obj = {
	        plantId: this.state.plantId,
	        plantDescr: this.state.plantDescr,
	        plantCode: this.state.plantCode,
	        plantArea: this.state.plantArea,
	        lineId: paramsId, //this.props.match.params.id,
	        lineName: this.state.lineName,
	        lineCode: this.state.lineCode,
	        recCreated: dateStr,
	        recDatetime: dateStr
	      };
	      console.log(obj);
	      _ApiService2.default.editCcaLines(paramsId, obj).then(function (res) {
	        //this.props.history.push(View)
	        _this3.props.history.push("/View");
	      });
	      (0, _utils.alertMessage)({ message: 'Data update successfully.' });
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      return _react2.default.createElement(
	        'div',
	        { className: 'portlet light bordered' },
	        _react2.default.createElement(
	          'div',
	          { className: 'portlet-title' },
	          _react2.default.createElement(
	            _reactRouterDom.Link,
	            { to: '/View', className: 'btn sbold blue', id: 'btnView' },
	            'VIEW DATA',
	            _react2.default.createElement('i', { className: 'fa fa-list-alt ' })
	          ),
	          _react2.default.createElement('br', null),
	          _react2.default.createElement(
	            'div',
	            { className: 'caption font-red-sunglo' },
	            _react2.default.createElement('i', { className: 'icon-settings font-red-sunglo' }),
	            _react2.default.createElement(
	              'span',
	              { className: 'caption-subject bold uppercase' },
	              'Edit Lines'
	            )
	          )
	        ),
	        _react2.default.createElement(
	          'div',
	          { className: 'portlet-body form' },
	          _react2.default.createElement(
	            'form',
	            { onSubmit: this.onSubmit },
	            _react2.default.createElement(
	              'div',
	              { className: 'form-group' },
	              _react2.default.createElement(
	                'div',
	                { className: 'row' },
	                _react2.default.createElement(
	                  'div',
	                  { className: 'col-xs-3 col-md-5' },
	                  _react2.default.createElement(
	                    'div',
	                    { className: 'form-group form-md-line-input' },
	                    _react2.default.createElement(
	                      'label',
	                      null,
	                      'Plant Area :  '
	                    ),
	                    _react2.default.createElement('input', {
	                      type: 'text',
	                      className: 'form-control',
	                      value: this.state.plantArea,
	                      onChange: this.onChangePlantArea
	                    })
	                  )
	                ),
	                _react2.default.createElement(
	                  'div',
	                  { className: 'col-xs-3 col-md-5' },
	                  _react2.default.createElement(
	                    'div',
	                    { className: 'form-group form-md-line-input' },
	                    _react2.default.createElement(
	                      'label',
	                      null,
	                      'Line Name : '
	                    ),
	                    _react2.default.createElement('input', { type: 'text',
	                      className: 'form-control',
	                      value: this.state.lineName,
	                      onChange: this.onChangeLineName
	                    })
	                  )
	                ),
	                _react2.default.createElement(
	                  'div',
	                  { className: 'col-xs-3 col-md-5' },
	                  _react2.default.createElement(
	                    'div',
	                    { className: 'form-group form-md-line-input' },
	                    _react2.default.createElement(
	                      'label',
	                      null,
	                      'Line Code : '
	                    ),
	                    _react2.default.createElement('input', { type: 'text',
	                      className: 'form-control',
	                      value: this.state.lineCode,
	                      onChange: this.onChangeLineCode
	                    })
	                  )
	                ),
	                _react2.default.createElement(
	                  'div',
	                  { className: 'col-xs-3 col-md-5' },
	                  _react2.default.createElement(
	                    'div',
	                    { className: 'form-group form-md-line-input' },
	                    _react2.default.createElement(
	                      'label',
	                      null,
	                      'Online Printer : '
	                    ),
	                    _react2.default.createElement('input', { type: 'text',
	                      className: 'form-control',
	                      value: '',
	                      onChange: ''
	                    })
	                  )
	                ),
	                _react2.default.createElement(
	                  'div',
	                  { className: 'col-xs-3 col-md-5' },
	                  _react2.default.createElement(
	                    'div',
	                    { className: 'form-group form-md-line-input' },
	                    _react2.default.createElement(
	                      'label',
	                      null,
	                      'Offline Printer : '
	                    ),
	                    _react2.default.createElement('input', { type: 'text',
	                      className: 'form-control',
	                      value: '',
	                      onChange: ''
	                    })
	                  )
	                ),
	                _react2.default.createElement(
	                  'div',
	                  { className: 'col-sm-12' },
	                  _react2.default.createElement(
	                    'div',
	                    { className: 'md-checkbox' },
	                    _react2.default.createElement('input', { type: 'checkbox', className: 'form-check-input', id: 'chkEwm' }),
	                    _react2.default.createElement(
	                      'label',
	                      { htmlFor: 'chkEwm' },
	                      _react2.default.createElement('span', { className: 'inc' }),
	                      _react2.default.createElement('span', { className: 'check' }),
	                      _react2.default.createElement('span', { className: 'box' }),
	                      ' Repack'
	                    )
	                  )
	                ),
	                _react2.default.createElement(
	                  'div',
	                  { className: 'col-xs-3 col-md-5' },
	                  _react2.default.createElement(
	                    'div',
	                    { className: 'form-group form-md-line-input' },
	                    _react2.default.createElement(
	                      'label',
	                      null,
	                      'Offline Printer : '
	                    ),
	                    _react2.default.createElement('input', { type: 'text',
	                      className: 'form-control',
	                      value: '',
	                      onChange: ''
	                    })
	                  )
	                ),
	                _react2.default.createElement(
	                  'div',
	                  { className: 'col-sm-12' },
	                  _react2.default.createElement(
	                    'div',
	                    { className: 'form-actions noborder' },
	                    _react2.default.createElement('input', { type: 'submit',
	                      value: 'Update',
	                      className: 'btn blue' })
	                  )
	                )
	              )
	            )
	          )
	        )
	      );
	    }
	  }]);
	  return EditForm;
	}(_react.Component);
	
	exports.default = EditForm;

/***/ }),
/* 597 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _getPrototypeOf = __webpack_require__(382);
	
	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);
	
	var _classCallCheck2 = __webpack_require__(386);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _createClass2 = __webpack_require__(387);
	
	var _createClass3 = _interopRequireDefault(_createClass2);
	
	var _possibleConstructorReturn2 = __webpack_require__(388);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(405);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _react = __webpack_require__(25);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _BaseContainer2 = __webpack_require__(474);
	
	var _BaseContainer3 = _interopRequireDefault(_BaseContainer2);
	
	var _Table = __webpack_require__(503);
	
	var _Table2 = _interopRequireDefault(_Table);
	
	var _ApiService = __webpack_require__(438);
	
	var _ApiService2 = _interopRequireDefault(_ApiService);
	
	var _utils = __webpack_require__(476);
	
	var _reactRouterDom = __webpack_require__(512);
	
	var _EditForm = __webpack_require__(596);
	
	var _EditForm2 = _interopRequireDefault(_EditForm);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	//const TABLE_DATA = []
	var data = [];
	
	var TableView = function (_BaseContainer) {
	  (0, _inherits3.default)(TableView, _BaseContainer);
	
	  function TableView() {
	    var _ref;
	
	    var _temp, _this, _ret;
	
	    (0, _classCallCheck3.default)(this, TableView);
	
	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }
	
	    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = TableView.__proto__ || (0, _getPrototypeOf2.default)(TableView)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
	      header: [{
	        title: "#",
	        prop: "no"
	      }, {
	        title: "Line Name",
	        prop: "lineName"
	      }, {
	        title: "Plant Area",
	        prop: "plantArea"
	      }, {
	        title: "Line Code",
	        prop: "lineCode"
	      }, {
	        title: "Repack",
	        prop: ""
	      }, {
	        title: "RP SSCC Code",
	        prop: "-"
	      }, {
	        title: "Action"
	      }],
	      data: data
	    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
	  }
	
	  (0, _createClass3.default)(TableView, [{
	    key: 'componentWillMount',
	    value: function componentWillMount() {
	      var _this2 = this;
	
	      this.setState({
	        title: "Lines"
	      });
	      _ApiService2.default.fetchCcaLines().then(function (response) {
	        _this2.setState({
	          data: response.data
	        });
	      });
	      this.showLoading(true);
	      setTimeout(function () {
	        _this2.showLoading(false);
	      }, 500);
	    }
	  }, {
	    key: '_renderContent',
	    value: function _renderContent() {
	      console.log(this.state);
	      return _react2.default.createElement(
	        'div',
	        { className: 'portlet body' },
	        _react2.default.createElement(_Table2.default, {
	          searchableProperties: ["lineName", "lineCode"],
	          hasTopBar: true,
	          headers: this.state.header,
	          data: this.state.data,
	          rowRender: this._renderRow,
	          onAddNewHandler: this.onAddNewClick.bind(this)
	        })
	      );
	    }
	  }, {
	    key: 'onAddNewClick',
	    value: function onAddNewClick() {}
	  }, {
	    key: '_renderRow',
	    value: function _renderRow(itm, i) {
	      return _react2.default.createElement(
	        'tr',
	        { key: i, className: 'odd gradeX' },
	        _react2.default.createElement(
	          'td',
	          null,
	          i + 1
	        ),
	        _react2.default.createElement(
	          'td',
	          null,
	          itm.lineName
	        ),
	        _react2.default.createElement(
	          'td',
	          null,
	          itm.plantArea
	        ),
	        _react2.default.createElement(
	          'td',
	          null,
	          itm.lineCode
	        ),
	        _react2.default.createElement('td', null),
	        _react2.default.createElement('td', null),
	        _react2.default.createElement(
	          'td',
	          null,
	          _react2.default.createElement(
	            'div',
	            { className: 'btn-group' },
	            _react2.default.createElement(
	              'button',
	              { className: 'btn btn-xs green dropdown-toggle', type: 'button', 'data-toggle': 'dropdown', 'aria-expanded': 'false' },
	              ' Actions',
	              _react2.default.createElement('i', { className: 'fa fa-angle-down' })
	            ),
	            _react2.default.createElement(
	              'ul',
	              { className: 'dropdown-menu pull-left', role: 'menu' },
	              _react2.default.createElement(
	                'li',
	                null,
	                _react2.default.createElement(
	                  'a',
	                  { href: 'javascript:;' },
	                  _react2.default.createElement('i', { className: 'icon-flag' }),
	                  ' Area Name',
	                  _react2.default.createElement(
	                    'span',
	                    { className: 'badge badge-success' },
	                    '4'
	                  )
	                )
	              ),
	              _react2.default.createElement(
	                'li',
	                null,
	                _react2.default.createElement(
	                  'a',
	                  { href: 'javascript:;' },
	                  _react2.default.createElement('i', { className: 'glyphicon glyphicon-tags' }),
	                  ' Area Code '
	                )
	              ),
	              _react2.default.createElement(
	                'li',
	                { className: 'divider' },
	                ' '
	              ),
	              _react2.default.createElement(
	                'li',
	                null,
	                _react2.default.createElement(
	                  _reactRouterDom.Link,
	                  { to: '/Edit/Find?id=' + itm.lineId, id: 'btnEdit' },
	                  _react2.default.createElement('i', { className: 'glyphicon glyphicon-pencil' }),
	                  ' Edit '
	                )
	              ),
	              _react2.default.createElement(
	                'li',
	                null,
	                _react2.default.createElement(
	                  'a',
	                  { onClick: function onClick(e) {
	                      return handleClick(itm.lineId);
	                    } },
	                  _react2.default.createElement('i', { className: 'glyphicon glyphicon-trash' }),
	                  ' Delete '
	                )
	              )
	            )
	          )
	        )
	      );
	    }
	  }]);
	  return TableView;
	}(_BaseContainer3.default);
	
	function handleClick(val) {
	  //alert(e)
	  var result = confirm("Are you sure...?");
	  if (result) {
	    _ApiService2.default.deleteCcaLines(val).then(function (response) {
	      (0, _utils.alertMessage)({ message: 'Data ' + response.data.plantArea + ' deleted successfully' });
	    });
	  }
	}
	
	exports.default = TableView;

/***/ }),
/* 598 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _HomeContainer = __webpack_require__(599);
	
	var _HomeContainer2 = _interopRequireDefault(_HomeContainer);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	// Sync route definition
	
	exports.default = function (store) {
	  return {
	    path: 'cca_part_pallet',
	    /*  Async getComponent is only invoked when route matches   */
	    getComponent: function getComponent(nextState, cb) {
	      /*  Webpack - use 'require.ensure' to create a split point
	          and embed an async module loader (jsonp) when bundling   */
	      !/* require.ensure */(function (require) {
	
	        /*  Return getComponent   */
	        cb(null, _HomeContainer2.default);
	
	        /* Webpack named bundle   */
	      }(__webpack_require__));
	    }
	  };
	};

/***/ }),
/* 599 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _getPrototypeOf = __webpack_require__(382);
	
	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);
	
	var _classCallCheck2 = __webpack_require__(386);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _createClass2 = __webpack_require__(387);
	
	var _createClass3 = _interopRequireDefault(_createClass2);
	
	var _possibleConstructorReturn2 = __webpack_require__(388);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(405);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _react = __webpack_require__(25);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _BaseContainer2 = __webpack_require__(474);
	
	var _BaseContainer3 = _interopRequireDefault(_BaseContainer2);
	
	var _reactRouterDom = __webpack_require__(512);
	
	var _AddForm = __webpack_require__(600);
	
	var _AddForm2 = _interopRequireDefault(_AddForm);
	
	var _EditForm = __webpack_require__(601);
	
	var _EditForm2 = _interopRequireDefault(_EditForm);
	
	var _TableView = __webpack_require__(602);
	
	var _TableView2 = _interopRequireDefault(_TableView);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var HomeContainer = function (_BaseContainer) {
	  (0, _inherits3.default)(HomeContainer, _BaseContainer);
	
	  function HomeContainer() {
	    (0, _classCallCheck3.default)(this, HomeContainer);
	    return (0, _possibleConstructorReturn3.default)(this, (HomeContainer.__proto__ || (0, _getPrototypeOf2.default)(HomeContainer)).call(this));
	  }
	
	  (0, _createClass3.default)(HomeContainer, [{
	    key: 'componentWillMount',
	    value: function componentWillMount() {
	      this.setState({
	        title: "Lines"
	      });
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      return _react2.default.createElement(
	        _reactRouterDom.BrowserRouter,
	        null,
	        _react2.default.createElement(
	          _reactRouterDom.Switch,
	          null,
	          _react2.default.createElement(_reactRouterDom.Route, { exact: true, path: '/Create', component: _AddForm2.default }),
	          _react2.default.createElement(_reactRouterDom.Route, { path: '/Edit/:id', component: _EditForm2.default }),
	          _react2.default.createElement(_reactRouterDom.Route, { path: '/View', component: _TableView2.default }),
	          _react2.default.createElement(_reactRouterDom.Route, { path: '/', component: _AddForm2.default }),
	          _react2.default.createElement(_reactRouterDom.Route, { component: _AddForm2.default })
	        )
	      );
	    }
	  }]);
	  return HomeContainer;
	}(_BaseContainer3.default);
	
	exports.default = HomeContainer;

/***/ }),
/* 600 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _extends2 = __webpack_require__(313);
	
	var _extends3 = _interopRequireDefault(_extends2);
	
	var _stringify = __webpack_require__(496);
	
	var _stringify2 = _interopRequireDefault(_stringify);
	
	var _getPrototypeOf = __webpack_require__(382);
	
	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);
	
	var _classCallCheck2 = __webpack_require__(386);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _createClass2 = __webpack_require__(387);
	
	var _createClass3 = _interopRequireDefault(_createClass2);
	
	var _possibleConstructorReturn2 = __webpack_require__(388);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(405);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _react = __webpack_require__(25);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _propTypes = __webpack_require__(415);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _BaseContainer2 = __webpack_require__(474);
	
	var _BaseContainer3 = _interopRequireDefault(_BaseContainer2);
	
	var _ApiService = __webpack_require__(438);
	
	var _ApiService2 = _interopRequireDefault(_ApiService);
	
	var _UI = __webpack_require__(485);
	
	var _DataForm = __webpack_require__(538);
	
	var _DataForm2 = _interopRequireDefault(_DataForm);
	
	var _utils = __webpack_require__(476);
	
	var _reactRouterDom = __webpack_require__(512);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var TABS_DATA = [];
	var dateStr = "";
	var date = new Date();
	var plant_id = "";
	var plant_name = "";
	
	var arrArea = [];
	_ApiService2.default.fetchCcaPlants().then(function (response) {
	  response.data.map(function (data) {
	    arrArea.push({ title: data.plantDescr, value: data.plantId });
	  });
	});
	
	var arrOnPrinter = [];
	_ApiService2.default.fetchCcaOnlinePrinters().then(function (response) {
	  response.data.map(function (data) {
	    arrOnPrinter.push({ title: data.printerName, value: data.printerId });
	  });
	});
	
	var arrOffPrinter = [];
	_ApiService2.default.fetchCcaOfflinePrinters().then(function (response) {
	  response.data.map(function (data) {
	    arrOffPrinter.push({ title: data.printerName, value: data.printerId });
	  });
	});
	
	var AddForm = function (_BaseContainer) {
	  (0, _inherits3.default)(AddForm, _BaseContainer);
	
	  function AddForm() {
	    (0, _classCallCheck3.default)(this, AddForm);
	    return (0, _possibleConstructorReturn3.default)(this, (AddForm.__proto__ || (0, _getPrototypeOf2.default)(AddForm)).apply(this, arguments));
	  }
	
	  (0, _createClass3.default)(AddForm, [{
	    key: 'componentWillMount',
	    value: function componentWillMount() {
	      dateStr = date.getFullYear() + "-" + ("00" + (date.getMonth() + 1)).slice(-2) + "-" + ("00" + date.getDate()).slice(-2) + "T" + ("00" + date.getHours()).slice(-2) + ":" + ("00" + date.getMinutes()).slice(-2) + ":" + ("00" + date.getSeconds()).slice(-2);
	    }
	
	    //--------------------------------------------------------------------//
	    //  Form Content Renderer
	    //--------------------------------------------------------------------//
	
	  }, {
	    key: '_renderContent',
	    value: function _renderContent() {
	      var item = {
	        lineName: "",
	        lineCode: "",
	        recCreated: dateStr,
	        recDatetime: dateStr,
	        plantArea: 1,
	        onLinePrinter: 1,
	        offLinePrinter: 1,
	        repack: 0
	      };
	
	      return _react2.default.createElement(_DataForm2.default, {
	        title: 'Partial Pallet Printing',
	        hasCancel: true,
	        item: item,
	        bodyRender: this.fromBodyRender,
	        onSubmit: function onSubmit(itm) {
	          // insert cca_lines
	          _ApiService2.default.addCcaLines({
	            "lineName": itm.lineName,
	            "lineCode": itm.lineCode,
	            "recCreated": itm.recCreated,
	            "recDatetime": itm.recDatetime
	          }).then(function (res) {
	            //this.props.history.push(View)
	            console.log(res);
	          });
	
	          // select cca_plants get last lineId
	          var onLinePrinter = parseInt(itm.onLinePrinter);
	          var offLinePrinter = parseInt(itm.offLinePrinter);
	          _ApiService2.default.fetchCcaLinesLast().then(function (res) {
	            res.data.map(function (val) {
	              // check and insert cca_plant_line
	              _ApiService2.default.deleteCcaPlantLines(val.lineId);
	              _ApiService2.default.addCcaPlantLines({
	                "plantId": val.plantId,
	                "lineId": val.lineId
	              });
	
	              // check and insert cca_line_printer
	              _ApiService2.default.deleteCcaLinePrinters(val.lineId);
	              _ApiService2.default.addCcaLinePrinters({
	                "lineId": val.lineId,
	                "printerId": onLinePrinter
	              });
	
	              // check and delete cca_line_scanner
	              _ApiService2.default.deleteCcaLineScanners(val.lineId);
	              console.log((0, _stringify2.default)(val));
	            });
	          });
	          console.log((0, _stringify2.default)('ini plantArea =' + itm.plantArea + ' ini onLinePrinter=' + itm.onLinePrinter + ' ini offLinePrinter=' + itm.onLinePrinter));
	          //console.log(JSON.stringify(itm.plantId));
	          (0, _utils.alertMessage)({ message: 'Data ' + itm.lineName + ' added successfully.' });
	        },
	        onCancel: function onCancel(itm) {}
	      });
	    }
	  }, {
	    key: 'fromBodyRender',
	    value: function fromBodyRender(options) {
	      //const plantArea = arrArea;
	      var item = options.item,
	          binding = options.binding;
	
	      return _react2.default.createElement(
	        'div',
	        { className: 'row' },
	        _react2.default.createElement(
	          'div',
	          { className: 'col-md-8' },
	          _react2.default.createElement(_UI.Select, (0, _extends3.default)({
	            placeHolder: 'Line Number',
	            options: arrArea
	          }, binding("plantArea")))
	        ),
	        _react2.default.createElement(
	          'div',
	          { className: 'col-md-8' },
	          _react2.default.createElement(_UI.TextInput, (0, _extends3.default)({
	            laceHolder: 'Production Order',
	            helpText: 'Production Order'
	          }, binding("lineName"))),
	          _react2.default.createElement('lable', null)
	        ),
	        _react2.default.createElement(
	          'div',
	          { className: 'col-md-8' },
	          _react2.default.createElement(_UI.Select, (0, _extends3.default)({
	            placeHolder: 'Material Number',
	            options: arrArea
	          }, binding("plantArea")))
	        ),
	        _react2.default.createElement(
	          'div',
	          { className: 'col-md-8' },
	          _react2.default.createElement(_UI.TextInput, (0, _extends3.default)({
	            placeHolder: 'Material Description',
	            helpText: 'Material Description'
	          }, binding("lineName")))
	        ),
	        _react2.default.createElement(
	          'div',
	          { className: 'col-md-8' },
	          _react2.default.createElement(_UI.TextInput, (0, _extends3.default)({ placeHolder: 'Best Before Date',
	            helpText: 'Best Before Date'
	          }, binding("lineName")))
	        ),
	        _react2.default.createElement(
	          'div',
	          { className: 'col-md-8' },
	          _react2.default.createElement(_UI.TextInput, (0, _extends3.default)({
	            placeHolder: 'Qty per Pallet',
	            helpText: 'Qty per Pallet'
	          }, binding("lineCode")))
	        ),
	        _react2.default.createElement(
	          'div',
	          { className: 'col-md-8' },
	          _react2.default.createElement(_UI.TextInput, (0, _extends3.default)({
	            placeHolder: 'Number of Labels',
	            helpText: 'Number of Labels'
	          }, binding("lineCode")))
	        ),
	        _react2.default.createElement(
	          'div',
	          { className: 'col-md-8' },
	          _react2.default.createElement(_UI.Select, (0, _extends3.default)({
	            placeHolder: 'Offline Printer',
	            options: arrOnPrinter
	          }, binding("onLinePrinter")))
	        )
	      );
	    }
	  }]);
	  return AddForm;
	}(_BaseContainer3.default);
	
	exports.default = AddForm;

/***/ }),
/* 601 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _getPrototypeOf = __webpack_require__(382);
	
	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);
	
	var _classCallCheck2 = __webpack_require__(386);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _createClass2 = __webpack_require__(387);
	
	var _createClass3 = _interopRequireDefault(_createClass2);
	
	var _possibleConstructorReturn2 = __webpack_require__(388);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(405);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _react = __webpack_require__(25);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _ApiService = __webpack_require__(438);
	
	var _ApiService2 = _interopRequireDefault(_ApiService);
	
	var _utils = __webpack_require__(476);
	
	var _reactRouterDom = __webpack_require__(512);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var dateStr = "";
	var date = new Date();
	var key_id = 0;
	
	var EditForm = function (_Component) {
	  (0, _inherits3.default)(EditForm, _Component);
	
	  function EditForm(props) {
	    (0, _classCallCheck3.default)(this, EditForm);
	
	    var _this = (0, _possibleConstructorReturn3.default)(this, (EditForm.__proto__ || (0, _getPrototypeOf2.default)(EditForm)).call(this, props));
	
	    _this.onChangePlantArea = _this.onChangePlantArea.bind(_this);
	    _this.onChangeLineName = _this.onChangeLineName.bind(_this);
	    _this.onChangeLineCode = _this.onChangeLineCode.bind(_this);
	    /* this.onChangeOnlinePrinter = this.onChangeOnlinePrinter.bind(this);
	    this.onChangeOffLinePrinter = this.onChangeOffLinePrinter.bind(this);
	    this.onChangeRepack = this.onChangeRepack.bind(this);
	    this.onChangeRepackSSCCCode = this.onChangeRepackSSCCCode.bind(this); */
	    _this.onSubmit = _this.onSubmit.bind(_this);
	
	    _this.state = {
	      plantId: '',
	      plantDescr: '',
	      plantCode: '',
	      plantArea: '',
	      lineId: '',
	      lineCode: '',
	      lineName: ''
	    };
	    return _this;
	  }
	
	  (0, _createClass3.default)(EditForm, [{
	    key: 'componentDidMount',
	    value: function componentDidMount() {
	      var _this2 = this;
	
	      dateStr = date.getFullYear() + "-" + ("00" + (date.getMonth() + 1)).slice(-2) + "-" + ("00" + date.getDate()).slice(-2) + "T" + ("00" + date.getHours()).slice(-2) + ":" + ("00" + date.getMinutes()).slice(-2) + ":" + ("00" + date.getSeconds()).slice(-2);
	
	      var url = this.props.location.search;
	      var urlParams = new URLSearchParams(url);
	      var idVal = urlParams.get('id');
	      key_id = idVal;
	
	      _ApiService2.default.fetchCcaLinesById(key_id).then(function (response) {
	        _this2.setState({
	          plantId: response.data.plantId,
	          plantDescr: response.data.plantDescr,
	          plantCode: response.data.plantCode,
	          plantArea: response.data.plantArea,
	          lineId: response.data.lineId,
	          lineCode: response.data.lineCode,
	          lineName: response.data.lineName
	        });
	        console.log(response.data);
	      }).catch(function (error) {
	        console.log(error);
	      });
	    }
	  }, {
	    key: 'onChangePlantArea',
	    value: function onChangePlantArea(e) {
	      this.setState({
	        plantArea: e.target.value
	      });
	    }
	  }, {
	    key: 'onChangeLineName',
	    value: function onChangeLineName(e) {
	      this.setState({
	        lineName: e.target.value
	      });
	    }
	  }, {
	    key: 'onChangeLineCode',
	    value: function onChangeLineCode(e) {
	      this.setState({
	        lineCode: e.target.value
	      });
	    }
	    /* onChangeOnlinePrinter(e) {
	      this.setState({
	        //lineCode: e.target.value
	      })
	    }
	    onChangeOffLinePrinter(e) {
	      this.setState({
	        //lineCode: e.target.value
	      })
	    }
	    onChangeRepack(e) {
	      this.setState({
	        //lineCode: e.target.value
	      })
	    }
	    onChangeRepackSSCCCode(e) {
	      this.setState({
	        //lineCode: e.target.value
	      })
	    } */
	
	  }, {
	    key: 'onSubmit',
	    value: function onSubmit(e) {
	      var _this3 = this;
	
	      e.preventDefault();
	      var paramsId = parseInt(key_id, 10); // 10 Decimal
	      var obj = {
	        plantId: this.state.plantId,
	        plantDescr: this.state.plantDescr,
	        plantCode: this.state.plantCode,
	        plantArea: this.state.plantArea,
	        lineId: paramsId, //this.props.match.params.id,
	        lineName: this.state.lineName,
	        lineCode: this.state.lineCode,
	        recCreated: dateStr,
	        recDatetime: dateStr
	      };
	      console.log(obj);
	      _ApiService2.default.editCcaLines(paramsId, obj).then(function (res) {
	        //this.props.history.push(View)
	        _this3.props.history.push("/View");
	      });
	      (0, _utils.alertMessage)({ message: 'Data update successfully.' });
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      return _react2.default.createElement(
	        'div',
	        { className: 'portlet light bordered' },
	        _react2.default.createElement(
	          'div',
	          { className: 'portlet-title' },
	          _react2.default.createElement(
	            _reactRouterDom.Link,
	            { to: '/View', className: 'btn sbold blue', id: 'btnView' },
	            'VIEW DATA',
	            _react2.default.createElement('i', { className: 'fa fa-list-alt ' })
	          ),
	          _react2.default.createElement('br', null),
	          _react2.default.createElement(
	            'div',
	            { className: 'caption font-red-sunglo' },
	            _react2.default.createElement('i', { className: 'icon-settings font-red-sunglo' }),
	            _react2.default.createElement(
	              'span',
	              { className: 'caption-subject bold uppercase' },
	              'Edit Lines'
	            )
	          )
	        ),
	        _react2.default.createElement(
	          'div',
	          { className: 'portlet-body form' },
	          _react2.default.createElement(
	            'form',
	            { onSubmit: this.onSubmit },
	            _react2.default.createElement(
	              'div',
	              { className: 'form-group' },
	              _react2.default.createElement(
	                'div',
	                { className: 'row' },
	                _react2.default.createElement(
	                  'div',
	                  { className: 'col-xs-3 col-md-5' },
	                  _react2.default.createElement(
	                    'div',
	                    { className: 'form-group form-md-line-input' },
	                    _react2.default.createElement(
	                      'label',
	                      null,
	                      'Plant Area :  '
	                    ),
	                    _react2.default.createElement('input', {
	                      type: 'text',
	                      className: 'form-control',
	                      value: this.state.plantArea,
	                      onChange: this.onChangePlantArea
	                    })
	                  )
	                ),
	                _react2.default.createElement(
	                  'div',
	                  { className: 'col-xs-3 col-md-5' },
	                  _react2.default.createElement(
	                    'div',
	                    { className: 'form-group form-md-line-input' },
	                    _react2.default.createElement(
	                      'label',
	                      null,
	                      'Line Name : '
	                    ),
	                    _react2.default.createElement('input', { type: 'text',
	                      className: 'form-control',
	                      value: this.state.lineName,
	                      onChange: this.onChangeLineName
	                    })
	                  )
	                ),
	                _react2.default.createElement(
	                  'div',
	                  { className: 'col-xs-3 col-md-5' },
	                  _react2.default.createElement(
	                    'div',
	                    { className: 'form-group form-md-line-input' },
	                    _react2.default.createElement(
	                      'label',
	                      null,
	                      'Line Code : '
	                    ),
	                    _react2.default.createElement('input', { type: 'text',
	                      className: 'form-control',
	                      value: this.state.lineCode,
	                      onChange: this.onChangeLineCode
	                    })
	                  )
	                ),
	                _react2.default.createElement(
	                  'div',
	                  { className: 'col-xs-3 col-md-5' },
	                  _react2.default.createElement(
	                    'div',
	                    { className: 'form-group form-md-line-input' },
	                    _react2.default.createElement(
	                      'label',
	                      null,
	                      'Online Printer : '
	                    ),
	                    _react2.default.createElement('input', { type: 'text',
	                      className: 'form-control',
	                      value: '',
	                      onChange: ''
	                    })
	                  )
	                ),
	                _react2.default.createElement(
	                  'div',
	                  { className: 'col-xs-3 col-md-5' },
	                  _react2.default.createElement(
	                    'div',
	                    { className: 'form-group form-md-line-input' },
	                    _react2.default.createElement(
	                      'label',
	                      null,
	                      'Offline Printer : '
	                    ),
	                    _react2.default.createElement('input', { type: 'text',
	                      className: 'form-control',
	                      value: '',
	                      onChange: ''
	                    })
	                  )
	                ),
	                _react2.default.createElement(
	                  'div',
	                  { className: 'col-sm-12' },
	                  _react2.default.createElement(
	                    'div',
	                    { className: 'md-checkbox' },
	                    _react2.default.createElement('input', { type: 'checkbox', className: 'form-check-input', id: 'chkEwm' }),
	                    _react2.default.createElement(
	                      'label',
	                      { htmlFor: 'chkEwm' },
	                      _react2.default.createElement('span', { className: 'inc' }),
	                      _react2.default.createElement('span', { className: 'check' }),
	                      _react2.default.createElement('span', { className: 'box' }),
	                      ' Repack'
	                    )
	                  )
	                ),
	                _react2.default.createElement(
	                  'div',
	                  { className: 'col-xs-3 col-md-5' },
	                  _react2.default.createElement(
	                    'div',
	                    { className: 'form-group form-md-line-input' },
	                    _react2.default.createElement(
	                      'label',
	                      null,
	                      'Offline Printer : '
	                    ),
	                    _react2.default.createElement('input', { type: 'text',
	                      className: 'form-control',
	                      value: '',
	                      onChange: ''
	                    })
	                  )
	                ),
	                _react2.default.createElement(
	                  'div',
	                  { className: 'col-sm-12' },
	                  _react2.default.createElement(
	                    'div',
	                    { className: 'form-actions noborder' },
	                    _react2.default.createElement('input', { type: 'submit',
	                      value: 'Update',
	                      className: 'btn blue' })
	                  )
	                )
	              )
	            )
	          )
	        )
	      );
	    }
	  }]);
	  return EditForm;
	}(_react.Component);
	
	exports.default = EditForm;

/***/ }),
/* 602 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _getPrototypeOf = __webpack_require__(382);
	
	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);
	
	var _classCallCheck2 = __webpack_require__(386);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _createClass2 = __webpack_require__(387);
	
	var _createClass3 = _interopRequireDefault(_createClass2);
	
	var _possibleConstructorReturn2 = __webpack_require__(388);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(405);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _react = __webpack_require__(25);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _BaseContainer2 = __webpack_require__(474);
	
	var _BaseContainer3 = _interopRequireDefault(_BaseContainer2);
	
	var _Table = __webpack_require__(503);
	
	var _Table2 = _interopRequireDefault(_Table);
	
	var _ApiService = __webpack_require__(438);
	
	var _ApiService2 = _interopRequireDefault(_ApiService);
	
	var _utils = __webpack_require__(476);
	
	var _reactRouterDom = __webpack_require__(512);
	
	var _EditForm = __webpack_require__(601);
	
	var _EditForm2 = _interopRequireDefault(_EditForm);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	//const TABLE_DATA = []
	var data = [];
	
	var TableView = function (_BaseContainer) {
	  (0, _inherits3.default)(TableView, _BaseContainer);
	
	  function TableView() {
	    var _ref;
	
	    var _temp, _this, _ret;
	
	    (0, _classCallCheck3.default)(this, TableView);
	
	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }
	
	    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = TableView.__proto__ || (0, _getPrototypeOf2.default)(TableView)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
	      header: [{
	        title: "#",
	        prop: "no"
	      }, {
	        title: "Line Name",
	        prop: "lineName"
	      }, {
	        title: "Plant Area",
	        prop: "plantArea"
	      }, {
	        title: "Line Code",
	        prop: "lineCode"
	      }, {
	        title: "Repack",
	        prop: ""
	      }, {
	        title: "RP SSCC Code",
	        prop: "-"
	      }, {
	        title: "Action"
	      }],
	      data: data
	    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
	  }
	
	  (0, _createClass3.default)(TableView, [{
	    key: 'componentWillMount',
	    value: function componentWillMount() {
	      var _this2 = this;
	
	      this.setState({
	        title: "Lines"
	      });
	      _ApiService2.default.fetchCcaLines().then(function (response) {
	        _this2.setState({
	          data: response.data
	        });
	      });
	      this.showLoading(true);
	      setTimeout(function () {
	        _this2.showLoading(false);
	      }, 500);
	    }
	  }, {
	    key: '_renderContent',
	    value: function _renderContent() {
	      console.log(this.state);
	      return _react2.default.createElement(
	        'div',
	        { className: 'portlet body' },
	        _react2.default.createElement(_Table2.default, {
	          searchableProperties: ["lineName", "lineCode"],
	          hasTopBar: true,
	          headers: this.state.header,
	          data: this.state.data,
	          rowRender: this._renderRow,
	          onAddNewHandler: this.onAddNewClick.bind(this)
	        })
	      );
	    }
	  }, {
	    key: 'onAddNewClick',
	    value: function onAddNewClick() {}
	  }, {
	    key: '_renderRow',
	    value: function _renderRow(itm, i) {
	      return _react2.default.createElement(
	        'tr',
	        { key: i, className: 'odd gradeX' },
	        _react2.default.createElement(
	          'td',
	          null,
	          i + 1
	        ),
	        _react2.default.createElement(
	          'td',
	          null,
	          itm.lineName
	        ),
	        _react2.default.createElement(
	          'td',
	          null,
	          itm.plantArea
	        ),
	        _react2.default.createElement(
	          'td',
	          null,
	          itm.lineCode
	        ),
	        _react2.default.createElement('td', null),
	        _react2.default.createElement('td', null),
	        _react2.default.createElement(
	          'td',
	          null,
	          _react2.default.createElement(
	            'div',
	            { className: 'btn-group' },
	            _react2.default.createElement(
	              'button',
	              { className: 'btn btn-xs green dropdown-toggle', type: 'button', 'data-toggle': 'dropdown', 'aria-expanded': 'false' },
	              ' Actions',
	              _react2.default.createElement('i', { className: 'fa fa-angle-down' })
	            ),
	            _react2.default.createElement(
	              'ul',
	              { className: 'dropdown-menu pull-left', role: 'menu' },
	              _react2.default.createElement(
	                'li',
	                null,
	                _react2.default.createElement(
	                  'a',
	                  { href: 'javascript:;' },
	                  _react2.default.createElement('i', { className: 'icon-flag' }),
	                  ' Area Name',
	                  _react2.default.createElement(
	                    'span',
	                    { className: 'badge badge-success' },
	                    '4'
	                  )
	                )
	              ),
	              _react2.default.createElement(
	                'li',
	                null,
	                _react2.default.createElement(
	                  'a',
	                  { href: 'javascript:;' },
	                  _react2.default.createElement('i', { className: 'glyphicon glyphicon-tags' }),
	                  ' Area Code '
	                )
	              ),
	              _react2.default.createElement(
	                'li',
	                { className: 'divider' },
	                ' '
	              ),
	              _react2.default.createElement(
	                'li',
	                null,
	                _react2.default.createElement(
	                  _reactRouterDom.Link,
	                  { to: '/Edit/Find?id=' + itm.lineId, id: 'btnEdit' },
	                  _react2.default.createElement('i', { className: 'glyphicon glyphicon-pencil' }),
	                  ' Edit '
	                )
	              ),
	              _react2.default.createElement(
	                'li',
	                null,
	                _react2.default.createElement(
	                  'a',
	                  { onClick: function onClick(e) {
	                      return handleClick(itm.lineId);
	                    } },
	                  _react2.default.createElement('i', { className: 'glyphicon glyphicon-trash' }),
	                  ' Delete '
	                )
	              )
	            )
	          )
	        )
	      );
	    }
	  }]);
	  return TableView;
	}(_BaseContainer3.default);
	
	function handleClick(val) {
	  //alert(e)
	  var result = confirm("Are you sure...?");
	  if (result) {
	    _ApiService2.default.deleteCcaLines(val).then(function (response) {
	      (0, _utils.alertMessage)({ message: 'Data ' + response.data.plantArea + ' deleted successfully' });
	    });
	  }
	}
	
	exports.default = TableView;

/***/ }),
/* 603 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _HomeContainer = __webpack_require__(604);
	
	var _HomeContainer2 = _interopRequireDefault(_HomeContainer);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	// Sync route definition
	
	exports.default = function (store) {
	  return {
	    path: 'repack_printing',
	    /*  Async getComponent is only invoked when route matches   */
	    getComponent: function getComponent(nextState, cb) {
	      /*  Webpack - use 'require.ensure' to create a split point
	          and embed an async module loader (jsonp) when bundling   */
	      !/* require.ensure */(function (require) {
	
	        /*  Return getComponent   */
	        cb(null, _HomeContainer2.default);
	
	        /* Webpack named bundle   */
	      }(__webpack_require__));
	    }
	  };
	};

/***/ }),
/* 604 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _getPrototypeOf = __webpack_require__(382);
	
	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);
	
	var _classCallCheck2 = __webpack_require__(386);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _createClass2 = __webpack_require__(387);
	
	var _createClass3 = _interopRequireDefault(_createClass2);
	
	var _possibleConstructorReturn2 = __webpack_require__(388);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(405);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _react = __webpack_require__(25);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _BaseContainer2 = __webpack_require__(474);
	
	var _BaseContainer3 = _interopRequireDefault(_BaseContainer2);
	
	var _reactRouterDom = __webpack_require__(512);
	
	var _AddForm = __webpack_require__(605);
	
	var _AddForm2 = _interopRequireDefault(_AddForm);
	
	var _EditForm = __webpack_require__(606);
	
	var _EditForm2 = _interopRequireDefault(_EditForm);
	
	var _TableView = __webpack_require__(607);
	
	var _TableView2 = _interopRequireDefault(_TableView);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var HomeContainer = function (_BaseContainer) {
	  (0, _inherits3.default)(HomeContainer, _BaseContainer);
	
	  function HomeContainer() {
	    (0, _classCallCheck3.default)(this, HomeContainer);
	    return (0, _possibleConstructorReturn3.default)(this, (HomeContainer.__proto__ || (0, _getPrototypeOf2.default)(HomeContainer)).call(this));
	  }
	
	  (0, _createClass3.default)(HomeContainer, [{
	    key: 'componentWillMount',
	    value: function componentWillMount() {
	      this.setState({
	        title: "Lines"
	      });
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      return _react2.default.createElement(
	        _reactRouterDom.BrowserRouter,
	        null,
	        _react2.default.createElement(
	          _reactRouterDom.Switch,
	          null,
	          _react2.default.createElement(_reactRouterDom.Route, { exact: true, path: '/Create', component: _AddForm2.default }),
	          _react2.default.createElement(_reactRouterDom.Route, { path: '/Edit/:id', component: _EditForm2.default }),
	          _react2.default.createElement(_reactRouterDom.Route, { path: '/View', component: _TableView2.default }),
	          _react2.default.createElement(_reactRouterDom.Route, { path: '/', component: _AddForm2.default }),
	          _react2.default.createElement(_reactRouterDom.Route, { component: _AddForm2.default })
	        )
	      );
	    }
	  }]);
	  return HomeContainer;
	}(_BaseContainer3.default);
	
	exports.default = HomeContainer;

/***/ }),
/* 605 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _extends2 = __webpack_require__(313);
	
	var _extends3 = _interopRequireDefault(_extends2);
	
	var _stringify = __webpack_require__(496);
	
	var _stringify2 = _interopRequireDefault(_stringify);
	
	var _getPrototypeOf = __webpack_require__(382);
	
	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);
	
	var _classCallCheck2 = __webpack_require__(386);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _createClass2 = __webpack_require__(387);
	
	var _createClass3 = _interopRequireDefault(_createClass2);
	
	var _possibleConstructorReturn2 = __webpack_require__(388);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(405);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _react = __webpack_require__(25);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _propTypes = __webpack_require__(415);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _BaseContainer2 = __webpack_require__(474);
	
	var _BaseContainer3 = _interopRequireDefault(_BaseContainer2);
	
	var _ApiService = __webpack_require__(438);
	
	var _ApiService2 = _interopRequireDefault(_ApiService);
	
	var _UI = __webpack_require__(485);
	
	var _DataForm = __webpack_require__(538);
	
	var _DataForm2 = _interopRequireDefault(_DataForm);
	
	var _utils = __webpack_require__(476);
	
	var _reactRouterDom = __webpack_require__(512);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var TABS_DATA = [];
	var dateStr = "";
	var date = new Date();
	var plant_id = "";
	var plant_name = "";
	
	var arrArea = [];
	_ApiService2.default.fetchCcaPlants().then(function (response) {
	  response.data.map(function (data) {
	    arrArea.push({ title: data.plantDescr, value: data.plantId });
	  });
	});
	
	var arrOnPrinter = [];
	_ApiService2.default.fetchCcaOnlinePrinters().then(function (response) {
	  response.data.map(function (data) {
	    arrOnPrinter.push({ title: data.printerName, value: data.printerId });
	  });
	});
	
	var arrOffPrinter = [];
	_ApiService2.default.fetchCcaOfflinePrinters().then(function (response) {
	  response.data.map(function (data) {
	    arrOffPrinter.push({ title: data.printerName, value: data.printerId });
	  });
	});
	
	var AddForm = function (_BaseContainer) {
	  (0, _inherits3.default)(AddForm, _BaseContainer);
	
	  function AddForm() {
	    (0, _classCallCheck3.default)(this, AddForm);
	    return (0, _possibleConstructorReturn3.default)(this, (AddForm.__proto__ || (0, _getPrototypeOf2.default)(AddForm)).apply(this, arguments));
	  }
	
	  (0, _createClass3.default)(AddForm, [{
	    key: 'componentWillMount',
	    value: function componentWillMount() {
	      dateStr = date.getFullYear() + "-" + ("00" + (date.getMonth() + 1)).slice(-2) + "-" + ("00" + date.getDate()).slice(-2) + "T" + ("00" + date.getHours()).slice(-2) + ":" + ("00" + date.getMinutes()).slice(-2) + ":" + ("00" + date.getSeconds()).slice(-2);
	    }
	
	    //--------------------------------------------------------------------//
	    //  Form Content Renderer
	    //--------------------------------------------------------------------//
	
	  }, {
	    key: '_renderContent',
	    value: function _renderContent() {
	      var item = {
	        lineName: "",
	        lineCode: "",
	        recCreated: dateStr,
	        recDatetime: dateStr,
	        plantArea: 1,
	        onLinePrinter: 1,
	        offLinePrinter: 1,
	        repack: 0
	      };
	
	      return _react2.default.createElement(_DataForm2.default, {
	        title: 'Repack Printing',
	        hasCancel: true,
	        item: item,
	        bodyRender: this.fromBodyRender,
	        onSubmit: function onSubmit(itm) {
	          // insert cca_lines
	          _ApiService2.default.addCcaLines({
	            "lineName": itm.lineName,
	            "lineCode": itm.lineCode,
	            "recCreated": itm.recCreated,
	            "recDatetime": itm.recDatetime
	          }).then(function (res) {
	            //this.props.history.push(View)
	            console.log(res);
	          });
	
	          // select cca_plants get last lineId
	          var onLinePrinter = parseInt(itm.onLinePrinter);
	          var offLinePrinter = parseInt(itm.offLinePrinter);
	          _ApiService2.default.fetchCcaLinesLast().then(function (res) {
	            res.data.map(function (val) {
	              // check and insert cca_plant_line
	              _ApiService2.default.deleteCcaPlantLines(val.lineId);
	              _ApiService2.default.addCcaPlantLines({
	                "plantId": val.plantId,
	                "lineId": val.lineId
	              });
	
	              // check and insert cca_line_printer
	              _ApiService2.default.deleteCcaLinePrinters(val.lineId);
	              _ApiService2.default.addCcaLinePrinters({
	                "lineId": val.lineId,
	                "printerId": onLinePrinter
	              });
	
	              // check and delete cca_line_scanner
	              _ApiService2.default.deleteCcaLineScanners(val.lineId);
	              console.log((0, _stringify2.default)(val));
	            });
	          });
	          console.log((0, _stringify2.default)('ini plantArea =' + itm.plantArea + ' ini onLinePrinter=' + itm.onLinePrinter + ' ini offLinePrinter=' + itm.onLinePrinter));
	          //console.log(JSON.stringify(itm.plantId));
	          (0, _utils.alertMessage)({ message: 'Data ' + itm.lineName + ' added successfully.' });
	        },
	        onCancel: function onCancel(itm) {}
	      });
	    }
	  }, {
	    key: 'fromBodyRender',
	    value: function fromBodyRender(options) {
	      //const plantArea = arrArea;
	      var item = options.item,
	          binding = options.binding;
	
	      return _react2.default.createElement(
	        'div',
	        { className: 'row' },
	        _react2.default.createElement(
	          'div',
	          { className: 'col-md-8' },
	          _react2.default.createElement(_UI.Select, (0, _extends3.default)({
	            placeHolder: 'Line Number',
	            options: arrArea
	          }, binding("plantArea")))
	        ),
	        _react2.default.createElement(
	          'div',
	          { className: 'col-md-8' },
	          _react2.default.createElement(_UI.TextInput, (0, _extends3.default)({
	            placeHolder: 'Production Order',
	            helpText: 'Production Order'
	          }, binding("lineName")))
	        ),
	        _react2.default.createElement(
	          'div',
	          { className: 'col-md-8' },
	          _react2.default.createElement(_UI.Select, (0, _extends3.default)({
	            placeHolder: 'Material Number',
	            options: arrArea
	          }, binding("plantArea")))
	        ),
	        _react2.default.createElement(
	          'div',
	          { className: 'col-md-8' },
	          _react2.default.createElement(_UI.TextInput, (0, _extends3.default)({
	            placeHolder: 'Material Description',
	            helpText: 'Material Description'
	          }, binding("lineName")))
	        ),
	        _react2.default.createElement(
	          'div',
	          { className: 'col-md-8' },
	          _react2.default.createElement(_UI.TextInput, (0, _extends3.default)({
	            placeHolder: 'Best Before Date',
	            helpText: 'Best Before Date'
	          }, binding("lineName")))
	        ),
	        _react2.default.createElement(
	          'div',
	          { className: 'col-md-8' },
	          _react2.default.createElement(_UI.TextInput, (0, _extends3.default)({
	            placeHolder: 'Qty per Pallet',
	            helpText: 'Qty per Pallet'
	          }, binding("lineCode")))
	        ),
	        _react2.default.createElement(
	          'div',
	          { className: 'col-md-8' },
	          _react2.default.createElement(_UI.TextInput, (0, _extends3.default)({
	            placeHolder: 'Number of Labels',
	            helpText: 'Number of Labels'
	          }, binding("lineCode")))
	        ),
	        _react2.default.createElement(
	          'div',
	          { className: 'col-md-8' },
	          _react2.default.createElement(_UI.Select, (0, _extends3.default)({
	            placeHolder: 'Offline Printer',
	            options: arrOnPrinter
	          }, binding("onLinePrinter")))
	        )
	      );
	    }
	  }]);
	  return AddForm;
	}(_BaseContainer3.default);
	
	exports.default = AddForm;

/***/ }),
/* 606 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _getPrototypeOf = __webpack_require__(382);
	
	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);
	
	var _classCallCheck2 = __webpack_require__(386);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _createClass2 = __webpack_require__(387);
	
	var _createClass3 = _interopRequireDefault(_createClass2);
	
	var _possibleConstructorReturn2 = __webpack_require__(388);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(405);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _react = __webpack_require__(25);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _ApiService = __webpack_require__(438);
	
	var _ApiService2 = _interopRequireDefault(_ApiService);
	
	var _utils = __webpack_require__(476);
	
	var _reactRouterDom = __webpack_require__(512);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var dateStr = "";
	var date = new Date();
	var key_id = 0;
	
	var EditForm = function (_Component) {
	  (0, _inherits3.default)(EditForm, _Component);
	
	  function EditForm(props) {
	    (0, _classCallCheck3.default)(this, EditForm);
	
	    var _this = (0, _possibleConstructorReturn3.default)(this, (EditForm.__proto__ || (0, _getPrototypeOf2.default)(EditForm)).call(this, props));
	
	    _this.onChangePlantArea = _this.onChangePlantArea.bind(_this);
	    _this.onChangeLineName = _this.onChangeLineName.bind(_this);
	    _this.onChangeLineCode = _this.onChangeLineCode.bind(_this);
	    /* this.onChangeOnlinePrinter = this.onChangeOnlinePrinter.bind(this);
	    this.onChangeOffLinePrinter = this.onChangeOffLinePrinter.bind(this);
	    this.onChangeRepack = this.onChangeRepack.bind(this);
	    this.onChangeRepackSSCCCode = this.onChangeRepackSSCCCode.bind(this); */
	    _this.onSubmit = _this.onSubmit.bind(_this);
	
	    _this.state = {
	      plantId: '',
	      plantDescr: '',
	      plantCode: '',
	      plantArea: '',
	      lineId: '',
	      lineCode: '',
	      lineName: ''
	    };
	    return _this;
	  }
	
	  (0, _createClass3.default)(EditForm, [{
	    key: 'componentDidMount',
	    value: function componentDidMount() {
	      var _this2 = this;
	
	      dateStr = date.getFullYear() + "-" + ("00" + (date.getMonth() + 1)).slice(-2) + "-" + ("00" + date.getDate()).slice(-2) + "T" + ("00" + date.getHours()).slice(-2) + ":" + ("00" + date.getMinutes()).slice(-2) + ":" + ("00" + date.getSeconds()).slice(-2);
	
	      var url = this.props.location.search;
	      var urlParams = new URLSearchParams(url);
	      var idVal = urlParams.get('id');
	      key_id = idVal;
	
	      _ApiService2.default.fetchCcaLinesById(key_id).then(function (response) {
	        _this2.setState({
	          plantId: response.data.plantId,
	          plantDescr: response.data.plantDescr,
	          plantCode: response.data.plantCode,
	          plantArea: response.data.plantArea,
	          lineId: response.data.lineId,
	          lineCode: response.data.lineCode,
	          lineName: response.data.lineName
	        });
	        console.log(response.data);
	      }).catch(function (error) {
	        console.log(error);
	      });
	    }
	  }, {
	    key: 'onChangePlantArea',
	    value: function onChangePlantArea(e) {
	      this.setState({
	        plantArea: e.target.value
	      });
	    }
	  }, {
	    key: 'onChangeLineName',
	    value: function onChangeLineName(e) {
	      this.setState({
	        lineName: e.target.value
	      });
	    }
	  }, {
	    key: 'onChangeLineCode',
	    value: function onChangeLineCode(e) {
	      this.setState({
	        lineCode: e.target.value
	      });
	    }
	    /* onChangeOnlinePrinter(e) {
	      this.setState({
	        //lineCode: e.target.value
	      })
	    }
	    onChangeOffLinePrinter(e) {
	      this.setState({
	        //lineCode: e.target.value
	      })
	    }
	    onChangeRepack(e) {
	      this.setState({
	        //lineCode: e.target.value
	      })
	    }
	    onChangeRepackSSCCCode(e) {
	      this.setState({
	        //lineCode: e.target.value
	      })
	    } */
	
	  }, {
	    key: 'onSubmit',
	    value: function onSubmit(e) {
	      var _this3 = this;
	
	      e.preventDefault();
	      var paramsId = parseInt(key_id, 10); // 10 Decimal
	      var obj = {
	        plantId: this.state.plantId,
	        plantDescr: this.state.plantDescr,
	        plantCode: this.state.plantCode,
	        plantArea: this.state.plantArea,
	        lineId: paramsId, //this.props.match.params.id,
	        lineName: this.state.lineName,
	        lineCode: this.state.lineCode,
	        recCreated: dateStr,
	        recDatetime: dateStr
	      };
	      console.log(obj);
	      _ApiService2.default.editCcaLines(paramsId, obj).then(function (res) {
	        //this.props.history.push(View)
	        _this3.props.history.push("/View");
	      });
	      (0, _utils.alertMessage)({ message: 'Data update successfully.' });
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      return _react2.default.createElement(
	        'div',
	        { className: 'portlet light bordered' },
	        _react2.default.createElement(
	          'div',
	          { className: 'portlet-title' },
	          _react2.default.createElement(
	            _reactRouterDom.Link,
	            { to: '/View', className: 'btn sbold blue', id: 'btnView' },
	            'VIEW DATA',
	            _react2.default.createElement('i', { className: 'fa fa-list-alt ' })
	          ),
	          _react2.default.createElement('br', null),
	          _react2.default.createElement(
	            'div',
	            { className: 'caption font-red-sunglo' },
	            _react2.default.createElement('i', { className: 'icon-settings font-red-sunglo' }),
	            _react2.default.createElement(
	              'span',
	              { className: 'caption-subject bold uppercase' },
	              'Edit Lines'
	            )
	          )
	        ),
	        _react2.default.createElement(
	          'div',
	          { className: 'portlet-body form' },
	          _react2.default.createElement(
	            'form',
	            { onSubmit: this.onSubmit },
	            _react2.default.createElement(
	              'div',
	              { className: 'form-group' },
	              _react2.default.createElement(
	                'div',
	                { className: 'row' },
	                _react2.default.createElement(
	                  'div',
	                  { className: 'col-xs-3 col-md-5' },
	                  _react2.default.createElement(
	                    'div',
	                    { className: 'form-group form-md-line-input' },
	                    _react2.default.createElement(
	                      'label',
	                      null,
	                      'Plant Area :  '
	                    ),
	                    _react2.default.createElement('input', {
	                      type: 'text',
	                      className: 'form-control',
	                      value: this.state.plantArea,
	                      onChange: this.onChangePlantArea
	                    })
	                  )
	                ),
	                _react2.default.createElement(
	                  'div',
	                  { className: 'col-xs-3 col-md-5' },
	                  _react2.default.createElement(
	                    'div',
	                    { className: 'form-group form-md-line-input' },
	                    _react2.default.createElement(
	                      'label',
	                      null,
	                      'Line Name : '
	                    ),
	                    _react2.default.createElement('input', { type: 'text',
	                      className: 'form-control',
	                      value: this.state.lineName,
	                      onChange: this.onChangeLineName
	                    })
	                  )
	                ),
	                _react2.default.createElement(
	                  'div',
	                  { className: 'col-xs-3 col-md-5' },
	                  _react2.default.createElement(
	                    'div',
	                    { className: 'form-group form-md-line-input' },
	                    _react2.default.createElement(
	                      'label',
	                      null,
	                      'Line Code : '
	                    ),
	                    _react2.default.createElement('input', { type: 'text',
	                      className: 'form-control',
	                      value: this.state.lineCode,
	                      onChange: this.onChangeLineCode
	                    })
	                  )
	                ),
	                _react2.default.createElement(
	                  'div',
	                  { className: 'col-xs-3 col-md-5' },
	                  _react2.default.createElement(
	                    'div',
	                    { className: 'form-group form-md-line-input' },
	                    _react2.default.createElement(
	                      'label',
	                      null,
	                      'Online Printer : '
	                    ),
	                    _react2.default.createElement('input', { type: 'text',
	                      className: 'form-control',
	                      value: '',
	                      onChange: ''
	                    })
	                  )
	                ),
	                _react2.default.createElement(
	                  'div',
	                  { className: 'col-xs-3 col-md-5' },
	                  _react2.default.createElement(
	                    'div',
	                    { className: 'form-group form-md-line-input' },
	                    _react2.default.createElement(
	                      'label',
	                      null,
	                      'Offline Printer : '
	                    ),
	                    _react2.default.createElement('input', { type: 'text',
	                      className: 'form-control',
	                      value: '',
	                      onChange: ''
	                    })
	                  )
	                ),
	                _react2.default.createElement(
	                  'div',
	                  { className: 'col-sm-12' },
	                  _react2.default.createElement(
	                    'div',
	                    { className: 'md-checkbox' },
	                    _react2.default.createElement('input', { type: 'checkbox', className: 'form-check-input', id: 'chkEwm' }),
	                    _react2.default.createElement(
	                      'label',
	                      { htmlFor: 'chkEwm' },
	                      _react2.default.createElement('span', { className: 'inc' }),
	                      _react2.default.createElement('span', { className: 'check' }),
	                      _react2.default.createElement('span', { className: 'box' }),
	                      ' Repack'
	                    )
	                  )
	                ),
	                _react2.default.createElement(
	                  'div',
	                  { className: 'col-xs-3 col-md-5' },
	                  _react2.default.createElement(
	                    'div',
	                    { className: 'form-group form-md-line-input' },
	                    _react2.default.createElement(
	                      'label',
	                      null,
	                      'Offline Printer : '
	                    ),
	                    _react2.default.createElement('input', { type: 'text',
	                      className: 'form-control',
	                      value: '',
	                      onChange: ''
	                    })
	                  )
	                ),
	                _react2.default.createElement(
	                  'div',
	                  { className: 'col-sm-12' },
	                  _react2.default.createElement(
	                    'div',
	                    { className: 'form-actions noborder' },
	                    _react2.default.createElement('input', { type: 'submit',
	                      value: 'Update',
	                      className: 'btn blue' })
	                  )
	                )
	              )
	            )
	          )
	        )
	      );
	    }
	  }]);
	  return EditForm;
	}(_react.Component);
	
	exports.default = EditForm;

/***/ }),
/* 607 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _getPrototypeOf = __webpack_require__(382);
	
	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);
	
	var _classCallCheck2 = __webpack_require__(386);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _createClass2 = __webpack_require__(387);
	
	var _createClass3 = _interopRequireDefault(_createClass2);
	
	var _possibleConstructorReturn2 = __webpack_require__(388);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(405);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _react = __webpack_require__(25);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _BaseContainer2 = __webpack_require__(474);
	
	var _BaseContainer3 = _interopRequireDefault(_BaseContainer2);
	
	var _Table = __webpack_require__(503);
	
	var _Table2 = _interopRequireDefault(_Table);
	
	var _ApiService = __webpack_require__(438);
	
	var _ApiService2 = _interopRequireDefault(_ApiService);
	
	var _utils = __webpack_require__(476);
	
	var _reactRouterDom = __webpack_require__(512);
	
	var _EditForm = __webpack_require__(606);
	
	var _EditForm2 = _interopRequireDefault(_EditForm);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	//const TABLE_DATA = []
	var data = [];
	
	var TableView = function (_BaseContainer) {
	  (0, _inherits3.default)(TableView, _BaseContainer);
	
	  function TableView() {
	    var _ref;
	
	    var _temp, _this, _ret;
	
	    (0, _classCallCheck3.default)(this, TableView);
	
	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }
	
	    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = TableView.__proto__ || (0, _getPrototypeOf2.default)(TableView)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
	      header: [{
	        title: "#",
	        prop: "no"
	      }, {
	        title: "Line Name",
	        prop: "lineName"
	      }, {
	        title: "Plant Area",
	        prop: "plantArea"
	      }, {
	        title: "Line Code",
	        prop: "lineCode"
	      }, {
	        title: "Repack",
	        prop: ""
	      }, {
	        title: "RP SSCC Code",
	        prop: "-"
	      }, {
	        title: "Action"
	      }],
	      data: data
	    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
	  }
	
	  (0, _createClass3.default)(TableView, [{
	    key: 'componentWillMount',
	    value: function componentWillMount() {
	      var _this2 = this;
	
	      this.setState({
	        title: "Lines"
	      });
	      _ApiService2.default.fetchCcaLines().then(function (response) {
	        _this2.setState({
	          data: response.data
	        });
	      });
	      this.showLoading(true);
	      setTimeout(function () {
	        _this2.showLoading(false);
	      }, 500);
	    }
	  }, {
	    key: '_renderContent',
	    value: function _renderContent() {
	      console.log(this.state);
	      return _react2.default.createElement(
	        'div',
	        { className: 'portlet body' },
	        _react2.default.createElement(_Table2.default, {
	          searchableProperties: ["lineName", "lineCode"],
	          hasTopBar: true,
	          headers: this.state.header,
	          data: this.state.data,
	          rowRender: this._renderRow,
	          onAddNewHandler: this.onAddNewClick.bind(this)
	        })
	      );
	    }
	  }, {
	    key: 'onAddNewClick',
	    value: function onAddNewClick() {}
	  }, {
	    key: '_renderRow',
	    value: function _renderRow(itm, i) {
	      return _react2.default.createElement(
	        'tr',
	        { key: i, className: 'odd gradeX' },
	        _react2.default.createElement(
	          'td',
	          null,
	          i + 1
	        ),
	        _react2.default.createElement(
	          'td',
	          null,
	          itm.lineName
	        ),
	        _react2.default.createElement(
	          'td',
	          null,
	          itm.plantArea
	        ),
	        _react2.default.createElement(
	          'td',
	          null,
	          itm.lineCode
	        ),
	        _react2.default.createElement('td', null),
	        _react2.default.createElement('td', null),
	        _react2.default.createElement(
	          'td',
	          null,
	          _react2.default.createElement(
	            'div',
	            { className: 'btn-group' },
	            _react2.default.createElement(
	              'button',
	              { className: 'btn btn-xs green dropdown-toggle', type: 'button', 'data-toggle': 'dropdown', 'aria-expanded': 'false' },
	              ' Actions',
	              _react2.default.createElement('i', { className: 'fa fa-angle-down' })
	            ),
	            _react2.default.createElement(
	              'ul',
	              { className: 'dropdown-menu pull-left', role: 'menu' },
	              _react2.default.createElement(
	                'li',
	                null,
	                _react2.default.createElement(
	                  'a',
	                  { href: 'javascript:;' },
	                  _react2.default.createElement('i', { className: 'icon-flag' }),
	                  ' Area Name',
	                  _react2.default.createElement(
	                    'span',
	                    { className: 'badge badge-success' },
	                    '4'
	                  )
	                )
	              ),
	              _react2.default.createElement(
	                'li',
	                null,
	                _react2.default.createElement(
	                  'a',
	                  { href: 'javascript:;' },
	                  _react2.default.createElement('i', { className: 'glyphicon glyphicon-tags' }),
	                  ' Area Code '
	                )
	              ),
	              _react2.default.createElement(
	                'li',
	                { className: 'divider' },
	                ' '
	              ),
	              _react2.default.createElement(
	                'li',
	                null,
	                _react2.default.createElement(
	                  _reactRouterDom.Link,
	                  { to: '/Edit/Find?id=' + itm.lineId, id: 'btnEdit' },
	                  _react2.default.createElement('i', { className: 'glyphicon glyphicon-pencil' }),
	                  ' Edit '
	                )
	              ),
	              _react2.default.createElement(
	                'li',
	                null,
	                _react2.default.createElement(
	                  'a',
	                  { onClick: function onClick(e) {
	                      return handleClick(itm.lineId);
	                    } },
	                  _react2.default.createElement('i', { className: 'glyphicon glyphicon-trash' }),
	                  ' Delete '
	                )
	              )
	            )
	          )
	        )
	      );
	    }
	  }]);
	  return TableView;
	}(_BaseContainer3.default);
	
	function handleClick(val) {
	  //alert(e)
	  var result = confirm("Are you sure...?");
	  if (result) {
	    _ApiService2.default.deleteCcaLines(val).then(function (response) {
	      (0, _utils.alertMessage)({ message: 'Data ' + response.data.plantArea + ' deleted successfully' });
	    });
	  }
	}
	
	exports.default = TableView;

/***/ }),
/* 608 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _HomeContainer = __webpack_require__(609);
	
	var _HomeContainer2 = _interopRequireDefault(_HomeContainer);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	// Sync route definition
	
	exports.default = function (store) {
	  return {
	    path: 'rework_printing',
	    /*  Async getComponent is only invoked when route matches   */
	    getComponent: function getComponent(nextState, cb) {
	      /*  Webpack - use 'require.ensure' to create a split point
	          and embed an async module loader (jsonp) when bundling   */
	      !/* require.ensure */(function (require) {
	
	        /*  Return getComponent   */
	        cb(null, _HomeContainer2.default);
	
	        /* Webpack named bundle   */
	      }(__webpack_require__));
	    }
	  };
	};

/***/ }),
/* 609 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _getPrototypeOf = __webpack_require__(382);
	
	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);
	
	var _classCallCheck2 = __webpack_require__(386);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _createClass2 = __webpack_require__(387);
	
	var _createClass3 = _interopRequireDefault(_createClass2);
	
	var _possibleConstructorReturn2 = __webpack_require__(388);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(405);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _react = __webpack_require__(25);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _BaseContainer2 = __webpack_require__(474);
	
	var _BaseContainer3 = _interopRequireDefault(_BaseContainer2);
	
	var _reactRouterDom = __webpack_require__(512);
	
	var _AddForm = __webpack_require__(610);
	
	var _AddForm2 = _interopRequireDefault(_AddForm);
	
	var _EditForm = __webpack_require__(611);
	
	var _EditForm2 = _interopRequireDefault(_EditForm);
	
	var _TableView = __webpack_require__(612);
	
	var _TableView2 = _interopRequireDefault(_TableView);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var HomeContainer = function (_BaseContainer) {
	  (0, _inherits3.default)(HomeContainer, _BaseContainer);
	
	  function HomeContainer() {
	    (0, _classCallCheck3.default)(this, HomeContainer);
	    return (0, _possibleConstructorReturn3.default)(this, (HomeContainer.__proto__ || (0, _getPrototypeOf2.default)(HomeContainer)).call(this));
	  }
	
	  (0, _createClass3.default)(HomeContainer, [{
	    key: 'componentWillMount',
	    value: function componentWillMount() {
	      this.setState({
	        title: "Lines"
	      });
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      return _react2.default.createElement(
	        _reactRouterDom.BrowserRouter,
	        null,
	        _react2.default.createElement(
	          _reactRouterDom.Switch,
	          null,
	          _react2.default.createElement(_reactRouterDom.Route, { exact: true, path: '/Create', component: _AddForm2.default }),
	          _react2.default.createElement(_reactRouterDom.Route, { path: '/Edit/:id', component: _EditForm2.default }),
	          _react2.default.createElement(_reactRouterDom.Route, { path: '/View', component: _TableView2.default }),
	          _react2.default.createElement(_reactRouterDom.Route, { path: '/', component: _AddForm2.default }),
	          _react2.default.createElement(_reactRouterDom.Route, { component: _AddForm2.default })
	        )
	      );
	    }
	  }]);
	  return HomeContainer;
	}(_BaseContainer3.default);
	
	exports.default = HomeContainer;

/***/ }),
/* 610 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _extends2 = __webpack_require__(313);
	
	var _extends3 = _interopRequireDefault(_extends2);
	
	var _stringify = __webpack_require__(496);
	
	var _stringify2 = _interopRequireDefault(_stringify);
	
	var _getPrototypeOf = __webpack_require__(382);
	
	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);
	
	var _classCallCheck2 = __webpack_require__(386);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _createClass2 = __webpack_require__(387);
	
	var _createClass3 = _interopRequireDefault(_createClass2);
	
	var _possibleConstructorReturn2 = __webpack_require__(388);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(405);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _react = __webpack_require__(25);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _propTypes = __webpack_require__(415);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _BaseContainer2 = __webpack_require__(474);
	
	var _BaseContainer3 = _interopRequireDefault(_BaseContainer2);
	
	var _ApiService = __webpack_require__(438);
	
	var _ApiService2 = _interopRequireDefault(_ApiService);
	
	var _UI = __webpack_require__(485);
	
	var _DataForm = __webpack_require__(538);
	
	var _DataForm2 = _interopRequireDefault(_DataForm);
	
	var _utils = __webpack_require__(476);
	
	var _reactRouterDom = __webpack_require__(512);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var TABS_DATA = [];
	var dateStr = "";
	var date = new Date();
	var plant_id = "";
	var plant_name = "";
	
	var arrArea = [];
	_ApiService2.default.fetchCcaPlants().then(function (response) {
	  response.data.map(function (data) {
	    arrArea.push({ title: data.plantDescr, value: data.plantId });
	  });
	});
	
	var arrOnPrinter = [];
	_ApiService2.default.fetchCcaOnlinePrinters().then(function (response) {
	  response.data.map(function (data) {
	    arrOnPrinter.push({ title: data.printerName, value: data.printerId });
	  });
	});
	
	var arrOffPrinter = [];
	_ApiService2.default.fetchCcaOfflinePrinters().then(function (response) {
	  response.data.map(function (data) {
	    arrOffPrinter.push({ title: data.printerName, value: data.printerId });
	  });
	});
	
	var AddForm = function (_BaseContainer) {
	  (0, _inherits3.default)(AddForm, _BaseContainer);
	
	  function AddForm() {
	    (0, _classCallCheck3.default)(this, AddForm);
	    return (0, _possibleConstructorReturn3.default)(this, (AddForm.__proto__ || (0, _getPrototypeOf2.default)(AddForm)).apply(this, arguments));
	  }
	
	  (0, _createClass3.default)(AddForm, [{
	    key: 'componentWillMount',
	    value: function componentWillMount() {
	      dateStr = date.getFullYear() + "-" + ("00" + (date.getMonth() + 1)).slice(-2) + "-" + ("00" + date.getDate()).slice(-2) + "T" + ("00" + date.getHours()).slice(-2) + ":" + ("00" + date.getMinutes()).slice(-2) + ":" + ("00" + date.getSeconds()).slice(-2);
	    }
	
	    //--------------------------------------------------------------------//
	    //  Form Content Renderer
	    //--------------------------------------------------------------------//
	
	  }, {
	    key: '_renderContent',
	    value: function _renderContent() {
	      var item = {
	        lineName: "",
	        lineCode: "",
	        recCreated: dateStr,
	        recDatetime: dateStr,
	        plantArea: 1,
	        onLinePrinter: 1,
	        offLinePrinter: 1,
	        repack: 0
	      };
	
	      return _react2.default.createElement(_DataForm2.default, {
	        title: 'Rework Printing',
	        hasCancel: true,
	        item: item,
	        bodyRender: this.fromBodyRender,
	        onSubmit: function onSubmit(itm) {
	          // insert cca_lines
	          _ApiService2.default.addCcaLines({
	            "lineName": itm.lineName,
	            "lineCode": itm.lineCode,
	            "recCreated": itm.recCreated,
	            "recDatetime": itm.recDatetime
	          }).then(function (res) {
	            //this.props.history.push(View)
	            console.log(res);
	          });
	
	          // select cca_plants get last lineId
	          var onLinePrinter = parseInt(itm.onLinePrinter);
	          var offLinePrinter = parseInt(itm.offLinePrinter);
	          _ApiService2.default.fetchCcaLinesLast().then(function (res) {
	            res.data.map(function (val) {
	              // check and insert cca_plant_line
	              _ApiService2.default.deleteCcaPlantLines(val.lineId);
	              _ApiService2.default.addCcaPlantLines({
	                "plantId": val.plantId,
	                "lineId": val.lineId
	              });
	
	              // check and insert cca_line_printer
	              _ApiService2.default.deleteCcaLinePrinters(val.lineId);
	              _ApiService2.default.addCcaLinePrinters({
	                "lineId": val.lineId,
	                "printerId": onLinePrinter
	              });
	
	              // check and delete cca_line_scanner
	              _ApiService2.default.deleteCcaLineScanners(val.lineId);
	              console.log((0, _stringify2.default)(val));
	            });
	          });
	          console.log((0, _stringify2.default)('ini plantArea =' + itm.plantArea + ' ini onLinePrinter=' + itm.onLinePrinter + ' ini offLinePrinter=' + itm.onLinePrinter));
	          //console.log(JSON.stringify(itm.plantId));
	          (0, _utils.alertMessage)({ message: 'Data ' + itm.lineName + ' added successfully.' });
	        },
	        onCancel: function onCancel(itm) {}
	      });
	    }
	  }, {
	    key: 'fromBodyRender',
	    value: function fromBodyRender(options) {
	      //const plantArea = arrArea;
	      var item = options.item,
	          binding = options.binding;
	
	      return _react2.default.createElement(
	        'div',
	        { className: 'row' },
	        _react2.default.createElement(
	          'div',
	          { className: 'col-md-8' },
	          _react2.default.createElement(_UI.Select, (0, _extends3.default)({
	            placeHolder: 'Line Number',
	            options: arrArea
	          }, binding("plantArea")))
	        ),
	        _react2.default.createElement(
	          'div',
	          { className: 'col-md-8' },
	          _react2.default.createElement(_UI.TextInput, (0, _extends3.default)({
	            placeHolder: 'Production Order',
	            helpText: 'Production Order'
	          }, binding("lineName")))
	        ),
	        _react2.default.createElement(
	          'div',
	          { className: 'col-md-8' },
	          _react2.default.createElement(_UI.Select, (0, _extends3.default)({
	            placeHolder: 'Material Number',
	            options: arrArea
	          }, binding("plantArea")))
	        ),
	        _react2.default.createElement(
	          'div',
	          { className: 'col-md-8' },
	          _react2.default.createElement(_UI.TextInput, (0, _extends3.default)({
	            placeHolder: 'Material Description',
	            helpText: 'Material Description'
	          }, binding("lineName")))
	        ),
	        _react2.default.createElement(
	          'div',
	          { className: 'col-md-8' },
	          _react2.default.createElement(_UI.TextInput, (0, _extends3.default)({
	            placeHolder: 'Best Before Date',
	            helpText: 'Best Before Date'
	          }, binding("lineName")))
	        ),
	        _react2.default.createElement(
	          'div',
	          { className: 'col-md-8' },
	          _react2.default.createElement(_UI.TextInput, (0, _extends3.default)({
	            placeHolder: 'Qty per Pallet',
	            helpText: 'Qty per Pallet'
	          }, binding("lineCode")))
	        ),
	        _react2.default.createElement(
	          'div',
	          { className: 'col-md-8' },
	          _react2.default.createElement(_UI.TextInput, (0, _extends3.default)({
	            placeHolder: 'Number of Labels',
	            helpText: 'Number of Labels'
	          }, binding("lineCode")))
	        ),
	        _react2.default.createElement(
	          'div',
	          { className: 'col-md-8' },
	          _react2.default.createElement(_UI.Select, (0, _extends3.default)({
	            placeHolder: 'Offline Printer',
	            options: arrOnPrinter
	          }, binding("onLinePrinter")))
	        )
	      );
	    }
	  }]);
	  return AddForm;
	}(_BaseContainer3.default);
	
	exports.default = AddForm;

/***/ }),
/* 611 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _getPrototypeOf = __webpack_require__(382);
	
	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);
	
	var _classCallCheck2 = __webpack_require__(386);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _createClass2 = __webpack_require__(387);
	
	var _createClass3 = _interopRequireDefault(_createClass2);
	
	var _possibleConstructorReturn2 = __webpack_require__(388);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(405);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _react = __webpack_require__(25);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _ApiService = __webpack_require__(438);
	
	var _ApiService2 = _interopRequireDefault(_ApiService);
	
	var _utils = __webpack_require__(476);
	
	var _reactRouterDom = __webpack_require__(512);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var dateStr = "";
	var date = new Date();
	var key_id = 0;
	
	var EditForm = function (_Component) {
	  (0, _inherits3.default)(EditForm, _Component);
	
	  function EditForm(props) {
	    (0, _classCallCheck3.default)(this, EditForm);
	
	    var _this = (0, _possibleConstructorReturn3.default)(this, (EditForm.__proto__ || (0, _getPrototypeOf2.default)(EditForm)).call(this, props));
	
	    _this.onChangePlantArea = _this.onChangePlantArea.bind(_this);
	    _this.onChangeLineName = _this.onChangeLineName.bind(_this);
	    _this.onChangeLineCode = _this.onChangeLineCode.bind(_this);
	    /* this.onChangeOnlinePrinter = this.onChangeOnlinePrinter.bind(this);
	    this.onChangeOffLinePrinter = this.onChangeOffLinePrinter.bind(this);
	    this.onChangeRepack = this.onChangeRepack.bind(this);
	    this.onChangeRepackSSCCCode = this.onChangeRepackSSCCCode.bind(this); */
	    _this.onSubmit = _this.onSubmit.bind(_this);
	
	    _this.state = {
	      plantId: '',
	      plantDescr: '',
	      plantCode: '',
	      plantArea: '',
	      lineId: '',
	      lineCode: '',
	      lineName: ''
	    };
	    return _this;
	  }
	
	  (0, _createClass3.default)(EditForm, [{
	    key: 'componentDidMount',
	    value: function componentDidMount() {
	      var _this2 = this;
	
	      dateStr = date.getFullYear() + "-" + ("00" + (date.getMonth() + 1)).slice(-2) + "-" + ("00" + date.getDate()).slice(-2) + "T" + ("00" + date.getHours()).slice(-2) + ":" + ("00" + date.getMinutes()).slice(-2) + ":" + ("00" + date.getSeconds()).slice(-2);
	
	      var url = this.props.location.search;
	      var urlParams = new URLSearchParams(url);
	      var idVal = urlParams.get('id');
	      key_id = idVal;
	
	      _ApiService2.default.fetchCcaLinesById(key_id).then(function (response) {
	        _this2.setState({
	          plantId: response.data.plantId,
	          plantDescr: response.data.plantDescr,
	          plantCode: response.data.plantCode,
	          plantArea: response.data.plantArea,
	          lineId: response.data.lineId,
	          lineCode: response.data.lineCode,
	          lineName: response.data.lineName
	        });
	        console.log(response.data);
	      }).catch(function (error) {
	        console.log(error);
	      });
	    }
	  }, {
	    key: 'onChangePlantArea',
	    value: function onChangePlantArea(e) {
	      this.setState({
	        plantArea: e.target.value
	      });
	    }
	  }, {
	    key: 'onChangeLineName',
	    value: function onChangeLineName(e) {
	      this.setState({
	        lineName: e.target.value
	      });
	    }
	  }, {
	    key: 'onChangeLineCode',
	    value: function onChangeLineCode(e) {
	      this.setState({
	        lineCode: e.target.value
	      });
	    }
	    /* onChangeOnlinePrinter(e) {
	      this.setState({
	        //lineCode: e.target.value
	      })
	    }
	    onChangeOffLinePrinter(e) {
	      this.setState({
	        //lineCode: e.target.value
	      })
	    }
	    onChangeRepack(e) {
	      this.setState({
	        //lineCode: e.target.value
	      })
	    }
	    onChangeRepackSSCCCode(e) {
	      this.setState({
	        //lineCode: e.target.value
	      })
	    } */
	
	  }, {
	    key: 'onSubmit',
	    value: function onSubmit(e) {
	      var _this3 = this;
	
	      e.preventDefault();
	      var paramsId = parseInt(key_id, 10); // 10 Decimal
	      var obj = {
	        plantId: this.state.plantId,
	        plantDescr: this.state.plantDescr,
	        plantCode: this.state.plantCode,
	        plantArea: this.state.plantArea,
	        lineId: paramsId, //this.props.match.params.id,
	        lineName: this.state.lineName,
	        lineCode: this.state.lineCode,
	        recCreated: dateStr,
	        recDatetime: dateStr
	      };
	      console.log(obj);
	      _ApiService2.default.editCcaLines(paramsId, obj).then(function (res) {
	        //this.props.history.push(View)
	        _this3.props.history.push("/View");
	      });
	      (0, _utils.alertMessage)({ message: 'Data update successfully.' });
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      return _react2.default.createElement(
	        'div',
	        { className: 'portlet light bordered' },
	        _react2.default.createElement(
	          'div',
	          { className: 'portlet-title' },
	          _react2.default.createElement(
	            _reactRouterDom.Link,
	            { to: '/View', className: 'btn sbold blue', id: 'btnView' },
	            'VIEW DATA',
	            _react2.default.createElement('i', { className: 'fa fa-list-alt ' })
	          ),
	          _react2.default.createElement('br', null),
	          _react2.default.createElement(
	            'div',
	            { className: 'caption font-red-sunglo' },
	            _react2.default.createElement('i', { className: 'icon-settings font-red-sunglo' }),
	            _react2.default.createElement(
	              'span',
	              { className: 'caption-subject bold uppercase' },
	              'Edit Lines'
	            )
	          )
	        ),
	        _react2.default.createElement(
	          'div',
	          { className: 'portlet-body form' },
	          _react2.default.createElement(
	            'form',
	            { onSubmit: this.onSubmit },
	            _react2.default.createElement(
	              'div',
	              { className: 'form-group' },
	              _react2.default.createElement(
	                'div',
	                { className: 'row' },
	                _react2.default.createElement(
	                  'div',
	                  { className: 'col-xs-3 col-md-5' },
	                  _react2.default.createElement(
	                    'div',
	                    { className: 'form-group form-md-line-input' },
	                    _react2.default.createElement(
	                      'label',
	                      null,
	                      'Plant Area :  '
	                    ),
	                    _react2.default.createElement('input', {
	                      type: 'text',
	                      className: 'form-control',
	                      value: this.state.plantArea,
	                      onChange: this.onChangePlantArea
	                    })
	                  )
	                ),
	                _react2.default.createElement(
	                  'div',
	                  { className: 'col-xs-3 col-md-5' },
	                  _react2.default.createElement(
	                    'div',
	                    { className: 'form-group form-md-line-input' },
	                    _react2.default.createElement(
	                      'label',
	                      null,
	                      'Line Name : '
	                    ),
	                    _react2.default.createElement('input', { type: 'text',
	                      className: 'form-control',
	                      value: this.state.lineName,
	                      onChange: this.onChangeLineName
	                    })
	                  )
	                ),
	                _react2.default.createElement(
	                  'div',
	                  { className: 'col-xs-3 col-md-5' },
	                  _react2.default.createElement(
	                    'div',
	                    { className: 'form-group form-md-line-input' },
	                    _react2.default.createElement(
	                      'label',
	                      null,
	                      'Line Code : '
	                    ),
	                    _react2.default.createElement('input', { type: 'text',
	                      className: 'form-control',
	                      value: this.state.lineCode,
	                      onChange: this.onChangeLineCode
	                    })
	                  )
	                ),
	                _react2.default.createElement(
	                  'div',
	                  { className: 'col-xs-3 col-md-5' },
	                  _react2.default.createElement(
	                    'div',
	                    { className: 'form-group form-md-line-input' },
	                    _react2.default.createElement(
	                      'label',
	                      null,
	                      'Online Printer : '
	                    ),
	                    _react2.default.createElement('input', { type: 'text',
	                      className: 'form-control',
	                      value: '',
	                      onChange: ''
	                    })
	                  )
	                ),
	                _react2.default.createElement(
	                  'div',
	                  { className: 'col-xs-3 col-md-5' },
	                  _react2.default.createElement(
	                    'div',
	                    { className: 'form-group form-md-line-input' },
	                    _react2.default.createElement(
	                      'label',
	                      null,
	                      'Offline Printer : '
	                    ),
	                    _react2.default.createElement('input', { type: 'text',
	                      className: 'form-control',
	                      value: '',
	                      onChange: ''
	                    })
	                  )
	                ),
	                _react2.default.createElement(
	                  'div',
	                  { className: 'col-sm-12' },
	                  _react2.default.createElement(
	                    'div',
	                    { className: 'md-checkbox' },
	                    _react2.default.createElement('input', { type: 'checkbox', className: 'form-check-input', id: 'chkEwm' }),
	                    _react2.default.createElement(
	                      'label',
	                      { htmlFor: 'chkEwm' },
	                      _react2.default.createElement('span', { className: 'inc' }),
	                      _react2.default.createElement('span', { className: 'check' }),
	                      _react2.default.createElement('span', { className: 'box' }),
	                      ' Repack'
	                    )
	                  )
	                ),
	                _react2.default.createElement(
	                  'div',
	                  { className: 'col-xs-3 col-md-5' },
	                  _react2.default.createElement(
	                    'div',
	                    { className: 'form-group form-md-line-input' },
	                    _react2.default.createElement(
	                      'label',
	                      null,
	                      'Offline Printer : '
	                    ),
	                    _react2.default.createElement('input', { type: 'text',
	                      className: 'form-control',
	                      value: '',
	                      onChange: ''
	                    })
	                  )
	                ),
	                _react2.default.createElement(
	                  'div',
	                  { className: 'col-sm-12' },
	                  _react2.default.createElement(
	                    'div',
	                    { className: 'form-actions noborder' },
	                    _react2.default.createElement('input', { type: 'submit',
	                      value: 'Update',
	                      className: 'btn blue' })
	                  )
	                )
	              )
	            )
	          )
	        )
	      );
	    }
	  }]);
	  return EditForm;
	}(_react.Component);
	
	exports.default = EditForm;

/***/ }),
/* 612 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _getPrototypeOf = __webpack_require__(382);
	
	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);
	
	var _classCallCheck2 = __webpack_require__(386);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _createClass2 = __webpack_require__(387);
	
	var _createClass3 = _interopRequireDefault(_createClass2);
	
	var _possibleConstructorReturn2 = __webpack_require__(388);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(405);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _react = __webpack_require__(25);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _BaseContainer2 = __webpack_require__(474);
	
	var _BaseContainer3 = _interopRequireDefault(_BaseContainer2);
	
	var _Table = __webpack_require__(503);
	
	var _Table2 = _interopRequireDefault(_Table);
	
	var _ApiService = __webpack_require__(438);
	
	var _ApiService2 = _interopRequireDefault(_ApiService);
	
	var _utils = __webpack_require__(476);
	
	var _reactRouterDom = __webpack_require__(512);
	
	var _EditForm = __webpack_require__(611);
	
	var _EditForm2 = _interopRequireDefault(_EditForm);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	//const TABLE_DATA = []
	var data = [];
	
	var TableView = function (_BaseContainer) {
	  (0, _inherits3.default)(TableView, _BaseContainer);
	
	  function TableView() {
	    var _ref;
	
	    var _temp, _this, _ret;
	
	    (0, _classCallCheck3.default)(this, TableView);
	
	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }
	
	    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = TableView.__proto__ || (0, _getPrototypeOf2.default)(TableView)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
	      header: [{
	        title: "#",
	        prop: "no"
	      }, {
	        title: "Line Name",
	        prop: "lineName"
	      }, {
	        title: "Plant Area",
	        prop: "plantArea"
	      }, {
	        title: "Line Code",
	        prop: "lineCode"
	      }, {
	        title: "Repack",
	        prop: ""
	      }, {
	        title: "RP SSCC Code",
	        prop: "-"
	      }, {
	        title: "Action"
	      }],
	      data: data
	    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
	  }
	
	  (0, _createClass3.default)(TableView, [{
	    key: 'componentWillMount',
	    value: function componentWillMount() {
	      var _this2 = this;
	
	      this.setState({
	        title: "Lines"
	      });
	      _ApiService2.default.fetchCcaLines().then(function (response) {
	        _this2.setState({
	          data: response.data
	        });
	      });
	      this.showLoading(true);
	      setTimeout(function () {
	        _this2.showLoading(false);
	      }, 500);
	    }
	  }, {
	    key: '_renderContent',
	    value: function _renderContent() {
	      console.log(this.state);
	      return _react2.default.createElement(
	        'div',
	        { className: 'portlet body' },
	        _react2.default.createElement(_Table2.default, {
	          searchableProperties: ["lineName", "lineCode"],
	          hasTopBar: true,
	          headers: this.state.header,
	          data: this.state.data,
	          rowRender: this._renderRow,
	          onAddNewHandler: this.onAddNewClick.bind(this)
	        })
	      );
	    }
	  }, {
	    key: 'onAddNewClick',
	    value: function onAddNewClick() {}
	  }, {
	    key: '_renderRow',
	    value: function _renderRow(itm, i) {
	      return _react2.default.createElement(
	        'tr',
	        { key: i, className: 'odd gradeX' },
	        _react2.default.createElement(
	          'td',
	          null,
	          i + 1
	        ),
	        _react2.default.createElement(
	          'td',
	          null,
	          itm.lineName
	        ),
	        _react2.default.createElement(
	          'td',
	          null,
	          itm.plantArea
	        ),
	        _react2.default.createElement(
	          'td',
	          null,
	          itm.lineCode
	        ),
	        _react2.default.createElement('td', null),
	        _react2.default.createElement('td', null),
	        _react2.default.createElement(
	          'td',
	          null,
	          _react2.default.createElement(
	            'div',
	            { className: 'btn-group' },
	            _react2.default.createElement(
	              'button',
	              { className: 'btn btn-xs green dropdown-toggle', type: 'button', 'data-toggle': 'dropdown', 'aria-expanded': 'false' },
	              ' Actions',
	              _react2.default.createElement('i', { className: 'fa fa-angle-down' })
	            ),
	            _react2.default.createElement(
	              'ul',
	              { className: 'dropdown-menu pull-left', role: 'menu' },
	              _react2.default.createElement(
	                'li',
	                null,
	                _react2.default.createElement(
	                  'a',
	                  { href: 'javascript:;' },
	                  _react2.default.createElement('i', { className: 'icon-flag' }),
	                  ' Area Name',
	                  _react2.default.createElement(
	                    'span',
	                    { className: 'badge badge-success' },
	                    '4'
	                  )
	                )
	              ),
	              _react2.default.createElement(
	                'li',
	                null,
	                _react2.default.createElement(
	                  'a',
	                  { href: 'javascript:;' },
	                  _react2.default.createElement('i', { className: 'glyphicon glyphicon-tags' }),
	                  ' Area Code '
	                )
	              ),
	              _react2.default.createElement(
	                'li',
	                { className: 'divider' },
	                ' '
	              ),
	              _react2.default.createElement(
	                'li',
	                null,
	                _react2.default.createElement(
	                  _reactRouterDom.Link,
	                  { to: '/Edit/Find?id=' + itm.lineId, id: 'btnEdit' },
	                  _react2.default.createElement('i', { className: 'glyphicon glyphicon-pencil' }),
	                  ' Edit '
	                )
	              ),
	              _react2.default.createElement(
	                'li',
	                null,
	                _react2.default.createElement(
	                  'a',
	                  { onClick: function onClick(e) {
	                      return handleClick(itm.lineId);
	                    } },
	                  _react2.default.createElement('i', { className: 'glyphicon glyphicon-trash' }),
	                  ' Delete '
	                )
	              )
	            )
	          )
	        )
	      );
	    }
	  }]);
	  return TableView;
	}(_BaseContainer3.default);
	
	function handleClick(val) {
	  //alert(e)
	  var result = confirm("Are you sure...?");
	  if (result) {
	    _ApiService2.default.deleteCcaLines(val).then(function (response) {
	      (0, _utils.alertMessage)({ message: 'Data ' + response.data.plantArea + ' deleted successfully' });
	    });
	  }
	}
	
	exports.default = TableView;

/***/ }),
/* 613 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _HomeContainer = __webpack_require__(614);
	
	var _HomeContainer2 = _interopRequireDefault(_HomeContainer);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	// Sync route definition
	
	exports.default = function (store) {
	  return {
	    path: 'palletenquiry',
	    /*  Async getComponent is only invoked when route matches   */
	    getComponent: function getComponent(nextState, cb) {
	      /*  Webpack - use 'require.ensure' to create a split point
	          and embed an async module loader (jsonp) when bundling   */
	      !/* require.ensure */(function (require) {
	
	        /*  Return getComponent   */
	        cb(null, _HomeContainer2.default);
	
	        /* Webpack named bundle   */
	      }(__webpack_require__));
	    }
	  };
	};

/***/ }),
/* 614 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _getPrototypeOf = __webpack_require__(382);
	
	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);
	
	var _classCallCheck2 = __webpack_require__(386);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _createClass2 = __webpack_require__(387);
	
	var _createClass3 = _interopRequireDefault(_createClass2);
	
	var _possibleConstructorReturn2 = __webpack_require__(388);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(405);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _react = __webpack_require__(25);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _BaseContainer2 = __webpack_require__(474);
	
	var _BaseContainer3 = _interopRequireDefault(_BaseContainer2);
	
	var _reactRouterDom = __webpack_require__(512);
	
	var _AddForm = __webpack_require__(615);
	
	var _AddForm2 = _interopRequireDefault(_AddForm);
	
	var _EditForm = __webpack_require__(616);
	
	var _EditForm2 = _interopRequireDefault(_EditForm);
	
	var _TableView = __webpack_require__(617);
	
	var _TableView2 = _interopRequireDefault(_TableView);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var HomeContainer = function (_BaseContainer) {
	  (0, _inherits3.default)(HomeContainer, _BaseContainer);
	
	  function HomeContainer() {
	    (0, _classCallCheck3.default)(this, HomeContainer);
	    return (0, _possibleConstructorReturn3.default)(this, (HomeContainer.__proto__ || (0, _getPrototypeOf2.default)(HomeContainer)).call(this));
	  }
	
	  (0, _createClass3.default)(HomeContainer, [{
	    key: 'componentWillMount',
	    value: function componentWillMount() {
	      this.setState({
	        title: "Lines"
	      });
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      return _react2.default.createElement(
	        _reactRouterDom.BrowserRouter,
	        null,
	        _react2.default.createElement(
	          _reactRouterDom.Switch,
	          null,
	          _react2.default.createElement(_reactRouterDom.Route, { exact: true, path: '/Create', component: _AddForm2.default }),
	          _react2.default.createElement(_reactRouterDom.Route, { path: '/Edit/:id', component: _EditForm2.default }),
	          _react2.default.createElement(_reactRouterDom.Route, { path: '/View', component: _TableView2.default }),
	          _react2.default.createElement(_reactRouterDom.Route, { path: '/', component: _TableView2.default }),
	          _react2.default.createElement(_reactRouterDom.Route, { component: _AddForm2.default })
	        )
	      );
	    }
	  }]);
	  return HomeContainer;
	}(_BaseContainer3.default);
	
	exports.default = HomeContainer;

/***/ }),
/* 615 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _extends2 = __webpack_require__(313);
	
	var _extends3 = _interopRequireDefault(_extends2);
	
	var _getPrototypeOf = __webpack_require__(382);
	
	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);
	
	var _classCallCheck2 = __webpack_require__(386);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _createClass2 = __webpack_require__(387);
	
	var _createClass3 = _interopRequireDefault(_createClass2);
	
	var _possibleConstructorReturn2 = __webpack_require__(388);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(405);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _react = __webpack_require__(25);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _BaseContainer2 = __webpack_require__(474);
	
	var _BaseContainer3 = _interopRequireDefault(_BaseContainer2);
	
	var _ApiService = __webpack_require__(438);
	
	var _ApiService2 = _interopRequireDefault(_ApiService);
	
	var _UI = __webpack_require__(485);
	
	var _DataForm = __webpack_require__(538);
	
	var _DataForm2 = _interopRequireDefault(_DataForm);
	
	var _utils = __webpack_require__(476);
	
	var _reactRouterDom = __webpack_require__(512);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var TABS_DATA = [];
	var dateStr = "";
	var date = new Date();
	
	var AddForm = function (_BaseContainer) {
	  (0, _inherits3.default)(AddForm, _BaseContainer);
	
	  function AddForm(props) {
	    (0, _classCallCheck3.default)(this, AddForm);
	
	    var _this = (0, _possibleConstructorReturn3.default)(this, (AddForm.__proto__ || (0, _getPrototypeOf2.default)(AddForm)).call(this, props));
	
	    _this.fromBodyRender = _this.fromBodyRender.bind(_this);
	    _this.fromSubmit = _this.fromSubmit.bind(_this);
	    _this.state = {
	      isLoading: true
	    };
	    return _this;
	  }
	
	  (0, _createClass3.default)(AddForm, [{
	    key: 'componentWillMount',
	    value: function componentWillMount() {
	      this.setState({
	        title: "Materials"
	      });
	      dateStr = date.getFullYear() + "-" + ("00" + (date.getMonth() + 1)).slice(-2) + "-" + ("00" + date.getDate()).slice(-2) + "T" + ("00" + date.getHours()).slice(-2) + ":" + ("00" + date.getMinutes()).slice(-2) + ":" + ("00" + date.getSeconds()).slice(-2);
	      //alert(dateStr)
	    }
	
	    //--------------------------------------------------------------------//
	    //  Form Content Renderer
	    //--------------------------------------------------------------------//
	
	  }, {
	    key: '_renderContent',
	    value: function _renderContent() {
	      var item = {
	        plantDescr: "",
	        plantCode: "",
	        grInterval: 0,
	        isInterval: 0,
	        useEwm: 0,
	        recCreated: dateStr,
	        recDatetime: dateStr
	      };
	
	      return _react2.default.createElement(_DataForm2.default, {
	        title: 'Import CSV',
	        hasCancel: true,
	        item: item,
	        bodyRender: this.fromBodyRender,
	        onSubmit: function onSubmit(itm) {},
	        onCancel: function onCancel(itm) {
	          alert("Data reset");
	        }
	      });
	    }
	  }, {
	    key: 'fromSubmit',
	    value: function fromSubmit(itm) {}
	  }, {
	    key: 'fromBodyRender',
	    value: function fromBodyRender(options) {
	      var item = options.item,
	          binding = options.binding;
	
	      return _react2.default.createElement(
	        'div',
	        { className: 'row' },
	        _react2.default.createElement(
	          'div',
	          { className: 'col-6 col-sm-9' },
	          _react2.default.createElement(_UI.TextInput, (0, _extends3.default)({
	            placeHolder: 'CSV File',
	            helpText: 'Choose File',
	            type: 'file'
	          }, binding("file")))
	        )
	      );
	    }
	  }]);
	  return AddForm;
	}(_BaseContainer3.default);
	
	exports.default = AddForm;

/***/ }),
/* 616 */
/***/ (function(module, exports) {

	"use strict";

/***/ }),
/* 617 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _getPrototypeOf = __webpack_require__(382);
	
	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);
	
	var _classCallCheck2 = __webpack_require__(386);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _createClass2 = __webpack_require__(387);
	
	var _createClass3 = _interopRequireDefault(_createClass2);
	
	var _possibleConstructorReturn2 = __webpack_require__(388);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(405);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _react = __webpack_require__(25);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _BaseContainer2 = __webpack_require__(474);
	
	var _BaseContainer3 = _interopRequireDefault(_BaseContainer2);
	
	var _TablePallete = __webpack_require__(618);
	
	var _TablePallete2 = _interopRequireDefault(_TablePallete);
	
	var _ApiService = __webpack_require__(438);
	
	var _ApiService2 = _interopRequireDefault(_ApiService);
	
	var _utils = __webpack_require__(476);
	
	var _reactRouterDom = __webpack_require__(512);
	
	var _EditForm = __webpack_require__(616);
	
	var _EditForm2 = _interopRequireDefault(_EditForm);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	//const TABLE_DATA = []
	var data = [];
	
	var TableView = function (_BaseContainer) {
	    (0, _inherits3.default)(TableView, _BaseContainer);
	
	    function TableView() {
	        var _ref;
	
	        var _temp, _this, _ret;
	
	        (0, _classCallCheck3.default)(this, TableView);
	
	        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	            args[_key] = arguments[_key];
	        }
	
	        return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = TableView.__proto__ || (0, _getPrototypeOf2.default)(TableView)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
	            header: [{
	                title: "Seq Num",
	                prop: "no"
	            }, {
	                title: "Production Order",
	                prop: "workorderNo"
	            }, {
	                title: "Material",
	                prop: "itemMaterialNo"
	            }, {
	                title: "Material Description",
	                prop: "articleName"
	            }, {
	                title: "SSCC",
	                prop: "ssccNumber"
	            }, {
	                title: "Batch",
	                prop: "batchNo"
	            }, {
	                title: "Qty",
	                prop: "itemQty"
	            }, {
	                title: "Best Before Date",
	                prop: "bestBeforeDate"
	            }, {
	                title: "Prod. Date",
	                prop: "prodDate"
	            }, {
	                title: "Scanned Date",
	                prop: ""
	            }, {
	                title: "Scanned By",
	                prop: ""
	            }, {
	                title: "Device",
	                prop: ""
	            }, {
	                title: "Printed By",
	                prop: ""
	            }, {
	                title: "Reprinted",
	                prop: "isReprinted"
	            }, {
	                title: "Reprinted By",
	                prop: ""
	            }, {
	                title: "Reprinted Reason",
	                prop: "reprintedReason"
	            }, {
	                title: "Blocked Stock",
	                prop: "blockedStock"
	            }],
	            data: data
	        }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
	    }
	
	    (0, _createClass3.default)(TableView, [{
	        key: 'componentWillMount',
	        value: function componentWillMount() {
	            var _this2 = this;
	
	            this.setState({
	                title: "Pallet Report"
	            });
	            _ApiService2.default.fetchCcaPalletReportLites().then(function (response) {
	                _this2.setState({
	                    data: response.data
	                });
	            });
	            this.showLoading(true);
	            setTimeout(function () {
	                _this2.showLoading(false);
	            }, 500);
	        }
	    }, {
	        key: '_renderContent',
	        value: function _renderContent() {
	            console.log(this.state);
	            return _react2.default.createElement(
	                'div',
	                { className: 'portlet body' },
	                _react2.default.createElement(_TablePallete2.default, {
	                    searchableProperties: ["workorderNo", "itemMaterialNo"],
	                    hasTopBar: true,
	                    headers: this.state.header,
	                    data: this.state.data,
	                    rowRender: this._renderRow,
	                    onAddNewHandler: this.onAddNewClick.bind(this)
	                })
	            );
	        }
	    }, {
	        key: 'onAddNewClick',
	        value: function onAddNewClick() {
	            alert('Got to Add Data');
	        }
	    }, {
	        key: '_renderRow',
	        value: function _renderRow(itm, i) {
	            return _react2.default.createElement(
	                'tr',
	                { key: i, className: 'odd gradeX' },
	                _react2.default.createElement(
	                    'td',
	                    null,
	                    i + 1
	                ),
	                _react2.default.createElement(
	                    'td',
	                    null,
	                    itm.workorderNo
	                ),
	                _react2.default.createElement(
	                    'td',
	                    null,
	                    itm.itemMaterialNo
	                ),
	                _react2.default.createElement(
	                    'td',
	                    null,
	                    itm.articleName
	                ),
	                _react2.default.createElement(
	                    'td',
	                    null,
	                    itm.ssccNumber
	                ),
	                _react2.default.createElement(
	                    'td',
	                    null,
	                    itm.batchNo
	                ),
	                _react2.default.createElement(
	                    'td',
	                    null,
	                    itm.itemQty
	                ),
	                _react2.default.createElement(
	                    'td',
	                    null,
	                    itm.bestBeforeDate
	                ),
	                _react2.default.createElement(
	                    'td',
	                    null,
	                    itm.prodDate
	                ),
	                _react2.default.createElement('td', null),
	                _react2.default.createElement('td', null),
	                _react2.default.createElement('td', null),
	                _react2.default.createElement(
	                    'td',
	                    null,
	                    itm.isReprinted
	                ),
	                _react2.default.createElement('td', null),
	                _react2.default.createElement(
	                    'td',
	                    null,
	                    itm.reprintedReason
	                ),
	                _react2.default.createElement(
	                    'td',
	                    null,
	                    itm.blockedStock
	                )
	            );
	        }
	    }]);
	    return TableView;
	}(_BaseContainer3.default);
	
	exports.default = TableView;

/***/ }),
/* 618 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _Table = __webpack_require__(619);
	
	var _Table2 = _interopRequireDefault(_Table);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = _Table2.default;

/***/ }),
/* 619 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _extends2 = __webpack_require__(313);
	
	var _extends3 = _interopRequireDefault(_extends2);
	
	var _getPrototypeOf = __webpack_require__(382);
	
	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);
	
	var _classCallCheck2 = __webpack_require__(386);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _createClass2 = __webpack_require__(387);
	
	var _createClass3 = _interopRequireDefault(_createClass2);
	
	var _possibleConstructorReturn2 = __webpack_require__(388);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(405);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _react = __webpack_require__(25);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _debounce = __webpack_require__(505);
	
	var _debounce2 = _interopRequireDefault(_debounce);
	
	var _classnames = __webpack_require__(470);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	var _text = __webpack_require__(506);
	
	var _TableTop = __webpack_require__(620);
	
	var _TableTop2 = _interopRequireDefault(_TableTop);
	
	var _TableHeader = __webpack_require__(621);
	
	var _TableHeader2 = _interopRequireDefault(_TableHeader);
	
	var _TableOptions = __webpack_require__(622);
	
	var _TableOptions2 = _interopRequireDefault(_TableOptions);
	
	var _TablePagging = __webpack_require__(623);
	
	var _TablePagging2 = _interopRequireDefault(_TablePagging);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/* @DataTable
	*/
	var Table = function (_Component) {
	  (0, _inherits3.default)(Table, _Component);
	
	  function Table() {
	    var _ref;
	
	    var _temp, _this, _ret;
	
	    (0, _classCallCheck3.default)(this, Table);
	
	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }
	
	    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = Table.__proto__ || (0, _getPrototypeOf2.default)(Table)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
	      itemPerPage: 20,
	      pageIndex: 0,
	      filter: "",
	      order: 1,
	      selectProp: null,
	      filterDataLength: 0
	    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
	  }
	
	  (0, _createClass3.default)(Table, [{
	    key: 'componentWillReceiveProps',
	    value: function componentWillReceiveProps(nextProps) {
	      if (this.props.data != nextProps.data) {
	        console.log("reload...");
	        this._filterData(nextProps.data);
	      }
	    }
	  }, {
	    key: 'componentWillMount',
	    value: function componentWillMount() {
	      this.setState((0, _extends3.default)({
	        _id: "Table_" + Date.now()
	      }, this.props));
	    }
	  }, {
	    key: 'componentDidMount',
	    value: function componentDidMount() {
	      this._filterData();
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var _this2 = this;
	
	      var _props = this.props,
	          data = _props.data,
	          rowRender = _props.rowRender,
	          headers = _props.headers,
	          onAddNewHandler = _props.onAddNewHandler,
	          hasCheckbox = _props.hasCheckbox,
	          hasTopBar = _props.hasTopBar,
	          searchableProperties = _props.searchableProperties;
	      var _state = this.state,
	          renderData = _state.renderData,
	          itemPerPage = _state.itemPerPage,
	          filter = _state.filter,
	          pageIndex = _state.pageIndex;
	
	
	      return _react2.default.createElement(
	        'div',
	        null,
	        hasTopBar && _react2.default.createElement(_TableTop2.default, { onAddNewHandler: onAddNewHandler }),
	        _react2.default.createElement(_TableOptions2.default, {
	          hasSearch: searchableProperties.length > 0,
	          filter: filter,
	          itemPerPage: itemPerPage,
	          itemPerPageChange: function itemPerPageChange(e) {
	            _this2.setState({
	              itemPerPage: +e
	            }, function (_) {
	
	              _this2._filterData();
	            });
	          },
	          searchHandler: function searchHandler(e) {
	
	            // Using Debounce to optimize performance
	            _this2.setState({
	              filter: e,
	              pageIndex: 0
	            }, (0, _debounce2.default)(function (_) {
	              _this2._filterData();
	            }, 200));
	          }
	        }),
	        _react2.default.createElement(
	          'div',
	          { className: 'table-responsive' },
	          _react2.default.createElement(
	            'table',
	            { className: 'dataTable table table-striped table-bordered table-hover table-checkable order-column',
	              ref: 'dataTable' },
	            _react2.default.createElement(_TableHeader2.default, {
	              headers: headers,
	              hasCheckbox: hasCheckbox,
	              handleSelect: function handleSelect(column, order) {
	                _this2.setState({
	                  selectProp: column,
	                  order: order
	                }, function (_) {
	                  _this2._filterData();
	                });
	              } }),
	            _react2.default.createElement(
	              'tbody',
	              null,
	              renderData && renderData.map(function (itm, i) {
	                return rowRender(itm, i);
	              })
	            )
	          )
	        ),
	        _react2.default.createElement(_TablePagging2.default, {
	          filter: filter,
	          filterTotalItem: this.state.filterDataLength || 0,
	          totalItems: data.length,
	          itemPerPage: itemPerPage,
	          pageIndex: pageIndex,
	          pageIndexHandler: function pageIndexHandler(e) {
	            _this2.setState({
	              pageIndex: e
	            }, function (_) {
	              _this2._filterData();
	            });
	          }
	        })
	      );
	    }
	  }, {
	    key: '_filterData',
	    value: function _filterData(dataSource) {
	      dataSource = dataSource || this.props.data;
	      var _state2 = this.state,
	          filter = _state2.filter,
	          selectProp = _state2.selectProp,
	          order = _state2.order;
	      var searchableProperties = this.props.searchableProperties;
	
	      // Filter
	
	      if (filter != "" && searchableProperties.length > 0) {
	        var searchFilter = (0, _text.makeFuzzyFilter)(filter.toLowerCase(), searchableProperties);
	        dataSource = dataSource.filter(function (itm) {
	          return searchFilter(itm);
	        });
	
	        this.setState({
	          filterDataLength: dataSource.length
	        });
	      }
	
	      // Sort
	      if (selectProp != null) dataSource = dataSource.sort((0, _text.makeRowCompare)(selectProp, order > 0 ? 1 : -1));
	
	      // Pagging
	      var _state3 = this.state,
	          itemPerPage = _state3.itemPerPage,
	          pageIndex = _state3.pageIndex;
	
	      if (this.state.itemPerPage > 0) dataSource = dataSource.slice(pageIndex * itemPerPage, pageIndex * itemPerPage + itemPerPage);else dataSource = dataSource.slice(0);
	
	      this.setState({
	        renderData: dataSource
	      });
	    }
	  }]);
	  return Table;
	}(_react.Component);
	
	Table.propTypes = {
	
	  searchableProperties: _react2.default.PropTypes.array,
	
	  // Top bar enable (Add New and Tools)
	  hasTopBar: _react2.default.PropTypes.bool,
	
	  // add new handler
	  onAddNewHandler: _react2.default.PropTypes.func,
	
	  // data
	  data: _react2.default.PropTypes.array,
	
	  // RowRender
	  rowRender: _react2.default.PropTypes.func,
	
	  // Has checkbox
	  hasCheckbox: _react2.default.PropTypes.bool,
	
	  // HeaderRender
	  headers: _react2.default.PropTypes.array
	};
	
	
	Table.defaultProps = {
	  enable: true,
	  searchableProperties: []
	};
	
	exports.default = Table;

/***/ }),
/* 620 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _getPrototypeOf = __webpack_require__(382);
	
	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);
	
	var _classCallCheck2 = __webpack_require__(386);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _createClass2 = __webpack_require__(387);
	
	var _createClass3 = _interopRequireDefault(_createClass2);
	
	var _possibleConstructorReturn2 = __webpack_require__(388);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(405);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _react = __webpack_require__(25);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _Pagination = __webpack_require__(508);
	
	var _Pagination2 = _interopRequireDefault(_Pagination);
	
	var _classnames = __webpack_require__(470);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	var _text = __webpack_require__(506);
	
	var _reactRouterDom = __webpack_require__(512);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/* @Table Top Button
	  AddNew, Actions
	*/
	var TableTop = function (_Component) {
	  (0, _inherits3.default)(TableTop, _Component);
	
	  // start construct button add and view
	  function TableTop() {
	    (0, _classCallCheck3.default)(this, TableTop);
	
	    //this.addButton = this.addButton.bind(this);
	    //this.viewButton = this.viewButton.bind(this);
	    var _this = (0, _possibleConstructorReturn3.default)(this, (TableTop.__proto__ || (0, _getPrototypeOf2.default)(TableTop)).call(this));
	
	    _this.state = {
	      isHidden: false,
	      isLoading: true
	    };
	    return _this;
	  }
	
	  /* addButton() {
	  //alert('Data add tampil');
	  this.setState((prevState) => {
	    return{
	     isHidden: !prevState.isHidden
	    };
	  });
	  //document.getElementById("btnAdd").style.display = 'none';
	  } */
	
	  /* viewButton(){
	  //alert('Data view tampil');
	  this.setState((prevState) => {
	    return{
	      isHidden: !prevState.isHidden
	    };
	  });
	  //document.getElementById("btnAdd").style.display = '';
	  } */
	  // start construct button add and view
	
	  (0, _createClass3.default)(TableTop, [{
	    key: 'render',
	    value: function render() {
	      var onAddNewHandler = this.props.onAddNewHandler;
	
	
	      return _react2.default.createElement(
	        'div',
	        { className: 'table-toolbar' },
	        _react2.default.createElement(
	          'div',
	          { className: 'row' },
	          _react2.default.createElement(
	            'div',
	            { className: 'col-md-6' },
	            _react2.default.createElement(
	              'div',
	              { className: 'btn-group pull-right' },
	              _react2.default.createElement(
	                'button',
	                { className: 'btn green  btn-outline dropdown-toggle', 'data-toggle': 'dropdown' },
	                'Tools',
	                _react2.default.createElement('i', { className: 'fa fa-angle-down' })
	              ),
	              _react2.default.createElement(
	                'ul',
	                { className: 'dropdown-menu pull-right' },
	                _react2.default.createElement(
	                  'li',
	                  null,
	                  _react2.default.createElement(
	                    'a',
	                    { href: 'javascript:;' },
	                    _react2.default.createElement('i', { className: 'fa fa-print' }),
	                    ' Print '
	                  )
	                ),
	                _react2.default.createElement(
	                  'li',
	                  null,
	                  _react2.default.createElement(
	                    'a',
	                    { href: 'javascript:;' },
	                    _react2.default.createElement('i', { className: 'fa fa-file-pdf-o' }),
	                    ' Save as PDF '
	                  )
	                ),
	                _react2.default.createElement(
	                  'li',
	                  null,
	                  _react2.default.createElement(
	                    'a',
	                    { href: 'javascript:;' },
	                    _react2.default.createElement('i', { className: 'fa fa-file-excel-o' }),
	                    ' Export to Excel '
	                  )
	                )
	              )
	            )
	          )
	        )
	      );
	    }
	  }]);
	  return TableTop;
	}(_react.Component);
	
	TableTop.propTypes = {
	
	  // add new handler
	  onAddNewHandler: _react2.default.PropTypes.func
	};
	exports.default = TableTop;

/***/ }),
/* 621 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _getPrototypeOf = __webpack_require__(382);
	
	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);
	
	var _classCallCheck2 = __webpack_require__(386);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _createClass2 = __webpack_require__(387);
	
	var _createClass3 = _interopRequireDefault(_createClass2);
	
	var _possibleConstructorReturn2 = __webpack_require__(388);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(405);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _react = __webpack_require__(25);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _Pagination = __webpack_require__(508);
	
	var _Pagination2 = _interopRequireDefault(_Pagination);
	
	var _classnames = __webpack_require__(470);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	var _text = __webpack_require__(506);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/* @Table Header
	
	*/
	var TableHeader = function (_Component) {
	  (0, _inherits3.default)(TableHeader, _Component);
	
	  function TableHeader() {
	    var _ref;
	
	    var _temp, _this, _ret;
	
	    (0, _classCallCheck3.default)(this, TableHeader);
	
	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }
	
	    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = TableHeader.__proto__ || (0, _getPrototypeOf2.default)(TableHeader)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
	      selectedIndex: -1,
	      order: 1
	    }, _this.SORT_MAPPING = ["sorting_desc", "sorting_asc"], _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
	  }
	
	  (0, _createClass3.default)(TableHeader, [{
	    key: 'render',
	    value: function render() {
	      var _this2 = this;
	
	      var _props = this.props,
	          headers = _props.headers,
	          hasCheckbox = _props.hasCheckbox,
	          handleSelect = _props.handleSelect;
	      var _state = this.state,
	          selectedIndex = _state.selectedIndex,
	          order = _state.order;
	
	      return _react2.default.createElement(
	        'thead',
	        null,
	        _react2.default.createElement(
	          'tr',
	          null,
	          hasCheckbox && _react2.default.createElement(
	            'th',
	            null,
	            _react2.default.createElement(
	              'label',
	              { className: 'mt-checkbox mt-checkbox-single mt-checkbox-outline' },
	              _react2.default.createElement('input', { type: 'checkbox', className: 'group-checkable', 'data-set': '#sample_1 .checkboxes' }),
	              _react2.default.createElement('span', null)
	            )
	          ),
	          headers && headers.map(function (itm, i) {
	            return _react2.default.createElement(
	              'th',
	              {
	                className: selectedIndex == i ? _this2.SORT_MAPPING[order] : "",
	                onClick: function onClick(_) {
	                  if (itm.prop == null) return;
	
	                  var order = _this2.state.order;
	                  if (selectedIndex == i) {
	                    order = (order + 1) % 2;
	                  } else {
	                    order = 1;
	                  }
	
	                  _this2.setState({
	                    selectedIndex: i,
	                    order: order
	                  }, function (_) {
	                    handleSelect && handleSelect(itm.prop, order);
	                  });
	                },
	                key: i },
	              itm.title
	            );
	          })
	        )
	      );
	    }
	  }]);
	  return TableHeader;
	}(_react.Component);
	
	TableHeader.propTypes = {
	
	  // Has checkbox
	  hasCheckbox: _react2.default.PropTypes.bool,
	
	  // HeaderRender
	  headers: _react2.default.PropTypes.array,
	
	  // Handle Select
	  handleSelect: _react2.default.PropTypes.func
	};
	exports.default = TableHeader;

/***/ }),
/* 622 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _getPrototypeOf = __webpack_require__(382);
	
	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);
	
	var _classCallCheck2 = __webpack_require__(386);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _createClass2 = __webpack_require__(387);
	
	var _createClass3 = _interopRequireDefault(_createClass2);
	
	var _possibleConstructorReturn2 = __webpack_require__(388);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(405);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _react = __webpack_require__(25);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _Pagination = __webpack_require__(508);
	
	var _Pagination2 = _interopRequireDefault(_Pagination);
	
	var _classnames = __webpack_require__(470);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	var _text = __webpack_require__(506);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/* @TableOptions
	  Search, Filter Options
	*/
	var TableOptions = function (_Component) {
	  (0, _inherits3.default)(TableOptions, _Component);
	
	  function TableOptions() {
	    (0, _classCallCheck3.default)(this, TableOptions);
	    return (0, _possibleConstructorReturn3.default)(this, (TableOptions.__proto__ || (0, _getPrototypeOf2.default)(TableOptions)).apply(this, arguments));
	  }
	
	  (0, _createClass3.default)(TableOptions, [{
	    key: 'render',
	    value: function render() {
	      var _props = this.props,
	          itemPerPage = _props.itemPerPage,
	          filter = _props.filter,
	          itemPerPageChange = _props.itemPerPageChange,
	          searchHandler = _props.searchHandler,
	          hasSearch = _props.hasSearch;
	
	      return _react2.default.createElement(
	        'div',
	        { className: 'row' },
	        _react2.default.createElement(
	          'div',
	          { className: 'col-md-6 col-sm-6' },
	          _react2.default.createElement(
	            'div',
	            { className: 'dataTables_length', id: 'sample_1_length' },
	            _react2.default.createElement(
	              'label',
	              null,
	              'Show \xA0',
	              _react2.default.createElement(
	                'select',
	                {
	                  value: itemPerPage,
	                  onChange: function onChange(e) {
	                    itemPerPageChange && itemPerPageChange(e.target.value);
	                  },
	                  name: 'sample_1_length',
	                  'aria-controls': 'sample_1',
	                  className: 'form-control input-sm input-xsmall input-inline' },
	                _react2.default.createElement(
	                  'option',
	                  { value: '5' },
	                  '5'
	                ),
	                _react2.default.createElement(
	                  'option',
	                  { value: '15' },
	                  '15'
	                ),
	                _react2.default.createElement(
	                  'option',
	                  { value: '20' },
	                  '20'
	                ),
	                _react2.default.createElement(
	                  'option',
	                  { value: '-1' },
	                  'All'
	                )
	              )
	            )
	          )
	        ),
	        _react2.default.createElement(
	          'div',
	          { className: 'col-md-6 col-sm-6' },
	          hasSearch && _react2.default.createElement(
	            'div',
	            { id: 'sample_1_filter', className: 'btn-group pull-right' },
	            _react2.default.createElement(
	              'label',
	              null,
	              'Production Order : \xA0',
	              _react2.default.createElement('input', {
	                type: 'search',
	                className: 'form-control input-sm input-small input-inline',
	                placeholder: 'Search PO or Date',
	                'aria-controls': 'sample_1',
	                value: filter,
	                multi: true,
	                onChange: function onChange(e) {
	                  searchHandler && searchHandler(e.target.value);
	                }
	              })
	            )
	          )
	        )
	      );
	    }
	  }]);
	  return TableOptions;
	}(_react.Component);
	
	TableOptions.propTypes = {
	  // Has Search
	  hasSearch: _react2.default.PropTypes.bool,
	
	  // Filter value
	  filter: _react2.default.PropTypes.string,
	
	  // Has itemPerPage
	  itemPerPage: _react2.default.PropTypes.number,
	
	  // itemPerPageChange
	  itemPerPageChange: _react2.default.PropTypes.func,
	
	  // HeaderRender
	  searchHandler: _react2.default.PropTypes.func
	
	  // Checkbox show full column on table
	  //showFull: React.PropTypes.func
	};
	
	
	TableOptions.defaultProps = {
	  itemPerPage: -1
	};
	exports.default = TableOptions;

/***/ }),
/* 623 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _getPrototypeOf = __webpack_require__(382);
	
	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);
	
	var _classCallCheck2 = __webpack_require__(386);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _createClass2 = __webpack_require__(387);
	
	var _createClass3 = _interopRequireDefault(_createClass2);
	
	var _possibleConstructorReturn2 = __webpack_require__(388);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(405);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _react = __webpack_require__(25);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _Pagination = __webpack_require__(508);
	
	var _Pagination2 = _interopRequireDefault(_Pagination);
	
	var _classnames = __webpack_require__(470);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	var _text = __webpack_require__(506);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/* @TablePagging
	  Pagging
	*/
	var TablePagging = function (_Component) {
	  (0, _inherits3.default)(TablePagging, _Component);
	
	  function TablePagging() {
	    (0, _classCallCheck3.default)(this, TablePagging);
	    return (0, _possibleConstructorReturn3.default)(this, (TablePagging.__proto__ || (0, _getPrototypeOf2.default)(TablePagging)).apply(this, arguments));
	  }
	
	  (0, _createClass3.default)(TablePagging, [{
	    key: 'render',
	    value: function render() {
	      var _props = this.props,
	          pageIndex = _props.pageIndex,
	          itemPerPage = _props.itemPerPage,
	          pageIndexHandler = _props.pageIndexHandler,
	          filter = _props.filter,
	          filterTotalItem = _props.filterTotalItem;
	      var totalItems = this.props.totalItems;
	
	
	      if (filter != "") totalItems = filterTotalItem;
	
	      var begin = pageIndex * itemPerPage;
	      var end = itemPerPage > 0 ? Math.min((pageIndex + 1) * itemPerPage - 1, totalItems) : totalItems;
	
	      var maxPage = Math.floor(totalItems / itemPerPage);
	
	      return _react2.default.createElement(
	        'div',
	        { className: 'row' },
	        _react2.default.createElement(
	          'div',
	          { className: 'col-md-5 col-sm-5' },
	          _react2.default.createElement(
	            'div',
	            { className: 'dataTables_info', id: 'sample_1_info', role: 'status', 'aria-live': 'polite' },
	            totalItems > 0 && 'Showing ' + begin + ' to ' + end + ' of ' + totalItems + ' records. ',
	            totalItems <= 0 && 'Not found data. ',
	            filter != "" && '(filter "' + filter + '" from ' + this.props.totalItems + ' total records)'
	          )
	        ),
	        _react2.default.createElement(
	          'div',
	          { className: 'col-md-7 col-sm-7' },
	          itemPerPage > 0 && _react2.default.createElement(
	            'div',
	            { className: 'btn-group pull-right' },
	            _react2.default.createElement(_Pagination2.default, {
	              activePage: pageIndex + 1,
	              itemsCountPerPage: itemPerPage,
	              totalItemsCount: totalItems,
	              pageRangeDisplayed: 5,
	              onChange: function onChange(e) {
	                pageIndexHandler && pageIndexHandler(e - 1);
	              } })
	          )
	        )
	      );
	    }
	  }]);
	  return TablePagging;
	}(_react.Component);
	
	TablePagging.propTypes = {
	  // filter
	  filter: _react2.default.PropTypes.string,
	
	  // filterTotalItem
	  filterTotalItem: _react2.default.PropTypes.number,
	
	  // totalItems
	  totalItems: _react2.default.PropTypes.number,
	
	  // Has itemPerPage
	  itemPerPage: _react2.default.PropTypes.number,
	
	  // pageIndex
	  pageIndex: _react2.default.PropTypes.number,
	
	  // HeaderRender
	  pageIndexHandler: _react2.default.PropTypes.func
	};
	exports.default = TablePagging;

/***/ }),
/* 624 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _HomeContainer = __webpack_require__(625);
	
	var _HomeContainer2 = _interopRequireDefault(_HomeContainer);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	// Sync route definition
	
	exports.default = function (store) {
	  return {
	    path: 'lpa',
	    /*  Async getComponent is only invoked when route matches   */
	    getComponent: function getComponent(nextState, cb) {
	      /*  Webpack - use 'require.ensure' to create a split point
	          and embed an async module loader (jsonp) when bundling   */
	      !/* require.ensure */(function (require) {
	
	        /*  Return getComponent   */
	        cb(null, _HomeContainer2.default);
	
	        /* Webpack named bundle   */
	      }(__webpack_require__));
	    }
	  };
	};

/***/ }),
/* 625 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _getPrototypeOf = __webpack_require__(382);
	
	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);
	
	var _classCallCheck2 = __webpack_require__(386);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _createClass2 = __webpack_require__(387);
	
	var _createClass3 = _interopRequireDefault(_createClass2);
	
	var _possibleConstructorReturn2 = __webpack_require__(388);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(405);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _react = __webpack_require__(25);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _BaseContainer2 = __webpack_require__(474);
	
	var _BaseContainer3 = _interopRequireDefault(_BaseContainer2);
	
	var _reactRouterDom = __webpack_require__(512);
	
	var _AddForm = __webpack_require__(626);
	
	var _AddForm2 = _interopRequireDefault(_AddForm);
	
	var _EditForm = __webpack_require__(627);
	
	var _EditForm2 = _interopRequireDefault(_EditForm);
	
	var _TableView = __webpack_require__(628);
	
	var _TableView2 = _interopRequireDefault(_TableView);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var HomeContainer = function (_BaseContainer) {
	  (0, _inherits3.default)(HomeContainer, _BaseContainer);
	
	  function HomeContainer() {
	    (0, _classCallCheck3.default)(this, HomeContainer);
	    return (0, _possibleConstructorReturn3.default)(this, (HomeContainer.__proto__ || (0, _getPrototypeOf2.default)(HomeContainer)).call(this));
	  }
	
	  (0, _createClass3.default)(HomeContainer, [{
	    key: 'componentWillMount',
	    value: function componentWillMount() {
	      this.setState({
	        title: "Lines"
	      });
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      return _react2.default.createElement(
	        _reactRouterDom.BrowserRouter,
	        null,
	        _react2.default.createElement(
	          _reactRouterDom.Switch,
	          null,
	          _react2.default.createElement(_reactRouterDom.Route, { exact: true, path: '/Create', component: _AddForm2.default }),
	          _react2.default.createElement(_reactRouterDom.Route, { path: '/Edit/:id', component: _EditForm2.default }),
	          _react2.default.createElement(_reactRouterDom.Route, { path: '/View', component: _TableView2.default }),
	          _react2.default.createElement(_reactRouterDom.Route, { path: '/', component: _TableView2.default }),
	          _react2.default.createElement(_reactRouterDom.Route, { component: _AddForm2.default })
	        )
	      );
	    }
	  }]);
	  return HomeContainer;
	}(_BaseContainer3.default);
	
	exports.default = HomeContainer;

/***/ }),
/* 626 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _extends2 = __webpack_require__(313);
	
	var _extends3 = _interopRequireDefault(_extends2);
	
	var _getPrototypeOf = __webpack_require__(382);
	
	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);
	
	var _classCallCheck2 = __webpack_require__(386);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _createClass2 = __webpack_require__(387);
	
	var _createClass3 = _interopRequireDefault(_createClass2);
	
	var _possibleConstructorReturn2 = __webpack_require__(388);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(405);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _react = __webpack_require__(25);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _BaseContainer2 = __webpack_require__(474);
	
	var _BaseContainer3 = _interopRequireDefault(_BaseContainer2);
	
	var _ApiService = __webpack_require__(438);
	
	var _ApiService2 = _interopRequireDefault(_ApiService);
	
	var _UI = __webpack_require__(485);
	
	var _DataForm = __webpack_require__(538);
	
	var _DataForm2 = _interopRequireDefault(_DataForm);
	
	var _utils = __webpack_require__(476);
	
	var _reactRouterDom = __webpack_require__(512);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var TABS_DATA = [];
	var dateStr = "";
	var date = new Date();
	
	var AddForm = function (_BaseContainer) {
	  (0, _inherits3.default)(AddForm, _BaseContainer);
	
	  function AddForm(props) {
	    (0, _classCallCheck3.default)(this, AddForm);
	
	    var _this = (0, _possibleConstructorReturn3.default)(this, (AddForm.__proto__ || (0, _getPrototypeOf2.default)(AddForm)).call(this, props));
	
	    _this.fromBodyRender = _this.fromBodyRender.bind(_this);
	    _this.fromSubmit = _this.fromSubmit.bind(_this);
	    _this.state = {
	      isLoading: true
	    };
	    return _this;
	  }
	
	  (0, _createClass3.default)(AddForm, [{
	    key: 'componentWillMount',
	    value: function componentWillMount() {
	      this.setState({
	        title: "Materials"
	      });
	      dateStr = date.getFullYear() + "-" + ("00" + (date.getMonth() + 1)).slice(-2) + "-" + ("00" + date.getDate()).slice(-2) + "T" + ("00" + date.getHours()).slice(-2) + ":" + ("00" + date.getMinutes()).slice(-2) + ":" + ("00" + date.getSeconds()).slice(-2);
	      //alert(dateStr)
	    }
	
	    //--------------------------------------------------------------------//
	    //  Form Content Renderer
	    //--------------------------------------------------------------------//
	
	  }, {
	    key: '_renderContent',
	    value: function _renderContent() {
	      var item = {
	        plantDescr: "",
	        plantCode: "",
	        grInterval: 0,
	        isInterval: 0,
	        useEwm: 0,
	        recCreated: dateStr,
	        recDatetime: dateStr
	      };
	
	      return _react2.default.createElement(_DataForm2.default, {
	        title: 'Import CSV',
	        hasCancel: true,
	        item: item,
	        bodyRender: this.fromBodyRender,
	        onSubmit: function onSubmit(itm) {},
	        onCancel: function onCancel(itm) {
	          alert("Data reset");
	        }
	      });
	    }
	  }, {
	    key: 'fromSubmit',
	    value: function fromSubmit(itm) {}
	  }, {
	    key: 'fromBodyRender',
	    value: function fromBodyRender(options) {
	      var item = options.item,
	          binding = options.binding;
	
	      return _react2.default.createElement(
	        'div',
	        { className: 'row' },
	        _react2.default.createElement(
	          'div',
	          { className: 'col-6 col-sm-9' },
	          _react2.default.createElement(_UI.TextInput, (0, _extends3.default)({
	            placeHolder: 'CSV File',
	            helpText: 'Choose File',
	            type: 'file'
	          }, binding("file")))
	        )
	      );
	    }
	  }]);
	  return AddForm;
	}(_BaseContainer3.default);
	
	exports.default = AddForm;

/***/ }),
/* 627 */
/***/ (function(module, exports) {

	"use strict";

/***/ }),
/* 628 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _regenerator = __webpack_require__(553);
	
	var _regenerator2 = _interopRequireDefault(_regenerator);
	
	var _asyncToGenerator2 = __webpack_require__(556);
	
	var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);
	
	var _getPrototypeOf = __webpack_require__(382);
	
	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);
	
	var _classCallCheck2 = __webpack_require__(386);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _createClass2 = __webpack_require__(387);
	
	var _createClass3 = _interopRequireDefault(_createClass2);
	
	var _possibleConstructorReturn2 = __webpack_require__(388);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(405);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _react = __webpack_require__(25);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _BaseContainer2 = __webpack_require__(474);
	
	var _BaseContainer3 = _interopRequireDefault(_BaseContainer2);
	
	var _TablePallete = __webpack_require__(618);
	
	var _TablePallete2 = _interopRequireDefault(_TablePallete);
	
	var _ApiService = __webpack_require__(438);
	
	var _ApiService2 = _interopRequireDefault(_ApiService);
	
	var _utils = __webpack_require__(476);
	
	var _reactRouterDom = __webpack_require__(512);
	
	var _EditForm = __webpack_require__(627);
	
	var _EditForm2 = _interopRequireDefault(_EditForm);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var dateStr = "";
	var date = new Date();
	var key_id = "";
	
	var TableView = function (_BaseContainer) {
	  (0, _inherits3.default)(TableView, _BaseContainer);
	
	  function TableView(props) {
	    (0, _classCallCheck3.default)(this, TableView);
	
	    var _this = (0, _possibleConstructorReturn3.default)(this, (TableView.__proto__ || (0, _getPrototypeOf2.default)(TableView)).call(this, props));
	
	    _this.fromBodyRender = _this.fromBodyRender.bind(_this);
	    _this.fromSubmit = _this.fromSubmit.bind(_this);
	    _this.state = {
	      header: [{
	        title: "Seq Num",
	        prop: "no"
	      }, {
	        title: "Production Order",
	        prop: "workorderNo"
	      }, {
	        title: "Material",
	        prop: "itemMaterialNo"
	      }, {
	        title: "Material Description",
	        prop: "articleName"
	      }, {
	        title: "SSCC",
	        prop: "ssccNumber"
	      }, {
	        title: "Batch",
	        prop: "batchNo"
	      }, {
	        title: "Qty",
	        prop: "itemQty"
	      }, {
	        title: "Best Before Date",
	        prop: "bestBeforeDate"
	      }, {
	        title: "Prod. Date",
	        prop: "prodDate"
	      }, {
	        title: "Scanned Date",
	        prop: ""
	      }, {
	        title: "Scanned By",
	        prop: ""
	      }, {
	        title: "Device",
	        prop: ""
	      }, {
	        title: "Printed By",
	        prop: ""
	      }, {
	        title: "Reprinted",
	        prop: "isReprinted"
	      }, {
	        title: "Reprinted By",
	        prop: ""
	      }, {
	        title: "Reprinted Reason",
	        prop: "reprintedReason"
	      }, {
	        title: "Blocked Stock",
	        prop: "blockedStock"
	      }],
	      data: data,
	      isLoading: true
	    };
	    return _this;
	  }
	
	  /* componentWillMount() {
	    this.setState({
	      title: "Pallet Report"
	    })
	    ApiService.fetchCcaPalletReportLites()
	      .then(response => {
	        this.setState({ 
	          data: response.data 
	        });
	      })
	      this.showLoading(true)
	        setTimeout(() => {
	          this.showLoading(false)
	        }, 1000);
	  } */
	
	  (0, _createClass3.default)(TableView, [{
	    key: 'componentDidMount',
	    value: function () {
	      var _ref = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee() {
	        var _this2 = this;
	
	        return _regenerator2.default.wrap(function _callee$(_context) {
	          while (1) {
	            switch (_context.prev = _context.next) {
	              case 0:
	                //componentWillMount() {
	                dateStr = date.getFullYear() + "-" + ("00" + (date.getMonth() + 1)).slice(-2) + "-" + ("00" + date.getDate()).slice(-2) + "T" + ("00" + date.getHours()).slice(-2) + ":" + ("00" + date.getMinutes()).slice(-2) + ":" + ("00" + date.getSeconds()).slice(-2);
	
	                this.setState({
	                  title: "LPA - Labelling Operation"
	                });
	
	                _context.prev = 2;
	                _context.next = 5;
	                return _ApiService2.default.fetchCcaPalletReportLites().then(function (response) {
	                  _this2.setState({
	                    data: response.data
	                  });
	                });
	
	              case 5:
	                this.showLoading(true);
	                setTimeout(function () {
	                  _this2.showLoading(false);
	                }, 1000);
	                _context.next = 12;
	                break;
	
	              case 9:
	                _context.prev = 9;
	                _context.t0 = _context['catch'](2);
	
	                console.log("Error fetching data-----------", _context.t0);
	
	              case 12:
	              case 'end':
	                return _context.stop();
	            }
	          }
	        }, _callee, this, [[2, 9]]);
	      }));
	
	      function componentDidMount() {
	        return _ref.apply(this, arguments);
	      }
	
	      return componentDidMount;
	    }()
	  }, {
	    key: '_renderContent',
	    value: function _renderContent() {
	      console.log(this.state);
	      return _react2.default.createElement(
	        'div',
	        { className: 'portlet body' },
	        _react2.default.createElement(_TablePallete2.default, {
	          searchableProperties: ["workorderNo", "itemMaterialNo"],
	          hasTopBar: true,
	          headers: this.state.header,
	          data: this.state.data,
	          rowRender: this._renderRow,
	          onAddNewHandler: this.onAddNewClick.bind(this)
	        })
	      );
	    }
	  }, {
	    key: 'onAddNewClick',
	    value: function onAddNewClick() {
	      alert('Got to Add Data');
	    }
	  }, {
	    key: '_renderRow',
	    value: function _renderRow(itm, i) {
	      return _react2.default.createElement(
	        'tr',
	        { key: i, className: 'odd gradeX' },
	        _react2.default.createElement(
	          'td',
	          null,
	          i + 1
	        ),
	        _react2.default.createElement(
	          'td',
	          null,
	          itm.workorderNo
	        ),
	        _react2.default.createElement(
	          'td',
	          null,
	          itm.itemMaterialNo
	        ),
	        _react2.default.createElement(
	          'td',
	          null,
	          itm.articleName
	        ),
	        _react2.default.createElement(
	          'td',
	          null,
	          itm.ssccNumber
	        ),
	        _react2.default.createElement(
	          'td',
	          null,
	          itm.batchNo
	        ),
	        _react2.default.createElement(
	          'td',
	          null,
	          itm.itemQty
	        ),
	        _react2.default.createElement(
	          'td',
	          null,
	          itm.bestBeforeDate
	        ),
	        _react2.default.createElement(
	          'td',
	          null,
	          itm.prodDate
	        ),
	        _react2.default.createElement('td', null),
	        _react2.default.createElement('td', null),
	        _react2.default.createElement('td', null),
	        _react2.default.createElement(
	          'td',
	          null,
	          itm.isReprinted
	        ),
	        _react2.default.createElement('td', null),
	        _react2.default.createElement(
	          'td',
	          null,
	          itm.reprintedReason
	        ),
	        _react2.default.createElement(
	          'td',
	          null,
	          itm.blockedStock
	        )
	      );
	    }
	  }]);
	  return TableView;
	}(_BaseContainer3.default);
	
	exports.default = TableView;

/***/ }),
/* 629 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.__RewireAPI__ = exports.__ResetDependency__ = exports.__set__ = exports.__Rewire__ = exports.__GetDependency__ = exports.__get__ = exports.RedBoxError = undefined;
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
	
	var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _propTypes = __webpack_require__(415);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _react = __webpack_require__(25);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactDom = __webpack_require__(63);
	
	var _reactDom2 = _interopRequireDefault(_reactDom);
	
	var _style = __webpack_require__(630);
	
	var _style2 = _interopRequireDefault(_style);
	
	var _errorStackParser = __webpack_require__(631);
	
	var _errorStackParser2 = _interopRequireDefault(_errorStackParser);
	
	var _objectAssign = __webpack_require__(27);
	
	var _objectAssign2 = _interopRequireDefault(_objectAssign);
	
	var _lib = __webpack_require__(633);
	
	var _sourcemappedStacktrace = __webpack_require__(634);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var RedBoxError = exports.RedBoxError = function (_get__2) {
	  _inherits(RedBoxError, _get__2);
	
	  function RedBoxError(props) {
	    _classCallCheck(this, RedBoxError);
	
	    var _this = _possibleConstructorReturn(this, (RedBoxError.__proto__ || Object.getPrototypeOf(RedBoxError)).call(this, props));
	
	    _this.state = {
	      error: null,
	      mapped: false
	    };
	
	    _this.mapOnConstruction(props.error);
	    return _this;
	  }
	
	  // State is used to store the error mapped to the source map.
	
	
	  _createClass(RedBoxError, [{
	    key: 'componentDidMount',
	    value: function componentDidMount() {
	      if (!this.state.mapped) this.mapError(this.props.error);
	    }
	
	    // Try to map the error when the component gets constructed, this is possible
	    // in some cases like evals.
	
	  }, {
	    key: 'mapOnConstruction',
	    value: function mapOnConstruction(error) {
	      var stackLines = error.stack.split('\n');
	
	      // There's no stack, only the error message.
	      if (stackLines.length < 2) {
	        this.state = { error: error, mapped: true };
	        return;
	      }
	
	      // Using the “eval” setting on webpack already gives the correct location.
	      var isWebpackEval = stackLines[1].search(/\(webpack:\/{3}/) !== -1;
	      if (isWebpackEval) {
	        // No changes are needed here.
	        this.state = { error: error, mapped: true };
	        return;
	      }
	
	      // Other eval follow a specific pattern and can be easily parsed.
	      var isEval = stackLines[1].search(/\(eval at/) !== -1;
	      if (!isEval) {
	        // mapping will be deferred until `componentDidMount`
	        this.state = { error: error, mapped: false };
	        return;
	      }
	
	      // The first line is the error message.
	      var fixedLines = [stackLines.shift()];
	      // The rest needs to be fixed.
	      var _iteratorNormalCompletion = true;
	      var _didIteratorError = false;
	      var _iteratorError = undefined;
	
	      try {
	        for (var _iterator = stackLines[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
	          var stackLine = _step.value;
	
	          var evalStackLine = stackLine.match(/(.+)\(eval at (.+) \(.+?\), .+(\:[0-9]+\:[0-9]+)\)/);
	          if (evalStackLine) {
	            var _evalStackLine = _slicedToArray(evalStackLine, 4),
	                atSomething = _evalStackLine[1],
	                file = _evalStackLine[2],
	                rowColumn = _evalStackLine[3];
	
	            fixedLines.push(atSomething + ' (' + file + rowColumn + ')');
	          } else {
	            // TODO: When stack frames of different types are detected, try to load the additional source maps
	            fixedLines.push(stackLine);
	          }
	        }
	      } catch (err) {
	        _didIteratorError = true;
	        _iteratorError = err;
	      } finally {
	        try {
	          if (!_iteratorNormalCompletion && _iterator.return) {
	            _iterator.return();
	          }
	        } finally {
	          if (_didIteratorError) {
	            throw _iteratorError;
	          }
	        }
	      }
	
	      error.stack = fixedLines.join('\n');
	      this.state = { error: error, mapped: true };
	    }
	  }, {
	    key: 'mapError',
	    value: function mapError(error) {
	      var _this2 = this;
	
	      _get__('mapStackTrace')(error.stack, function (mappedStack) {
	        error.stack = mappedStack.join('\n');
	        _this2.setState({ error: error, mapped: true });
	      });
	    }
	  }, {
	    key: 'renderFrames',
	    value: function renderFrames(frames) {
	      var _props = this.props,
	          filename = _props.filename,
	          editorScheme = _props.editorScheme,
	          useLines = _props.useLines,
	          useColumns = _props.useColumns;
	
	      var _get__3 = _get__('assign')({}, _get__('style'), this.props.style),
	          frame = _get__3.frame,
	          file = _get__3.file,
	          linkToFile = _get__3.linkToFile;
	
	      return frames.map(function (f, index) {
	        var text = void 0;
	        var url = void 0;
	
	        if (index === 0 && filename && !_get__('isFilenameAbsolute')(f.fileName)) {
	          url = _get__('makeUrl')(filename, editorScheme);
	          text = _get__('makeLinkText')(filename);
	        } else {
	          var lines = useLines ? f.lineNumber : null;
	          var columns = useColumns ? f.columnNumber : null;
	          url = _get__('makeUrl')(f.fileName, editorScheme, lines, columns);
	          text = _get__('makeLinkText')(f.fileName, lines, columns);
	        }
	
	        return _get__('React').createElement(
	          'div',
	          { style: frame, key: index },
	          _get__('React').createElement(
	            'div',
	            null,
	            f.functionName
	          ),
	          _get__('React').createElement(
	            'div',
	            { style: file },
	            _get__('React').createElement(
	              'a',
	              { href: url, style: linkToFile },
	              text
	            )
	          )
	        );
	      });
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      // The error is received as a property to initialize state.error, which may
	      // be updated when it is mapped to the source map.
	      var error = this.state.error;
	      var className = this.props.className;
	
	      var _get__4 = _get__('assign')({}, _get__('style'), this.props.style),
	          redbox = _get__4.redbox,
	          message = _get__4.message,
	          stack = _get__4.stack,
	          frame = _get__4.frame;
	
	      var frames = void 0;
	      var parseError = void 0;
	      try {
	        frames = _get__('ErrorStackParser').parse(error);
	      } catch (e) {
	        parseError = new Error('Failed to parse stack trace. Stack trace information unavailable.');
	      }
	
	      if (parseError) {
	        frames = _get__('React').createElement(
	          'div',
	          { style: frame, key: 0 },
	          _get__('React').createElement(
	            'div',
	            null,
	            parseError.message
	          )
	        );
	      } else {
	        frames = this.renderFrames(frames);
	      }
	
	      return _get__('React').createElement(
	        'div',
	        { style: redbox, className: className },
	        _get__('React').createElement(
	          'div',
	          { style: message },
	          error.name,
	          ': ',
	          error.message
	        ),
	        _get__('React').createElement(
	          'div',
	          { style: stack },
	          frames
	        )
	      );
	    }
	  }]);
	
	  return RedBoxError;
	}(_get__('Component'));
	
	// "Portal" component for actual RedBoxError component to
	// render to (directly under body). Prevents bugs as in #27.
	
	
	RedBoxError.propTypes = {
	  error: _get__('PropTypes').instanceOf(Error).isRequired,
	  filename: _get__('PropTypes').string,
	  editorScheme: _get__('PropTypes').string,
	  useLines: _get__('PropTypes').bool,
	  useColumns: _get__('PropTypes').bool,
	  style: _get__('PropTypes').object,
	  className: _get__('PropTypes').string
	};
	RedBoxError.displayName = 'RedBoxError';
	RedBoxError.defaultProps = {
	  useLines: true,
	  useColumns: true };
	
	var RedBox = function (_get__5) {
	  _inherits(RedBox, _get__5);
	
	  function RedBox() {
	    _classCallCheck(this, RedBox);
	
	    return _possibleConstructorReturn(this, (RedBox.__proto__ || Object.getPrototypeOf(RedBox)).apply(this, arguments));
	  }
	
	  _createClass(RedBox, [{
	    key: 'componentDidMount',
	    value: function componentDidMount() {
	      this.el = document.createElement('div');
	      document.body.appendChild(this.el);
	      this.renderRedBoxError();
	    }
	  }, {
	    key: 'componentDidUpdate',
	    value: function componentDidUpdate() {
	      this.renderRedBoxError();
	    }
	  }, {
	    key: 'componentWillUnmount',
	    value: function componentWillUnmount() {
	      _get__('ReactDOM').unmountComponentAtNode(this.el);
	      document.body.removeChild(this.el);
	      this.el = null;
	    }
	  }, {
	    key: 'renderRedBoxError',
	    value: function renderRedBoxError() {
	      _get__('ReactDOM').render(_get__('React').createElement(_get__('RedBoxError'), this.props), this.el);
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      return null;
	    }
	  }]);
	
	  return RedBox;
	}(_get__('Component'));
	
	RedBox.propTypes = {
	  error: _get__('PropTypes').instanceOf(Error).isRequired
	};
	RedBox.displayName = 'RedBox';
	exports.default = RedBox;
	
	var _RewiredData__ = Object.create(null);
	
	var INTENTIONAL_UNDEFINED = '__INTENTIONAL_UNDEFINED__';
	var _RewireAPI__ = {};
	
	(function () {
	  function addPropertyToAPIObject(name, value) {
	    Object.defineProperty(_RewireAPI__, name, {
	      value: value,
	      enumerable: false,
	      configurable: true
	    });
	  }
	
	  addPropertyToAPIObject('__get__', _get__);
	  addPropertyToAPIObject('__GetDependency__', _get__);
	  addPropertyToAPIObject('__Rewire__', _set__);
	  addPropertyToAPIObject('__set__', _set__);
	  addPropertyToAPIObject('__reset__', _reset__);
	  addPropertyToAPIObject('__ResetDependency__', _reset__);
	  addPropertyToAPIObject('__with__', _with__);
	})();
	
	function _get__(variableName) {
	  if (_RewiredData__ === undefined || _RewiredData__[variableName] === undefined) {
	    return _get_original__(variableName);
	  } else {
	    var value = _RewiredData__[variableName];
	
	    if (value === INTENTIONAL_UNDEFINED) {
	      return undefined;
	    } else {
	      return value;
	    }
	  }
	}
	
	function _get_original__(variableName) {
	  switch (variableName) {
	    case 'PropTypes':
	      return _propTypes2.default;
	
	    case 'mapStackTrace':
	      return _sourcemappedStacktrace.mapStackTrace;
	
	    case 'assign':
	      return _objectAssign2.default;
	
	    case 'style':
	      return _style2.default;
	
	    case 'isFilenameAbsolute':
	      return _lib.isFilenameAbsolute;
	
	    case 'makeUrl':
	      return _lib.makeUrl;
	
	    case 'makeLinkText':
	      return _lib.makeLinkText;
	
	    case 'ErrorStackParser':
	      return _errorStackParser2.default;
	
	    case 'Component':
	      return _react.Component;
	
	    case 'ReactDOM':
	      return _reactDom2.default;
	
	    case 'React':
	      return _react2.default;
	
	    case 'RedBoxError':
	      return RedBoxError;
	  }
	
	  return undefined;
	}
	
	function _assign__(variableName, value) {
	  if (_RewiredData__ === undefined || _RewiredData__[variableName] === undefined) {
	    return _set_original__(variableName, value);
	  } else {
	    return _RewiredData__[variableName] = value;
	  }
	}
	
	function _set_original__(variableName, _value) {
	  switch (variableName) {}
	
	  return undefined;
	}
	
	function _update_operation__(operation, variableName, prefix) {
	  var oldValue = _get__(variableName);
	
	  var newValue = operation === '++' ? oldValue + 1 : oldValue - 1;
	
	  _assign__(variableName, newValue);
	
	  return prefix ? newValue : oldValue;
	}
	
	function _set__(variableName, value) {
	  if ((typeof variableName === 'undefined' ? 'undefined' : _typeof(variableName)) === 'object') {
	    Object.keys(variableName).forEach(function (name) {
	      _RewiredData__[name] = variableName[name];
	    });
	  } else {
	    if (value === undefined) {
	      _RewiredData__[variableName] = INTENTIONAL_UNDEFINED;
	    } else {
	      _RewiredData__[variableName] = value;
	    }
	
	    return function () {
	      _reset__(variableName);
	    };
	  }
	}
	
	function _reset__(variableName) {
	  delete _RewiredData__[variableName];
	}
	
	function _with__(object) {
	  var rewiredVariableNames = Object.keys(object);
	  var previousValues = {};
	
	  function reset() {
	    rewiredVariableNames.forEach(function (variableName) {
	      _RewiredData__[variableName] = previousValues[variableName];
	    });
	  }
	
	  return function (callback) {
	    rewiredVariableNames.forEach(function (variableName) {
	      previousValues[variableName] = _RewiredData__[variableName];
	      _RewiredData__[variableName] = object[variableName];
	    });
	    var result = callback();
	
	    if (!!result && typeof result.then == 'function') {
	      result.then(reset).catch(reset);
	    } else {
	      reset();
	    }
	
	    return result;
	  };
	}
	
	var _typeOfOriginalExport = typeof RedBox === 'undefined' ? 'undefined' : _typeof(RedBox);
	
	function addNonEnumerableProperty(name, value) {
	  Object.defineProperty(RedBox, name, {
	    value: value,
	    enumerable: false,
	    configurable: true
	  });
	}
	
	if ((_typeOfOriginalExport === 'object' || _typeOfOriginalExport === 'function') && Object.isExtensible(RedBox)) {
	  addNonEnumerableProperty('__get__', _get__);
	  addNonEnumerableProperty('__GetDependency__', _get__);
	  addNonEnumerableProperty('__Rewire__', _set__);
	  addNonEnumerableProperty('__set__', _set__);
	  addNonEnumerableProperty('__reset__', _reset__);
	  addNonEnumerableProperty('__ResetDependency__', _reset__);
	  addNonEnumerableProperty('__with__', _with__);
	  addNonEnumerableProperty('__RewireAPI__', _RewireAPI__);
	}
	
	exports.__get__ = _get__;
	exports.__GetDependency__ = _get__;
	exports.__Rewire__ = _set__;
	exports.__set__ = _set__;
	exports.__ResetDependency__ = _reset__;
	exports.__RewireAPI__ = _RewireAPI__;

/***/ }),
/* 630 */
/***/ (function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	var _DefaultExportValue = {
	  redbox: {
	    boxSizing: 'border-box',
	    fontFamily: 'sans-serif',
	    position: 'fixed',
	    padding: 10,
	    top: '0px',
	    left: '0px',
	    bottom: '0px',
	    right: '0px',
	    width: '100%',
	    background: 'rgb(204, 0, 0)',
	    color: 'white',
	    zIndex: 2147483647,
	    textAlign: 'left',
	    fontSize: '16px',
	    lineHeight: 1.2,
	    overflow: 'auto'
	  },
	  message: {
	    fontWeight: 'bold'
	  },
	  stack: {
	    fontFamily: 'monospace',
	    marginTop: '2em'
	  },
	  frame: {
	    marginTop: '1em'
	  },
	  file: {
	    fontSize: '0.8em',
	    color: 'rgba(255, 255, 255, 0.7)'
	  },
	  linkToFile: {
	    textDecoration: 'none',
	    color: 'rgba(255, 255, 255, 0.7)'
	  }
	};
	exports.default = _DefaultExportValue;

/***/ }),
/* 631 */
/***/ (function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function(root, factory) {
	    'use strict';
	    // Universal Module Definition (UMD) to support AMD, CommonJS/Node.js, Rhino, and browsers.
	
	    /* istanbul ignore next */
	    if (true) {
	        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(632)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	    } else if (typeof exports === 'object') {
	        module.exports = factory(require('stackframe'));
	    } else {
	        root.ErrorStackParser = factory(root.StackFrame);
	    }
	}(this, function ErrorStackParser(StackFrame) {
	    'use strict';
	
	    var FIREFOX_SAFARI_STACK_REGEXP = /(^|@)\S+\:\d+/;
	    var CHROME_IE_STACK_REGEXP = /^\s*at .*(\S+\:\d+|\(native\))/m;
	    var SAFARI_NATIVE_CODE_REGEXP = /^(eval@)?(\[native code\])?$/;
	
	    function _map(array, fn, thisArg) {
	        if (typeof Array.prototype.map === 'function') {
	            return array.map(fn, thisArg);
	        } else {
	            var output = new Array(array.length);
	            for (var i = 0; i < array.length; i++) {
	                output[i] = fn.call(thisArg, array[i]);
	            }
	            return output;
	        }
	    }
	
	    function _filter(array, fn, thisArg) {
	        if (typeof Array.prototype.filter === 'function') {
	            return array.filter(fn, thisArg);
	        } else {
	            var output = [];
	            for (var i = 0; i < array.length; i++) {
	                if (fn.call(thisArg, array[i])) {
	                    output.push(array[i]);
	                }
	            }
	            return output;
	        }
	    }
	
	    function _indexOf(array, target) {
	        if (typeof Array.prototype.indexOf === 'function') {
	            return array.indexOf(target);
	        } else {
	            for (var i = 0; i < array.length; i++) {
	                if (array[i] === target) {
	                    return i;
	                }
	            }
	            return -1;
	        }
	    }
	
	    return {
	        /**
	         * Given an Error object, extract the most information from it.
	         *
	         * @param {Error} error object
	         * @return {Array} of StackFrames
	         */
	        parse: function ErrorStackParser$$parse(error) {
	            if (typeof error.stacktrace !== 'undefined' || typeof error['opera#sourceloc'] !== 'undefined') {
	                return this.parseOpera(error);
	            } else if (error.stack && error.stack.match(CHROME_IE_STACK_REGEXP)) {
	                return this.parseV8OrIE(error);
	            } else if (error.stack) {
	                return this.parseFFOrSafari(error);
	            } else {
	                throw new Error('Cannot parse given Error object');
	            }
	        },
	
	        // Separate line and column numbers from a string of the form: (URI:Line:Column)
	        extractLocation: function ErrorStackParser$$extractLocation(urlLike) {
	            // Fail-fast but return locations like "(native)"
	            if (urlLike.indexOf(':') === -1) {
	                return [urlLike];
	            }
	
	            var regExp = /(.+?)(?:\:(\d+))?(?:\:(\d+))?$/;
	            var parts = regExp.exec(urlLike.replace(/[\(\)]/g, ''));
	            return [parts[1], parts[2] || undefined, parts[3] || undefined];
	        },
	
	        parseV8OrIE: function ErrorStackParser$$parseV8OrIE(error) {
	            var filtered = _filter(error.stack.split('\n'), function(line) {
	                return !!line.match(CHROME_IE_STACK_REGEXP);
	            }, this);
	
	            return _map(filtered, function(line) {
	                if (line.indexOf('(eval ') > -1) {
	                    // Throw away eval information until we implement stacktrace.js/stackframe#8
	                    line = line.replace(/eval code/g, 'eval').replace(/(\(eval at [^\()]*)|(\)\,.*$)/g, '');
	                }
	                var tokens = line.replace(/^\s+/, '').replace(/\(eval code/g, '(').split(/\s+/).slice(1);
	                var locationParts = this.extractLocation(tokens.pop());
	                var functionName = tokens.join(' ') || undefined;
	                var fileName = _indexOf(['eval', '<anonymous>'], locationParts[0]) > -1 ? undefined : locationParts[0];
	
	                return new StackFrame(functionName, undefined, fileName, locationParts[1], locationParts[2], line);
	            }, this);
	        },
	
	        parseFFOrSafari: function ErrorStackParser$$parseFFOrSafari(error) {
	            var filtered = _filter(error.stack.split('\n'), function(line) {
	                return !line.match(SAFARI_NATIVE_CODE_REGEXP);
	            }, this);
	
	            return _map(filtered, function(line) {
	                // Throw away eval information until we implement stacktrace.js/stackframe#8
	                if (line.indexOf(' > eval') > -1) {
	                    line = line.replace(/ line (\d+)(?: > eval line \d+)* > eval\:\d+\:\d+/g, ':$1');
	                }
	
	                if (line.indexOf('@') === -1 && line.indexOf(':') === -1) {
	                    // Safari eval frames only have function names and nothing else
	                    return new StackFrame(line);
	                } else {
	                    var tokens = line.split('@');
	                    var locationParts = this.extractLocation(tokens.pop());
	                    var functionName = tokens.join('@') || undefined;
	                    return new StackFrame(functionName,
	                        undefined,
	                        locationParts[0],
	                        locationParts[1],
	                        locationParts[2],
	                        line);
	                }
	            }, this);
	        },
	
	        parseOpera: function ErrorStackParser$$parseOpera(e) {
	            if (!e.stacktrace || (e.message.indexOf('\n') > -1 &&
	                e.message.split('\n').length > e.stacktrace.split('\n').length)) {
	                return this.parseOpera9(e);
	            } else if (!e.stack) {
	                return this.parseOpera10(e);
	            } else {
	                return this.parseOpera11(e);
	            }
	        },
	
	        parseOpera9: function ErrorStackParser$$parseOpera9(e) {
	            var lineRE = /Line (\d+).*script (?:in )?(\S+)/i;
	            var lines = e.message.split('\n');
	            var result = [];
	
	            for (var i = 2, len = lines.length; i < len; i += 2) {
	                var match = lineRE.exec(lines[i]);
	                if (match) {
	                    result.push(new StackFrame(undefined, undefined, match[2], match[1], undefined, lines[i]));
	                }
	            }
	
	            return result;
	        },
	
	        parseOpera10: function ErrorStackParser$$parseOpera10(e) {
	            var lineRE = /Line (\d+).*script (?:in )?(\S+)(?:: In function (\S+))?$/i;
	            var lines = e.stacktrace.split('\n');
	            var result = [];
	
	            for (var i = 0, len = lines.length; i < len; i += 2) {
	                var match = lineRE.exec(lines[i]);
	                if (match) {
	                    result.push(
	                        new StackFrame(
	                            match[3] || undefined,
	                            undefined,
	                            match[2],
	                            match[1],
	                            undefined,
	                            lines[i]
	                        )
	                    );
	                }
	            }
	
	            return result;
	        },
	
	        // Opera 10.65+ Error.stack very similar to FF/Safari
	        parseOpera11: function ErrorStackParser$$parseOpera11(error) {
	            var filtered = _filter(error.stack.split('\n'), function(line) {
	                return !!line.match(FIREFOX_SAFARI_STACK_REGEXP) && !line.match(/^Error created at/);
	            }, this);
	
	            return _map(filtered, function(line) {
	                var tokens = line.split('@');
	                var locationParts = this.extractLocation(tokens.pop());
	                var functionCall = (tokens.shift() || '');
	                var functionName = functionCall
	                        .replace(/<anonymous function(: (\w+))?>/, '$2')
	                        .replace(/\([^\)]*\)/g, '') || undefined;
	                var argsRaw;
	                if (functionCall.match(/\(([^\)]*)\)/)) {
	                    argsRaw = functionCall.replace(/^[^\(]+\(([^\)]*)\)$/, '$1');
	                }
	                var args = (argsRaw === undefined || argsRaw === '[arguments not available]') ?
	                    undefined : argsRaw.split(',');
	                return new StackFrame(
	                    functionName,
	                    args,
	                    locationParts[0],
	                    locationParts[1],
	                    locationParts[2],
	                    line);
	            }, this);
	        }
	    };
	}));
	


/***/ }),
/* 632 */
/***/ (function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function (root, factory) {
	    'use strict';
	    // Universal Module Definition (UMD) to support AMD, CommonJS/Node.js, Rhino, and browsers.
	
	    /* istanbul ignore next */
	    if (true) {
	        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	    } else if (typeof exports === 'object') {
	        module.exports = factory();
	    } else {
	        root.StackFrame = factory();
	    }
	}(this, function () {
	    'use strict';
	    function _isNumber(n) {
	        return !isNaN(parseFloat(n)) && isFinite(n);
	    }
	
	    function StackFrame(functionName, args, fileName, lineNumber, columnNumber, source) {
	        if (functionName !== undefined) {
	            this.setFunctionName(functionName);
	        }
	        if (args !== undefined) {
	            this.setArgs(args);
	        }
	        if (fileName !== undefined) {
	            this.setFileName(fileName);
	        }
	        if (lineNumber !== undefined) {
	            this.setLineNumber(lineNumber);
	        }
	        if (columnNumber !== undefined) {
	            this.setColumnNumber(columnNumber);
	        }
	        if (source !== undefined) {
	            this.setSource(source);
	        }
	    }
	
	    StackFrame.prototype = {
	        getFunctionName: function () {
	            return this.functionName;
	        },
	        setFunctionName: function (v) {
	            this.functionName = String(v);
	        },
	
	        getArgs: function () {
	            return this.args;
	        },
	        setArgs: function (v) {
	            if (Object.prototype.toString.call(v) !== '[object Array]') {
	                throw new TypeError('Args must be an Array');
	            }
	            this.args = v;
	        },
	
	        // NOTE: Property name may be misleading as it includes the path,
	        // but it somewhat mirrors V8's JavaScriptStackTraceApi
	        // https://code.google.com/p/v8/wiki/JavaScriptStackTraceApi and Gecko's
	        // http://mxr.mozilla.org/mozilla-central/source/xpcom/base/nsIException.idl#14
	        getFileName: function () {
	            return this.fileName;
	        },
	        setFileName: function (v) {
	            this.fileName = String(v);
	        },
	
	        getLineNumber: function () {
	            return this.lineNumber;
	        },
	        setLineNumber: function (v) {
	            if (!_isNumber(v)) {
	                throw new TypeError('Line Number must be a Number');
	            }
	            this.lineNumber = Number(v);
	        },
	
	        getColumnNumber: function () {
	            return this.columnNumber;
	        },
	        setColumnNumber: function (v) {
	            if (!_isNumber(v)) {
	                throw new TypeError('Column Number must be a Number');
	            }
	            this.columnNumber = Number(v);
	        },
	
	        getSource: function () {
	            return this.source;
	        },
	        setSource: function (v) {
	            this.source = String(v);
	        },
	
	        toString: function() {
	            var functionName = this.getFunctionName() || '{anonymous}';
	            var args = '(' + (this.getArgs() || []).join(',') + ')';
	            var fileName = this.getFileName() ? ('@' + this.getFileName()) : '';
	            var lineNumber = _isNumber(this.getLineNumber()) ? (':' + this.getLineNumber()) : '';
	            var columnNumber = _isNumber(this.getColumnNumber()) ? (':' + this.getColumnNumber()) : '';
	            return functionName + args + fileName + lineNumber + columnNumber;
	        }
	    };
	
	    return StackFrame;
	}));


/***/ }),
/* 633 */
/***/ (function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
	
	var filenameWithoutLoaders = exports.filenameWithoutLoaders = function filenameWithoutLoaders() {
	  var filename = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';
	
	  var index = filename.lastIndexOf('!');
	
	  return index < 0 ? filename : filename.substr(index + 1);
	};
	
	var filenameHasLoaders = exports.filenameHasLoaders = function filenameHasLoaders(filename) {
	  var actualFilename = _get__('filenameWithoutLoaders')(filename);
	
	  return actualFilename !== filename;
	};
	
	var filenameHasSchema = exports.filenameHasSchema = function filenameHasSchema(filename) {
	  return (/^[\w]+\:/.test(filename)
	  );
	};
	
	var isFilenameAbsolute = exports.isFilenameAbsolute = function isFilenameAbsolute(filename) {
	  var actualFilename = _get__('filenameWithoutLoaders')(filename);
	
	  if (actualFilename.indexOf('/') === 0) {
	    return true;
	  }
	
	  return false;
	};
	
	var makeUrl = exports.makeUrl = function makeUrl(filename, scheme, line, column) {
	  var actualFilename = _get__('filenameWithoutLoaders')(filename);
	
	  if (_get__('filenameHasSchema')(filename)) {
	    return actualFilename;
	  }
	
	  var url = 'file://' + actualFilename;
	
	  if (scheme === 'vscode') {
	    url = scheme + '://file/' + url;
	    url = url.replace(/file:\/\/\//, ''); // visual studio code does not need file:/// in its scheme
	    if (line && actualFilename === filename) {
	      url = url + ':' + line;
	
	      if (column) {
	        url = url + ':' + column;
	      }
	    }
	  } else if (scheme) {
	    url = scheme + '://open?url=' + url;
	
	    if (line && actualFilename === filename) {
	      url = url + '&line=' + line;
	
	      if (column) {
	        url = url + '&column=' + column;
	      }
	    }
	  }
	
	  return url;
	};
	
	var makeLinkText = exports.makeLinkText = function makeLinkText(filename, line, column) {
	  var text = _get__('filenameWithoutLoaders')(filename);
	
	  if (line && text === filename) {
	    text = text + ':' + line;
	
	    if (column) {
	      text = text + ':' + column;
	    }
	  }
	
	  return text;
	};
	
	var _RewiredData__ = Object.create(null);
	
	var INTENTIONAL_UNDEFINED = '__INTENTIONAL_UNDEFINED__';
	var _RewireAPI__ = {};
	
	(function () {
	  function addPropertyToAPIObject(name, value) {
	    Object.defineProperty(_RewireAPI__, name, {
	      value: value,
	      enumerable: false,
	      configurable: true
	    });
	  }
	
	  addPropertyToAPIObject('__get__', _get__);
	  addPropertyToAPIObject('__GetDependency__', _get__);
	  addPropertyToAPIObject('__Rewire__', _set__);
	  addPropertyToAPIObject('__set__', _set__);
	  addPropertyToAPIObject('__reset__', _reset__);
	  addPropertyToAPIObject('__ResetDependency__', _reset__);
	  addPropertyToAPIObject('__with__', _with__);
	})();
	
	function _get__(variableName) {
	  if (_RewiredData__ === undefined || _RewiredData__[variableName] === undefined) {
	    return _get_original__(variableName);
	  } else {
	    var value = _RewiredData__[variableName];
	
	    if (value === INTENTIONAL_UNDEFINED) {
	      return undefined;
	    } else {
	      return value;
	    }
	  }
	}
	
	function _get_original__(variableName) {
	  switch (variableName) {
	    case 'filenameWithoutLoaders':
	      return filenameWithoutLoaders;
	
	    case 'filenameHasSchema':
	      return filenameHasSchema;
	  }
	
	  return undefined;
	}
	
	function _assign__(variableName, value) {
	  if (_RewiredData__ === undefined || _RewiredData__[variableName] === undefined) {
	    return _set_original__(variableName, value);
	  } else {
	    return _RewiredData__[variableName] = value;
	  }
	}
	
	function _set_original__(variableName, _value) {
	  switch (variableName) {}
	
	  return undefined;
	}
	
	function _update_operation__(operation, variableName, prefix) {
	  var oldValue = _get__(variableName);
	
	  var newValue = operation === '++' ? oldValue + 1 : oldValue - 1;
	
	  _assign__(variableName, newValue);
	
	  return prefix ? newValue : oldValue;
	}
	
	function _set__(variableName, value) {
	  if ((typeof variableName === 'undefined' ? 'undefined' : _typeof(variableName)) === 'object') {
	    Object.keys(variableName).forEach(function (name) {
	      _RewiredData__[name] = variableName[name];
	    });
	  } else {
	    if (value === undefined) {
	      _RewiredData__[variableName] = INTENTIONAL_UNDEFINED;
	    } else {
	      _RewiredData__[variableName] = value;
	    }
	
	    return function () {
	      _reset__(variableName);
	    };
	  }
	}
	
	function _reset__(variableName) {
	  delete _RewiredData__[variableName];
	}
	
	function _with__(object) {
	  var rewiredVariableNames = Object.keys(object);
	  var previousValues = {};
	
	  function reset() {
	    rewiredVariableNames.forEach(function (variableName) {
	      _RewiredData__[variableName] = previousValues[variableName];
	    });
	  }
	
	  return function (callback) {
	    rewiredVariableNames.forEach(function (variableName) {
	      previousValues[variableName] = _RewiredData__[variableName];
	      _RewiredData__[variableName] = object[variableName];
	    });
	    var result = callback();
	
	    if (!!result && typeof result.then == 'function') {
	      result.then(reset).catch(reset);
	    } else {
	      reset();
	    }
	
	    return result;
	  };
	}
	
	exports.__get__ = _get__;
	exports.__GetDependency__ = _get__;
	exports.__Rewire__ = _set__;
	exports.__set__ = _set__;
	exports.__ResetDependency__ = _reset__;
	exports.__RewireAPI__ = _RewireAPI__;
	exports.default = _RewireAPI__;

/***/ }),
/* 634 */
/***/ (function(module, exports, __webpack_require__) {

	(function webpackUniversalModuleDefinition(root, factory) {
		if(true)
			module.exports = factory();
		else if(typeof define === 'function' && define.amd)
			define([], factory);
		else if(typeof exports === 'object')
			exports["sourceMappedStackTrace"] = factory();
		else
			root["sourceMappedStackTrace"] = factory();
	})(this, function() {
	return /******/ (function(modules) { // webpackBootstrap
	/******/ 	// The module cache
	/******/ 	var installedModules = {};
	
	/******/ 	// The require function
	/******/ 	function __webpack_require__(moduleId) {
	
	/******/ 		// Check if module is in cache
	/******/ 		if(installedModules[moduleId])
	/******/ 			return installedModules[moduleId].exports;
	
	/******/ 		// Create a new module (and put it into the cache)
	/******/ 		var module = installedModules[moduleId] = {
	/******/ 			exports: {},
	/******/ 			id: moduleId,
	/******/ 			loaded: false
	/******/ 		};
	
	/******/ 		// Execute the module function
	/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
	
	/******/ 		// Flag the module as loaded
	/******/ 		module.loaded = true;
	
	/******/ 		// Return the exports of the module
	/******/ 		return module.exports;
	/******/ 	}
	
	
	/******/ 	// expose the modules object (__webpack_modules__)
	/******/ 	__webpack_require__.m = modules;
	
	/******/ 	// expose the module cache
	/******/ 	__webpack_require__.c = installedModules;
	
	/******/ 	// __webpack_public_path__
	/******/ 	__webpack_require__.p = "";
	
	/******/ 	// Load entry module and return exports
	/******/ 	return __webpack_require__(0);
	/******/ })
	/************************************************************************/
	/******/ ([
	/* 0 */
	/***/ (function(module, exports, __webpack_require__) {
	
		var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*
		 * sourcemapped-stacktrace.js
		 * created by James Salter <iteration@gmail.com> (2014)
		 *
		 * https://github.com/novocaine/sourcemapped-stacktrace
		 *
		 * Licensed under the New BSD license. See LICENSE or:
		 * http://opensource.org/licenses/BSD-3-Clause
		 */
	
		/*global define */
	
		// note we only include source-map-consumer, not the whole source-map library,
		// which includes gear for generating source maps that we don't need
		!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(1)], __WEBPACK_AMD_DEFINE_RESULT__ = function(source_map_consumer) {
	
		  var global_mapForUri = {};
	
		  /**
		   * Re-map entries in a stacktrace using sourcemaps if available.
		   *
		   * @param {str} stack - The stacktrace from the browser.
		   * @param {function} done - Callback invoked with the transformed stacktrace
		   *                          (an Array of Strings) passed as the first
		   *                          argument
		   * @param {Object} [opts] - Optional options object.
		   * @param {Function} [opts.filter] - Filter function applied to each stackTrace line.
		   *                                   Lines which do not pass the filter won't be processesd.
		   * @param {boolean} [opts.cacheGlobally] - Whether to cache sourcemaps globally across multiple calls.
		   * @param {boolean} [opts.sync] - Whether to use synchronous ajax to load the sourcemaps.
		   * @param {string} [opts.traceFormat] - If `error.stack` is formatted according to chrome or
		   *                                      Firefox's style.  Can be either `"chrome"`, `"firefox"`
		   *                                      or `undefined` (default).  If `undefined`, this library
		   *                                      will guess based on `navigator.userAgent`.
		   */
		  var mapStackTrace = function(stack, done, opts) {
		    var lines;
		    var line;
		    var mapForUri = {};
		    var rows = {};
		    var fields;
		    var uri;
		    var expected_fields;
		    var regex;
		    var skip_lines;
	
		    var fetcher = new Fetcher(opts);
	
		    var traceFormat = opts && opts.traceFormat;
		    if (traceFormat !== "chrome" && traceFormat !== "firefox") {
		      if (traceFormat) {
		        throw new Error("unknown traceFormat \"" + traceFormat + "\" :(");
		      } else if (isChromeOrEdge() || isIE11Plus()) {
		        traceFormat = "chrome";
		      } else if (isFirefox() || isSafari()) {
		        traceFormat = "firefox";
		      } else {
		        throw new Error("unknown browser :(");
		      }
		    }
	
		    if (traceFormat === "chrome") {
		      regex = /^ +at.+\((.*):([0-9]+):([0-9]+)/;
		      expected_fields = 4;
		      // (skip first line containing exception message)
		      skip_lines = 1;
		    } else {
		      regex = /@(.*):([0-9]+):([0-9]+)/;
		      expected_fields = 4;
		      skip_lines = 0;
		    }
	
		    lines = stack.split("\n").slice(skip_lines);
	
		    for (var i=0; i < lines.length; i++) {
		      line = lines[i];
		      if ( opts && opts.filter && !opts.filter(line) ) continue;
		      
		      fields = line.match(regex);
		      if (fields && fields.length === expected_fields) {
		        rows[i] = fields;
		        uri = fields[1];
		        if (!uri.match(/<anonymous>/)) {
		          fetcher.fetchScript(uri);
		        }
		      }
		    }
	
		    fetcher.sem.whenReady(function() {
		      var result = processSourceMaps(lines, rows, fetcher.mapForUri, traceFormat);
		      done(result);
		    });
		  };
	
		  var isChromeOrEdge = function() {
		    return navigator.userAgent.toLowerCase().indexOf('chrome') > -1;
		  };
	
		  var isFirefox = function() {
		    return navigator.userAgent.toLowerCase().indexOf('firefox') > -1;
		  };  
	
		  var isSafari = function() {
		    return navigator.userAgent.toLowerCase().indexOf('safari') > -1;
		  };
				
		  var isIE11Plus = function() {
		   	return document.documentMode && document.documentMode >= 11;
		  };
	
	
		  var Semaphore = function() {
		    this.count = 0;
		    this.pending = [];
		  };
	
		  Semaphore.prototype.incr = function() {
		    this.count++;
		  };
	
		  Semaphore.prototype.decr = function() {
		    this.count--;
		    this.flush();
		  };
	
		  Semaphore.prototype.whenReady = function(fn) {
		    this.pending.push(fn);
		    this.flush();
		  };
	
		  Semaphore.prototype.flush = function() {
		    if (this.count === 0) {
		        this.pending.forEach(function(fn) { fn(); });
		        this.pending = [];
		    }
		  };
	
	
		  var Fetcher = function(opts) {
		    this.sem = new Semaphore();
		    this.sync = opts && opts.sync;
		    this.mapForUri = opts && opts.cacheGlobally ? global_mapForUri : {};
		  };
	
		  Fetcher.prototype.ajax = function(uri, callback) {
		    var xhr = createXMLHTTPObject();
		    var that = this;
		    xhr.onreadystatechange = function() {
		      if (xhr.readyState == 4) {
		        callback.call(that, xhr, uri);
		      }
		    };
		    xhr.open("GET", uri, !this.sync);
		    xhr.send();
		  }
	
		  Fetcher.prototype.fetchScript = function(uri) {
		    if (!(uri in this.mapForUri)) {
		      this.sem.incr();
		      this.mapForUri[uri] = null;
		    } else {
		      return;
		    }
	
		    this.ajax(uri, this.onScriptLoad);
		  };
	
		  var absUrlRegex = new RegExp('^(?:[a-z]+:)?//', 'i');
	
		  Fetcher.prototype.onScriptLoad = function(xhr, uri) {
		    if (xhr.status === 200 || (uri.slice(0, 7) === "file://" && xhr.status === 0)) {
		      // find .map in file.
		      //
		      // attempt to find it at the very end of the file, but tolerate trailing
		      // whitespace inserted by some packers.
		      var match = xhr.responseText.match("//# [s]ourceMappingURL=(.*)[\\s]*$", "m");
		      if (match && match.length === 2) {
		        // get the map
		        var mapUri = match[1];
	
		        var embeddedSourceMap = mapUri.match("data:application/json;(charset=[^;]+;)?base64,(.*)");
	
		        if (embeddedSourceMap && embeddedSourceMap[2]) {
		          this.mapForUri[uri] = new source_map_consumer.SourceMapConsumer(atob(embeddedSourceMap[2]));
		          this.sem.decr();
		        } else {
		          if (!absUrlRegex.test(mapUri)) {
		            // relative url; according to sourcemaps spec is 'source origin'
		            var origin;
		            var lastSlash = uri.lastIndexOf('/');
		            if (lastSlash !== -1) {
		              origin = uri.slice(0, lastSlash + 1);
		              mapUri = origin + mapUri;
		              // note if lastSlash === -1, actual script uri has no slash
		              // somehow, so no way to use it as a prefix... we give up and try
		              // as absolute
		            }
		          }
	
		          this.ajax(mapUri, function(xhr) {
		            if (xhr.status === 200 || (mapUri.slice(0, 7) === "file://" && xhr.status === 0)) {
		              this.mapForUri[uri] = new source_map_consumer.SourceMapConsumer(xhr.responseText);
		            }
		            this.sem.decr();
		          });
		        }
		      } else {
		        // no map
		        this.sem.decr();
		      }
		    } else {
		      // HTTP error fetching uri of the script
		      this.sem.decr();
		    }
		  };
	
		  var processSourceMaps = function(lines, rows, mapForUri, traceFormat) {
		    var result = [];
		    var map;
		    var origName = traceFormat === "chrome" ? origNameChrome : origNameFirefox;
		    for (var i=0; i < lines.length; i++) {
		      var row = rows[i];
		      if (row) {
		        var uri = row[1];
		        var line = parseInt(row[2], 10);
		        var column = parseInt(row[3], 10);
		        map = mapForUri[uri];
	
		        if (map) {
		          // we think we have a map for that uri. call source-map library
		          var origPos = map.originalPositionFor(
		            { line: line, column: column });
		          result.push(formatOriginalPosition(origPos.source,
		            origPos.line, origPos.column, origPos.name || origName(lines[i])));
		        } else {
		          // we can't find a map for that url, but we parsed the row.
		          // reformat unchanged line for consistency with the sourcemapped
		          // lines.
		          result.push(formatOriginalPosition(uri, line, column, origName(lines[i])));
		        }
		      } else {
		        // we weren't able to parse the row, push back what we were given
		        result.push(lines[i]);
		      }
		    }
	
		    return result;
		  };
	
		  function origNameChrome(origLine) {
		    var match = / +at +([^ ]*).*/.exec(origLine);
		    return match && match[1];
		  }
	
		  function origNameFirefox(origLine) {
		    var match = /([^@]*)@.*/.exec(origLine);
		    return match && match[1];
		  }
	
		  var formatOriginalPosition = function(source, line, column, name) {
		    // mimic chrome's format
		    return "    at " + (name ? name : "(unknown)") +
		      " (" + source + ":" + line + ":" + column + ")";
		  };
	
		  // xmlhttprequest boilerplate
		  var XMLHttpFactories = [
			function () {return new XMLHttpRequest();},
			function () {return new ActiveXObject("Msxml2.XMLHTTP");},
			function () {return new ActiveXObject("Msxml3.XMLHTTP");},
			function () {return new ActiveXObject("Microsoft.XMLHTTP");}
		  ];
	
		  function createXMLHTTPObject() {
		      var xmlhttp = false;
		      for (var i=0;i<XMLHttpFactories.length;i++) {
		          try {
		              xmlhttp = XMLHttpFactories[i]();
		          }
		          catch (e) {
		              continue;
		          }
		          break;
		      }
		      return xmlhttp;
		  }
	
		  return {
		    mapStackTrace: mapStackTrace
		  }
		}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	
	
	/***/ }),
	/* 1 */
	/***/ (function(module, exports, __webpack_require__) {
	
		/* -*- Mode: js; js-indent-level: 2; -*- */
		/*
		 * Copyright 2011 Mozilla Foundation and contributors
		 * Licensed under the New BSD license. See LICENSE or:
		 * http://opensource.org/licenses/BSD-3-Clause
		 */
	
		var util = __webpack_require__(2);
		var binarySearch = __webpack_require__(3);
		var ArraySet = __webpack_require__(4).ArraySet;
		var base64VLQ = __webpack_require__(5);
		var quickSort = __webpack_require__(7).quickSort;
	
		function SourceMapConsumer(aSourceMap) {
		  var sourceMap = aSourceMap;
		  if (typeof aSourceMap === 'string') {
		    sourceMap = JSON.parse(aSourceMap.replace(/^\)\]\}'/, ''));
		  }
	
		  return sourceMap.sections != null
		    ? new IndexedSourceMapConsumer(sourceMap)
		    : new BasicSourceMapConsumer(sourceMap);
		}
	
		SourceMapConsumer.fromSourceMap = function(aSourceMap) {
		  return BasicSourceMapConsumer.fromSourceMap(aSourceMap);
		}
	
		/**
		 * The version of the source mapping spec that we are consuming.
		 */
		SourceMapConsumer.prototype._version = 3;
	
		// `__generatedMappings` and `__originalMappings` are arrays that hold the
		// parsed mapping coordinates from the source map's "mappings" attribute. They
		// are lazily instantiated, accessed via the `_generatedMappings` and
		// `_originalMappings` getters respectively, and we only parse the mappings
		// and create these arrays once queried for a source location. We jump through
		// these hoops because there can be many thousands of mappings, and parsing
		// them is expensive, so we only want to do it if we must.
		//
		// Each object in the arrays is of the form:
		//
		//     {
		//       generatedLine: The line number in the generated code,
		//       generatedColumn: The column number in the generated code,
		//       source: The path to the original source file that generated this
		//               chunk of code,
		//       originalLine: The line number in the original source that
		//                     corresponds to this chunk of generated code,
		//       originalColumn: The column number in the original source that
		//                       corresponds to this chunk of generated code,
		//       name: The name of the original symbol which generated this chunk of
		//             code.
		//     }
		//
		// All properties except for `generatedLine` and `generatedColumn` can be
		// `null`.
		//
		// `_generatedMappings` is ordered by the generated positions.
		//
		// `_originalMappings` is ordered by the original positions.
	
		SourceMapConsumer.prototype.__generatedMappings = null;
		Object.defineProperty(SourceMapConsumer.prototype, '_generatedMappings', {
		  get: function () {
		    if (!this.__generatedMappings) {
		      this._parseMappings(this._mappings, this.sourceRoot);
		    }
	
		    return this.__generatedMappings;
		  }
		});
	
		SourceMapConsumer.prototype.__originalMappings = null;
		Object.defineProperty(SourceMapConsumer.prototype, '_originalMappings', {
		  get: function () {
		    if (!this.__originalMappings) {
		      this._parseMappings(this._mappings, this.sourceRoot);
		    }
	
		    return this.__originalMappings;
		  }
		});
	
		SourceMapConsumer.prototype._charIsMappingSeparator =
		  function SourceMapConsumer_charIsMappingSeparator(aStr, index) {
		    var c = aStr.charAt(index);
		    return c === ";" || c === ",";
		  };
	
		/**
		 * Parse the mappings in a string in to a data structure which we can easily
		 * query (the ordered arrays in the `this.__generatedMappings` and
		 * `this.__originalMappings` properties).
		 */
		SourceMapConsumer.prototype._parseMappings =
		  function SourceMapConsumer_parseMappings(aStr, aSourceRoot) {
		    throw new Error("Subclasses must implement _parseMappings");
		  };
	
		SourceMapConsumer.GENERATED_ORDER = 1;
		SourceMapConsumer.ORIGINAL_ORDER = 2;
	
		SourceMapConsumer.GREATEST_LOWER_BOUND = 1;
		SourceMapConsumer.LEAST_UPPER_BOUND = 2;
	
		/**
		 * Iterate over each mapping between an original source/line/column and a
		 * generated line/column in this source map.
		 *
		 * @param Function aCallback
		 *        The function that is called with each mapping.
		 * @param Object aContext
		 *        Optional. If specified, this object will be the value of `this` every
		 *        time that `aCallback` is called.
		 * @param aOrder
		 *        Either `SourceMapConsumer.GENERATED_ORDER` or
		 *        `SourceMapConsumer.ORIGINAL_ORDER`. Specifies whether you want to
		 *        iterate over the mappings sorted by the generated file's line/column
		 *        order or the original's source/line/column order, respectively. Defaults to
		 *        `SourceMapConsumer.GENERATED_ORDER`.
		 */
		SourceMapConsumer.prototype.eachMapping =
		  function SourceMapConsumer_eachMapping(aCallback, aContext, aOrder) {
		    var context = aContext || null;
		    var order = aOrder || SourceMapConsumer.GENERATED_ORDER;
	
		    var mappings;
		    switch (order) {
		    case SourceMapConsumer.GENERATED_ORDER:
		      mappings = this._generatedMappings;
		      break;
		    case SourceMapConsumer.ORIGINAL_ORDER:
		      mappings = this._originalMappings;
		      break;
		    default:
		      throw new Error("Unknown order of iteration.");
		    }
	
		    var sourceRoot = this.sourceRoot;
		    mappings.map(function (mapping) {
		      var source = mapping.source === null ? null : this._sources.at(mapping.source);
		      if (source != null && sourceRoot != null) {
		        source = util.join(sourceRoot, source);
		      }
		      return {
		        source: source,
		        generatedLine: mapping.generatedLine,
		        generatedColumn: mapping.generatedColumn,
		        originalLine: mapping.originalLine,
		        originalColumn: mapping.originalColumn,
		        name: mapping.name === null ? null : this._names.at(mapping.name)
		      };
		    }, this).forEach(aCallback, context);
		  };
	
		/**
		 * Returns all generated line and column information for the original source,
		 * line, and column provided. If no column is provided, returns all mappings
		 * corresponding to a either the line we are searching for or the next
		 * closest line that has any mappings. Otherwise, returns all mappings
		 * corresponding to the given line and either the column we are searching for
		 * or the next closest column that has any offsets.
		 *
		 * The only argument is an object with the following properties:
		 *
		 *   - source: The filename of the original source.
		 *   - line: The line number in the original source.
		 *   - column: Optional. the column number in the original source.
		 *
		 * and an array of objects is returned, each with the following properties:
		 *
		 *   - line: The line number in the generated source, or null.
		 *   - column: The column number in the generated source, or null.
		 */
		SourceMapConsumer.prototype.allGeneratedPositionsFor =
		  function SourceMapConsumer_allGeneratedPositionsFor(aArgs) {
		    var line = util.getArg(aArgs, 'line');
	
		    // When there is no exact match, BasicSourceMapConsumer.prototype._findMapping
		    // returns the index of the closest mapping less than the needle. By
		    // setting needle.originalColumn to 0, we thus find the last mapping for
		    // the given line, provided such a mapping exists.
		    var needle = {
		      source: util.getArg(aArgs, 'source'),
		      originalLine: line,
		      originalColumn: util.getArg(aArgs, 'column', 0)
		    };
	
		    if (this.sourceRoot != null) {
		      needle.source = util.relative(this.sourceRoot, needle.source);
		    }
		    if (!this._sources.has(needle.source)) {
		      return [];
		    }
		    needle.source = this._sources.indexOf(needle.source);
	
		    var mappings = [];
	
		    var index = this._findMapping(needle,
		                                  this._originalMappings,
		                                  "originalLine",
		                                  "originalColumn",
		                                  util.compareByOriginalPositions,
		                                  binarySearch.LEAST_UPPER_BOUND);
		    if (index >= 0) {
		      var mapping = this._originalMappings[index];
	
		      if (aArgs.column === undefined) {
		        var originalLine = mapping.originalLine;
	
		        // Iterate until either we run out of mappings, or we run into
		        // a mapping for a different line than the one we found. Since
		        // mappings are sorted, this is guaranteed to find all mappings for
		        // the line we found.
		        while (mapping && mapping.originalLine === originalLine) {
		          mappings.push({
		            line: util.getArg(mapping, 'generatedLine', null),
		            column: util.getArg(mapping, 'generatedColumn', null),
		            lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)
		          });
	
		          mapping = this._originalMappings[++index];
		        }
		      } else {
		        var originalColumn = mapping.originalColumn;
	
		        // Iterate until either we run out of mappings, or we run into
		        // a mapping for a different line than the one we were searching for.
		        // Since mappings are sorted, this is guaranteed to find all mappings for
		        // the line we are searching for.
		        while (mapping &&
		               mapping.originalLine === line &&
		               mapping.originalColumn == originalColumn) {
		          mappings.push({
		            line: util.getArg(mapping, 'generatedLine', null),
		            column: util.getArg(mapping, 'generatedColumn', null),
		            lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)
		          });
	
		          mapping = this._originalMappings[++index];
		        }
		      }
		    }
	
		    return mappings;
		  };
	
		exports.SourceMapConsumer = SourceMapConsumer;
	
		/**
		 * A BasicSourceMapConsumer instance represents a parsed source map which we can
		 * query for information about the original file positions by giving it a file
		 * position in the generated source.
		 *
		 * The only parameter is the raw source map (either as a JSON string, or
		 * already parsed to an object). According to the spec, source maps have the
		 * following attributes:
		 *
		 *   - version: Which version of the source map spec this map is following.
		 *   - sources: An array of URLs to the original source files.
		 *   - names: An array of identifiers which can be referrenced by individual mappings.
		 *   - sourceRoot: Optional. The URL root from which all sources are relative.
		 *   - sourcesContent: Optional. An array of contents of the original source files.
		 *   - mappings: A string of base64 VLQs which contain the actual mappings.
		 *   - file: Optional. The generated file this source map is associated with.
		 *
		 * Here is an example source map, taken from the source map spec[0]:
		 *
		 *     {
		 *       version : 3,
		 *       file: "out.js",
		 *       sourceRoot : "",
		 *       sources: ["foo.js", "bar.js"],
		 *       names: ["src", "maps", "are", "fun"],
		 *       mappings: "AA,AB;;ABCDE;"
		 *     }
		 *
		 * [0]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit?pli=1#
		 */
		function BasicSourceMapConsumer(aSourceMap) {
		  var sourceMap = aSourceMap;
		  if (typeof aSourceMap === 'string') {
		    sourceMap = JSON.parse(aSourceMap.replace(/^\)\]\}'/, ''));
		  }
	
		  var version = util.getArg(sourceMap, 'version');
		  var sources = util.getArg(sourceMap, 'sources');
		  // Sass 3.3 leaves out the 'names' array, so we deviate from the spec (which
		  // requires the array) to play nice here.
		  var names = util.getArg(sourceMap, 'names', []);
		  var sourceRoot = util.getArg(sourceMap, 'sourceRoot', null);
		  var sourcesContent = util.getArg(sourceMap, 'sourcesContent', null);
		  var mappings = util.getArg(sourceMap, 'mappings');
		  var file = util.getArg(sourceMap, 'file', null);
	
		  // Once again, Sass deviates from the spec and supplies the version as a
		  // string rather than a number, so we use loose equality checking here.
		  if (version != this._version) {
		    throw new Error('Unsupported version: ' + version);
		  }
	
		  sources = sources
		    .map(String)
		    // Some source maps produce relative source paths like "./foo.js" instead of
		    // "foo.js".  Normalize these first so that future comparisons will succeed.
		    // See bugzil.la/1090768.
		    .map(util.normalize)
		    // Always ensure that absolute sources are internally stored relative to
		    // the source root, if the source root is absolute. Not doing this would
		    // be particularly problematic when the source root is a prefix of the
		    // source (valid, but why??). See github issue #199 and bugzil.la/1188982.
		    .map(function (source) {
		      return sourceRoot && util.isAbsolute(sourceRoot) && util.isAbsolute(source)
		        ? util.relative(sourceRoot, source)
		        : source;
		    });
	
		  // Pass `true` below to allow duplicate names and sources. While source maps
		  // are intended to be compressed and deduplicated, the TypeScript compiler
		  // sometimes generates source maps with duplicates in them. See Github issue
		  // #72 and bugzil.la/889492.
		  this._names = ArraySet.fromArray(names.map(String), true);
		  this._sources = ArraySet.fromArray(sources, true);
	
		  this.sourceRoot = sourceRoot;
		  this.sourcesContent = sourcesContent;
		  this._mappings = mappings;
		  this.file = file;
		}
	
		BasicSourceMapConsumer.prototype = Object.create(SourceMapConsumer.prototype);
		BasicSourceMapConsumer.prototype.consumer = SourceMapConsumer;
	
		/**
		 * Create a BasicSourceMapConsumer from a SourceMapGenerator.
		 *
		 * @param SourceMapGenerator aSourceMap
		 *        The source map that will be consumed.
		 * @returns BasicSourceMapConsumer
		 */
		BasicSourceMapConsumer.fromSourceMap =
		  function SourceMapConsumer_fromSourceMap(aSourceMap) {
		    var smc = Object.create(BasicSourceMapConsumer.prototype);
	
		    var names = smc._names = ArraySet.fromArray(aSourceMap._names.toArray(), true);
		    var sources = smc._sources = ArraySet.fromArray(aSourceMap._sources.toArray(), true);
		    smc.sourceRoot = aSourceMap._sourceRoot;
		    smc.sourcesContent = aSourceMap._generateSourcesContent(smc._sources.toArray(),
		                                                            smc.sourceRoot);
		    smc.file = aSourceMap._file;
	
		    // Because we are modifying the entries (by converting string sources and
		    // names to indices into the sources and names ArraySets), we have to make
		    // a copy of the entry or else bad things happen. Shared mutable state
		    // strikes again! See github issue #191.
	
		    var generatedMappings = aSourceMap._mappings.toArray().slice();
		    var destGeneratedMappings = smc.__generatedMappings = [];
		    var destOriginalMappings = smc.__originalMappings = [];
	
		    for (var i = 0, length = generatedMappings.length; i < length; i++) {
		      var srcMapping = generatedMappings[i];
		      var destMapping = new Mapping;
		      destMapping.generatedLine = srcMapping.generatedLine;
		      destMapping.generatedColumn = srcMapping.generatedColumn;
	
		      if (srcMapping.source) {
		        destMapping.source = sources.indexOf(srcMapping.source);
		        destMapping.originalLine = srcMapping.originalLine;
		        destMapping.originalColumn = srcMapping.originalColumn;
	
		        if (srcMapping.name) {
		          destMapping.name = names.indexOf(srcMapping.name);
		        }
	
		        destOriginalMappings.push(destMapping);
		      }
	
		      destGeneratedMappings.push(destMapping);
		    }
	
		    quickSort(smc.__originalMappings, util.compareByOriginalPositions);
	
		    return smc;
		  };
	
		/**
		 * The version of the source mapping spec that we are consuming.
		 */
		BasicSourceMapConsumer.prototype._version = 3;
	
		/**
		 * The list of original sources.
		 */
		Object.defineProperty(BasicSourceMapConsumer.prototype, 'sources', {
		  get: function () {
		    return this._sources.toArray().map(function (s) {
		      return this.sourceRoot != null ? util.join(this.sourceRoot, s) : s;
		    }, this);
		  }
		});
	
		/**
		 * Provide the JIT with a nice shape / hidden class.
		 */
		function Mapping() {
		  this.generatedLine = 0;
		  this.generatedColumn = 0;
		  this.source = null;
		  this.originalLine = null;
		  this.originalColumn = null;
		  this.name = null;
		}
	
		/**
		 * Parse the mappings in a string in to a data structure which we can easily
		 * query (the ordered arrays in the `this.__generatedMappings` and
		 * `this.__originalMappings` properties).
		 */
		BasicSourceMapConsumer.prototype._parseMappings =
		  function SourceMapConsumer_parseMappings(aStr, aSourceRoot) {
		    var generatedLine = 1;
		    var previousGeneratedColumn = 0;
		    var previousOriginalLine = 0;
		    var previousOriginalColumn = 0;
		    var previousSource = 0;
		    var previousName = 0;
		    var length = aStr.length;
		    var index = 0;
		    var cachedSegments = {};
		    var temp = {};
		    var originalMappings = [];
		    var generatedMappings = [];
		    var mapping, str, segment, end, value;
	
		    while (index < length) {
		      if (aStr.charAt(index) === ';') {
		        generatedLine++;
		        index++;
		        previousGeneratedColumn = 0;
		      }
		      else if (aStr.charAt(index) === ',') {
		        index++;
		      }
		      else {
		        mapping = new Mapping();
		        mapping.generatedLine = generatedLine;
	
		        // Because each offset is encoded relative to the previous one,
		        // many segments often have the same encoding. We can exploit this
		        // fact by caching the parsed variable length fields of each segment,
		        // allowing us to avoid a second parse if we encounter the same
		        // segment again.
		        for (end = index; end < length; end++) {
		          if (this._charIsMappingSeparator(aStr, end)) {
		            break;
		          }
		        }
		        str = aStr.slice(index, end);
	
		        segment = cachedSegments[str];
		        if (segment) {
		          index += str.length;
		        } else {
		          segment = [];
		          while (index < end) {
		            base64VLQ.decode(aStr, index, temp);
		            value = temp.value;
		            index = temp.rest;
		            segment.push(value);
		          }
	
		          if (segment.length === 2) {
		            throw new Error('Found a source, but no line and column');
		          }
	
		          if (segment.length === 3) {
		            throw new Error('Found a source and line, but no column');
		          }
	
		          cachedSegments[str] = segment;
		        }
	
		        // Generated column.
		        mapping.generatedColumn = previousGeneratedColumn + segment[0];
		        previousGeneratedColumn = mapping.generatedColumn;
	
		        if (segment.length > 1) {
		          // Original source.
		          mapping.source = previousSource + segment[1];
		          previousSource += segment[1];
	
		          // Original line.
		          mapping.originalLine = previousOriginalLine + segment[2];
		          previousOriginalLine = mapping.originalLine;
		          // Lines are stored 0-based
		          mapping.originalLine += 1;
	
		          // Original column.
		          mapping.originalColumn = previousOriginalColumn + segment[3];
		          previousOriginalColumn = mapping.originalColumn;
	
		          if (segment.length > 4) {
		            // Original name.
		            mapping.name = previousName + segment[4];
		            previousName += segment[4];
		          }
		        }
	
		        generatedMappings.push(mapping);
		        if (typeof mapping.originalLine === 'number') {
		          originalMappings.push(mapping);
		        }
		      }
		    }
	
		    quickSort(generatedMappings, util.compareByGeneratedPositionsDeflated);
		    this.__generatedMappings = generatedMappings;
	
		    quickSort(originalMappings, util.compareByOriginalPositions);
		    this.__originalMappings = originalMappings;
		  };
	
		/**
		 * Find the mapping that best matches the hypothetical "needle" mapping that
		 * we are searching for in the given "haystack" of mappings.
		 */
		BasicSourceMapConsumer.prototype._findMapping =
		  function SourceMapConsumer_findMapping(aNeedle, aMappings, aLineName,
		                                         aColumnName, aComparator, aBias) {
		    // To return the position we are searching for, we must first find the
		    // mapping for the given position and then return the opposite position it
		    // points to. Because the mappings are sorted, we can use binary search to
		    // find the best mapping.
	
		    if (aNeedle[aLineName] <= 0) {
		      throw new TypeError('Line must be greater than or equal to 1, got '
		                          + aNeedle[aLineName]);
		    }
		    if (aNeedle[aColumnName] < 0) {
		      throw new TypeError('Column must be greater than or equal to 0, got '
		                          + aNeedle[aColumnName]);
		    }
	
		    return binarySearch.search(aNeedle, aMappings, aComparator, aBias);
		  };
	
		/**
		 * Compute the last column for each generated mapping. The last column is
		 * inclusive.
		 */
		BasicSourceMapConsumer.prototype.computeColumnSpans =
		  function SourceMapConsumer_computeColumnSpans() {
		    for (var index = 0; index < this._generatedMappings.length; ++index) {
		      var mapping = this._generatedMappings[index];
	
		      // Mappings do not contain a field for the last generated columnt. We
		      // can come up with an optimistic estimate, however, by assuming that
		      // mappings are contiguous (i.e. given two consecutive mappings, the
		      // first mapping ends where the second one starts).
		      if (index + 1 < this._generatedMappings.length) {
		        var nextMapping = this._generatedMappings[index + 1];
	
		        if (mapping.generatedLine === nextMapping.generatedLine) {
		          mapping.lastGeneratedColumn = nextMapping.generatedColumn - 1;
		          continue;
		        }
		      }
	
		      // The last mapping for each line spans the entire line.
		      mapping.lastGeneratedColumn = Infinity;
		    }
		  };
	
		/**
		 * Returns the original source, line, and column information for the generated
		 * source's line and column positions provided. The only argument is an object
		 * with the following properties:
		 *
		 *   - line: The line number in the generated source.
		 *   - column: The column number in the generated source.
		 *   - bias: Either 'SourceMapConsumer.GREATEST_LOWER_BOUND' or
		 *     'SourceMapConsumer.LEAST_UPPER_BOUND'. Specifies whether to return the
		 *     closest element that is smaller than or greater than the one we are
		 *     searching for, respectively, if the exact element cannot be found.
		 *     Defaults to 'SourceMapConsumer.GREATEST_LOWER_BOUND'.
		 *
		 * and an object is returned with the following properties:
		 *
		 *   - source: The original source file, or null.
		 *   - line: The line number in the original source, or null.
		 *   - column: The column number in the original source, or null.
		 *   - name: The original identifier, or null.
		 */
		BasicSourceMapConsumer.prototype.originalPositionFor =
		  function SourceMapConsumer_originalPositionFor(aArgs) {
		    var needle = {
		      generatedLine: util.getArg(aArgs, 'line'),
		      generatedColumn: util.getArg(aArgs, 'column')
		    };
	
		    var index = this._findMapping(
		      needle,
		      this._generatedMappings,
		      "generatedLine",
		      "generatedColumn",
		      util.compareByGeneratedPositionsDeflated,
		      util.getArg(aArgs, 'bias', SourceMapConsumer.GREATEST_LOWER_BOUND)
		    );
	
		    if (index >= 0) {
		      var mapping = this._generatedMappings[index];
	
		      if (mapping.generatedLine === needle.generatedLine) {
		        var source = util.getArg(mapping, 'source', null);
		        if (source !== null) {
		          source = this._sources.at(source);
		          if (this.sourceRoot != null) {
		            source = util.join(this.sourceRoot, source);
		          }
		        }
		        var name = util.getArg(mapping, 'name', null);
		        if (name !== null) {
		          name = this._names.at(name);
		        }
		        return {
		          source: source,
		          line: util.getArg(mapping, 'originalLine', null),
		          column: util.getArg(mapping, 'originalColumn', null),
		          name: name
		        };
		      }
		    }
	
		    return {
		      source: null,
		      line: null,
		      column: null,
		      name: null
		    };
		  };
	
		/**
		 * Return true if we have the source content for every source in the source
		 * map, false otherwise.
		 */
		BasicSourceMapConsumer.prototype.hasContentsOfAllSources =
		  function BasicSourceMapConsumer_hasContentsOfAllSources() {
		    if (!this.sourcesContent) {
		      return false;
		    }
		    return this.sourcesContent.length >= this._sources.size() &&
		      !this.sourcesContent.some(function (sc) { return sc == null; });
		  };
	
		/**
		 * Returns the original source content. The only argument is the url of the
		 * original source file. Returns null if no original source content is
		 * available.
		 */
		BasicSourceMapConsumer.prototype.sourceContentFor =
		  function SourceMapConsumer_sourceContentFor(aSource, nullOnMissing) {
		    if (!this.sourcesContent) {
		      return null;
		    }
	
		    if (this.sourceRoot != null) {
		      aSource = util.relative(this.sourceRoot, aSource);
		    }
	
		    if (this._sources.has(aSource)) {
		      return this.sourcesContent[this._sources.indexOf(aSource)];
		    }
	
		    var url;
		    if (this.sourceRoot != null
		        && (url = util.urlParse(this.sourceRoot))) {
		      // XXX: file:// URIs and absolute paths lead to unexpected behavior for
		      // many users. We can help them out when they expect file:// URIs to
		      // behave like it would if they were running a local HTTP server. See
		      // https://bugzilla.mozilla.org/show_bug.cgi?id=885597.
		      var fileUriAbsPath = aSource.replace(/^file:\/\//, "");
		      if (url.scheme == "file"
		          && this._sources.has(fileUriAbsPath)) {
		        return this.sourcesContent[this._sources.indexOf(fileUriAbsPath)]
		      }
	
		      if ((!url.path || url.path == "/")
		          && this._sources.has("/" + aSource)) {
		        return this.sourcesContent[this._sources.indexOf("/" + aSource)];
		      }
		    }
	
		    // This function is used recursively from
		    // IndexedSourceMapConsumer.prototype.sourceContentFor. In that case, we
		    // don't want to throw if we can't find the source - we just want to
		    // return null, so we provide a flag to exit gracefully.
		    if (nullOnMissing) {
		      return null;
		    }
		    else {
		      throw new Error('"' + aSource + '" is not in the SourceMap.');
		    }
		  };
	
		/**
		 * Returns the generated line and column information for the original source,
		 * line, and column positions provided. The only argument is an object with
		 * the following properties:
		 *
		 *   - source: The filename of the original source.
		 *   - line: The line number in the original source.
		 *   - column: The column number in the original source.
		 *   - bias: Either 'SourceMapConsumer.GREATEST_LOWER_BOUND' or
		 *     'SourceMapConsumer.LEAST_UPPER_BOUND'. Specifies whether to return the
		 *     closest element that is smaller than or greater than the one we are
		 *     searching for, respectively, if the exact element cannot be found.
		 *     Defaults to 'SourceMapConsumer.GREATEST_LOWER_BOUND'.
		 *
		 * and an object is returned with the following properties:
		 *
		 *   - line: The line number in the generated source, or null.
		 *   - column: The column number in the generated source, or null.
		 */
		BasicSourceMapConsumer.prototype.generatedPositionFor =
		  function SourceMapConsumer_generatedPositionFor(aArgs) {
		    var source = util.getArg(aArgs, 'source');
		    if (this.sourceRoot != null) {
		      source = util.relative(this.sourceRoot, source);
		    }
		    if (!this._sources.has(source)) {
		      return {
		        line: null,
		        column: null,
		        lastColumn: null
		      };
		    }
		    source = this._sources.indexOf(source);
	
		    var needle = {
		      source: source,
		      originalLine: util.getArg(aArgs, 'line'),
		      originalColumn: util.getArg(aArgs, 'column')
		    };
	
		    var index = this._findMapping(
		      needle,
		      this._originalMappings,
		      "originalLine",
		      "originalColumn",
		      util.compareByOriginalPositions,
		      util.getArg(aArgs, 'bias', SourceMapConsumer.GREATEST_LOWER_BOUND)
		    );
	
		    if (index >= 0) {
		      var mapping = this._originalMappings[index];
	
		      if (mapping.source === needle.source) {
		        return {
		          line: util.getArg(mapping, 'generatedLine', null),
		          column: util.getArg(mapping, 'generatedColumn', null),
		          lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)
		        };
		      }
		    }
	
		    return {
		      line: null,
		      column: null,
		      lastColumn: null
		    };
		  };
	
		exports.BasicSourceMapConsumer = BasicSourceMapConsumer;
	
		/**
		 * An IndexedSourceMapConsumer instance represents a parsed source map which
		 * we can query for information. It differs from BasicSourceMapConsumer in
		 * that it takes "indexed" source maps (i.e. ones with a "sections" field) as
		 * input.
		 *
		 * The only parameter is a raw source map (either as a JSON string, or already
		 * parsed to an object). According to the spec for indexed source maps, they
		 * have the following attributes:
		 *
		 *   - version: Which version of the source map spec this map is following.
		 *   - file: Optional. The generated file this source map is associated with.
		 *   - sections: A list of section definitions.
		 *
		 * Each value under the "sections" field has two fields:
		 *   - offset: The offset into the original specified at which this section
		 *       begins to apply, defined as an object with a "line" and "column"
		 *       field.
		 *   - map: A source map definition. This source map could also be indexed,
		 *       but doesn't have to be.
		 *
		 * Instead of the "map" field, it's also possible to have a "url" field
		 * specifying a URL to retrieve a source map from, but that's currently
		 * unsupported.
		 *
		 * Here's an example source map, taken from the source map spec[0], but
		 * modified to omit a section which uses the "url" field.
		 *
		 *  {
		 *    version : 3,
		 *    file: "app.js",
		 *    sections: [{
		 *      offset: {line:100, column:10},
		 *      map: {
		 *        version : 3,
		 *        file: "section.js",
		 *        sources: ["foo.js", "bar.js"],
		 *        names: ["src", "maps", "are", "fun"],
		 *        mappings: "AAAA,E;;ABCDE;"
		 *      }
		 *    }],
		 *  }
		 *
		 * [0]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit#heading=h.535es3xeprgt
		 */
		function IndexedSourceMapConsumer(aSourceMap) {
		  var sourceMap = aSourceMap;
		  if (typeof aSourceMap === 'string') {
		    sourceMap = JSON.parse(aSourceMap.replace(/^\)\]\}'/, ''));
		  }
	
		  var version = util.getArg(sourceMap, 'version');
		  var sections = util.getArg(sourceMap, 'sections');
	
		  if (version != this._version) {
		    throw new Error('Unsupported version: ' + version);
		  }
	
		  this._sources = new ArraySet();
		  this._names = new ArraySet();
	
		  var lastOffset = {
		    line: -1,
		    column: 0
		  };
		  this._sections = sections.map(function (s) {
		    if (s.url) {
		      // The url field will require support for asynchronicity.
		      // See https://github.com/mozilla/source-map/issues/16
		      throw new Error('Support for url field in sections not implemented.');
		    }
		    var offset = util.getArg(s, 'offset');
		    var offsetLine = util.getArg(offset, 'line');
		    var offsetColumn = util.getArg(offset, 'column');
	
		    if (offsetLine < lastOffset.line ||
		        (offsetLine === lastOffset.line && offsetColumn < lastOffset.column)) {
		      throw new Error('Section offsets must be ordered and non-overlapping.');
		    }
		    lastOffset = offset;
	
		    return {
		      generatedOffset: {
		        // The offset fields are 0-based, but we use 1-based indices when
		        // encoding/decoding from VLQ.
		        generatedLine: offsetLine + 1,
		        generatedColumn: offsetColumn + 1
		      },
		      consumer: new SourceMapConsumer(util.getArg(s, 'map'))
		    }
		  });
		}
	
		IndexedSourceMapConsumer.prototype = Object.create(SourceMapConsumer.prototype);
		IndexedSourceMapConsumer.prototype.constructor = SourceMapConsumer;
	
		/**
		 * The version of the source mapping spec that we are consuming.
		 */
		IndexedSourceMapConsumer.prototype._version = 3;
	
		/**
		 * The list of original sources.
		 */
		Object.defineProperty(IndexedSourceMapConsumer.prototype, 'sources', {
		  get: function () {
		    var sources = [];
		    for (var i = 0; i < this._sections.length; i++) {
		      for (var j = 0; j < this._sections[i].consumer.sources.length; j++) {
		        sources.push(this._sections[i].consumer.sources[j]);
		      }
		    }
		    return sources;
		  }
		});
	
		/**
		 * Returns the original source, line, and column information for the generated
		 * source's line and column positions provided. The only argument is an object
		 * with the following properties:
		 *
		 *   - line: The line number in the generated source.
		 *   - column: The column number in the generated source.
		 *
		 * and an object is returned with the following properties:
		 *
		 *   - source: The original source file, or null.
		 *   - line: The line number in the original source, or null.
		 *   - column: The column number in the original source, or null.
		 *   - name: The original identifier, or null.
		 */
		IndexedSourceMapConsumer.prototype.originalPositionFor =
		  function IndexedSourceMapConsumer_originalPositionFor(aArgs) {
		    var needle = {
		      generatedLine: util.getArg(aArgs, 'line'),
		      generatedColumn: util.getArg(aArgs, 'column')
		    };
	
		    // Find the section containing the generated position we're trying to map
		    // to an original position.
		    var sectionIndex = binarySearch.search(needle, this._sections,
		      function(needle, section) {
		        var cmp = needle.generatedLine - section.generatedOffset.generatedLine;
		        if (cmp) {
		          return cmp;
		        }
	
		        return (needle.generatedColumn -
		                section.generatedOffset.generatedColumn);
		      });
		    var section = this._sections[sectionIndex];
	
		    if (!section) {
		      return {
		        source: null,
		        line: null,
		        column: null,
		        name: null
		      };
		    }
	
		    return section.consumer.originalPositionFor({
		      line: needle.generatedLine -
		        (section.generatedOffset.generatedLine - 1),
		      column: needle.generatedColumn -
		        (section.generatedOffset.generatedLine === needle.generatedLine
		         ? section.generatedOffset.generatedColumn - 1
		         : 0),
		      bias: aArgs.bias
		    });
		  };
	
		/**
		 * Return true if we have the source content for every source in the source
		 * map, false otherwise.
		 */
		IndexedSourceMapConsumer.prototype.hasContentsOfAllSources =
		  function IndexedSourceMapConsumer_hasContentsOfAllSources() {
		    return this._sections.every(function (s) {
		      return s.consumer.hasContentsOfAllSources();
		    });
		  };
	
		/**
		 * Returns the original source content. The only argument is the url of the
		 * original source file. Returns null if no original source content is
		 * available.
		 */
		IndexedSourceMapConsumer.prototype.sourceContentFor =
		  function IndexedSourceMapConsumer_sourceContentFor(aSource, nullOnMissing) {
		    for (var i = 0; i < this._sections.length; i++) {
		      var section = this._sections[i];
	
		      var content = section.consumer.sourceContentFor(aSource, true);
		      if (content) {
		        return content;
		      }
		    }
		    if (nullOnMissing) {
		      return null;
		    }
		    else {
		      throw new Error('"' + aSource + '" is not in the SourceMap.');
		    }
		  };
	
		/**
		 * Returns the generated line and column information for the original source,
		 * line, and column positions provided. The only argument is an object with
		 * the following properties:
		 *
		 *   - source: The filename of the original source.
		 *   - line: The line number in the original source.
		 *   - column: The column number in the original source.
		 *
		 * and an object is returned with the following properties:
		 *
		 *   - line: The line number in the generated source, or null.
		 *   - column: The column number in the generated source, or null.
		 */
		IndexedSourceMapConsumer.prototype.generatedPositionFor =
		  function IndexedSourceMapConsumer_generatedPositionFor(aArgs) {
		    for (var i = 0; i < this._sections.length; i++) {
		      var section = this._sections[i];
	
		      // Only consider this section if the requested source is in the list of
		      // sources of the consumer.
		      if (section.consumer.sources.indexOf(util.getArg(aArgs, 'source')) === -1) {
		        continue;
		      }
		      var generatedPosition = section.consumer.generatedPositionFor(aArgs);
		      if (generatedPosition) {
		        var ret = {
		          line: generatedPosition.line +
		            (section.generatedOffset.generatedLine - 1),
		          column: generatedPosition.column +
		            (section.generatedOffset.generatedLine === generatedPosition.line
		             ? section.generatedOffset.generatedColumn - 1
		             : 0)
		        };
		        return ret;
		      }
		    }
	
		    return {
		      line: null,
		      column: null
		    };
		  };
	
		/**
		 * Parse the mappings in a string in to a data structure which we can easily
		 * query (the ordered arrays in the `this.__generatedMappings` and
		 * `this.__originalMappings` properties).
		 */
		IndexedSourceMapConsumer.prototype._parseMappings =
		  function IndexedSourceMapConsumer_parseMappings(aStr, aSourceRoot) {
		    this.__generatedMappings = [];
		    this.__originalMappings = [];
		    for (var i = 0; i < this._sections.length; i++) {
		      var section = this._sections[i];
		      var sectionMappings = section.consumer._generatedMappings;
		      for (var j = 0; j < sectionMappings.length; j++) {
		        var mapping = sectionMappings[j];
	
		        var source = section.consumer._sources.at(mapping.source);
		        if (section.consumer.sourceRoot !== null) {
		          source = util.join(section.consumer.sourceRoot, source);
		        }
		        this._sources.add(source);
		        source = this._sources.indexOf(source);
	
		        var name = section.consumer._names.at(mapping.name);
		        this._names.add(name);
		        name = this._names.indexOf(name);
	
		        // The mappings coming from the consumer for the section have
		        // generated positions relative to the start of the section, so we
		        // need to offset them to be relative to the start of the concatenated
		        // generated file.
		        var adjustedMapping = {
		          source: source,
		          generatedLine: mapping.generatedLine +
		            (section.generatedOffset.generatedLine - 1),
		          generatedColumn: mapping.generatedColumn +
		            (section.generatedOffset.generatedLine === mapping.generatedLine
		            ? section.generatedOffset.generatedColumn - 1
		            : 0),
		          originalLine: mapping.originalLine,
		          originalColumn: mapping.originalColumn,
		          name: name
		        };
	
		        this.__generatedMappings.push(adjustedMapping);
		        if (typeof adjustedMapping.originalLine === 'number') {
		          this.__originalMappings.push(adjustedMapping);
		        }
		      }
		    }
	
		    quickSort(this.__generatedMappings, util.compareByGeneratedPositionsDeflated);
		    quickSort(this.__originalMappings, util.compareByOriginalPositions);
		  };
	
		exports.IndexedSourceMapConsumer = IndexedSourceMapConsumer;
	
	
	/***/ }),
	/* 2 */
	/***/ (function(module, exports) {
	
		/* -*- Mode: js; js-indent-level: 2; -*- */
		/*
		 * Copyright 2011 Mozilla Foundation and contributors
		 * Licensed under the New BSD license. See LICENSE or:
		 * http://opensource.org/licenses/BSD-3-Clause
		 */
	
		/**
		 * This is a helper function for getting values from parameter/options
		 * objects.
		 *
		 * @param args The object we are extracting values from
		 * @param name The name of the property we are getting.
		 * @param defaultValue An optional value to return if the property is missing
		 * from the object. If this is not specified and the property is missing, an
		 * error will be thrown.
		 */
		function getArg(aArgs, aName, aDefaultValue) {
		  if (aName in aArgs) {
		    return aArgs[aName];
		  } else if (arguments.length === 3) {
		    return aDefaultValue;
		  } else {
		    throw new Error('"' + aName + '" is a required argument.');
		  }
		}
		exports.getArg = getArg;
	
		var urlRegexp = /^(?:([\w+\-.]+):)?\/\/(?:(\w+:\w+)@)?([\w.]*)(?::(\d+))?(\S*)$/;
		var dataUrlRegexp = /^data:.+\,.+$/;
	
		function urlParse(aUrl) {
		  var match = aUrl.match(urlRegexp);
		  if (!match) {
		    return null;
		  }
		  return {
		    scheme: match[1],
		    auth: match[2],
		    host: match[3],
		    port: match[4],
		    path: match[5]
		  };
		}
		exports.urlParse = urlParse;
	
		function urlGenerate(aParsedUrl) {
		  var url = '';
		  if (aParsedUrl.scheme) {
		    url += aParsedUrl.scheme + ':';
		  }
		  url += '//';
		  if (aParsedUrl.auth) {
		    url += aParsedUrl.auth + '@';
		  }
		  if (aParsedUrl.host) {
		    url += aParsedUrl.host;
		  }
		  if (aParsedUrl.port) {
		    url += ":" + aParsedUrl.port
		  }
		  if (aParsedUrl.path) {
		    url += aParsedUrl.path;
		  }
		  return url;
		}
		exports.urlGenerate = urlGenerate;
	
		/**
		 * Normalizes a path, or the path portion of a URL:
		 *
		 * - Replaces consecutive slashes with one slash.
		 * - Removes unnecessary '.' parts.
		 * - Removes unnecessary '<dir>/..' parts.
		 *
		 * Based on code in the Node.js 'path' core module.
		 *
		 * @param aPath The path or url to normalize.
		 */
		function normalize(aPath) {
		  var path = aPath;
		  var url = urlParse(aPath);
		  if (url) {
		    if (!url.path) {
		      return aPath;
		    }
		    path = url.path;
		  }
		  var isAbsolute = exports.isAbsolute(path);
	
		  var parts = path.split(/\/+/);
		  for (var part, up = 0, i = parts.length - 1; i >= 0; i--) {
		    part = parts[i];
		    if (part === '.') {
		      parts.splice(i, 1);
		    } else if (part === '..') {
		      up++;
		    } else if (up > 0) {
		      if (part === '') {
		        // The first part is blank if the path is absolute. Trying to go
		        // above the root is a no-op. Therefore we can remove all '..' parts
		        // directly after the root.
		        parts.splice(i + 1, up);
		        up = 0;
		      } else {
		        parts.splice(i, 2);
		        up--;
		      }
		    }
		  }
		  path = parts.join('/');
	
		  if (path === '') {
		    path = isAbsolute ? '/' : '.';
		  }
	
		  if (url) {
		    url.path = path;
		    return urlGenerate(url);
		  }
		  return path;
		}
		exports.normalize = normalize;
	
		/**
		 * Joins two paths/URLs.
		 *
		 * @param aRoot The root path or URL.
		 * @param aPath The path or URL to be joined with the root.
		 *
		 * - If aPath is a URL or a data URI, aPath is returned, unless aPath is a
		 *   scheme-relative URL: Then the scheme of aRoot, if any, is prepended
		 *   first.
		 * - Otherwise aPath is a path. If aRoot is a URL, then its path portion
		 *   is updated with the result and aRoot is returned. Otherwise the result
		 *   is returned.
		 *   - If aPath is absolute, the result is aPath.
		 *   - Otherwise the two paths are joined with a slash.
		 * - Joining for example 'http://' and 'www.example.com' is also supported.
		 */
		function join(aRoot, aPath) {
		  if (aRoot === "") {
		    aRoot = ".";
		  }
		  if (aPath === "") {
		    aPath = ".";
		  }
		  var aPathUrl = urlParse(aPath);
		  var aRootUrl = urlParse(aRoot);
		  if (aRootUrl) {
		    aRoot = aRootUrl.path || '/';
		  }
	
		  // `join(foo, '//www.example.org')`
		  if (aPathUrl && !aPathUrl.scheme) {
		    if (aRootUrl) {
		      aPathUrl.scheme = aRootUrl.scheme;
		    }
		    return urlGenerate(aPathUrl);
		  }
	
		  if (aPathUrl || aPath.match(dataUrlRegexp)) {
		    return aPath;
		  }
	
		  // `join('http://', 'www.example.com')`
		  if (aRootUrl && !aRootUrl.host && !aRootUrl.path) {
		    aRootUrl.host = aPath;
		    return urlGenerate(aRootUrl);
		  }
	
		  var joined = aPath.charAt(0) === '/'
		    ? aPath
		    : normalize(aRoot.replace(/\/+$/, '') + '/' + aPath);
	
		  if (aRootUrl) {
		    aRootUrl.path = joined;
		    return urlGenerate(aRootUrl);
		  }
		  return joined;
		}
		exports.join = join;
	
		exports.isAbsolute = function (aPath) {
		  return aPath.charAt(0) === '/' || !!aPath.match(urlRegexp);
		};
	
		/**
		 * Make a path relative to a URL or another path.
		 *
		 * @param aRoot The root path or URL.
		 * @param aPath The path or URL to be made relative to aRoot.
		 */
		function relative(aRoot, aPath) {
		  if (aRoot === "") {
		    aRoot = ".";
		  }
	
		  aRoot = aRoot.replace(/\/$/, '');
	
		  // It is possible for the path to be above the root. In this case, simply
		  // checking whether the root is a prefix of the path won't work. Instead, we
		  // need to remove components from the root one by one, until either we find
		  // a prefix that fits, or we run out of components to remove.
		  var level = 0;
		  while (aPath.indexOf(aRoot + '/') !== 0) {
		    var index = aRoot.lastIndexOf("/");
		    if (index < 0) {
		      return aPath;
		    }
	
		    // If the only part of the root that is left is the scheme (i.e. http://,
		    // file:///, etc.), one or more slashes (/), or simply nothing at all, we
		    // have exhausted all components, so the path is not relative to the root.
		    aRoot = aRoot.slice(0, index);
		    if (aRoot.match(/^([^\/]+:\/)?\/*$/)) {
		      return aPath;
		    }
	
		    ++level;
		  }
	
		  // Make sure we add a "../" for each component we removed from the root.
		  return Array(level + 1).join("../") + aPath.substr(aRoot.length + 1);
		}
		exports.relative = relative;
	
		var supportsNullProto = (function () {
		  var obj = Object.create(null);
		  return !('__proto__' in obj);
		}());
	
		function identity (s) {
		  return s;
		}
	
		/**
		 * Because behavior goes wacky when you set `__proto__` on objects, we
		 * have to prefix all the strings in our set with an arbitrary character.
		 *
		 * See https://github.com/mozilla/source-map/pull/31 and
		 * https://github.com/mozilla/source-map/issues/30
		 *
		 * @param String aStr
		 */
		function toSetString(aStr) {
		  if (isProtoString(aStr)) {
		    return '$' + aStr;
		  }
	
		  return aStr;
		}
		exports.toSetString = supportsNullProto ? identity : toSetString;
	
		function fromSetString(aStr) {
		  if (isProtoString(aStr)) {
		    return aStr.slice(1);
		  }
	
		  return aStr;
		}
		exports.fromSetString = supportsNullProto ? identity : fromSetString;
	
		function isProtoString(s) {
		  if (!s) {
		    return false;
		  }
	
		  var length = s.length;
	
		  if (length < 9 /* "__proto__".length */) {
		    return false;
		  }
	
		  if (s.charCodeAt(length - 1) !== 95  /* '_' */ ||
		      s.charCodeAt(length - 2) !== 95  /* '_' */ ||
		      s.charCodeAt(length - 3) !== 111 /* 'o' */ ||
		      s.charCodeAt(length - 4) !== 116 /* 't' */ ||
		      s.charCodeAt(length - 5) !== 111 /* 'o' */ ||
		      s.charCodeAt(length - 6) !== 114 /* 'r' */ ||
		      s.charCodeAt(length - 7) !== 112 /* 'p' */ ||
		      s.charCodeAt(length - 8) !== 95  /* '_' */ ||
		      s.charCodeAt(length - 9) !== 95  /* '_' */) {
		    return false;
		  }
	
		  for (var i = length - 10; i >= 0; i--) {
		    if (s.charCodeAt(i) !== 36 /* '$' */) {
		      return false;
		    }
		  }
	
		  return true;
		}
	
		/**
		 * Comparator between two mappings where the original positions are compared.
		 *
		 * Optionally pass in `true` as `onlyCompareGenerated` to consider two
		 * mappings with the same original source/line/column, but different generated
		 * line and column the same. Useful when searching for a mapping with a
		 * stubbed out mapping.
		 */
		function compareByOriginalPositions(mappingA, mappingB, onlyCompareOriginal) {
		  var cmp = mappingA.source - mappingB.source;
		  if (cmp !== 0) {
		    return cmp;
		  }
	
		  cmp = mappingA.originalLine - mappingB.originalLine;
		  if (cmp !== 0) {
		    return cmp;
		  }
	
		  cmp = mappingA.originalColumn - mappingB.originalColumn;
		  if (cmp !== 0 || onlyCompareOriginal) {
		    return cmp;
		  }
	
		  cmp = mappingA.generatedColumn - mappingB.generatedColumn;
		  if (cmp !== 0) {
		    return cmp;
		  }
	
		  cmp = mappingA.generatedLine - mappingB.generatedLine;
		  if (cmp !== 0) {
		    return cmp;
		  }
	
		  return mappingA.name - mappingB.name;
		}
		exports.compareByOriginalPositions = compareByOriginalPositions;
	
		/**
		 * Comparator between two mappings with deflated source and name indices where
		 * the generated positions are compared.
		 *
		 * Optionally pass in `true` as `onlyCompareGenerated` to consider two
		 * mappings with the same generated line and column, but different
		 * source/name/original line and column the same. Useful when searching for a
		 * mapping with a stubbed out mapping.
		 */
		function compareByGeneratedPositionsDeflated(mappingA, mappingB, onlyCompareGenerated) {
		  var cmp = mappingA.generatedLine - mappingB.generatedLine;
		  if (cmp !== 0) {
		    return cmp;
		  }
	
		  cmp = mappingA.generatedColumn - mappingB.generatedColumn;
		  if (cmp !== 0 || onlyCompareGenerated) {
		    return cmp;
		  }
	
		  cmp = mappingA.source - mappingB.source;
		  if (cmp !== 0) {
		    return cmp;
		  }
	
		  cmp = mappingA.originalLine - mappingB.originalLine;
		  if (cmp !== 0) {
		    return cmp;
		  }
	
		  cmp = mappingA.originalColumn - mappingB.originalColumn;
		  if (cmp !== 0) {
		    return cmp;
		  }
	
		  return mappingA.name - mappingB.name;
		}
		exports.compareByGeneratedPositionsDeflated = compareByGeneratedPositionsDeflated;
	
		function strcmp(aStr1, aStr2) {
		  if (aStr1 === aStr2) {
		    return 0;
		  }
	
		  if (aStr1 > aStr2) {
		    return 1;
		  }
	
		  return -1;
		}
	
		/**
		 * Comparator between two mappings with inflated source and name strings where
		 * the generated positions are compared.
		 */
		function compareByGeneratedPositionsInflated(mappingA, mappingB) {
		  var cmp = mappingA.generatedLine - mappingB.generatedLine;
		  if (cmp !== 0) {
		    return cmp;
		  }
	
		  cmp = mappingA.generatedColumn - mappingB.generatedColumn;
		  if (cmp !== 0) {
		    return cmp;
		  }
	
		  cmp = strcmp(mappingA.source, mappingB.source);
		  if (cmp !== 0) {
		    return cmp;
		  }
	
		  cmp = mappingA.originalLine - mappingB.originalLine;
		  if (cmp !== 0) {
		    return cmp;
		  }
	
		  cmp = mappingA.originalColumn - mappingB.originalColumn;
		  if (cmp !== 0) {
		    return cmp;
		  }
	
		  return strcmp(mappingA.name, mappingB.name);
		}
		exports.compareByGeneratedPositionsInflated = compareByGeneratedPositionsInflated;
	
	
	/***/ }),
	/* 3 */
	/***/ (function(module, exports) {
	
		/* -*- Mode: js; js-indent-level: 2; -*- */
		/*
		 * Copyright 2011 Mozilla Foundation and contributors
		 * Licensed under the New BSD license. See LICENSE or:
		 * http://opensource.org/licenses/BSD-3-Clause
		 */
	
		exports.GREATEST_LOWER_BOUND = 1;
		exports.LEAST_UPPER_BOUND = 2;
	
		/**
		 * Recursive implementation of binary search.
		 *
		 * @param aLow Indices here and lower do not contain the needle.
		 * @param aHigh Indices here and higher do not contain the needle.
		 * @param aNeedle The element being searched for.
		 * @param aHaystack The non-empty array being searched.
		 * @param aCompare Function which takes two elements and returns -1, 0, or 1.
		 * @param aBias Either 'binarySearch.GREATEST_LOWER_BOUND' or
		 *     'binarySearch.LEAST_UPPER_BOUND'. Specifies whether to return the
		 *     closest element that is smaller than or greater than the one we are
		 *     searching for, respectively, if the exact element cannot be found.
		 */
		function recursiveSearch(aLow, aHigh, aNeedle, aHaystack, aCompare, aBias) {
		  // This function terminates when one of the following is true:
		  //
		  //   1. We find the exact element we are looking for.
		  //
		  //   2. We did not find the exact element, but we can return the index of
		  //      the next-closest element.
		  //
		  //   3. We did not find the exact element, and there is no next-closest
		  //      element than the one we are searching for, so we return -1.
		  var mid = Math.floor((aHigh - aLow) / 2) + aLow;
		  var cmp = aCompare(aNeedle, aHaystack[mid], true);
		  if (cmp === 0) {
		    // Found the element we are looking for.
		    return mid;
		  }
		  else if (cmp > 0) {
		    // Our needle is greater than aHaystack[mid].
		    if (aHigh - mid > 1) {
		      // The element is in the upper half.
		      return recursiveSearch(mid, aHigh, aNeedle, aHaystack, aCompare, aBias);
		    }
	
		    // The exact needle element was not found in this haystack. Determine if
		    // we are in termination case (3) or (2) and return the appropriate thing.
		    if (aBias == exports.LEAST_UPPER_BOUND) {
		      return aHigh < aHaystack.length ? aHigh : -1;
		    } else {
		      return mid;
		    }
		  }
		  else {
		    // Our needle is less than aHaystack[mid].
		    if (mid - aLow > 1) {
		      // The element is in the lower half.
		      return recursiveSearch(aLow, mid, aNeedle, aHaystack, aCompare, aBias);
		    }
	
		    // we are in termination case (3) or (2) and return the appropriate thing.
		    if (aBias == exports.LEAST_UPPER_BOUND) {
		      return mid;
		    } else {
		      return aLow < 0 ? -1 : aLow;
		    }
		  }
		}
	
		/**
		 * This is an implementation of binary search which will always try and return
		 * the index of the closest element if there is no exact hit. This is because
		 * mappings between original and generated line/col pairs are single points,
		 * and there is an implicit region between each of them, so a miss just means
		 * that you aren't on the very start of a region.
		 *
		 * @param aNeedle The element you are looking for.
		 * @param aHaystack The array that is being searched.
		 * @param aCompare A function which takes the needle and an element in the
		 *     array and returns -1, 0, or 1 depending on whether the needle is less
		 *     than, equal to, or greater than the element, respectively.
		 * @param aBias Either 'binarySearch.GREATEST_LOWER_BOUND' or
		 *     'binarySearch.LEAST_UPPER_BOUND'. Specifies whether to return the
		 *     closest element that is smaller than or greater than the one we are
		 *     searching for, respectively, if the exact element cannot be found.
		 *     Defaults to 'binarySearch.GREATEST_LOWER_BOUND'.
		 */
		exports.search = function search(aNeedle, aHaystack, aCompare, aBias) {
		  if (aHaystack.length === 0) {
		    return -1;
		  }
	
		  var index = recursiveSearch(-1, aHaystack.length, aNeedle, aHaystack,
		                              aCompare, aBias || exports.GREATEST_LOWER_BOUND);
		  if (index < 0) {
		    return -1;
		  }
	
		  // We have found either the exact element, or the next-closest element than
		  // the one we are searching for. However, there may be more than one such
		  // element. Make sure we always return the smallest of these.
		  while (index - 1 >= 0) {
		    if (aCompare(aHaystack[index], aHaystack[index - 1], true) !== 0) {
		      break;
		    }
		    --index;
		  }
	
		  return index;
		};
	
	
	/***/ }),
	/* 4 */
	/***/ (function(module, exports, __webpack_require__) {
	
		/* -*- Mode: js; js-indent-level: 2; -*- */
		/*
		 * Copyright 2011 Mozilla Foundation and contributors
		 * Licensed under the New BSD license. See LICENSE or:
		 * http://opensource.org/licenses/BSD-3-Clause
		 */
	
		var util = __webpack_require__(2);
		var has = Object.prototype.hasOwnProperty;
	
		/**
		 * A data structure which is a combination of an array and a set. Adding a new
		 * member is O(1), testing for membership is O(1), and finding the index of an
		 * element is O(1). Removing elements from the set is not supported. Only
		 * strings are supported for membership.
		 */
		function ArraySet() {
		  this._array = [];
		  this._set = Object.create(null);
		}
	
		/**
		 * Static method for creating ArraySet instances from an existing array.
		 */
		ArraySet.fromArray = function ArraySet_fromArray(aArray, aAllowDuplicates) {
		  var set = new ArraySet();
		  for (var i = 0, len = aArray.length; i < len; i++) {
		    set.add(aArray[i], aAllowDuplicates);
		  }
		  return set;
		};
	
		/**
		 * Return how many unique items are in this ArraySet. If duplicates have been
		 * added, than those do not count towards the size.
		 *
		 * @returns Number
		 */
		ArraySet.prototype.size = function ArraySet_size() {
		  return Object.getOwnPropertyNames(this._set).length;
		};
	
		/**
		 * Add the given string to this set.
		 *
		 * @param String aStr
		 */
		ArraySet.prototype.add = function ArraySet_add(aStr, aAllowDuplicates) {
		  var sStr = util.toSetString(aStr);
		  var isDuplicate = has.call(this._set, sStr);
		  var idx = this._array.length;
		  if (!isDuplicate || aAllowDuplicates) {
		    this._array.push(aStr);
		  }
		  if (!isDuplicate) {
		    this._set[sStr] = idx;
		  }
		};
	
		/**
		 * Is the given string a member of this set?
		 *
		 * @param String aStr
		 */
		ArraySet.prototype.has = function ArraySet_has(aStr) {
		  var sStr = util.toSetString(aStr);
		  return has.call(this._set, sStr);
		};
	
		/**
		 * What is the index of the given string in the array?
		 *
		 * @param String aStr
		 */
		ArraySet.prototype.indexOf = function ArraySet_indexOf(aStr) {
		  var sStr = util.toSetString(aStr);
		  if (has.call(this._set, sStr)) {
		    return this._set[sStr];
		  }
		  throw new Error('"' + aStr + '" is not in the set.');
		};
	
		/**
		 * What is the element at the given index?
		 *
		 * @param Number aIdx
		 */
		ArraySet.prototype.at = function ArraySet_at(aIdx) {
		  if (aIdx >= 0 && aIdx < this._array.length) {
		    return this._array[aIdx];
		  }
		  throw new Error('No element indexed by ' + aIdx);
		};
	
		/**
		 * Returns the array representation of this set (which has the proper indices
		 * indicated by indexOf). Note that this is a copy of the internal array used
		 * for storing the members so that no one can mess with internal state.
		 */
		ArraySet.prototype.toArray = function ArraySet_toArray() {
		  return this._array.slice();
		};
	
		exports.ArraySet = ArraySet;
	
	
	/***/ }),
	/* 5 */
	/***/ (function(module, exports, __webpack_require__) {
	
		/* -*- Mode: js; js-indent-level: 2; -*- */
		/*
		 * Copyright 2011 Mozilla Foundation and contributors
		 * Licensed under the New BSD license. See LICENSE or:
		 * http://opensource.org/licenses/BSD-3-Clause
		 *
		 * Based on the Base 64 VLQ implementation in Closure Compiler:
		 * https://code.google.com/p/closure-compiler/source/browse/trunk/src/com/google/debugging/sourcemap/Base64VLQ.java
		 *
		 * Copyright 2011 The Closure Compiler Authors. All rights reserved.
		 * Redistribution and use in source and binary forms, with or without
		 * modification, are permitted provided that the following conditions are
		 * met:
		 *
		 *  * Redistributions of source code must retain the above copyright
		 *    notice, this list of conditions and the following disclaimer.
		 *  * Redistributions in binary form must reproduce the above
		 *    copyright notice, this list of conditions and the following
		 *    disclaimer in the documentation and/or other materials provided
		 *    with the distribution.
		 *  * Neither the name of Google Inc. nor the names of its
		 *    contributors may be used to endorse or promote products derived
		 *    from this software without specific prior written permission.
		 *
		 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
		 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
		 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
		 * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
		 * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
		 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
		 * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
		 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
		 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
		 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
		 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
		 */
	
		var base64 = __webpack_require__(6);
	
		// A single base 64 digit can contain 6 bits of data. For the base 64 variable
		// length quantities we use in the source map spec, the first bit is the sign,
		// the next four bits are the actual value, and the 6th bit is the
		// continuation bit. The continuation bit tells us whether there are more
		// digits in this value following this digit.
		//
		//   Continuation
		//   |    Sign
		//   |    |
		//   V    V
		//   101011
	
		var VLQ_BASE_SHIFT = 5;
	
		// binary: 100000
		var VLQ_BASE = 1 << VLQ_BASE_SHIFT;
	
		// binary: 011111
		var VLQ_BASE_MASK = VLQ_BASE - 1;
	
		// binary: 100000
		var VLQ_CONTINUATION_BIT = VLQ_BASE;
	
		/**
		 * Converts from a two-complement value to a value where the sign bit is
		 * placed in the least significant bit.  For example, as decimals:
		 *   1 becomes 2 (10 binary), -1 becomes 3 (11 binary)
		 *   2 becomes 4 (100 binary), -2 becomes 5 (101 binary)
		 */
		function toVLQSigned(aValue) {
		  return aValue < 0
		    ? ((-aValue) << 1) + 1
		    : (aValue << 1) + 0;
		}
	
		/**
		 * Converts to a two-complement value from a value where the sign bit is
		 * placed in the least significant bit.  For example, as decimals:
		 *   2 (10 binary) becomes 1, 3 (11 binary) becomes -1
		 *   4 (100 binary) becomes 2, 5 (101 binary) becomes -2
		 */
		function fromVLQSigned(aValue) {
		  var isNegative = (aValue & 1) === 1;
		  var shifted = aValue >> 1;
		  return isNegative
		    ? -shifted
		    : shifted;
		}
	
		/**
		 * Returns the base 64 VLQ encoded value.
		 */
		exports.encode = function base64VLQ_encode(aValue) {
		  var encoded = "";
		  var digit;
	
		  var vlq = toVLQSigned(aValue);
	
		  do {
		    digit = vlq & VLQ_BASE_MASK;
		    vlq >>>= VLQ_BASE_SHIFT;
		    if (vlq > 0) {
		      // There are still more digits in this value, so we must make sure the
		      // continuation bit is marked.
		      digit |= VLQ_CONTINUATION_BIT;
		    }
		    encoded += base64.encode(digit);
		  } while (vlq > 0);
	
		  return encoded;
		};
	
		/**
		 * Decodes the next base 64 VLQ value from the given string and returns the
		 * value and the rest of the string via the out parameter.
		 */
		exports.decode = function base64VLQ_decode(aStr, aIndex, aOutParam) {
		  var strLen = aStr.length;
		  var result = 0;
		  var shift = 0;
		  var continuation, digit;
	
		  do {
		    if (aIndex >= strLen) {
		      throw new Error("Expected more digits in base 64 VLQ value.");
		    }
	
		    digit = base64.decode(aStr.charCodeAt(aIndex++));
		    if (digit === -1) {
		      throw new Error("Invalid base64 digit: " + aStr.charAt(aIndex - 1));
		    }
	
		    continuation = !!(digit & VLQ_CONTINUATION_BIT);
		    digit &= VLQ_BASE_MASK;
		    result = result + (digit << shift);
		    shift += VLQ_BASE_SHIFT;
		  } while (continuation);
	
		  aOutParam.value = fromVLQSigned(result);
		  aOutParam.rest = aIndex;
		};
	
	
	/***/ }),
	/* 6 */
	/***/ (function(module, exports) {
	
		/* -*- Mode: js; js-indent-level: 2; -*- */
		/*
		 * Copyright 2011 Mozilla Foundation and contributors
		 * Licensed under the New BSD license. See LICENSE or:
		 * http://opensource.org/licenses/BSD-3-Clause
		 */
	
		var intToCharMap = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'.split('');
	
		/**
		 * Encode an integer in the range of 0 to 63 to a single base 64 digit.
		 */
		exports.encode = function (number) {
		  if (0 <= number && number < intToCharMap.length) {
		    return intToCharMap[number];
		  }
		  throw new TypeError("Must be between 0 and 63: " + number);
		};
	
		/**
		 * Decode a single base 64 character code digit to an integer. Returns -1 on
		 * failure.
		 */
		exports.decode = function (charCode) {
		  var bigA = 65;     // 'A'
		  var bigZ = 90;     // 'Z'
	
		  var littleA = 97;  // 'a'
		  var littleZ = 122; // 'z'
	
		  var zero = 48;     // '0'
		  var nine = 57;     // '9'
	
		  var plus = 43;     // '+'
		  var slash = 47;    // '/'
	
		  var littleOffset = 26;
		  var numberOffset = 52;
	
		  // 0 - 25: ABCDEFGHIJKLMNOPQRSTUVWXYZ
		  if (bigA <= charCode && charCode <= bigZ) {
		    return (charCode - bigA);
		  }
	
		  // 26 - 51: abcdefghijklmnopqrstuvwxyz
		  if (littleA <= charCode && charCode <= littleZ) {
		    return (charCode - littleA + littleOffset);
		  }
	
		  // 52 - 61: 0123456789
		  if (zero <= charCode && charCode <= nine) {
		    return (charCode - zero + numberOffset);
		  }
	
		  // 62: +
		  if (charCode == plus) {
		    return 62;
		  }
	
		  // 63: /
		  if (charCode == slash) {
		    return 63;
		  }
	
		  // Invalid base64 digit.
		  return -1;
		};
	
	
	/***/ }),
	/* 7 */
	/***/ (function(module, exports) {
	
		/* -*- Mode: js; js-indent-level: 2; -*- */
		/*
		 * Copyright 2011 Mozilla Foundation and contributors
		 * Licensed under the New BSD license. See LICENSE or:
		 * http://opensource.org/licenses/BSD-3-Clause
		 */
	
		// It turns out that some (most?) JavaScript engines don't self-host
		// `Array.prototype.sort`. This makes sense because C++ will likely remain
		// faster than JS when doing raw CPU-intensive sorting. However, when using a
		// custom comparator function, calling back and forth between the VM's C++ and
		// JIT'd JS is rather slow *and* loses JIT type information, resulting in
		// worse generated code for the comparator function than would be optimal. In
		// fact, when sorting with a comparator, these costs outweigh the benefits of
		// sorting in C++. By using our own JS-implemented Quick Sort (below), we get
		// a ~3500ms mean speed-up in `bench/bench.html`.
	
		/**
		 * Swap the elements indexed by `x` and `y` in the array `ary`.
		 *
		 * @param {Array} ary
		 *        The array.
		 * @param {Number} x
		 *        The index of the first item.
		 * @param {Number} y
		 *        The index of the second item.
		 */
		function swap(ary, x, y) {
		  var temp = ary[x];
		  ary[x] = ary[y];
		  ary[y] = temp;
		}
	
		/**
		 * Returns a random integer within the range `low .. high` inclusive.
		 *
		 * @param {Number} low
		 *        The lower bound on the range.
		 * @param {Number} high
		 *        The upper bound on the range.
		 */
		function randomIntInRange(low, high) {
		  return Math.round(low + (Math.random() * (high - low)));
		}
	
		/**
		 * The Quick Sort algorithm.
		 *
		 * @param {Array} ary
		 *        An array to sort.
		 * @param {function} comparator
		 *        Function to use to compare two items.
		 * @param {Number} p
		 *        Start index of the array
		 * @param {Number} r
		 *        End index of the array
		 */
		function doQuickSort(ary, comparator, p, r) {
		  // If our lower bound is less than our upper bound, we (1) partition the
		  // array into two pieces and (2) recurse on each half. If it is not, this is
		  // the empty array and our base case.
	
		  if (p < r) {
		    // (1) Partitioning.
		    //
		    // The partitioning chooses a pivot between `p` and `r` and moves all
		    // elements that are less than or equal to the pivot to the before it, and
		    // all the elements that are greater than it after it. The effect is that
		    // once partition is done, the pivot is in the exact place it will be when
		    // the array is put in sorted order, and it will not need to be moved
		    // again. This runs in O(n) time.
	
		    // Always choose a random pivot so that an input array which is reverse
		    // sorted does not cause O(n^2) running time.
		    var pivotIndex = randomIntInRange(p, r);
		    var i = p - 1;
	
		    swap(ary, pivotIndex, r);
		    var pivot = ary[r];
	
		    // Immediately after `j` is incremented in this loop, the following hold
		    // true:
		    //
		    //   * Every element in `ary[p .. i]` is less than or equal to the pivot.
		    //
		    //   * Every element in `ary[i+1 .. j-1]` is greater than the pivot.
		    for (var j = p; j < r; j++) {
		      if (comparator(ary[j], pivot) <= 0) {
		        i += 1;
		        swap(ary, i, j);
		      }
		    }
	
		    swap(ary, i + 1, j);
		    var q = i + 1;
	
		    // (2) Recurse on each half.
	
		    doQuickSort(ary, comparator, p, q - 1);
		    doQuickSort(ary, comparator, q + 1, r);
		  }
		}
	
		/**
		 * Sort the given array in-place with the given comparator function.
		 *
		 * @param {Array} ary
		 *        An array to sort.
		 * @param {function} comparator
		 *        Function to use to compare two items.
		 */
		exports.quickSort = function (ary, comparator) {
		  doQuickSort(ary, comparator, 0, ary.length - 1);
		};
	
	
	/***/ })
	/******/ ])
	});
	;

/***/ }),
/* 635 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(__resourceQuery, module) {/*eslint-env browser*/
	/*global __resourceQuery __webpack_public_path__*/
	
	var options = {
	  path: '/__webpack_hmr',
	  timeout: 20 * 1000,
	  overlay: true,
	  reload: false,
	  log: true,
	  warn: true,
	  name: '',
	  autoConnect: true,
	  overlayStyles: {},
	  overlayWarnings: false,
	  ansiColors: {},
	};
	if (true) {
	  var querystring = __webpack_require__(636);
	  var overrides = querystring.parse(__resourceQuery.slice(1));
	  setOverrides(overrides);
	}
	
	if (typeof window === 'undefined') {
	  // do nothing
	} else if (typeof window.EventSource === 'undefined') {
	  console.warn(
	    "webpack-hot-middleware's client requires EventSource to work. " +
	      'You should include a polyfill if you want to support this browser: ' +
	      'https://developer.mozilla.org/en-US/docs/Web/API/Server-sent_events#Tools'
	  );
	} else {
	  if (options.autoConnect) {
	    connect();
	  }
	}
	
	/* istanbul ignore next */
	function setOptionsAndConnect(overrides) {
	  setOverrides(overrides);
	  connect();
	}
	
	function setOverrides(overrides) {
	  if (overrides.autoConnect)
	    options.autoConnect = overrides.autoConnect == 'true';
	  if (overrides.path) options.path = overrides.path;
	  if (overrides.timeout) options.timeout = overrides.timeout;
	  if (overrides.overlay) options.overlay = overrides.overlay !== 'false';
	  if (overrides.reload) options.reload = overrides.reload !== 'false';
	  if (overrides.noInfo && overrides.noInfo !== 'false') {
	    options.log = false;
	  }
	  if (overrides.name) {
	    options.name = overrides.name;
	  }
	  if (overrides.quiet && overrides.quiet !== 'false') {
	    options.log = false;
	    options.warn = false;
	  }
	
	  if (overrides.dynamicPublicPath) {
	    options.path = __webpack_require__.p + options.path;
	  }
	
	  if (overrides.ansiColors)
	    options.ansiColors = JSON.parse(overrides.ansiColors);
	  if (overrides.overlayStyles)
	    options.overlayStyles = JSON.parse(overrides.overlayStyles);
	
	  if (overrides.overlayWarnings) {
	    options.overlayWarnings = overrides.overlayWarnings == 'true';
	  }
	}
	
	function EventSourceWrapper() {
	  var source;
	  var lastActivity = new Date();
	  var listeners = [];
	
	  init();
	  var timer = setInterval(function() {
	    if (new Date() - lastActivity > options.timeout) {
	      handleDisconnect();
	    }
	  }, options.timeout / 2);
	
	  function init() {
	    source = new window.EventSource(options.path);
	    source.onopen = handleOnline;
	    source.onerror = handleDisconnect;
	    source.onmessage = handleMessage;
	  }
	
	  function handleOnline() {
	    if (options.log) console.log('[HMR] connected');
	    lastActivity = new Date();
	  }
	
	  function handleMessage(event) {
	    lastActivity = new Date();
	    for (var i = 0; i < listeners.length; i++) {
	      listeners[i](event);
	    }
	  }
	
	  function handleDisconnect() {
	    clearInterval(timer);
	    source.close();
	    setTimeout(init, options.timeout);
	  }
	
	  return {
	    addMessageListener: function(fn) {
	      listeners.push(fn);
	    },
	  };
	}
	
	function getEventSourceWrapper() {
	  if (!window.__whmEventSourceWrapper) {
	    window.__whmEventSourceWrapper = {};
	  }
	  if (!window.__whmEventSourceWrapper[options.path]) {
	    // cache the wrapper for other entries loaded on
	    // the same page with the same options.path
	    window.__whmEventSourceWrapper[options.path] = EventSourceWrapper();
	  }
	  return window.__whmEventSourceWrapper[options.path];
	}
	
	function connect() {
	  getEventSourceWrapper().addMessageListener(handleMessage);
	
	  function handleMessage(event) {
	    if (event.data == '\uD83D\uDC93') {
	      return;
	    }
	    try {
	      processMessage(JSON.parse(event.data));
	    } catch (ex) {
	      if (options.warn) {
	        console.warn('Invalid HMR message: ' + event.data + '\n' + ex);
	      }
	    }
	  }
	}
	
	// the reporter needs to be a singleton on the page
	// in case the client is being used by multiple bundles
	// we only want to report once.
	// all the errors will go to all clients
	var singletonKey = '__webpack_hot_middleware_reporter__';
	var reporter;
	if (typeof window !== 'undefined') {
	  if (!window[singletonKey]) {
	    window[singletonKey] = createReporter();
	  }
	  reporter = window[singletonKey];
	}
	
	function createReporter() {
	  var strip = __webpack_require__(639);
	
	  var overlay;
	  if (typeof document !== 'undefined' && options.overlay) {
	    overlay = __webpack_require__(641)({
	      ansiColors: options.ansiColors,
	      overlayStyles: options.overlayStyles,
	    });
	  }
	
	  var styles = {
	    errors: 'color: #ff0000;',
	    warnings: 'color: #999933;',
	  };
	  var previousProblems = null;
	  function log(type, obj) {
	    var newProblems = obj[type]
	      .map(function(msg) {
	        return strip(msg);
	      })
	      .join('\n');
	    if (previousProblems == newProblems) {
	      return;
	    } else {
	      previousProblems = newProblems;
	    }
	
	    var style = styles[type];
	    var name = obj.name ? "'" + obj.name + "' " : '';
	    var title = '[HMR] bundle ' + name + 'has ' + obj[type].length + ' ' + type;
	    // NOTE: console.warn or console.error will print the stack trace
	    // which isn't helpful here, so using console.log to escape it.
	    if (console.group && console.groupEnd) {
	      console.group('%c' + title, style);
	      console.log('%c' + newProblems, style);
	      console.groupEnd();
	    } else {
	      console.log(
	        '%c' + title + '\n\t%c' + newProblems.replace(/\n/g, '\n\t'),
	        style + 'font-weight: bold;',
	        style + 'font-weight: normal;'
	      );
	    }
	  }
	
	  return {
	    cleanProblemsCache: function() {
	      previousProblems = null;
	    },
	    problems: function(type, obj) {
	      if (options.warn) {
	        log(type, obj);
	      }
	      if (overlay) {
	        if (options.overlayWarnings || type === 'errors') {
	          overlay.showProblems(type, obj[type]);
	          return false;
	        }
	        overlay.clear();
	      }
	      return true;
	    },
	    success: function() {
	      if (overlay) overlay.clear();
	    },
	    useCustomOverlay: function(customOverlay) {
	      overlay = customOverlay;
	    },
	  };
	}
	
	var processUpdate = __webpack_require__(647);
	
	var customHandler;
	var subscribeAllHandler;
	function processMessage(obj) {
	  switch (obj.action) {
	    case 'building':
	      if (options.log) {
	        console.log(
	          '[HMR] bundle ' +
	            (obj.name ? "'" + obj.name + "' " : '') +
	            'rebuilding'
	        );
	      }
	      break;
	    case 'built':
	      if (options.log) {
	        console.log(
	          '[HMR] bundle ' +
	            (obj.name ? "'" + obj.name + "' " : '') +
	            'rebuilt in ' +
	            obj.time +
	            'ms'
	        );
	      }
	    // fall through
	    case 'sync':
	      if (obj.name && options.name && obj.name !== options.name) {
	        return;
	      }
	      var applyUpdate = true;
	      if (obj.errors.length > 0) {
	        if (reporter) reporter.problems('errors', obj);
	        applyUpdate = false;
	      } else if (obj.warnings.length > 0) {
	        if (reporter) {
	          var overlayShown = reporter.problems('warnings', obj);
	          applyUpdate = overlayShown;
	        }
	      } else {
	        if (reporter) {
	          reporter.cleanProblemsCache();
	          reporter.success();
	        }
	      }
	      if (applyUpdate) {
	        processUpdate(obj.hash, obj.modules, options);
	      }
	      break;
	    default:
	      if (customHandler) {
	        customHandler(obj);
	      }
	  }
	
	  if (subscribeAllHandler) {
	    subscribeAllHandler(obj);
	  }
	}
	
	if (module) {
	  module.exports = {
	    subscribeAll: function subscribeAll(handler) {
	      subscribeAllHandler = handler;
	    },
	    subscribe: function subscribe(handler) {
	      customHandler = handler;
	    },
	    useCustomOverlay: function useCustomOverlay(customOverlay) {
	      if (reporter) reporter.useCustomOverlay(customOverlay);
	    },
	    setOptionsAndConnect: setOptionsAndConnect,
	  };
	}
	
	/* WEBPACK VAR INJECTION */}.call(exports, "?path=http://10.206.41.189:3000/__webpack_hmr", __webpack_require__(224)(module)))

/***/ }),
/* 636 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.decode = exports.parse = __webpack_require__(637);
	exports.encode = exports.stringify = __webpack_require__(638);


/***/ }),
/* 637 */
/***/ (function(module, exports) {

	// Copyright Joyent, Inc. and other Node contributors.
	//
	// Permission is hereby granted, free of charge, to any person obtaining a
	// copy of this software and associated documentation files (the
	// "Software"), to deal in the Software without restriction, including
	// without limitation the rights to use, copy, modify, merge, publish,
	// distribute, sublicense, and/or sell copies of the Software, and to permit
	// persons to whom the Software is furnished to do so, subject to the
	// following conditions:
	//
	// The above copyright notice and this permission notice shall be included
	// in all copies or substantial portions of the Software.
	//
	// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
	// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
	// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
	// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
	// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
	// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
	// USE OR OTHER DEALINGS IN THE SOFTWARE.
	
	'use strict';
	
	// If obj.hasOwnProperty has been overridden, then calling
	// obj.hasOwnProperty(prop) will break.
	// See: https://github.com/joyent/node/issues/1707
	function hasOwnProperty(obj, prop) {
	  return Object.prototype.hasOwnProperty.call(obj, prop);
	}
	
	module.exports = function(qs, sep, eq, options) {
	  sep = sep || '&';
	  eq = eq || '=';
	  var obj = {};
	
	  if (typeof qs !== 'string' || qs.length === 0) {
	    return obj;
	  }
	
	  var regexp = /\+/g;
	  qs = qs.split(sep);
	
	  var maxKeys = 1000;
	  if (options && typeof options.maxKeys === 'number') {
	    maxKeys = options.maxKeys;
	  }
	
	  var len = qs.length;
	  // maxKeys <= 0 means that we should not limit keys count
	  if (maxKeys > 0 && len > maxKeys) {
	    len = maxKeys;
	  }
	
	  for (var i = 0; i < len; ++i) {
	    var x = qs[i].replace(regexp, '%20'),
	        idx = x.indexOf(eq),
	        kstr, vstr, k, v;
	
	    if (idx >= 0) {
	      kstr = x.substr(0, idx);
	      vstr = x.substr(idx + 1);
	    } else {
	      kstr = x;
	      vstr = '';
	    }
	
	    k = decodeURIComponent(kstr);
	    v = decodeURIComponent(vstr);
	
	    if (!hasOwnProperty(obj, k)) {
	      obj[k] = v;
	    } else if (Array.isArray(obj[k])) {
	      obj[k].push(v);
	    } else {
	      obj[k] = [obj[k], v];
	    }
	  }
	
	  return obj;
	};


/***/ }),
/* 638 */
/***/ (function(module, exports) {

	// Copyright Joyent, Inc. and other Node contributors.
	//
	// Permission is hereby granted, free of charge, to any person obtaining a
	// copy of this software and associated documentation files (the
	// "Software"), to deal in the Software without restriction, including
	// without limitation the rights to use, copy, modify, merge, publish,
	// distribute, sublicense, and/or sell copies of the Software, and to permit
	// persons to whom the Software is furnished to do so, subject to the
	// following conditions:
	//
	// The above copyright notice and this permission notice shall be included
	// in all copies or substantial portions of the Software.
	//
	// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
	// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
	// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
	// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
	// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
	// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
	// USE OR OTHER DEALINGS IN THE SOFTWARE.
	
	'use strict';
	
	var stringifyPrimitive = function(v) {
	  switch (typeof v) {
	    case 'string':
	      return v;
	
	    case 'boolean':
	      return v ? 'true' : 'false';
	
	    case 'number':
	      return isFinite(v) ? v : '';
	
	    default:
	      return '';
	  }
	};
	
	module.exports = function(obj, sep, eq, name) {
	  sep = sep || '&';
	  eq = eq || '=';
	  if (obj === null) {
	    obj = undefined;
	  }
	
	  if (typeof obj === 'object') {
	    return Object.keys(obj).map(function(k) {
	      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;
	      if (Array.isArray(obj[k])) {
	        return obj[k].map(function(v) {
	          return ks + encodeURIComponent(stringifyPrimitive(v));
	        }).join(sep);
	      } else {
	        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));
	      }
	    }).join(sep);
	
	  }
	
	  if (!name) return '';
	  return encodeURIComponent(stringifyPrimitive(name)) + eq +
	         encodeURIComponent(stringifyPrimitive(obj));
	};


/***/ }),
/* 639 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	var ansiRegex = __webpack_require__(640)();
	
	module.exports = function (str) {
		return typeof str === 'string' ? str.replace(ansiRegex, '') : str;
	};


/***/ }),
/* 640 */
/***/ (function(module, exports) {

	'use strict';
	module.exports = function () {
		return /[\u001b\u009b][[()#;?]*(?:[0-9]{1,4}(?:;[0-9]{0,4})*)?[0-9A-PRZcf-nqry=><]/g;
	};


/***/ }),
/* 641 */
/***/ (function(module, exports, __webpack_require__) {

	/*eslint-env browser*/
	
	var clientOverlay = document.createElement('div');
	clientOverlay.id = 'webpack-hot-middleware-clientOverlay';
	var styles = {
	  background: 'rgba(0,0,0,0.85)',
	  color: '#e8e8e8',
	  lineHeight: '1.6',
	  whiteSpace: 'pre',
	  fontFamily: 'Menlo, Consolas, monospace',
	  fontSize: '13px',
	  position: 'fixed',
	  zIndex: 9999,
	  padding: '10px',
	  left: 0,
	  right: 0,
	  top: 0,
	  bottom: 0,
	  overflow: 'auto',
	  dir: 'ltr',
	  textAlign: 'left',
	};
	
	var ansiHTML = __webpack_require__(642);
	var colors = {
	  reset: ['transparent', 'transparent'],
	  black: '181818',
	  red: 'ff3348',
	  green: '3fff4f',
	  yellow: 'ffd30e',
	  blue: '169be0',
	  magenta: 'f840b7',
	  cyan: '0ad8e9',
	  lightgrey: 'ebe7e3',
	  darkgrey: '6d7891',
	};
	
	var Entities = __webpack_require__(643).AllHtmlEntities;
	var entities = new Entities();
	
	function showProblems(type, lines) {
	  clientOverlay.innerHTML = '';
	  lines.forEach(function(msg) {
	    msg = ansiHTML(entities.encode(msg));
	    var div = document.createElement('div');
	    div.style.marginBottom = '26px';
	    div.innerHTML = problemType(type) + ' in ' + msg;
	    clientOverlay.appendChild(div);
	  });
	  if (document.body) {
	    document.body.appendChild(clientOverlay);
	  }
	}
	
	function clear() {
	  if (document.body && clientOverlay.parentNode) {
	    document.body.removeChild(clientOverlay);
	  }
	}
	
	function problemType(type) {
	  var problemColors = {
	    errors: colors.red,
	    warnings: colors.yellow,
	  };
	  var color = problemColors[type] || colors.red;
	  return (
	    '<span style="background-color:#' +
	    color +
	    '; color:#000000; padding:3px 6px; border-radius: 4px;">' +
	    type.slice(0, -1).toUpperCase() +
	    '</span>'
	  );
	}
	
	module.exports = function(options) {
	  for (var color in options.ansiColors) {
	    if (color in colors) {
	      colors[color] = options.ansiColors[color];
	    }
	    ansiHTML.setColors(colors);
	  }
	
	  for (var style in options.overlayStyles) {
	    styles[style] = options.overlayStyles[style];
	  }
	
	  for (var key in styles) {
	    clientOverlay.style[key] = styles[key];
	  }
	
	  return {
	    showProblems: showProblems,
	    clear: clear,
	  };
	};
	
	module.exports.clear = clear;
	module.exports.showProblems = showProblems;


/***/ }),
/* 642 */
/***/ (function(module, exports) {

	'use strict'
	
	module.exports = ansiHTML
	
	// Reference to https://github.com/sindresorhus/ansi-regex
	var _regANSI = /(?:(?:\u001b\[)|\u009b)(?:(?:[0-9]{1,3})?(?:(?:;[0-9]{0,3})*)?[A-M|f-m])|\u001b[A-M]/
	
	var _defColors = {
	  reset: ['fff', '000'], // [FOREGROUD_COLOR, BACKGROUND_COLOR]
	  black: '000',
	  red: 'ff0000',
	  green: '209805',
	  yellow: 'e8bf03',
	  blue: '0000ff',
	  magenta: 'ff00ff',
	  cyan: '00ffee',
	  lightgrey: 'f0f0f0',
	  darkgrey: '888'
	}
	var _styles = {
	  30: 'black',
	  31: 'red',
	  32: 'green',
	  33: 'yellow',
	  34: 'blue',
	  35: 'magenta',
	  36: 'cyan',
	  37: 'lightgrey'
	}
	var _openTags = {
	  '1': 'font-weight:bold', // bold
	  '2': 'opacity:0.5', // dim
	  '3': '<i>', // italic
	  '4': '<u>', // underscore
	  '8': 'display:none', // hidden
	  '9': '<del>' // delete
	}
	var _closeTags = {
	  '23': '</i>', // reset italic
	  '24': '</u>', // reset underscore
	  '29': '</del>' // reset delete
	}
	
	;[0, 21, 22, 27, 28, 39, 49].forEach(function (n) {
	  _closeTags[n] = '</span>'
	})
	
	/**
	 * Converts text with ANSI color codes to HTML markup.
	 * @param {String} text
	 * @returns {*}
	 */
	function ansiHTML (text) {
	  // Returns the text if the string has no ANSI escape code.
	  if (!_regANSI.test(text)) {
	    return text
	  }
	
	  // Cache opened sequence.
	  var ansiCodes = []
	  // Replace with markup.
	  var ret = text.replace(/\033\[(\d+)*m/g, function (match, seq) {
	    var ot = _openTags[seq]
	    if (ot) {
	      // If current sequence has been opened, close it.
	      if (!!~ansiCodes.indexOf(seq)) { // eslint-disable-line no-extra-boolean-cast
	        ansiCodes.pop()
	        return '</span>'
	      }
	      // Open tag.
	      ansiCodes.push(seq)
	      return ot[0] === '<' ? ot : '<span style="' + ot + ';">'
	    }
	
	    var ct = _closeTags[seq]
	    if (ct) {
	      // Pop sequence
	      ansiCodes.pop()
	      return ct
	    }
	    return ''
	  })
	
	  // Make sure tags are closed.
	  var l = ansiCodes.length
	  ;(l > 0) && (ret += Array(l + 1).join('</span>'))
	
	  return ret
	}
	
	/**
	 * Customize colors.
	 * @param {Object} colors reference to _defColors
	 */
	ansiHTML.setColors = function (colors) {
	  if (typeof colors !== 'object') {
	    throw new Error('`colors` parameter must be an Object.')
	  }
	
	  var _finalColors = {}
	  for (var key in _defColors) {
	    var hex = colors.hasOwnProperty(key) ? colors[key] : null
	    if (!hex) {
	      _finalColors[key] = _defColors[key]
	      continue
	    }
	    if ('reset' === key) {
	      if (typeof hex === 'string') {
	        hex = [hex]
	      }
	      if (!Array.isArray(hex) || hex.length === 0 || hex.some(function (h) {
	        return typeof h !== 'string'
	      })) {
	        throw new Error('The value of `' + key + '` property must be an Array and each item could only be a hex string, e.g.: FF0000')
	      }
	      var defHexColor = _defColors[key]
	      if (!hex[0]) {
	        hex[0] = defHexColor[0]
	      }
	      if (hex.length === 1 || !hex[1]) {
	        hex = [hex[0]]
	        hex.push(defHexColor[1])
	      }
	
	      hex = hex.slice(0, 2)
	    } else if (typeof hex !== 'string') {
	      throw new Error('The value of `' + key + '` property must be a hex string, e.g.: FF0000')
	    }
	    _finalColors[key] = hex
	  }
	  _setTags(_finalColors)
	}
	
	/**
	 * Reset colors.
	 */
	ansiHTML.reset = function () {
	  _setTags(_defColors)
	}
	
	/**
	 * Expose tags, including open and close.
	 * @type {Object}
	 */
	ansiHTML.tags = {}
	
	if (Object.defineProperty) {
	  Object.defineProperty(ansiHTML.tags, 'open', {
	    get: function () { return _openTags }
	  })
	  Object.defineProperty(ansiHTML.tags, 'close', {
	    get: function () { return _closeTags }
	  })
	} else {
	  ansiHTML.tags.open = _openTags
	  ansiHTML.tags.close = _closeTags
	}
	
	function _setTags (colors) {
	  // reset all
	  _openTags['0'] = 'font-weight:normal;opacity:1;color:#' + colors.reset[0] + ';background:#' + colors.reset[1]
	  // inverse
	  _openTags['7'] = 'color:#' + colors.reset[1] + ';background:#' + colors.reset[0]
	  // dark grey
	  _openTags['90'] = 'color:#' + colors.darkgrey
	
	  for (var code in _styles) {
	    var color = _styles[code]
	    var oriColor = colors[color] || '000'
	    _openTags[code] = 'color:#' + oriColor
	    code = parseInt(code)
	    _openTags[(code + 10).toString()] = 'background:#' + oriColor
	  }
	}
	
	ansiHTML.reset()


/***/ }),
/* 643 */
/***/ (function(module, exports, __webpack_require__) {

	module.exports = {
	  XmlEntities: __webpack_require__(644),
	  Html4Entities: __webpack_require__(645),
	  Html5Entities: __webpack_require__(646),
	  AllHtmlEntities: __webpack_require__(646)
	};


/***/ }),
/* 644 */
/***/ (function(module, exports) {

	var ALPHA_INDEX = {
	    '&lt': '<',
	    '&gt': '>',
	    '&quot': '"',
	    '&apos': '\'',
	    '&amp': '&',
	    '&lt;': '<',
	    '&gt;': '>',
	    '&quot;': '"',
	    '&apos;': '\'',
	    '&amp;': '&'
	};
	
	var CHAR_INDEX = {
	    60: 'lt',
	    62: 'gt',
	    34: 'quot',
	    39: 'apos',
	    38: 'amp'
	};
	
	var CHAR_S_INDEX = {
	    '<': '&lt;',
	    '>': '&gt;',
	    '"': '&quot;',
	    '\'': '&apos;',
	    '&': '&amp;'
	};
	
	/**
	 * @constructor
	 */
	function XmlEntities() {}
	
	/**
	 * @param {String} str
	 * @returns {String}
	 */
	XmlEntities.prototype.encode = function(str) {
	    if (!str || !str.length) {
	        return '';
	    }
	    return str.replace(/<|>|"|'|&/g, function(s) {
	        return CHAR_S_INDEX[s];
	    });
	};
	
	/**
	 * @param {String} str
	 * @returns {String}
	 */
	 XmlEntities.encode = function(str) {
	    return new XmlEntities().encode(str);
	 };
	
	/**
	 * @param {String} str
	 * @returns {String}
	 */
	XmlEntities.prototype.decode = function(str) {
	    if (!str || !str.length) {
	        return '';
	    }
	    return str.replace(/&#?[0-9a-zA-Z]+;?/g, function(s) {
	        if (s.charAt(1) === '#') {
	            var code = s.charAt(2).toLowerCase() === 'x' ?
	                parseInt(s.substr(3), 16) :
	                parseInt(s.substr(2));
	
	            if (isNaN(code) || code < -32768 || code > 65535) {
	                return '';
	            }
	            return String.fromCharCode(code);
	        }
	        return ALPHA_INDEX[s] || s;
	    });
	};
	
	/**
	 * @param {String} str
	 * @returns {String}
	 */
	 XmlEntities.decode = function(str) {
	    return new XmlEntities().decode(str);
	 };
	
	/**
	 * @param {String} str
	 * @returns {String}
	 */
	XmlEntities.prototype.encodeNonUTF = function(str) {
	    if (!str || !str.length) {
	        return '';
	    }
	    var strLength = str.length;
	    var result = '';
	    var i = 0;
	    while (i < strLength) {
	        var c = str.charCodeAt(i);
	        var alpha = CHAR_INDEX[c];
	        if (alpha) {
	            result += "&" + alpha + ";";
	            i++;
	            continue;
	        }
	        if (c < 32 || c > 126) {
	            result += '&#' + c + ';';
	        } else {
	            result += str.charAt(i);
	        }
	        i++;
	    }
	    return result;
	};
	
	/**
	 * @param {String} str
	 * @returns {String}
	 */
	 XmlEntities.encodeNonUTF = function(str) {
	    return new XmlEntities().encodeNonUTF(str);
	 };
	
	/**
	 * @param {String} str
	 * @returns {String}
	 */
	XmlEntities.prototype.encodeNonASCII = function(str) {
	    if (!str || !str.length) {
	        return '';
	    }
	    var strLenght = str.length;
	    var result = '';
	    var i = 0;
	    while (i < strLenght) {
	        var c = str.charCodeAt(i);
	        if (c <= 255) {
	            result += str[i++];
	            continue;
	        }
	        result += '&#' + c + ';';
	        i++;
	    }
	    return result;
	};
	
	/**
	 * @param {String} str
	 * @returns {String}
	 */
	 XmlEntities.encodeNonASCII = function(str) {
	    return new XmlEntities().encodeNonASCII(str);
	 };
	
	module.exports = XmlEntities;


/***/ }),
/* 645 */
/***/ (function(module, exports) {

	var HTML_ALPHA = ['apos', 'nbsp', 'iexcl', 'cent', 'pound', 'curren', 'yen', 'brvbar', 'sect', 'uml', 'copy', 'ordf', 'laquo', 'not', 'shy', 'reg', 'macr', 'deg', 'plusmn', 'sup2', 'sup3', 'acute', 'micro', 'para', 'middot', 'cedil', 'sup1', 'ordm', 'raquo', 'frac14', 'frac12', 'frac34', 'iquest', 'Agrave', 'Aacute', 'Acirc', 'Atilde', 'Auml', 'Aring', 'Aelig', 'Ccedil', 'Egrave', 'Eacute', 'Ecirc', 'Euml', 'Igrave', 'Iacute', 'Icirc', 'Iuml', 'ETH', 'Ntilde', 'Ograve', 'Oacute', 'Ocirc', 'Otilde', 'Ouml', 'times', 'Oslash', 'Ugrave', 'Uacute', 'Ucirc', 'Uuml', 'Yacute', 'THORN', 'szlig', 'agrave', 'aacute', 'acirc', 'atilde', 'auml', 'aring', 'aelig', 'ccedil', 'egrave', 'eacute', 'ecirc', 'euml', 'igrave', 'iacute', 'icirc', 'iuml', 'eth', 'ntilde', 'ograve', 'oacute', 'ocirc', 'otilde', 'ouml', 'divide', 'oslash', 'ugrave', 'uacute', 'ucirc', 'uuml', 'yacute', 'thorn', 'yuml', 'quot', 'amp', 'lt', 'gt', 'OElig', 'oelig', 'Scaron', 'scaron', 'Yuml', 'circ', 'tilde', 'ensp', 'emsp', 'thinsp', 'zwnj', 'zwj', 'lrm', 'rlm', 'ndash', 'mdash', 'lsquo', 'rsquo', 'sbquo', 'ldquo', 'rdquo', 'bdquo', 'dagger', 'Dagger', 'permil', 'lsaquo', 'rsaquo', 'euro', 'fnof', 'Alpha', 'Beta', 'Gamma', 'Delta', 'Epsilon', 'Zeta', 'Eta', 'Theta', 'Iota', 'Kappa', 'Lambda', 'Mu', 'Nu', 'Xi', 'Omicron', 'Pi', 'Rho', 'Sigma', 'Tau', 'Upsilon', 'Phi', 'Chi', 'Psi', 'Omega', 'alpha', 'beta', 'gamma', 'delta', 'epsilon', 'zeta', 'eta', 'theta', 'iota', 'kappa', 'lambda', 'mu', 'nu', 'xi', 'omicron', 'pi', 'rho', 'sigmaf', 'sigma', 'tau', 'upsilon', 'phi', 'chi', 'psi', 'omega', 'thetasym', 'upsih', 'piv', 'bull', 'hellip', 'prime', 'Prime', 'oline', 'frasl', 'weierp', 'image', 'real', 'trade', 'alefsym', 'larr', 'uarr', 'rarr', 'darr', 'harr', 'crarr', 'lArr', 'uArr', 'rArr', 'dArr', 'hArr', 'forall', 'part', 'exist', 'empty', 'nabla', 'isin', 'notin', 'ni', 'prod', 'sum', 'minus', 'lowast', 'radic', 'prop', 'infin', 'ang', 'and', 'or', 'cap', 'cup', 'int', 'there4', 'sim', 'cong', 'asymp', 'ne', 'equiv', 'le', 'ge', 'sub', 'sup', 'nsub', 'sube', 'supe', 'oplus', 'otimes', 'perp', 'sdot', 'lceil', 'rceil', 'lfloor', 'rfloor', 'lang', 'rang', 'loz', 'spades', 'clubs', 'hearts', 'diams'];
	var HTML_CODES = [39, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 34, 38, 60, 62, 338, 339, 352, 353, 376, 710, 732, 8194, 8195, 8201, 8204, 8205, 8206, 8207, 8211, 8212, 8216, 8217, 8218, 8220, 8221, 8222, 8224, 8225, 8240, 8249, 8250, 8364, 402, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 931, 932, 933, 934, 935, 936, 937, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 977, 978, 982, 8226, 8230, 8242, 8243, 8254, 8260, 8472, 8465, 8476, 8482, 8501, 8592, 8593, 8594, 8595, 8596, 8629, 8656, 8657, 8658, 8659, 8660, 8704, 8706, 8707, 8709, 8711, 8712, 8713, 8715, 8719, 8721, 8722, 8727, 8730, 8733, 8734, 8736, 8743, 8744, 8745, 8746, 8747, 8756, 8764, 8773, 8776, 8800, 8801, 8804, 8805, 8834, 8835, 8836, 8838, 8839, 8853, 8855, 8869, 8901, 8968, 8969, 8970, 8971, 9001, 9002, 9674, 9824, 9827, 9829, 9830];
	
	var alphaIndex = {};
	var numIndex = {};
	
	var i = 0;
	var length = HTML_ALPHA.length;
	while (i < length) {
	    var a = HTML_ALPHA[i];
	    var c = HTML_CODES[i];
	    alphaIndex[a] = String.fromCharCode(c);
	    numIndex[c] = a;
	    i++;
	}
	
	/**
	 * @constructor
	 */
	function Html4Entities() {}
	
	/**
	 * @param {String} str
	 * @returns {String}
	 */
	Html4Entities.prototype.decode = function(str) {
	    if (!str || !str.length) {
	        return '';
	    }
	    return str.replace(/&(#?[\w\d]+);?/g, function(s, entity) {
	        var chr;
	        if (entity.charAt(0) === "#") {
	            var code = entity.charAt(1).toLowerCase() === 'x' ?
	                parseInt(entity.substr(2), 16) :
	                parseInt(entity.substr(1));
	
	            if (!(isNaN(code) || code < -32768 || code > 65535)) {
	                chr = String.fromCharCode(code);
	            }
	        } else {
	            chr = alphaIndex[entity];
	        }
	        return chr || s;
	    });
	};
	
	/**
	 * @param {String} str
	 * @returns {String}
	 */
	Html4Entities.decode = function(str) {
	    return new Html4Entities().decode(str);
	};
	
	/**
	 * @param {String} str
	 * @returns {String}
	 */
	Html4Entities.prototype.encode = function(str) {
	    if (!str || !str.length) {
	        return '';
	    }
	    var strLength = str.length;
	    var result = '';
	    var i = 0;
	    while (i < strLength) {
	        var alpha = numIndex[str.charCodeAt(i)];
	        result += alpha ? "&" + alpha + ";" : str.charAt(i);
	        i++;
	    }
	    return result;
	};
	
	/**
	 * @param {String} str
	 * @returns {String}
	 */
	Html4Entities.encode = function(str) {
	    return new Html4Entities().encode(str);
	};
	
	/**
	 * @param {String} str
	 * @returns {String}
	 */
	Html4Entities.prototype.encodeNonUTF = function(str) {
	    if (!str || !str.length) {
	        return '';
	    }
	    var strLength = str.length;
	    var result = '';
	    var i = 0;
	    while (i < strLength) {
	        var cc = str.charCodeAt(i);
	        var alpha = numIndex[cc];
	        if (alpha) {
	            result += "&" + alpha + ";";
	        } else if (cc < 32 || cc > 126) {
	            result += "&#" + cc + ";";
	        } else {
	            result += str.charAt(i);
	        }
	        i++;
	    }
	    return result;
	};
	
	/**
	 * @param {String} str
	 * @returns {String}
	 */
	Html4Entities.encodeNonUTF = function(str) {
	    return new Html4Entities().encodeNonUTF(str);
	};
	
	/**
	 * @param {String} str
	 * @returns {String}
	 */
	Html4Entities.prototype.encodeNonASCII = function(str) {
	    if (!str || !str.length) {
	        return '';
	    }
	    var strLength = str.length;
	    var result = '';
	    var i = 0;
	    while (i < strLength) {
	        var c = str.charCodeAt(i);
	        if (c <= 255) {
	            result += str[i++];
	            continue;
	        }
	        result += '&#' + c + ';';
	        i++;
	    }
	    return result;
	};
	
	/**
	 * @param {String} str
	 * @returns {String}
	 */
	Html4Entities.encodeNonASCII = function(str) {
	    return new Html4Entities().encodeNonASCII(str);
	};
	
	module.exports = Html4Entities;


/***/ }),
/* 646 */
/***/ (function(module, exports) {

	var ENTITIES = [['Aacute', [193]], ['aacute', [225]], ['Abreve', [258]], ['abreve', [259]], ['ac', [8766]], ['acd', [8767]], ['acE', [8766, 819]], ['Acirc', [194]], ['acirc', [226]], ['acute', [180]], ['Acy', [1040]], ['acy', [1072]], ['AElig', [198]], ['aelig', [230]], ['af', [8289]], ['Afr', [120068]], ['afr', [120094]], ['Agrave', [192]], ['agrave', [224]], ['alefsym', [8501]], ['aleph', [8501]], ['Alpha', [913]], ['alpha', [945]], ['Amacr', [256]], ['amacr', [257]], ['amalg', [10815]], ['amp', [38]], ['AMP', [38]], ['andand', [10837]], ['And', [10835]], ['and', [8743]], ['andd', [10844]], ['andslope', [10840]], ['andv', [10842]], ['ang', [8736]], ['ange', [10660]], ['angle', [8736]], ['angmsdaa', [10664]], ['angmsdab', [10665]], ['angmsdac', [10666]], ['angmsdad', [10667]], ['angmsdae', [10668]], ['angmsdaf', [10669]], ['angmsdag', [10670]], ['angmsdah', [10671]], ['angmsd', [8737]], ['angrt', [8735]], ['angrtvb', [8894]], ['angrtvbd', [10653]], ['angsph', [8738]], ['angst', [197]], ['angzarr', [9084]], ['Aogon', [260]], ['aogon', [261]], ['Aopf', [120120]], ['aopf', [120146]], ['apacir', [10863]], ['ap', [8776]], ['apE', [10864]], ['ape', [8778]], ['apid', [8779]], ['apos', [39]], ['ApplyFunction', [8289]], ['approx', [8776]], ['approxeq', [8778]], ['Aring', [197]], ['aring', [229]], ['Ascr', [119964]], ['ascr', [119990]], ['Assign', [8788]], ['ast', [42]], ['asymp', [8776]], ['asympeq', [8781]], ['Atilde', [195]], ['atilde', [227]], ['Auml', [196]], ['auml', [228]], ['awconint', [8755]], ['awint', [10769]], ['backcong', [8780]], ['backepsilon', [1014]], ['backprime', [8245]], ['backsim', [8765]], ['backsimeq', [8909]], ['Backslash', [8726]], ['Barv', [10983]], ['barvee', [8893]], ['barwed', [8965]], ['Barwed', [8966]], ['barwedge', [8965]], ['bbrk', [9141]], ['bbrktbrk', [9142]], ['bcong', [8780]], ['Bcy', [1041]], ['bcy', [1073]], ['bdquo', [8222]], ['becaus', [8757]], ['because', [8757]], ['Because', [8757]], ['bemptyv', [10672]], ['bepsi', [1014]], ['bernou', [8492]], ['Bernoullis', [8492]], ['Beta', [914]], ['beta', [946]], ['beth', [8502]], ['between', [8812]], ['Bfr', [120069]], ['bfr', [120095]], ['bigcap', [8898]], ['bigcirc', [9711]], ['bigcup', [8899]], ['bigodot', [10752]], ['bigoplus', [10753]], ['bigotimes', [10754]], ['bigsqcup', [10758]], ['bigstar', [9733]], ['bigtriangledown', [9661]], ['bigtriangleup', [9651]], ['biguplus', [10756]], ['bigvee', [8897]], ['bigwedge', [8896]], ['bkarow', [10509]], ['blacklozenge', [10731]], ['blacksquare', [9642]], ['blacktriangle', [9652]], ['blacktriangledown', [9662]], ['blacktriangleleft', [9666]], ['blacktriangleright', [9656]], ['blank', [9251]], ['blk12', [9618]], ['blk14', [9617]], ['blk34', [9619]], ['block', [9608]], ['bne', [61, 8421]], ['bnequiv', [8801, 8421]], ['bNot', [10989]], ['bnot', [8976]], ['Bopf', [120121]], ['bopf', [120147]], ['bot', [8869]], ['bottom', [8869]], ['bowtie', [8904]], ['boxbox', [10697]], ['boxdl', [9488]], ['boxdL', [9557]], ['boxDl', [9558]], ['boxDL', [9559]], ['boxdr', [9484]], ['boxdR', [9554]], ['boxDr', [9555]], ['boxDR', [9556]], ['boxh', [9472]], ['boxH', [9552]], ['boxhd', [9516]], ['boxHd', [9572]], ['boxhD', [9573]], ['boxHD', [9574]], ['boxhu', [9524]], ['boxHu', [9575]], ['boxhU', [9576]], ['boxHU', [9577]], ['boxminus', [8863]], ['boxplus', [8862]], ['boxtimes', [8864]], ['boxul', [9496]], ['boxuL', [9563]], ['boxUl', [9564]], ['boxUL', [9565]], ['boxur', [9492]], ['boxuR', [9560]], ['boxUr', [9561]], ['boxUR', [9562]], ['boxv', [9474]], ['boxV', [9553]], ['boxvh', [9532]], ['boxvH', [9578]], ['boxVh', [9579]], ['boxVH', [9580]], ['boxvl', [9508]], ['boxvL', [9569]], ['boxVl', [9570]], ['boxVL', [9571]], ['boxvr', [9500]], ['boxvR', [9566]], ['boxVr', [9567]], ['boxVR', [9568]], ['bprime', [8245]], ['breve', [728]], ['Breve', [728]], ['brvbar', [166]], ['bscr', [119991]], ['Bscr', [8492]], ['bsemi', [8271]], ['bsim', [8765]], ['bsime', [8909]], ['bsolb', [10693]], ['bsol', [92]], ['bsolhsub', [10184]], ['bull', [8226]], ['bullet', [8226]], ['bump', [8782]], ['bumpE', [10926]], ['bumpe', [8783]], ['Bumpeq', [8782]], ['bumpeq', [8783]], ['Cacute', [262]], ['cacute', [263]], ['capand', [10820]], ['capbrcup', [10825]], ['capcap', [10827]], ['cap', [8745]], ['Cap', [8914]], ['capcup', [10823]], ['capdot', [10816]], ['CapitalDifferentialD', [8517]], ['caps', [8745, 65024]], ['caret', [8257]], ['caron', [711]], ['Cayleys', [8493]], ['ccaps', [10829]], ['Ccaron', [268]], ['ccaron', [269]], ['Ccedil', [199]], ['ccedil', [231]], ['Ccirc', [264]], ['ccirc', [265]], ['Cconint', [8752]], ['ccups', [10828]], ['ccupssm', [10832]], ['Cdot', [266]], ['cdot', [267]], ['cedil', [184]], ['Cedilla', [184]], ['cemptyv', [10674]], ['cent', [162]], ['centerdot', [183]], ['CenterDot', [183]], ['cfr', [120096]], ['Cfr', [8493]], ['CHcy', [1063]], ['chcy', [1095]], ['check', [10003]], ['checkmark', [10003]], ['Chi', [935]], ['chi', [967]], ['circ', [710]], ['circeq', [8791]], ['circlearrowleft', [8634]], ['circlearrowright', [8635]], ['circledast', [8859]], ['circledcirc', [8858]], ['circleddash', [8861]], ['CircleDot', [8857]], ['circledR', [174]], ['circledS', [9416]], ['CircleMinus', [8854]], ['CirclePlus', [8853]], ['CircleTimes', [8855]], ['cir', [9675]], ['cirE', [10691]], ['cire', [8791]], ['cirfnint', [10768]], ['cirmid', [10991]], ['cirscir', [10690]], ['ClockwiseContourIntegral', [8754]], ['clubs', [9827]], ['clubsuit', [9827]], ['colon', [58]], ['Colon', [8759]], ['Colone', [10868]], ['colone', [8788]], ['coloneq', [8788]], ['comma', [44]], ['commat', [64]], ['comp', [8705]], ['compfn', [8728]], ['complement', [8705]], ['complexes', [8450]], ['cong', [8773]], ['congdot', [10861]], ['Congruent', [8801]], ['conint', [8750]], ['Conint', [8751]], ['ContourIntegral', [8750]], ['copf', [120148]], ['Copf', [8450]], ['coprod', [8720]], ['Coproduct', [8720]], ['copy', [169]], ['COPY', [169]], ['copysr', [8471]], ['CounterClockwiseContourIntegral', [8755]], ['crarr', [8629]], ['cross', [10007]], ['Cross', [10799]], ['Cscr', [119966]], ['cscr', [119992]], ['csub', [10959]], ['csube', [10961]], ['csup', [10960]], ['csupe', [10962]], ['ctdot', [8943]], ['cudarrl', [10552]], ['cudarrr', [10549]], ['cuepr', [8926]], ['cuesc', [8927]], ['cularr', [8630]], ['cularrp', [10557]], ['cupbrcap', [10824]], ['cupcap', [10822]], ['CupCap', [8781]], ['cup', [8746]], ['Cup', [8915]], ['cupcup', [10826]], ['cupdot', [8845]], ['cupor', [10821]], ['cups', [8746, 65024]], ['curarr', [8631]], ['curarrm', [10556]], ['curlyeqprec', [8926]], ['curlyeqsucc', [8927]], ['curlyvee', [8910]], ['curlywedge', [8911]], ['curren', [164]], ['curvearrowleft', [8630]], ['curvearrowright', [8631]], ['cuvee', [8910]], ['cuwed', [8911]], ['cwconint', [8754]], ['cwint', [8753]], ['cylcty', [9005]], ['dagger', [8224]], ['Dagger', [8225]], ['daleth', [8504]], ['darr', [8595]], ['Darr', [8609]], ['dArr', [8659]], ['dash', [8208]], ['Dashv', [10980]], ['dashv', [8867]], ['dbkarow', [10511]], ['dblac', [733]], ['Dcaron', [270]], ['dcaron', [271]], ['Dcy', [1044]], ['dcy', [1076]], ['ddagger', [8225]], ['ddarr', [8650]], ['DD', [8517]], ['dd', [8518]], ['DDotrahd', [10513]], ['ddotseq', [10871]], ['deg', [176]], ['Del', [8711]], ['Delta', [916]], ['delta', [948]], ['demptyv', [10673]], ['dfisht', [10623]], ['Dfr', [120071]], ['dfr', [120097]], ['dHar', [10597]], ['dharl', [8643]], ['dharr', [8642]], ['DiacriticalAcute', [180]], ['DiacriticalDot', [729]], ['DiacriticalDoubleAcute', [733]], ['DiacriticalGrave', [96]], ['DiacriticalTilde', [732]], ['diam', [8900]], ['diamond', [8900]], ['Diamond', [8900]], ['diamondsuit', [9830]], ['diams', [9830]], ['die', [168]], ['DifferentialD', [8518]], ['digamma', [989]], ['disin', [8946]], ['div', [247]], ['divide', [247]], ['divideontimes', [8903]], ['divonx', [8903]], ['DJcy', [1026]], ['djcy', [1106]], ['dlcorn', [8990]], ['dlcrop', [8973]], ['dollar', [36]], ['Dopf', [120123]], ['dopf', [120149]], ['Dot', [168]], ['dot', [729]], ['DotDot', [8412]], ['doteq', [8784]], ['doteqdot', [8785]], ['DotEqual', [8784]], ['dotminus', [8760]], ['dotplus', [8724]], ['dotsquare', [8865]], ['doublebarwedge', [8966]], ['DoubleContourIntegral', [8751]], ['DoubleDot', [168]], ['DoubleDownArrow', [8659]], ['DoubleLeftArrow', [8656]], ['DoubleLeftRightArrow', [8660]], ['DoubleLeftTee', [10980]], ['DoubleLongLeftArrow', [10232]], ['DoubleLongLeftRightArrow', [10234]], ['DoubleLongRightArrow', [10233]], ['DoubleRightArrow', [8658]], ['DoubleRightTee', [8872]], ['DoubleUpArrow', [8657]], ['DoubleUpDownArrow', [8661]], ['DoubleVerticalBar', [8741]], ['DownArrowBar', [10515]], ['downarrow', [8595]], ['DownArrow', [8595]], ['Downarrow', [8659]], ['DownArrowUpArrow', [8693]], ['DownBreve', [785]], ['downdownarrows', [8650]], ['downharpoonleft', [8643]], ['downharpoonright', [8642]], ['DownLeftRightVector', [10576]], ['DownLeftTeeVector', [10590]], ['DownLeftVectorBar', [10582]], ['DownLeftVector', [8637]], ['DownRightTeeVector', [10591]], ['DownRightVectorBar', [10583]], ['DownRightVector', [8641]], ['DownTeeArrow', [8615]], ['DownTee', [8868]], ['drbkarow', [10512]], ['drcorn', [8991]], ['drcrop', [8972]], ['Dscr', [119967]], ['dscr', [119993]], ['DScy', [1029]], ['dscy', [1109]], ['dsol', [10742]], ['Dstrok', [272]], ['dstrok', [273]], ['dtdot', [8945]], ['dtri', [9663]], ['dtrif', [9662]], ['duarr', [8693]], ['duhar', [10607]], ['dwangle', [10662]], ['DZcy', [1039]], ['dzcy', [1119]], ['dzigrarr', [10239]], ['Eacute', [201]], ['eacute', [233]], ['easter', [10862]], ['Ecaron', [282]], ['ecaron', [283]], ['Ecirc', [202]], ['ecirc', [234]], ['ecir', [8790]], ['ecolon', [8789]], ['Ecy', [1069]], ['ecy', [1101]], ['eDDot', [10871]], ['Edot', [278]], ['edot', [279]], ['eDot', [8785]], ['ee', [8519]], ['efDot', [8786]], ['Efr', [120072]], ['efr', [120098]], ['eg', [10906]], ['Egrave', [200]], ['egrave', [232]], ['egs', [10902]], ['egsdot', [10904]], ['el', [10905]], ['Element', [8712]], ['elinters', [9191]], ['ell', [8467]], ['els', [10901]], ['elsdot', [10903]], ['Emacr', [274]], ['emacr', [275]], ['empty', [8709]], ['emptyset', [8709]], ['EmptySmallSquare', [9723]], ['emptyv', [8709]], ['EmptyVerySmallSquare', [9643]], ['emsp13', [8196]], ['emsp14', [8197]], ['emsp', [8195]], ['ENG', [330]], ['eng', [331]], ['ensp', [8194]], ['Eogon', [280]], ['eogon', [281]], ['Eopf', [120124]], ['eopf', [120150]], ['epar', [8917]], ['eparsl', [10723]], ['eplus', [10865]], ['epsi', [949]], ['Epsilon', [917]], ['epsilon', [949]], ['epsiv', [1013]], ['eqcirc', [8790]], ['eqcolon', [8789]], ['eqsim', [8770]], ['eqslantgtr', [10902]], ['eqslantless', [10901]], ['Equal', [10869]], ['equals', [61]], ['EqualTilde', [8770]], ['equest', [8799]], ['Equilibrium', [8652]], ['equiv', [8801]], ['equivDD', [10872]], ['eqvparsl', [10725]], ['erarr', [10609]], ['erDot', [8787]], ['escr', [8495]], ['Escr', [8496]], ['esdot', [8784]], ['Esim', [10867]], ['esim', [8770]], ['Eta', [919]], ['eta', [951]], ['ETH', [208]], ['eth', [240]], ['Euml', [203]], ['euml', [235]], ['euro', [8364]], ['excl', [33]], ['exist', [8707]], ['Exists', [8707]], ['expectation', [8496]], ['exponentiale', [8519]], ['ExponentialE', [8519]], ['fallingdotseq', [8786]], ['Fcy', [1060]], ['fcy', [1092]], ['female', [9792]], ['ffilig', [64259]], ['fflig', [64256]], ['ffllig', [64260]], ['Ffr', [120073]], ['ffr', [120099]], ['filig', [64257]], ['FilledSmallSquare', [9724]], ['FilledVerySmallSquare', [9642]], ['fjlig', [102, 106]], ['flat', [9837]], ['fllig', [64258]], ['fltns', [9649]], ['fnof', [402]], ['Fopf', [120125]], ['fopf', [120151]], ['forall', [8704]], ['ForAll', [8704]], ['fork', [8916]], ['forkv', [10969]], ['Fouriertrf', [8497]], ['fpartint', [10765]], ['frac12', [189]], ['frac13', [8531]], ['frac14', [188]], ['frac15', [8533]], ['frac16', [8537]], ['frac18', [8539]], ['frac23', [8532]], ['frac25', [8534]], ['frac34', [190]], ['frac35', [8535]], ['frac38', [8540]], ['frac45', [8536]], ['frac56', [8538]], ['frac58', [8541]], ['frac78', [8542]], ['frasl', [8260]], ['frown', [8994]], ['fscr', [119995]], ['Fscr', [8497]], ['gacute', [501]], ['Gamma', [915]], ['gamma', [947]], ['Gammad', [988]], ['gammad', [989]], ['gap', [10886]], ['Gbreve', [286]], ['gbreve', [287]], ['Gcedil', [290]], ['Gcirc', [284]], ['gcirc', [285]], ['Gcy', [1043]], ['gcy', [1075]], ['Gdot', [288]], ['gdot', [289]], ['ge', [8805]], ['gE', [8807]], ['gEl', [10892]], ['gel', [8923]], ['geq', [8805]], ['geqq', [8807]], ['geqslant', [10878]], ['gescc', [10921]], ['ges', [10878]], ['gesdot', [10880]], ['gesdoto', [10882]], ['gesdotol', [10884]], ['gesl', [8923, 65024]], ['gesles', [10900]], ['Gfr', [120074]], ['gfr', [120100]], ['gg', [8811]], ['Gg', [8921]], ['ggg', [8921]], ['gimel', [8503]], ['GJcy', [1027]], ['gjcy', [1107]], ['gla', [10917]], ['gl', [8823]], ['glE', [10898]], ['glj', [10916]], ['gnap', [10890]], ['gnapprox', [10890]], ['gne', [10888]], ['gnE', [8809]], ['gneq', [10888]], ['gneqq', [8809]], ['gnsim', [8935]], ['Gopf', [120126]], ['gopf', [120152]], ['grave', [96]], ['GreaterEqual', [8805]], ['GreaterEqualLess', [8923]], ['GreaterFullEqual', [8807]], ['GreaterGreater', [10914]], ['GreaterLess', [8823]], ['GreaterSlantEqual', [10878]], ['GreaterTilde', [8819]], ['Gscr', [119970]], ['gscr', [8458]], ['gsim', [8819]], ['gsime', [10894]], ['gsiml', [10896]], ['gtcc', [10919]], ['gtcir', [10874]], ['gt', [62]], ['GT', [62]], ['Gt', [8811]], ['gtdot', [8919]], ['gtlPar', [10645]], ['gtquest', [10876]], ['gtrapprox', [10886]], ['gtrarr', [10616]], ['gtrdot', [8919]], ['gtreqless', [8923]], ['gtreqqless', [10892]], ['gtrless', [8823]], ['gtrsim', [8819]], ['gvertneqq', [8809, 65024]], ['gvnE', [8809, 65024]], ['Hacek', [711]], ['hairsp', [8202]], ['half', [189]], ['hamilt', [8459]], ['HARDcy', [1066]], ['hardcy', [1098]], ['harrcir', [10568]], ['harr', [8596]], ['hArr', [8660]], ['harrw', [8621]], ['Hat', [94]], ['hbar', [8463]], ['Hcirc', [292]], ['hcirc', [293]], ['hearts', [9829]], ['heartsuit', [9829]], ['hellip', [8230]], ['hercon', [8889]], ['hfr', [120101]], ['Hfr', [8460]], ['HilbertSpace', [8459]], ['hksearow', [10533]], ['hkswarow', [10534]], ['hoarr', [8703]], ['homtht', [8763]], ['hookleftarrow', [8617]], ['hookrightarrow', [8618]], ['hopf', [120153]], ['Hopf', [8461]], ['horbar', [8213]], ['HorizontalLine', [9472]], ['hscr', [119997]], ['Hscr', [8459]], ['hslash', [8463]], ['Hstrok', [294]], ['hstrok', [295]], ['HumpDownHump', [8782]], ['HumpEqual', [8783]], ['hybull', [8259]], ['hyphen', [8208]], ['Iacute', [205]], ['iacute', [237]], ['ic', [8291]], ['Icirc', [206]], ['icirc', [238]], ['Icy', [1048]], ['icy', [1080]], ['Idot', [304]], ['IEcy', [1045]], ['iecy', [1077]], ['iexcl', [161]], ['iff', [8660]], ['ifr', [120102]], ['Ifr', [8465]], ['Igrave', [204]], ['igrave', [236]], ['ii', [8520]], ['iiiint', [10764]], ['iiint', [8749]], ['iinfin', [10716]], ['iiota', [8489]], ['IJlig', [306]], ['ijlig', [307]], ['Imacr', [298]], ['imacr', [299]], ['image', [8465]], ['ImaginaryI', [8520]], ['imagline', [8464]], ['imagpart', [8465]], ['imath', [305]], ['Im', [8465]], ['imof', [8887]], ['imped', [437]], ['Implies', [8658]], ['incare', [8453]], ['in', [8712]], ['infin', [8734]], ['infintie', [10717]], ['inodot', [305]], ['intcal', [8890]], ['int', [8747]], ['Int', [8748]], ['integers', [8484]], ['Integral', [8747]], ['intercal', [8890]], ['Intersection', [8898]], ['intlarhk', [10775]], ['intprod', [10812]], ['InvisibleComma', [8291]], ['InvisibleTimes', [8290]], ['IOcy', [1025]], ['iocy', [1105]], ['Iogon', [302]], ['iogon', [303]], ['Iopf', [120128]], ['iopf', [120154]], ['Iota', [921]], ['iota', [953]], ['iprod', [10812]], ['iquest', [191]], ['iscr', [119998]], ['Iscr', [8464]], ['isin', [8712]], ['isindot', [8949]], ['isinE', [8953]], ['isins', [8948]], ['isinsv', [8947]], ['isinv', [8712]], ['it', [8290]], ['Itilde', [296]], ['itilde', [297]], ['Iukcy', [1030]], ['iukcy', [1110]], ['Iuml', [207]], ['iuml', [239]], ['Jcirc', [308]], ['jcirc', [309]], ['Jcy', [1049]], ['jcy', [1081]], ['Jfr', [120077]], ['jfr', [120103]], ['jmath', [567]], ['Jopf', [120129]], ['jopf', [120155]], ['Jscr', [119973]], ['jscr', [119999]], ['Jsercy', [1032]], ['jsercy', [1112]], ['Jukcy', [1028]], ['jukcy', [1108]], ['Kappa', [922]], ['kappa', [954]], ['kappav', [1008]], ['Kcedil', [310]], ['kcedil', [311]], ['Kcy', [1050]], ['kcy', [1082]], ['Kfr', [120078]], ['kfr', [120104]], ['kgreen', [312]], ['KHcy', [1061]], ['khcy', [1093]], ['KJcy', [1036]], ['kjcy', [1116]], ['Kopf', [120130]], ['kopf', [120156]], ['Kscr', [119974]], ['kscr', [120000]], ['lAarr', [8666]], ['Lacute', [313]], ['lacute', [314]], ['laemptyv', [10676]], ['lagran', [8466]], ['Lambda', [923]], ['lambda', [955]], ['lang', [10216]], ['Lang', [10218]], ['langd', [10641]], ['langle', [10216]], ['lap', [10885]], ['Laplacetrf', [8466]], ['laquo', [171]], ['larrb', [8676]], ['larrbfs', [10527]], ['larr', [8592]], ['Larr', [8606]], ['lArr', [8656]], ['larrfs', [10525]], ['larrhk', [8617]], ['larrlp', [8619]], ['larrpl', [10553]], ['larrsim', [10611]], ['larrtl', [8610]], ['latail', [10521]], ['lAtail', [10523]], ['lat', [10923]], ['late', [10925]], ['lates', [10925, 65024]], ['lbarr', [10508]], ['lBarr', [10510]], ['lbbrk', [10098]], ['lbrace', [123]], ['lbrack', [91]], ['lbrke', [10635]], ['lbrksld', [10639]], ['lbrkslu', [10637]], ['Lcaron', [317]], ['lcaron', [318]], ['Lcedil', [315]], ['lcedil', [316]], ['lceil', [8968]], ['lcub', [123]], ['Lcy', [1051]], ['lcy', [1083]], ['ldca', [10550]], ['ldquo', [8220]], ['ldquor', [8222]], ['ldrdhar', [10599]], ['ldrushar', [10571]], ['ldsh', [8626]], ['le', [8804]], ['lE', [8806]], ['LeftAngleBracket', [10216]], ['LeftArrowBar', [8676]], ['leftarrow', [8592]], ['LeftArrow', [8592]], ['Leftarrow', [8656]], ['LeftArrowRightArrow', [8646]], ['leftarrowtail', [8610]], ['LeftCeiling', [8968]], ['LeftDoubleBracket', [10214]], ['LeftDownTeeVector', [10593]], ['LeftDownVectorBar', [10585]], ['LeftDownVector', [8643]], ['LeftFloor', [8970]], ['leftharpoondown', [8637]], ['leftharpoonup', [8636]], ['leftleftarrows', [8647]], ['leftrightarrow', [8596]], ['LeftRightArrow', [8596]], ['Leftrightarrow', [8660]], ['leftrightarrows', [8646]], ['leftrightharpoons', [8651]], ['leftrightsquigarrow', [8621]], ['LeftRightVector', [10574]], ['LeftTeeArrow', [8612]], ['LeftTee', [8867]], ['LeftTeeVector', [10586]], ['leftthreetimes', [8907]], ['LeftTriangleBar', [10703]], ['LeftTriangle', [8882]], ['LeftTriangleEqual', [8884]], ['LeftUpDownVector', [10577]], ['LeftUpTeeVector', [10592]], ['LeftUpVectorBar', [10584]], ['LeftUpVector', [8639]], ['LeftVectorBar', [10578]], ['LeftVector', [8636]], ['lEg', [10891]], ['leg', [8922]], ['leq', [8804]], ['leqq', [8806]], ['leqslant', [10877]], ['lescc', [10920]], ['les', [10877]], ['lesdot', [10879]], ['lesdoto', [10881]], ['lesdotor', [10883]], ['lesg', [8922, 65024]], ['lesges', [10899]], ['lessapprox', [10885]], ['lessdot', [8918]], ['lesseqgtr', [8922]], ['lesseqqgtr', [10891]], ['LessEqualGreater', [8922]], ['LessFullEqual', [8806]], ['LessGreater', [8822]], ['lessgtr', [8822]], ['LessLess', [10913]], ['lesssim', [8818]], ['LessSlantEqual', [10877]], ['LessTilde', [8818]], ['lfisht', [10620]], ['lfloor', [8970]], ['Lfr', [120079]], ['lfr', [120105]], ['lg', [8822]], ['lgE', [10897]], ['lHar', [10594]], ['lhard', [8637]], ['lharu', [8636]], ['lharul', [10602]], ['lhblk', [9604]], ['LJcy', [1033]], ['ljcy', [1113]], ['llarr', [8647]], ['ll', [8810]], ['Ll', [8920]], ['llcorner', [8990]], ['Lleftarrow', [8666]], ['llhard', [10603]], ['lltri', [9722]], ['Lmidot', [319]], ['lmidot', [320]], ['lmoustache', [9136]], ['lmoust', [9136]], ['lnap', [10889]], ['lnapprox', [10889]], ['lne', [10887]], ['lnE', [8808]], ['lneq', [10887]], ['lneqq', [8808]], ['lnsim', [8934]], ['loang', [10220]], ['loarr', [8701]], ['lobrk', [10214]], ['longleftarrow', [10229]], ['LongLeftArrow', [10229]], ['Longleftarrow', [10232]], ['longleftrightarrow', [10231]], ['LongLeftRightArrow', [10231]], ['Longleftrightarrow', [10234]], ['longmapsto', [10236]], ['longrightarrow', [10230]], ['LongRightArrow', [10230]], ['Longrightarrow', [10233]], ['looparrowleft', [8619]], ['looparrowright', [8620]], ['lopar', [10629]], ['Lopf', [120131]], ['lopf', [120157]], ['loplus', [10797]], ['lotimes', [10804]], ['lowast', [8727]], ['lowbar', [95]], ['LowerLeftArrow', [8601]], ['LowerRightArrow', [8600]], ['loz', [9674]], ['lozenge', [9674]], ['lozf', [10731]], ['lpar', [40]], ['lparlt', [10643]], ['lrarr', [8646]], ['lrcorner', [8991]], ['lrhar', [8651]], ['lrhard', [10605]], ['lrm', [8206]], ['lrtri', [8895]], ['lsaquo', [8249]], ['lscr', [120001]], ['Lscr', [8466]], ['lsh', [8624]], ['Lsh', [8624]], ['lsim', [8818]], ['lsime', [10893]], ['lsimg', [10895]], ['lsqb', [91]], ['lsquo', [8216]], ['lsquor', [8218]], ['Lstrok', [321]], ['lstrok', [322]], ['ltcc', [10918]], ['ltcir', [10873]], ['lt', [60]], ['LT', [60]], ['Lt', [8810]], ['ltdot', [8918]], ['lthree', [8907]], ['ltimes', [8905]], ['ltlarr', [10614]], ['ltquest', [10875]], ['ltri', [9667]], ['ltrie', [8884]], ['ltrif', [9666]], ['ltrPar', [10646]], ['lurdshar', [10570]], ['luruhar', [10598]], ['lvertneqq', [8808, 65024]], ['lvnE', [8808, 65024]], ['macr', [175]], ['male', [9794]], ['malt', [10016]], ['maltese', [10016]], ['Map', [10501]], ['map', [8614]], ['mapsto', [8614]], ['mapstodown', [8615]], ['mapstoleft', [8612]], ['mapstoup', [8613]], ['marker', [9646]], ['mcomma', [10793]], ['Mcy', [1052]], ['mcy', [1084]], ['mdash', [8212]], ['mDDot', [8762]], ['measuredangle', [8737]], ['MediumSpace', [8287]], ['Mellintrf', [8499]], ['Mfr', [120080]], ['mfr', [120106]], ['mho', [8487]], ['micro', [181]], ['midast', [42]], ['midcir', [10992]], ['mid', [8739]], ['middot', [183]], ['minusb', [8863]], ['minus', [8722]], ['minusd', [8760]], ['minusdu', [10794]], ['MinusPlus', [8723]], ['mlcp', [10971]], ['mldr', [8230]], ['mnplus', [8723]], ['models', [8871]], ['Mopf', [120132]], ['mopf', [120158]], ['mp', [8723]], ['mscr', [120002]], ['Mscr', [8499]], ['mstpos', [8766]], ['Mu', [924]], ['mu', [956]], ['multimap', [8888]], ['mumap', [8888]], ['nabla', [8711]], ['Nacute', [323]], ['nacute', [324]], ['nang', [8736, 8402]], ['nap', [8777]], ['napE', [10864, 824]], ['napid', [8779, 824]], ['napos', [329]], ['napprox', [8777]], ['natural', [9838]], ['naturals', [8469]], ['natur', [9838]], ['nbsp', [160]], ['nbump', [8782, 824]], ['nbumpe', [8783, 824]], ['ncap', [10819]], ['Ncaron', [327]], ['ncaron', [328]], ['Ncedil', [325]], ['ncedil', [326]], ['ncong', [8775]], ['ncongdot', [10861, 824]], ['ncup', [10818]], ['Ncy', [1053]], ['ncy', [1085]], ['ndash', [8211]], ['nearhk', [10532]], ['nearr', [8599]], ['neArr', [8663]], ['nearrow', [8599]], ['ne', [8800]], ['nedot', [8784, 824]], ['NegativeMediumSpace', [8203]], ['NegativeThickSpace', [8203]], ['NegativeThinSpace', [8203]], ['NegativeVeryThinSpace', [8203]], ['nequiv', [8802]], ['nesear', [10536]], ['nesim', [8770, 824]], ['NestedGreaterGreater', [8811]], ['NestedLessLess', [8810]], ['nexist', [8708]], ['nexists', [8708]], ['Nfr', [120081]], ['nfr', [120107]], ['ngE', [8807, 824]], ['nge', [8817]], ['ngeq', [8817]], ['ngeqq', [8807, 824]], ['ngeqslant', [10878, 824]], ['nges', [10878, 824]], ['nGg', [8921, 824]], ['ngsim', [8821]], ['nGt', [8811, 8402]], ['ngt', [8815]], ['ngtr', [8815]], ['nGtv', [8811, 824]], ['nharr', [8622]], ['nhArr', [8654]], ['nhpar', [10994]], ['ni', [8715]], ['nis', [8956]], ['nisd', [8954]], ['niv', [8715]], ['NJcy', [1034]], ['njcy', [1114]], ['nlarr', [8602]], ['nlArr', [8653]], ['nldr', [8229]], ['nlE', [8806, 824]], ['nle', [8816]], ['nleftarrow', [8602]], ['nLeftarrow', [8653]], ['nleftrightarrow', [8622]], ['nLeftrightarrow', [8654]], ['nleq', [8816]], ['nleqq', [8806, 824]], ['nleqslant', [10877, 824]], ['nles', [10877, 824]], ['nless', [8814]], ['nLl', [8920, 824]], ['nlsim', [8820]], ['nLt', [8810, 8402]], ['nlt', [8814]], ['nltri', [8938]], ['nltrie', [8940]], ['nLtv', [8810, 824]], ['nmid', [8740]], ['NoBreak', [8288]], ['NonBreakingSpace', [160]], ['nopf', [120159]], ['Nopf', [8469]], ['Not', [10988]], ['not', [172]], ['NotCongruent', [8802]], ['NotCupCap', [8813]], ['NotDoubleVerticalBar', [8742]], ['NotElement', [8713]], ['NotEqual', [8800]], ['NotEqualTilde', [8770, 824]], ['NotExists', [8708]], ['NotGreater', [8815]], ['NotGreaterEqual', [8817]], ['NotGreaterFullEqual', [8807, 824]], ['NotGreaterGreater', [8811, 824]], ['NotGreaterLess', [8825]], ['NotGreaterSlantEqual', [10878, 824]], ['NotGreaterTilde', [8821]], ['NotHumpDownHump', [8782, 824]], ['NotHumpEqual', [8783, 824]], ['notin', [8713]], ['notindot', [8949, 824]], ['notinE', [8953, 824]], ['notinva', [8713]], ['notinvb', [8951]], ['notinvc', [8950]], ['NotLeftTriangleBar', [10703, 824]], ['NotLeftTriangle', [8938]], ['NotLeftTriangleEqual', [8940]], ['NotLess', [8814]], ['NotLessEqual', [8816]], ['NotLessGreater', [8824]], ['NotLessLess', [8810, 824]], ['NotLessSlantEqual', [10877, 824]], ['NotLessTilde', [8820]], ['NotNestedGreaterGreater', [10914, 824]], ['NotNestedLessLess', [10913, 824]], ['notni', [8716]], ['notniva', [8716]], ['notnivb', [8958]], ['notnivc', [8957]], ['NotPrecedes', [8832]], ['NotPrecedesEqual', [10927, 824]], ['NotPrecedesSlantEqual', [8928]], ['NotReverseElement', [8716]], ['NotRightTriangleBar', [10704, 824]], ['NotRightTriangle', [8939]], ['NotRightTriangleEqual', [8941]], ['NotSquareSubset', [8847, 824]], ['NotSquareSubsetEqual', [8930]], ['NotSquareSuperset', [8848, 824]], ['NotSquareSupersetEqual', [8931]], ['NotSubset', [8834, 8402]], ['NotSubsetEqual', [8840]], ['NotSucceeds', [8833]], ['NotSucceedsEqual', [10928, 824]], ['NotSucceedsSlantEqual', [8929]], ['NotSucceedsTilde', [8831, 824]], ['NotSuperset', [8835, 8402]], ['NotSupersetEqual', [8841]], ['NotTilde', [8769]], ['NotTildeEqual', [8772]], ['NotTildeFullEqual', [8775]], ['NotTildeTilde', [8777]], ['NotVerticalBar', [8740]], ['nparallel', [8742]], ['npar', [8742]], ['nparsl', [11005, 8421]], ['npart', [8706, 824]], ['npolint', [10772]], ['npr', [8832]], ['nprcue', [8928]], ['nprec', [8832]], ['npreceq', [10927, 824]], ['npre', [10927, 824]], ['nrarrc', [10547, 824]], ['nrarr', [8603]], ['nrArr', [8655]], ['nrarrw', [8605, 824]], ['nrightarrow', [8603]], ['nRightarrow', [8655]], ['nrtri', [8939]], ['nrtrie', [8941]], ['nsc', [8833]], ['nsccue', [8929]], ['nsce', [10928, 824]], ['Nscr', [119977]], ['nscr', [120003]], ['nshortmid', [8740]], ['nshortparallel', [8742]], ['nsim', [8769]], ['nsime', [8772]], ['nsimeq', [8772]], ['nsmid', [8740]], ['nspar', [8742]], ['nsqsube', [8930]], ['nsqsupe', [8931]], ['nsub', [8836]], ['nsubE', [10949, 824]], ['nsube', [8840]], ['nsubset', [8834, 8402]], ['nsubseteq', [8840]], ['nsubseteqq', [10949, 824]], ['nsucc', [8833]], ['nsucceq', [10928, 824]], ['nsup', [8837]], ['nsupE', [10950, 824]], ['nsupe', [8841]], ['nsupset', [8835, 8402]], ['nsupseteq', [8841]], ['nsupseteqq', [10950, 824]], ['ntgl', [8825]], ['Ntilde', [209]], ['ntilde', [241]], ['ntlg', [8824]], ['ntriangleleft', [8938]], ['ntrianglelefteq', [8940]], ['ntriangleright', [8939]], ['ntrianglerighteq', [8941]], ['Nu', [925]], ['nu', [957]], ['num', [35]], ['numero', [8470]], ['numsp', [8199]], ['nvap', [8781, 8402]], ['nvdash', [8876]], ['nvDash', [8877]], ['nVdash', [8878]], ['nVDash', [8879]], ['nvge', [8805, 8402]], ['nvgt', [62, 8402]], ['nvHarr', [10500]], ['nvinfin', [10718]], ['nvlArr', [10498]], ['nvle', [8804, 8402]], ['nvlt', [60, 8402]], ['nvltrie', [8884, 8402]], ['nvrArr', [10499]], ['nvrtrie', [8885, 8402]], ['nvsim', [8764, 8402]], ['nwarhk', [10531]], ['nwarr', [8598]], ['nwArr', [8662]], ['nwarrow', [8598]], ['nwnear', [10535]], ['Oacute', [211]], ['oacute', [243]], ['oast', [8859]], ['Ocirc', [212]], ['ocirc', [244]], ['ocir', [8858]], ['Ocy', [1054]], ['ocy', [1086]], ['odash', [8861]], ['Odblac', [336]], ['odblac', [337]], ['odiv', [10808]], ['odot', [8857]], ['odsold', [10684]], ['OElig', [338]], ['oelig', [339]], ['ofcir', [10687]], ['Ofr', [120082]], ['ofr', [120108]], ['ogon', [731]], ['Ograve', [210]], ['ograve', [242]], ['ogt', [10689]], ['ohbar', [10677]], ['ohm', [937]], ['oint', [8750]], ['olarr', [8634]], ['olcir', [10686]], ['olcross', [10683]], ['oline', [8254]], ['olt', [10688]], ['Omacr', [332]], ['omacr', [333]], ['Omega', [937]], ['omega', [969]], ['Omicron', [927]], ['omicron', [959]], ['omid', [10678]], ['ominus', [8854]], ['Oopf', [120134]], ['oopf', [120160]], ['opar', [10679]], ['OpenCurlyDoubleQuote', [8220]], ['OpenCurlyQuote', [8216]], ['operp', [10681]], ['oplus', [8853]], ['orarr', [8635]], ['Or', [10836]], ['or', [8744]], ['ord', [10845]], ['order', [8500]], ['orderof', [8500]], ['ordf', [170]], ['ordm', [186]], ['origof', [8886]], ['oror', [10838]], ['orslope', [10839]], ['orv', [10843]], ['oS', [9416]], ['Oscr', [119978]], ['oscr', [8500]], ['Oslash', [216]], ['oslash', [248]], ['osol', [8856]], ['Otilde', [213]], ['otilde', [245]], ['otimesas', [10806]], ['Otimes', [10807]], ['otimes', [8855]], ['Ouml', [214]], ['ouml', [246]], ['ovbar', [9021]], ['OverBar', [8254]], ['OverBrace', [9182]], ['OverBracket', [9140]], ['OverParenthesis', [9180]], ['para', [182]], ['parallel', [8741]], ['par', [8741]], ['parsim', [10995]], ['parsl', [11005]], ['part', [8706]], ['PartialD', [8706]], ['Pcy', [1055]], ['pcy', [1087]], ['percnt', [37]], ['period', [46]], ['permil', [8240]], ['perp', [8869]], ['pertenk', [8241]], ['Pfr', [120083]], ['pfr', [120109]], ['Phi', [934]], ['phi', [966]], ['phiv', [981]], ['phmmat', [8499]], ['phone', [9742]], ['Pi', [928]], ['pi', [960]], ['pitchfork', [8916]], ['piv', [982]], ['planck', [8463]], ['planckh', [8462]], ['plankv', [8463]], ['plusacir', [10787]], ['plusb', [8862]], ['pluscir', [10786]], ['plus', [43]], ['plusdo', [8724]], ['plusdu', [10789]], ['pluse', [10866]], ['PlusMinus', [177]], ['plusmn', [177]], ['plussim', [10790]], ['plustwo', [10791]], ['pm', [177]], ['Poincareplane', [8460]], ['pointint', [10773]], ['popf', [120161]], ['Popf', [8473]], ['pound', [163]], ['prap', [10935]], ['Pr', [10939]], ['pr', [8826]], ['prcue', [8828]], ['precapprox', [10935]], ['prec', [8826]], ['preccurlyeq', [8828]], ['Precedes', [8826]], ['PrecedesEqual', [10927]], ['PrecedesSlantEqual', [8828]], ['PrecedesTilde', [8830]], ['preceq', [10927]], ['precnapprox', [10937]], ['precneqq', [10933]], ['precnsim', [8936]], ['pre', [10927]], ['prE', [10931]], ['precsim', [8830]], ['prime', [8242]], ['Prime', [8243]], ['primes', [8473]], ['prnap', [10937]], ['prnE', [10933]], ['prnsim', [8936]], ['prod', [8719]], ['Product', [8719]], ['profalar', [9006]], ['profline', [8978]], ['profsurf', [8979]], ['prop', [8733]], ['Proportional', [8733]], ['Proportion', [8759]], ['propto', [8733]], ['prsim', [8830]], ['prurel', [8880]], ['Pscr', [119979]], ['pscr', [120005]], ['Psi', [936]], ['psi', [968]], ['puncsp', [8200]], ['Qfr', [120084]], ['qfr', [120110]], ['qint', [10764]], ['qopf', [120162]], ['Qopf', [8474]], ['qprime', [8279]], ['Qscr', [119980]], ['qscr', [120006]], ['quaternions', [8461]], ['quatint', [10774]], ['quest', [63]], ['questeq', [8799]], ['quot', [34]], ['QUOT', [34]], ['rAarr', [8667]], ['race', [8765, 817]], ['Racute', [340]], ['racute', [341]], ['radic', [8730]], ['raemptyv', [10675]], ['rang', [10217]], ['Rang', [10219]], ['rangd', [10642]], ['range', [10661]], ['rangle', [10217]], ['raquo', [187]], ['rarrap', [10613]], ['rarrb', [8677]], ['rarrbfs', [10528]], ['rarrc', [10547]], ['rarr', [8594]], ['Rarr', [8608]], ['rArr', [8658]], ['rarrfs', [10526]], ['rarrhk', [8618]], ['rarrlp', [8620]], ['rarrpl', [10565]], ['rarrsim', [10612]], ['Rarrtl', [10518]], ['rarrtl', [8611]], ['rarrw', [8605]], ['ratail', [10522]], ['rAtail', [10524]], ['ratio', [8758]], ['rationals', [8474]], ['rbarr', [10509]], ['rBarr', [10511]], ['RBarr', [10512]], ['rbbrk', [10099]], ['rbrace', [125]], ['rbrack', [93]], ['rbrke', [10636]], ['rbrksld', [10638]], ['rbrkslu', [10640]], ['Rcaron', [344]], ['rcaron', [345]], ['Rcedil', [342]], ['rcedil', [343]], ['rceil', [8969]], ['rcub', [125]], ['Rcy', [1056]], ['rcy', [1088]], ['rdca', [10551]], ['rdldhar', [10601]], ['rdquo', [8221]], ['rdquor', [8221]], ['CloseCurlyDoubleQuote', [8221]], ['rdsh', [8627]], ['real', [8476]], ['realine', [8475]], ['realpart', [8476]], ['reals', [8477]], ['Re', [8476]], ['rect', [9645]], ['reg', [174]], ['REG', [174]], ['ReverseElement', [8715]], ['ReverseEquilibrium', [8651]], ['ReverseUpEquilibrium', [10607]], ['rfisht', [10621]], ['rfloor', [8971]], ['rfr', [120111]], ['Rfr', [8476]], ['rHar', [10596]], ['rhard', [8641]], ['rharu', [8640]], ['rharul', [10604]], ['Rho', [929]], ['rho', [961]], ['rhov', [1009]], ['RightAngleBracket', [10217]], ['RightArrowBar', [8677]], ['rightarrow', [8594]], ['RightArrow', [8594]], ['Rightarrow', [8658]], ['RightArrowLeftArrow', [8644]], ['rightarrowtail', [8611]], ['RightCeiling', [8969]], ['RightDoubleBracket', [10215]], ['RightDownTeeVector', [10589]], ['RightDownVectorBar', [10581]], ['RightDownVector', [8642]], ['RightFloor', [8971]], ['rightharpoondown', [8641]], ['rightharpoonup', [8640]], ['rightleftarrows', [8644]], ['rightleftharpoons', [8652]], ['rightrightarrows', [8649]], ['rightsquigarrow', [8605]], ['RightTeeArrow', [8614]], ['RightTee', [8866]], ['RightTeeVector', [10587]], ['rightthreetimes', [8908]], ['RightTriangleBar', [10704]], ['RightTriangle', [8883]], ['RightTriangleEqual', [8885]], ['RightUpDownVector', [10575]], ['RightUpTeeVector', [10588]], ['RightUpVectorBar', [10580]], ['RightUpVector', [8638]], ['RightVectorBar', [10579]], ['RightVector', [8640]], ['ring', [730]], ['risingdotseq', [8787]], ['rlarr', [8644]], ['rlhar', [8652]], ['rlm', [8207]], ['rmoustache', [9137]], ['rmoust', [9137]], ['rnmid', [10990]], ['roang', [10221]], ['roarr', [8702]], ['robrk', [10215]], ['ropar', [10630]], ['ropf', [120163]], ['Ropf', [8477]], ['roplus', [10798]], ['rotimes', [10805]], ['RoundImplies', [10608]], ['rpar', [41]], ['rpargt', [10644]], ['rppolint', [10770]], ['rrarr', [8649]], ['Rrightarrow', [8667]], ['rsaquo', [8250]], ['rscr', [120007]], ['Rscr', [8475]], ['rsh', [8625]], ['Rsh', [8625]], ['rsqb', [93]], ['rsquo', [8217]], ['rsquor', [8217]], ['CloseCurlyQuote', [8217]], ['rthree', [8908]], ['rtimes', [8906]], ['rtri', [9657]], ['rtrie', [8885]], ['rtrif', [9656]], ['rtriltri', [10702]], ['RuleDelayed', [10740]], ['ruluhar', [10600]], ['rx', [8478]], ['Sacute', [346]], ['sacute', [347]], ['sbquo', [8218]], ['scap', [10936]], ['Scaron', [352]], ['scaron', [353]], ['Sc', [10940]], ['sc', [8827]], ['sccue', [8829]], ['sce', [10928]], ['scE', [10932]], ['Scedil', [350]], ['scedil', [351]], ['Scirc', [348]], ['scirc', [349]], ['scnap', [10938]], ['scnE', [10934]], ['scnsim', [8937]], ['scpolint', [10771]], ['scsim', [8831]], ['Scy', [1057]], ['scy', [1089]], ['sdotb', [8865]], ['sdot', [8901]], ['sdote', [10854]], ['searhk', [10533]], ['searr', [8600]], ['seArr', [8664]], ['searrow', [8600]], ['sect', [167]], ['semi', [59]], ['seswar', [10537]], ['setminus', [8726]], ['setmn', [8726]], ['sext', [10038]], ['Sfr', [120086]], ['sfr', [120112]], ['sfrown', [8994]], ['sharp', [9839]], ['SHCHcy', [1065]], ['shchcy', [1097]], ['SHcy', [1064]], ['shcy', [1096]], ['ShortDownArrow', [8595]], ['ShortLeftArrow', [8592]], ['shortmid', [8739]], ['shortparallel', [8741]], ['ShortRightArrow', [8594]], ['ShortUpArrow', [8593]], ['shy', [173]], ['Sigma', [931]], ['sigma', [963]], ['sigmaf', [962]], ['sigmav', [962]], ['sim', [8764]], ['simdot', [10858]], ['sime', [8771]], ['simeq', [8771]], ['simg', [10910]], ['simgE', [10912]], ['siml', [10909]], ['simlE', [10911]], ['simne', [8774]], ['simplus', [10788]], ['simrarr', [10610]], ['slarr', [8592]], ['SmallCircle', [8728]], ['smallsetminus', [8726]], ['smashp', [10803]], ['smeparsl', [10724]], ['smid', [8739]], ['smile', [8995]], ['smt', [10922]], ['smte', [10924]], ['smtes', [10924, 65024]], ['SOFTcy', [1068]], ['softcy', [1100]], ['solbar', [9023]], ['solb', [10692]], ['sol', [47]], ['Sopf', [120138]], ['sopf', [120164]], ['spades', [9824]], ['spadesuit', [9824]], ['spar', [8741]], ['sqcap', [8851]], ['sqcaps', [8851, 65024]], ['sqcup', [8852]], ['sqcups', [8852, 65024]], ['Sqrt', [8730]], ['sqsub', [8847]], ['sqsube', [8849]], ['sqsubset', [8847]], ['sqsubseteq', [8849]], ['sqsup', [8848]], ['sqsupe', [8850]], ['sqsupset', [8848]], ['sqsupseteq', [8850]], ['square', [9633]], ['Square', [9633]], ['SquareIntersection', [8851]], ['SquareSubset', [8847]], ['SquareSubsetEqual', [8849]], ['SquareSuperset', [8848]], ['SquareSupersetEqual', [8850]], ['SquareUnion', [8852]], ['squarf', [9642]], ['squ', [9633]], ['squf', [9642]], ['srarr', [8594]], ['Sscr', [119982]], ['sscr', [120008]], ['ssetmn', [8726]], ['ssmile', [8995]], ['sstarf', [8902]], ['Star', [8902]], ['star', [9734]], ['starf', [9733]], ['straightepsilon', [1013]], ['straightphi', [981]], ['strns', [175]], ['sub', [8834]], ['Sub', [8912]], ['subdot', [10941]], ['subE', [10949]], ['sube', [8838]], ['subedot', [10947]], ['submult', [10945]], ['subnE', [10955]], ['subne', [8842]], ['subplus', [10943]], ['subrarr', [10617]], ['subset', [8834]], ['Subset', [8912]], ['subseteq', [8838]], ['subseteqq', [10949]], ['SubsetEqual', [8838]], ['subsetneq', [8842]], ['subsetneqq', [10955]], ['subsim', [10951]], ['subsub', [10965]], ['subsup', [10963]], ['succapprox', [10936]], ['succ', [8827]], ['succcurlyeq', [8829]], ['Succeeds', [8827]], ['SucceedsEqual', [10928]], ['SucceedsSlantEqual', [8829]], ['SucceedsTilde', [8831]], ['succeq', [10928]], ['succnapprox', [10938]], ['succneqq', [10934]], ['succnsim', [8937]], ['succsim', [8831]], ['SuchThat', [8715]], ['sum', [8721]], ['Sum', [8721]], ['sung', [9834]], ['sup1', [185]], ['sup2', [178]], ['sup3', [179]], ['sup', [8835]], ['Sup', [8913]], ['supdot', [10942]], ['supdsub', [10968]], ['supE', [10950]], ['supe', [8839]], ['supedot', [10948]], ['Superset', [8835]], ['SupersetEqual', [8839]], ['suphsol', [10185]], ['suphsub', [10967]], ['suplarr', [10619]], ['supmult', [10946]], ['supnE', [10956]], ['supne', [8843]], ['supplus', [10944]], ['supset', [8835]], ['Supset', [8913]], ['supseteq', [8839]], ['supseteqq', [10950]], ['supsetneq', [8843]], ['supsetneqq', [10956]], ['supsim', [10952]], ['supsub', [10964]], ['supsup', [10966]], ['swarhk', [10534]], ['swarr', [8601]], ['swArr', [8665]], ['swarrow', [8601]], ['swnwar', [10538]], ['szlig', [223]], ['Tab', [9]], ['target', [8982]], ['Tau', [932]], ['tau', [964]], ['tbrk', [9140]], ['Tcaron', [356]], ['tcaron', [357]], ['Tcedil', [354]], ['tcedil', [355]], ['Tcy', [1058]], ['tcy', [1090]], ['tdot', [8411]], ['telrec', [8981]], ['Tfr', [120087]], ['tfr', [120113]], ['there4', [8756]], ['therefore', [8756]], ['Therefore', [8756]], ['Theta', [920]], ['theta', [952]], ['thetasym', [977]], ['thetav', [977]], ['thickapprox', [8776]], ['thicksim', [8764]], ['ThickSpace', [8287, 8202]], ['ThinSpace', [8201]], ['thinsp', [8201]], ['thkap', [8776]], ['thksim', [8764]], ['THORN', [222]], ['thorn', [254]], ['tilde', [732]], ['Tilde', [8764]], ['TildeEqual', [8771]], ['TildeFullEqual', [8773]], ['TildeTilde', [8776]], ['timesbar', [10801]], ['timesb', [8864]], ['times', [215]], ['timesd', [10800]], ['tint', [8749]], ['toea', [10536]], ['topbot', [9014]], ['topcir', [10993]], ['top', [8868]], ['Topf', [120139]], ['topf', [120165]], ['topfork', [10970]], ['tosa', [10537]], ['tprime', [8244]], ['trade', [8482]], ['TRADE', [8482]], ['triangle', [9653]], ['triangledown', [9663]], ['triangleleft', [9667]], ['trianglelefteq', [8884]], ['triangleq', [8796]], ['triangleright', [9657]], ['trianglerighteq', [8885]], ['tridot', [9708]], ['trie', [8796]], ['triminus', [10810]], ['TripleDot', [8411]], ['triplus', [10809]], ['trisb', [10701]], ['tritime', [10811]], ['trpezium', [9186]], ['Tscr', [119983]], ['tscr', [120009]], ['TScy', [1062]], ['tscy', [1094]], ['TSHcy', [1035]], ['tshcy', [1115]], ['Tstrok', [358]], ['tstrok', [359]], ['twixt', [8812]], ['twoheadleftarrow', [8606]], ['twoheadrightarrow', [8608]], ['Uacute', [218]], ['uacute', [250]], ['uarr', [8593]], ['Uarr', [8607]], ['uArr', [8657]], ['Uarrocir', [10569]], ['Ubrcy', [1038]], ['ubrcy', [1118]], ['Ubreve', [364]], ['ubreve', [365]], ['Ucirc', [219]], ['ucirc', [251]], ['Ucy', [1059]], ['ucy', [1091]], ['udarr', [8645]], ['Udblac', [368]], ['udblac', [369]], ['udhar', [10606]], ['ufisht', [10622]], ['Ufr', [120088]], ['ufr', [120114]], ['Ugrave', [217]], ['ugrave', [249]], ['uHar', [10595]], ['uharl', [8639]], ['uharr', [8638]], ['uhblk', [9600]], ['ulcorn', [8988]], ['ulcorner', [8988]], ['ulcrop', [8975]], ['ultri', [9720]], ['Umacr', [362]], ['umacr', [363]], ['uml', [168]], ['UnderBar', [95]], ['UnderBrace', [9183]], ['UnderBracket', [9141]], ['UnderParenthesis', [9181]], ['Union', [8899]], ['UnionPlus', [8846]], ['Uogon', [370]], ['uogon', [371]], ['Uopf', [120140]], ['uopf', [120166]], ['UpArrowBar', [10514]], ['uparrow', [8593]], ['UpArrow', [8593]], ['Uparrow', [8657]], ['UpArrowDownArrow', [8645]], ['updownarrow', [8597]], ['UpDownArrow', [8597]], ['Updownarrow', [8661]], ['UpEquilibrium', [10606]], ['upharpoonleft', [8639]], ['upharpoonright', [8638]], ['uplus', [8846]], ['UpperLeftArrow', [8598]], ['UpperRightArrow', [8599]], ['upsi', [965]], ['Upsi', [978]], ['upsih', [978]], ['Upsilon', [933]], ['upsilon', [965]], ['UpTeeArrow', [8613]], ['UpTee', [8869]], ['upuparrows', [8648]], ['urcorn', [8989]], ['urcorner', [8989]], ['urcrop', [8974]], ['Uring', [366]], ['uring', [367]], ['urtri', [9721]], ['Uscr', [119984]], ['uscr', [120010]], ['utdot', [8944]], ['Utilde', [360]], ['utilde', [361]], ['utri', [9653]], ['utrif', [9652]], ['uuarr', [8648]], ['Uuml', [220]], ['uuml', [252]], ['uwangle', [10663]], ['vangrt', [10652]], ['varepsilon', [1013]], ['varkappa', [1008]], ['varnothing', [8709]], ['varphi', [981]], ['varpi', [982]], ['varpropto', [8733]], ['varr', [8597]], ['vArr', [8661]], ['varrho', [1009]], ['varsigma', [962]], ['varsubsetneq', [8842, 65024]], ['varsubsetneqq', [10955, 65024]], ['varsupsetneq', [8843, 65024]], ['varsupsetneqq', [10956, 65024]], ['vartheta', [977]], ['vartriangleleft', [8882]], ['vartriangleright', [8883]], ['vBar', [10984]], ['Vbar', [10987]], ['vBarv', [10985]], ['Vcy', [1042]], ['vcy', [1074]], ['vdash', [8866]], ['vDash', [8872]], ['Vdash', [8873]], ['VDash', [8875]], ['Vdashl', [10982]], ['veebar', [8891]], ['vee', [8744]], ['Vee', [8897]], ['veeeq', [8794]], ['vellip', [8942]], ['verbar', [124]], ['Verbar', [8214]], ['vert', [124]], ['Vert', [8214]], ['VerticalBar', [8739]], ['VerticalLine', [124]], ['VerticalSeparator', [10072]], ['VerticalTilde', [8768]], ['VeryThinSpace', [8202]], ['Vfr', [120089]], ['vfr', [120115]], ['vltri', [8882]], ['vnsub', [8834, 8402]], ['vnsup', [8835, 8402]], ['Vopf', [120141]], ['vopf', [120167]], ['vprop', [8733]], ['vrtri', [8883]], ['Vscr', [119985]], ['vscr', [120011]], ['vsubnE', [10955, 65024]], ['vsubne', [8842, 65024]], ['vsupnE', [10956, 65024]], ['vsupne', [8843, 65024]], ['Vvdash', [8874]], ['vzigzag', [10650]], ['Wcirc', [372]], ['wcirc', [373]], ['wedbar', [10847]], ['wedge', [8743]], ['Wedge', [8896]], ['wedgeq', [8793]], ['weierp', [8472]], ['Wfr', [120090]], ['wfr', [120116]], ['Wopf', [120142]], ['wopf', [120168]], ['wp', [8472]], ['wr', [8768]], ['wreath', [8768]], ['Wscr', [119986]], ['wscr', [120012]], ['xcap', [8898]], ['xcirc', [9711]], ['xcup', [8899]], ['xdtri', [9661]], ['Xfr', [120091]], ['xfr', [120117]], ['xharr', [10231]], ['xhArr', [10234]], ['Xi', [926]], ['xi', [958]], ['xlarr', [10229]], ['xlArr', [10232]], ['xmap', [10236]], ['xnis', [8955]], ['xodot', [10752]], ['Xopf', [120143]], ['xopf', [120169]], ['xoplus', [10753]], ['xotime', [10754]], ['xrarr', [10230]], ['xrArr', [10233]], ['Xscr', [119987]], ['xscr', [120013]], ['xsqcup', [10758]], ['xuplus', [10756]], ['xutri', [9651]], ['xvee', [8897]], ['xwedge', [8896]], ['Yacute', [221]], ['yacute', [253]], ['YAcy', [1071]], ['yacy', [1103]], ['Ycirc', [374]], ['ycirc', [375]], ['Ycy', [1067]], ['ycy', [1099]], ['yen', [165]], ['Yfr', [120092]], ['yfr', [120118]], ['YIcy', [1031]], ['yicy', [1111]], ['Yopf', [120144]], ['yopf', [120170]], ['Yscr', [119988]], ['yscr', [120014]], ['YUcy', [1070]], ['yucy', [1102]], ['yuml', [255]], ['Yuml', [376]], ['Zacute', [377]], ['zacute', [378]], ['Zcaron', [381]], ['zcaron', [382]], ['Zcy', [1047]], ['zcy', [1079]], ['Zdot', [379]], ['zdot', [380]], ['zeetrf', [8488]], ['ZeroWidthSpace', [8203]], ['Zeta', [918]], ['zeta', [950]], ['zfr', [120119]], ['Zfr', [8488]], ['ZHcy', [1046]], ['zhcy', [1078]], ['zigrarr', [8669]], ['zopf', [120171]], ['Zopf', [8484]], ['Zscr', [119989]], ['zscr', [120015]], ['zwj', [8205]], ['zwnj', [8204]]];
	
	var alphaIndex = {};
	var charIndex = {};
	
	createIndexes(alphaIndex, charIndex);
	
	/**
	 * @constructor
	 */
	function Html5Entities() {}
	
	/**
	 * @param {String} str
	 * @returns {String}
	 */
	Html5Entities.prototype.decode = function(str) {
	    if (!str || !str.length) {
	        return '';
	    }
	    return str.replace(/&(#?[\w\d]+);?/g, function(s, entity) {
	        var chr;
	        if (entity.charAt(0) === "#") {
	            var code = entity.charAt(1) === 'x' ?
	                parseInt(entity.substr(2).toLowerCase(), 16) :
	                parseInt(entity.substr(1));
	
	            if (!(isNaN(code) || code < -32768 || code > 65535)) {
	                chr = String.fromCharCode(code);
	            }
	        } else {
	            chr = alphaIndex[entity];
	        }
	        return chr || s;
	    });
	};
	
	/**
	 * @param {String} str
	 * @returns {String}
	 */
	 Html5Entities.decode = function(str) {
	    return new Html5Entities().decode(str);
	 };
	
	/**
	 * @param {String} str
	 * @returns {String}
	 */
	Html5Entities.prototype.encode = function(str) {
	    if (!str || !str.length) {
	        return '';
	    }
	    var strLength = str.length;
	    var result = '';
	    var i = 0;
	    while (i < strLength) {
	        var charInfo = charIndex[str.charCodeAt(i)];
	        if (charInfo) {
	            var alpha = charInfo[str.charCodeAt(i + 1)];
	            if (alpha) {
	                i++;
	            } else {
	                alpha = charInfo[''];
	            }
	            if (alpha) {
	                result += "&" + alpha + ";";
	                i++;
	                continue;
	            }
	        }
	        result += str.charAt(i);
	        i++;
	    }
	    return result;
	};
	
	/**
	 * @param {String} str
	 * @returns {String}
	 */
	 Html5Entities.encode = function(str) {
	    return new Html5Entities().encode(str);
	 };
	
	/**
	 * @param {String} str
	 * @returns {String}
	 */
	Html5Entities.prototype.encodeNonUTF = function(str) {
	    if (!str || !str.length) {
	        return '';
	    }
	    var strLength = str.length;
	    var result = '';
	    var i = 0;
	    while (i < strLength) {
	        var c = str.charCodeAt(i);
	        var charInfo = charIndex[c];
	        if (charInfo) {
	            var alpha = charInfo[str.charCodeAt(i + 1)];
	            if (alpha) {
	                i++;
	            } else {
	                alpha = charInfo[''];
	            }
	            if (alpha) {
	                result += "&" + alpha + ";";
	                i++;
	                continue;
	            }
	        }
	        if (c < 32 || c > 126) {
	            result += '&#' + c + ';';
	        } else {
	            result += str.charAt(i);
	        }
	        i++;
	    }
	    return result;
	};
	
	/**
	 * @param {String} str
	 * @returns {String}
	 */
	 Html5Entities.encodeNonUTF = function(str) {
	    return new Html5Entities().encodeNonUTF(str);
	 };
	
	/**
	 * @param {String} str
	 * @returns {String}
	 */
	Html5Entities.prototype.encodeNonASCII = function(str) {
	    if (!str || !str.length) {
	        return '';
	    }
	    var strLength = str.length;
	    var result = '';
	    var i = 0;
	    while (i < strLength) {
	        var c = str.charCodeAt(i);
	        if (c <= 255) {
	            result += str[i++];
	            continue;
	        }
	        result += '&#' + c + ';';
	        i++
	    }
	    return result;
	};
	
	/**
	 * @param {String} str
	 * @returns {String}
	 */
	 Html5Entities.encodeNonASCII = function(str) {
	    return new Html5Entities().encodeNonASCII(str);
	 };
	
	/**
	 * @param {Object} alphaIndex Passed by reference.
	 * @param {Object} charIndex Passed by reference.
	 */
	function createIndexes(alphaIndex, charIndex) {
	    var i = ENTITIES.length;
	    var _results = [];
	    while (i--) {
	        var e = ENTITIES[i];
	        var alpha = e[0];
	        var chars = e[1];
	        var chr = chars[0];
	        var addChar = (chr < 32 || chr > 126) || chr === 62 || chr === 60 || chr === 38 || chr === 34 || chr === 39;
	        var charInfo;
	        if (addChar) {
	            charInfo = charIndex[chr] = charIndex[chr] || {};
	        }
	        if (chars[1]) {
	            var chr2 = chars[1];
	            alphaIndex[alpha] = String.fromCharCode(chr) + String.fromCharCode(chr2);
	            _results.push(addChar && (charInfo[chr2] = alpha));
	        } else {
	            alphaIndex[alpha] = String.fromCharCode(chr);
	            _results.push(addChar && (charInfo[''] = alpha));
	        }
	    }
	}
	
	module.exports = Html5Entities;


/***/ }),
/* 647 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Based heavily on https://github.com/webpack/webpack/blob/
	 *  c0afdf9c6abc1dd70707c594e473802a566f7b6e/hot/only-dev-server.js
	 * Original copyright Tobias Koppers @sokra (MIT license)
	 */
	
	/* global window __webpack_hash__ */
	
	if (false) {
	  throw new Error('[HMR] Hot Module Replacement is disabled.');
	}
	
	var hmrDocsUrl = 'https://webpack.js.org/concepts/hot-module-replacement/'; // eslint-disable-line max-len
	
	var lastHash;
	var failureStatuses = { abort: 1, fail: 1 };
	var applyOptions = {
	  ignoreUnaccepted: true,
	  ignoreDeclined: true,
	  ignoreErrored: true,
	  onUnaccepted: function(data) {
	    console.warn(
	      'Ignored an update to unaccepted module ' + data.chain.join(' -> ')
	    );
	  },
	  onDeclined: function(data) {
	    console.warn(
	      'Ignored an update to declined module ' + data.chain.join(' -> ')
	    );
	  },
	  onErrored: function(data) {
	    console.error(data.error);
	    console.warn(
	      'Ignored an error while updating module ' +
	        data.moduleId +
	        ' (' +
	        data.type +
	        ')'
	    );
	  },
	};
	
	function upToDate(hash) {
	  if (hash) lastHash = hash;
	  return lastHash == __webpack_require__.h();
	}
	
	module.exports = function(hash, moduleMap, options) {
	  var reload = options.reload;
	  if (!upToDate(hash) && module.hot.status() == 'idle') {
	    if (options.log) console.log('[HMR] Checking for updates on the server...');
	    check();
	  }
	
	  function check() {
	    var cb = function(err, updatedModules) {
	      if (err) return handleError(err);
	
	      if (!updatedModules) {
	        if (options.warn) {
	          console.warn('[HMR] Cannot find update (Full reload needed)');
	          console.warn('[HMR] (Probably because of restarting the server)');
	        }
	        performReload();
	        return null;
	      }
	
	      var applyCallback = function(applyErr, renewedModules) {
	        if (applyErr) return handleError(applyErr);
	
	        if (!upToDate()) check();
	
	        logUpdates(updatedModules, renewedModules);
	      };
	
	      var applyResult = module.hot.apply(applyOptions, applyCallback);
	      // webpack 2 promise
	      if (applyResult && applyResult.then) {
	        // HotModuleReplacement.runtime.js refers to the result as `outdatedModules`
	        applyResult.then(function(outdatedModules) {
	          applyCallback(null, outdatedModules);
	        });
	        applyResult.catch(applyCallback);
	      }
	    };
	
	    var result = module.hot.check(false, cb);
	    // webpack 2 promise
	    if (result && result.then) {
	      result.then(function(updatedModules) {
	        cb(null, updatedModules);
	      });
	      result.catch(cb);
	    }
	  }
	
	  function logUpdates(updatedModules, renewedModules) {
	    var unacceptedModules = updatedModules.filter(function(moduleId) {
	      return renewedModules && renewedModules.indexOf(moduleId) < 0;
	    });
	
	    if (unacceptedModules.length > 0) {
	      if (options.warn) {
	        console.warn(
	          "[HMR] The following modules couldn't be hot updated: " +
	            '(Full reload needed)\n' +
	            'This is usually because the modules which have changed ' +
	            '(and their parents) do not know how to hot reload themselves. ' +
	            'See ' +
	            hmrDocsUrl +
	            ' for more details.'
	        );
	        unacceptedModules.forEach(function(moduleId) {
	          console.warn('[HMR]  - ' + (moduleMap[moduleId] || moduleId));
	        });
	      }
	      performReload();
	      return;
	    }
	
	    if (options.log) {
	      if (!renewedModules || renewedModules.length === 0) {
	        console.log('[HMR] Nothing hot updated.');
	      } else {
	        console.log('[HMR] Updated modules:');
	        renewedModules.forEach(function(moduleId) {
	          console.log('[HMR]  - ' + (moduleMap[moduleId] || moduleId));
	        });
	      }
	
	      if (upToDate()) {
	        console.log('[HMR] App is up to date.');
	      }
	    }
	  }
	
	  function handleError(err) {
	    if (module.hot.status() in failureStatuses) {
	      if (options.warn) {
	        console.warn('[HMR] Cannot check for update (Full reload needed)');
	        console.warn('[HMR] ' + (err.stack || err.message));
	      }
	      performReload();
	      return;
	    }
	    if (options.warn) {
	      console.warn('[HMR] Update check failed: ' + (err.stack || err.message));
	    }
	  }
	
	  function performReload() {
	    if (reload) {
	      if (options.warn) console.warn('[HMR] Reloading page');
	      window.location.reload();
	    }
	  }
	};


/***/ })
]);
//# sourceMappingURL=app.69c0e124603c81b31b5d.js.map